Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/det","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/det","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/det.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/det.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[864,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[399,0,0,"-"],creation_functions:[400,0,0,"-"],data_type_functions:[406,0,0,"-"],data_types:[410,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[401,2,1,""],ones:[402,2,1,""],ones_like:[403,2,1,""],tril:[404,2,1,""],zeros:[405,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[406,1,1,""],finfo:[408,2,1,""],iinfo:[409,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[406,3,1,""],bits:[406,3,1,""],eps:[406,3,1,""],max:[406,3,1,""],min:[406,3,1,""],smallest_normal:[406,3,1,""]},"ivy.functional.backends.numpy.core":{device:[455,0,0,"-"],general:[457,0,0,"-"],gradients:[489,0,0,"-"],image:[494,0,0,"-"],linear_algebra:[498,0,0,"-"],logic:[502,0,0,"-"],math:[503,0,0,"-"],random:[505,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[456,1,1,""],clear_mem_on_dev:[455,2,1,""],dev:[455,2,1,""],dev_from_str:[455,2,1,""],dev_to_str:[455,2,1,""],gpu_is_available:[455,2,1,""],num_gpus:[455,2,1,""],to_dev:[455,2,1,""],tpu_is_available:[455,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[456,3,1,""],start:[456,3,1,""],stop:[456,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[457,2,1,""],arange:[458,2,1,""],argmin:[459,2,1,""],array:[460,2,1,""],asarray:[457,2,1,""],astype:[457,2,1,""],cast:[461,2,1,""],clip:[457,2,1,""],compile:[462,2,1,""],concatenate:[463,2,1,""],constant_pad:[457,2,1,""],container_types:[457,2,1,""],copy_array:[457,2,1,""],cumprod:[464,2,1,""],current_framework_str:[457,2,1,""],dtype:[465,2,1,""],dtype_bits:[466,2,1,""],dtype_from_str:[467,2,1,""],dtype_to_str:[468,2,1,""],floor:[457,2,1,""],floormod:[457,2,1,""],full:[469,2,1,""],gather:[470,2,1,""],gather_nd:[471,2,1,""],get_num_dims:[457,2,1,""],identity:[472,2,1,""],indices_where:[473,2,1,""],inplace_arrays_supported:[457,2,1,""],inplace_decrement:[474,2,1,""],inplace_increment:[475,2,1,""],inplace_update:[476,2,1,""],inplace_variables_supported:[457,2,1,""],is_array:[477,2,1,""],linear_resample:[478,2,1,""],linspace:[479,2,1,""],logspace:[480,2,1,""],matmul:[457,2,1,""],meshgrid:[457,2,1,""],multiprocessing:[457,2,1,""],one_hot:[481,2,1,""],round:[457,2,1,""],scatter_flat:[482,2,1,""],scatter_nd:[483,2,1,""],shape:[457,2,1,""],split:[484,2,1,""],squeeze:[485,2,1,""],to_list:[457,2,1,""],to_numpy:[457,2,1,""],to_scalar:[457,2,1,""],transpose:[486,2,1,""],unstack:[487,2,1,""],where:[457,2,1,""],zero_pad:[457,2,1,""],zeros_like:[488,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[490,2,1,""],is_variable:[491,2,1,""],stop_gradient:[492,2,1,""],variable:[493,2,1,""],variable_data:[489,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[495,2,1,""],gradient_image:[496,2,1,""],stack_images:[497,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[499,2,1,""],qr:[500,2,1,""],vector_to_skew_symmetric_matrix:[501,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[504,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[506,2,1,""],randint:[505,2,1,""],random_normal:[505,2,1,""],random_uniform:[505,2,1,""],seed:[505,2,1,""],shuffle:[505,2,1,""]},"ivy.functional.ivy":{array_api:[865,0,0,"-"],core:[910,0,0,"-"],nn:[1245,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[866,0,0,"-"],creation_functions:[867,0,0,"-"],data_type_functions:[873,0,0,"-"],data_types:[876,0,0,"-"],elementwise_functions:[877,0,0,"-"],function_and_method_signatures:[892,0,0,"-"],linear_algebra:[893,0,0,"-"],manipulation_functions:[898,0,0,"-"],searching_functions:[900,0,0,"-"],set_functions:[902,0,0,"-"],sorting_functions:[903,0,0,"-"],statistical_functions:[905,0,0,"-"],utility_functions:[907,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[866,4,1,""],nan:[866,4,1,""],pi:[866,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[868,2,1,""],ones:[869,2,1,""],ones_like:[870,2,1,""],tril:[871,2,1,""],zeros:[872,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[874,2,1,""],iinfo:[875,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[878,2,1,""],bitwise_and:[879,2,1,""],ceil:[880,2,1,""],cos:[881,2,1,""],cosh:[882,2,1,""],isfinite:[883,2,1,""],isnan:[884,2,1,""],less:[885,2,1,""],less_equal:[886,2,1,""],log1p:[887,2,1,""],log2:[888,2,1,""],logical_not:[889,2,1,""],sin:[890,2,1,""],sqrt:[891,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[894,2,1,""],slodget:[895,2,1,""],svd:[896,2,1,""],vector_norm:[897,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[899,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[901,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[904,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[906,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[908,2,1,""],any:[909,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[911,0,0,"-"],compilation:[950,0,0,"-"],device:[952,0,0,"-"],dtype:[1002,0,0,"-"],general:[1026,0,0,"-"],gradients:[1121,0,0,"-"],image:[1137,0,0,"-"],linalg:[1144,0,0,"-"],logic:[1151,0,0,"-"],math:[1154,0,0,"-"],meta:[1169,0,0,"-"],multi_node:[1173,0,0,"-"],nest:[1217,0,0,"-"],random:[1229,0,0,"-"],reductions:[1236,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[912,2,1,""],builtin_add:[913,2,1,""],builtin_and:[914,2,1,""],builtin_bool:[915,2,1,""],builtin_contains:[916,2,1,""],builtin_deepcopy:[917,2,1,""],builtin_dir:[918,2,1,""],builtin_eq:[919,2,1,""],builtin_float:[920,2,1,""],builtin_floordiv:[921,2,1,""],builtin_ge:[922,2,1,""],builtin_getattr:[923,2,1,""],builtin_getattribute:[924,2,1,""],builtin_getitem:[925,2,1,""],builtin_gt:[926,2,1,""],builtin_int:[927,2,1,""],builtin_invert:[928,2,1,""],builtin_le:[929,2,1,""],builtin_lt:[930,2,1,""],builtin_mul:[931,2,1,""],builtin_ne:[932,2,1,""],builtin_neg:[933,2,1,""],builtin_or:[934,2,1,""],builtin_pos:[935,2,1,""],builtin_pow:[936,2,1,""],builtin_radd:[937,2,1,""],builtin_rand:[938,2,1,""],builtin_rfloordiv:[939,2,1,""],builtin_rmul:[940,2,1,""],builtin_ror:[941,2,1,""],builtin_rpow:[942,2,1,""],builtin_rsub:[943,2,1,""],builtin_rtruediv:[944,2,1,""],builtin_rxor:[945,2,1,""],builtin_setitem:[946,2,1,""],builtin_sub:[947,2,1,""],builtin_truediv:[948,2,1,""],builtin_xor:[949,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[951,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[952,1,1,""],DevClonedItem:[954,1,1,""],DevClonedIter:[955,1,1,""],DevClonedNest:[956,1,1,""],DevDistItem:[957,1,1,""],DevDistIter:[958,1,1,""],DevDistNest:[959,1,1,""],DevManager:[952,1,1,""],DevMapper:[961,1,1,""],DevMapperMultiProc:[962,1,1,""],MultiDev:[952,1,1,""],MultiDevItem:[964,1,1,""],MultiDevIter:[965,1,1,""],MultiDevNest:[966,1,1,""],Profiler:[967,1,1,""],clear_mem_on_dev:[968,2,1,""],default_device:[969,2,1,""],dev:[970,2,1,""],dev_clone:[971,2,1,""],dev_clone_array:[972,2,1,""],dev_clone_iter:[973,2,1,""],dev_clone_nest:[974,2,1,""],dev_dist:[975,2,1,""],dev_dist_array:[976,2,1,""],dev_dist_iter:[977,2,1,""],dev_dist_nest:[978,2,1,""],dev_from_str:[979,2,1,""],dev_to_str:[980,2,1,""],dev_unify:[981,2,1,""],dev_unify_array:[982,2,1,""],dev_unify_iter:[983,2,1,""],dev_unify_nest:[984,2,1,""],dev_util:[985,2,1,""],get_all_arrays_on_dev:[986,2,1,""],gpu_is_available:[987,2,1,""],num_arrays_on_dev:[988,2,1,""],num_cpu_cores:[989,2,1,""],num_gpus:[990,2,1,""],percent_used_mem_on_dev:[991,2,1,""],print_all_arrays_on_dev:[992,2,1,""],set_default_device:[993,2,1,""],set_split_factor:[994,2,1,""],split_factor:[995,2,1,""],split_func_call:[996,2,1,""],to_dev:[997,2,1,""],total_mem_on_dev:[998,2,1,""],tpu_is_available:[999,2,1,""],unset_default_device:[1000,2,1,""],used_mem_on_dev:[1001,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[952,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[952,3,1,""],da_tune_step:[952,3,1,""],dim_size:[952,3,1,""],ds_tune_step:[952,3,1,""],map:[952,3,1,""],repeated_config_check:[952,3,1,""],tune_step:[952,3,1,""],tuned:[952,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[961,3,1,""],map:[961,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[962,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[952,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[964,3,1,""],items:[964,3,1,""],keys:[964,3,1,""],shape:[964,3,1,""],values:[964,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[965,3,1,""],at_dev:[965,3,1,""],at_devs:[965,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[966,3,1,""],at_dev:[966,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[967,3,1,""],start:[967,3,1,""],stop:[967,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[1002,1,1,""],DefaultFloatDtype:[1002,1,1,""],DefaultIntDtype:[1002,1,1,""],astype:[1002,2,1,""],cast:[1006,2,1,""],closest_valid_dtype:[1007,2,1,""],convert_dtype:[1008,2,1,""],default_dtype:[1009,2,1,""],default_float_dtype:[1010,2,1,""],default_int_dtype:[1011,2,1,""],dtype:[1012,2,1,""],dtype_bits:[1013,2,1,""],dtype_from_str:[1014,2,1,""],dtype_to_str:[1015,2,1,""],invalid_dtype:[1016,2,1,""],is_float_dtype:[1017,2,1,""],is_int_dtype:[1018,2,1,""],set_default_dtype:[1019,2,1,""],set_default_float_dtype:[1020,2,1,""],set_default_int_dtype:[1021,2,1,""],unset_default_dtype:[1022,2,1,""],unset_default_float_dtype:[1023,2,1,""],unset_default_int_dtype:[1024,2,1,""],valid_dtype:[1025,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[1002,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[1002,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[1002,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1049,2,1,""],abs:[1027,2,1,""],all_equal:[1028,2,1,""],arange:[1029,2,1,""],arg_names:[1030,2,1,""],argmin:[1031,2,1,""],array:[1032,2,1,""],array_equal:[1033,2,1,""],arrays_equal:[1034,2,1,""],asarray:[1026,2,1,""],assert_supports_inplace:[1035,2,1,""],broadcast_to:[1036,2,1,""],cache_fn:[1037,2,1,""],clip:[1038,2,1,""],clip_matrix_norm:[1039,2,1,""],clip_vector_norm:[1040,2,1,""],concatenate:[1041,2,1,""],constant_pad:[1042,2,1,""],container_types:[1043,2,1,""],copy_array:[1044,2,1,""],cross:[1045,2,1,""],cumprod:[1046,2,1,""],cumsum:[1047,2,1,""],current_framework_str:[1048,2,1,""],einops_rearrange:[1050,2,1,""],einops_reduce:[1051,2,1,""],einops_repeat:[1052,2,1,""],equal:[1053,2,1,""],exists:[1054,2,1,""],expand_dims:[1055,2,1,""],floor:[1056,2,1,""],floormod:[1057,2,1,""],fourier_encode:[1058,2,1,""],full:[1059,2,1,""],gather:[1060,2,1,""],gather_nd:[1061,2,1,""],get_all_arrays_in_memory:[1062,2,1,""],get_min_base:[1063,2,1,""],get_min_denominator:[1064,2,1,""],get_num_dims:[1065,2,1,""],get_referrers_recursive:[1066,2,1,""],has_nans:[1067,2,1,""],identity:[1068,2,1,""],indices_where:[1069,2,1,""],inplace_arrays_supported:[1070,2,1,""],inplace_decrement:[1071,2,1,""],inplace_increment:[1072,2,1,""],inplace_update:[1073,2,1,""],inplace_variables_supported:[1074,2,1,""],is_array:[1075,2,1,""],isinf:[1076,2,1,""],linear_resample:[1077,2,1,""],linspace:[1078,2,1,""],logspace:[1079,2,1,""],match_kwargs:[1080,2,1,""],matmul:[1081,2,1,""],maximum:[1082,2,1,""],meshgrid:[1083,2,1,""],minimum:[1084,2,1,""],multiprocessing:[1085,2,1,""],num_arrays_in_memory:[1086,2,1,""],one_hot:[1087,2,1,""],ones:[1088,2,1,""],print_all_arrays_in_memory:[1089,2,1,""],queue_timeout:[1090,2,1,""],repeat:[1091,2,1,""],reshape:[1092,2,1,""],round:[1093,2,1,""],scatter_flat:[1094,2,1,""],scatter_nd:[1095,2,1,""],set_min_base:[1096,2,1,""],set_min_denominator:[1097,2,1,""],set_queue_timeout:[1098,2,1,""],set_tmp_dir:[1099,2,1,""],shape:[1100,2,1,""],shape_to_tuple:[1101,2,1,""],split:[1102,2,1,""],squeeze:[1103,2,1,""],stable_divide:[1104,2,1,""],stable_pow:[1105,2,1,""],stack:[1106,2,1,""],supports_inplace:[1107,2,1,""],swapaxes:[1108,2,1,""],tile:[1109,2,1,""],tmp_dir:[1110,2,1,""],to_list:[1111,2,1,""],to_numpy:[1112,2,1,""],to_scalar:[1113,2,1,""],transpose:[1114,2,1,""],try_else_none:[1115,2,1,""],unstack:[1116,2,1,""],value_is_nan:[1117,2,1,""],where:[1118,2,1,""],zero_pad:[1119,2,1,""],zeros_like:[1120,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1121,1,1,""],adam_step:[1123,2,1,""],adam_update:[1124,2,1,""],execute_with_gradients:[1125,2,1,""],gradient_descent_update:[1126,2,1,""],is_variable:[1127,2,1,""],lamb_update:[1128,2,1,""],lars_update:[1129,2,1,""],optimizer_update:[1130,2,1,""],set_with_grads:[1131,2,1,""],stop_gradient:[1132,2,1,""],unset_with_grads:[1133,2,1,""],variable:[1134,2,1,""],variable_data:[1135,2,1,""],with_grads:[1136,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1121,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1138,2,1,""],float_img_to_uint8_img:[1139,2,1,""],gradient_image:[1140,2,1,""],random_crop:[1141,2,1,""],stack_images:[1142,2,1,""],uint8_img_to_float_img:[1143,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1145,2,1,""],inv:[1146,2,1,""],matrix_norm:[1147,2,1,""],pinv:[1148,2,1,""],qr:[1149,2,1,""],vector_to_skew_symmetric_matrix:[1150,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1152,2,1,""],logical_or:[1153,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1155,2,1,""],acosh:[1156,2,1,""],asin:[1157,2,1,""],atan2:[1159,2,1,""],atan:[1158,2,1,""],atanh:[1160,2,1,""],cosh:[1161,2,1,""],divide:[1162,2,1,""],erf:[1163,2,1,""],exp:[1164,2,1,""],log:[1165,2,1,""],sinh:[1166,2,1,""],tan:[1167,2,1,""],tanh:[1168,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1170,2,1,""],maml_step:[1171,2,1,""],reptile_step:[1172,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1173,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1218,2,1,""],copy_nest:[1219,2,1,""],index_nest:[1220,2,1,""],map:[1221,2,1,""],map_nest_at_index:[1222,2,1,""],map_nest_at_indices:[1223,2,1,""],multi_index_nest:[1224,2,1,""],nested_indices_where:[1225,2,1,""],nested_map:[1226,2,1,""],set_nest_at_index:[1227,2,1,""],set_nest_at_indices:[1228,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1230,2,1,""],randint:[1231,2,1,""],random_normal:[1232,2,1,""],random_uniform:[1233,2,1,""],seed:[1234,2,1,""],shuffle:[1235,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1237,2,1,""],reduce_max:[1238,2,1,""],reduce_mean:[1239,2,1,""],reduce_min:[1240,2,1,""],reduce_prod:[1241,2,1,""],reduce_std:[1242,2,1,""],reduce_sum:[1243,2,1,""],reduce_var:[1244,2,1,""]},"ivy.functional.ivy.nn":{activations:[1246,0,0,"-"],layers:[1254,0,0,"-"],losses:[1267,0,0,"-"],norms:[1271,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1247,2,1,""],leaky_relu:[1248,2,1,""],relu:[1249,2,1,""],sigmoid:[1250,2,1,""],softmax:[1251,2,1,""],softplus:[1252,2,1,""],tanh:[1253,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1255,2,1,""],conv1d_transpose:[1256,2,1,""],conv2d:[1257,2,1,""],conv2d_transpose:[1258,2,1,""],conv3d:[1259,2,1,""],conv3d_transpose:[1260,2,1,""],depthwise_conv2d:[1261,2,1,""],dropout:[1262,2,1,""],linear:[1263,2,1,""],lstm_update:[1264,2,1,""],multi_head_attention:[1265,2,1,""],scaled_dot_product_attention:[1266,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1268,2,1,""],cross_entropy:[1269,2,1,""],sparse_cross_entropy:[1270,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1272,2,1,""]},"ivy.stateful":{activations:[1276,0,0,"-"],converters:[1279,0,0,"-"],initializers:[1281,0,0,"-"],layers:[1290,0,0,"-"],module:[1302,0,0,"-"],norms:[1304,0,0,"-"],optimizers:[1306,0,0,"-"],sequential:[1312,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1277,1,1,""],GELU:[1278,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1277,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1278,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1280,2,1,""]},"ivy.stateful.initializers":{Constant:[1281,1,1,""],FirstLayerSiren:[1283,1,1,""],GlorotUniform:[1284,1,1,""],KaimingNormal:[1281,1,1,""],Ones:[1286,1,1,""],Siren:[1287,1,1,""],Uniform:[1281,1,1,""],Zeros:[1289,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1281,3,1,""],create_variables:[1281,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1283,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1284,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1281,3,1,""],create_variables:[1281,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1286,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1287,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1281,3,1,""],create_variables:[1281,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1289,3,1,""]},"ivy.stateful.layers":{Conv1D:[1291,1,1,""],Conv1DTranspose:[1292,1,1,""],Conv2D:[1293,1,1,""],Conv2DTranspose:[1294,1,1,""],Conv3D:[1295,1,1,""],Conv3DTranspose:[1296,1,1,""],DepthwiseConv2D:[1297,1,1,""],Dropout:[1298,1,1,""],LSTM:[1299,1,1,""],Linear:[1300,1,1,""],MultiHeadAttention:[1301,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1291,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1292,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1293,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1294,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1295,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1296,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1297,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1298,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1299,3,1,""],get_initial_state:[1299,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1300,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1301,3,1,""]},"ivy.stateful.module":{Module:[1303,1,1,""]},"ivy.stateful.module.Module":{__init__:[1303,3,1,""],build:[1303,3,1,""],build_mode:[1303,3,1,""],built:[1303,3,1,""],check_submod_rets:[1303,3,1,""],get_mod_key:[1303,3,1,""],mod_depth:[1303,3,1,""],mod_height:[1303,3,1,""],mod_with_top_mod_key_chain:[1303,3,1,""],save_weights:[1303,3,1,""],show_mod_in_top_mod:[1303,3,1,""],show_structure:[1303,3,1,""],show_v_in_top_v:[1303,3,1,""],sub_mods:[1303,3,1,""],track_submod_call_order:[1303,3,1,""],track_submod_rets:[1303,3,1,""],v_with_top_v_key_chains:[1303,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1305,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1305,3,1,""]},"ivy.stateful.optimizers":{Adam:[1307,1,1,""],LAMB:[1308,1,1,""],LARS:[1309,1,1,""],Optimizer:[1310,1,1,""],SGD:[1311,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1307,3,1,""],set_state:[1307,3,1,""],state:[1307,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1308,3,1,""],set_state:[1308,3,1,""],state:[1308,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1309,3,1,""],set_state:[1309,3,1,""],state:[1309,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1310,3,1,""],set_state:[1310,3,1,""],step:[1310,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1311,3,1,""],set_state:[1311,3,1,""],state:[1311,3,1,""]},"ivy.stateful.sequential":{Sequential:[1313,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1313,3,1,""]},"ivy.verbosity":{cprint:[1318,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1317,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1306,1307,1308],"02886":1273,"100":[1173,1273,1315],"141592653589793":866,"2021":1273,"2102":1273,"360":[1154,1167],"718281828459045":866,"754":[866,873,874,877,891],"999":[1121,1123,1124,1128,1306,1307,1308],"abstract":[952,967,1273,1306,1310],"boolean":[40,41,877,879,889,911,929,952,987,999,1002,1016,1025,1026,1028,1033,1034,1067,1069,1070,1074,1075,1076,1107,1117,1121,1127,1151,1152,1153,1169,1170,1171,1173],"break":43,"case":[15,18,19,40,41,42,43,877,878,880,881,882,888,890,891,952,991,998,1001,1026,1029,1092,1094,1095,1144,1147,1149,1173,1217,1220,1224,1273,1290,1301,1302,1303,1306,1310,1319],"catch":[1026,1049],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,406,455,456,873,875,952,954,955,956,957,958,959,961,962,964,965,966,967,979,980,1002,1026,1030,1080,1121,1135,1173,1217,1219,1226,1267,1269,1270,1273,1276,1277,1278,1279,1280,1281,1283,1284,1286,1287,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1315,1319],"default":[15,18,19,40,41,42,43,867,868,869,870,871,872,893,894,897,898,899,900,901,903,904,905,906,907,908,909,950,951,952,961,962,969,970,974,975,976,977,978,981,982,983,984,991,994,995,996,1001,1002,1009,1010,1011,1012,1026,1028,1029,1031,1039,1040,1041,1042,1045,1046,1047,1058,1059,1060,1065,1067,1068,1077,1079,1080,1083,1085,1088,1090,1091,1094,1095,1098,1100,1102,1104,1105,1114,1116,1117,1121,1124,1126,1127,1128,1129,1130,1132,1136,1144,1147,1149,1169,1170,1171,1172,1173,1217,1218,1219,1221,1225,1226,1229,1230,1232,1233,1236,1238,1239,1240,1241,1242,1243,1244,1246,1247,1251,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1279,1280,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313],"final":[40,41,43,1026,1058,1078,1079,1173,1290,1301,1316],"float":[40,41,42,43,866,867,868,869,872,873,874,877,878,880,881,882,888,890,891,893,897,911,929,930,936,952,961,962,985,991,994,998,1001,1002,1010,1017,1026,1029,1039,1040,1042,1058,1059,1063,1064,1079,1096,1097,1098,1104,1105,1121,1123,1124,1126,1128,1129,1130,1137,1139,1143,1154,1162,1169,1170,1171,1172,1173,1229,1232,1233,1246,1248,1254,1262,1265,1266,1267,1268,1269,1270,1271,1272,1290,1298,1301,1304,1305,1306,1307,1308,1309,1310,1311],"function":[15,40,41,43,401,402,403,404,405,408,409,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,866,868,869,870,871,872,874,875,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,899,901,904,906,908,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,954,955,956,957,958,959,961,962,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1276,1277,1278,1306,1309,1310,1311,1315,1316,1319],"import":[43,1273,1316,1319],"int":[40,41,42,43,400,401,402,404,405,505,867,868,869,871,872,873,874,875,893,894,897,898,899,900,901,903,904,905,906,907,908,909,911,929,930,936,950,951,952,974,975,976,977,978,981,982,983,984,989,990,996,1002,1011,1013,1018,1026,1031,1036,1041,1042,1046,1047,1050,1051,1052,1055,1058,1059,1060,1065,1068,1077,1078,1079,1087,1088,1091,1092,1094,1095,1100,1101,1102,1103,1106,1108,1109,1114,1116,1119,1121,1123,1124,1128,1137,1141,1142,1144,1147,1169,1170,1171,1172,1173,1217,1226,1229,1230,1231,1233,1234,1236,1238,1239,1240,1241,1242,1243,1244,1246,1251,1254,1255,1256,1257,1258,1259,1260,1261,1265,1267,1269,1270,1271,1272,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1304,1305],"long":[43,1254,1264],"new":[40,41,43,505,867,868,869,870,872,877,887,1002,1006,1026,1027,1036,1050,1051,1052,1055,1058,1059,1060,1061,1088,1092,1094,1095,1096,1097,1104,1105,1106,1121,1124,1126,1128,1129,1130,1137,1139,1141,1143,1154,1156,1160,1161,1166,1168,1173,1217,1227,1228,1229,1230,1271,1272,1273,1279,1280,1290,1300,1304,1305,1306,1307,1308,1309,1310,1311,1316,1319],"public":[1026,1043],"return":[15,16,17,18,19,40,41,42,43,505,867,868,869,870,871,872,877,878,879,880,881,882,883,884,885,886,888,889,890,891,893,894,895,896,897,900,901,903,904,905,906,907,908,909,911,929,930,936,950,951,952,961,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,987,988,990,991,995,996,997,998,999,1001,1002,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1025,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1065,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1091,1092,1093,1094,1095,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1217,1218,1219,1221,1225,1226,1229,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1279,1280,1290,1299,1300,1306,1310,1315,1316,1319],"short":[43,1254,1264,1273,1319],"static":[40,41,950,951],"super":1173,"true":[40,41,42,457,462,489,492,505,506,877,883,884,889,893,896,897,900,901,903,904,907,908,909,950,951,952,1026,1028,1035,1037,1054,1058,1067,1069,1117,1118,1121,1124,1126,1127,1128,1129,1130,1132,1144,1147,1169,1170,1171,1172,1173,1217,1218,1225,1229,1230,1236,1238,1239,1240,1241,1242,1243,1244,1246,1247,1254,1262,1267,1268,1269,1270,1290,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311],"try":[40,41,1026,1115,1173],"var":[40,41,1169,1170,1171,1319],"while":[40,41,42,877,889,1173],AND:[877,879,907,908,1151,1152],But:1319,For:[43,877,878,880,881,882,888,890,891,1026,1029,1038,1106,1121,1127,1135,1144,1149,1154,1155,1273,1279,1280,1316,1319],Its:[1154,1158],NOT:[877,889],Not:866,One:[40,41,43,1026,1051,1092,1229,1231,1319],Ones:[1273,1281],PRs:43,Such:[1026,1043],That:1316,The:[15,16,17,18,19,40,41,42,43,867,871,877,878,879,880,881,882,883,884,885,886,888,889,890,891,893,894,895,896,897,898,899,903,904,907,908,909,911,929,930,936,950,951,952,961,962,968,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,991,994,995,996,997,998,1001,1002,1006,1007,1008,1013,1014,1015,1016,1025,1026,1029,1032,1033,1036,1037,1039,1040,1041,1042,1044,1045,1048,1049,1053,1058,1060,1061,1068,1071,1072,1073,1075,1077,1079,1081,1083,1085,1088,1091,1092,1094,1095,1096,1097,1098,1101,1102,1103,1104,1105,1106,1109,1117,1120,1121,1123,1124,1126,1128,1129,1130,1132,1135,1137,1139,1141,1143,1144,1147,1149,1154,1155,1157,1158,1162,1163,1164,1165,1167,1169,1170,1171,1172,1173,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1273,1279,1280,1290,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1308,1309,1310,1316,1319],There:[43,1273,1316],These:[43,1273],Use:43,Used:[1217,1218,1225,1302,1303],Using:[1273,1274,1319],With:[40,41,900,901,1144,1147,1236,1238,1239,1240,1241,1242,1243,1244,1273,1315,1319],__array__:[1026,1032],__call__:[1290,1301,1302,1303],__del__:1173,__dict__:[1173,1316],__enter__:1173,__exit__:1173,__getitem__:1173,__getstate__:1173,__init__:[40,41,42,43,59,60,84,221,406,407,455,456,537,673,952,953,960,961,962,963,964,965,966,967,1002,1003,1004,1005,1121,1122,1173,1177,1184,1273,1276,1277,1278,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1315,1319],__iter__:1173,__len__:1173,__next__:1173,__pow__:43,__repr__:1173,_assign_vari:1315,_axi:1173,_base:[1217,1218,1225],_compute_node_da_ratio:1173,_compute_node_strs_da:1173,_concat_unify_arrai:1173,_counter:1173,_cur_framework:[43,1173],_da_direct:1173,_da_directions_flip:1173,_da_step_tim:1173,_da_tim:1173,_da_tune_count:1173,_data:1173,_delta_da_dim_s:1173,_delta_sf:1173,_dict:1173,_dim_siz:1173,_first_da_tune_step:1173,_first_ns_tune_step:1173,_fn:1173,_forward:[1273,1315],_get_kalman_param:1319,_get_prior:1319,_get_some_model:1319,_handle_flat_arrays_in_out:43,_index:[1217,1218,1225],_input_queu:1173,_length:1173,_max_depth:1173,_max_node_dim_step_ratio:1173,_max_node_dim_step_s:1173,_max_split_factor_step_s:1173,_mean_unify_arrai:1173,_min_bas:[1026,1105,1271,1272,1304,1305],_min_denomin:[1026,1104],_min_node_dim_s:1173,_min_sf_tune_step:1173,_min_unit_node_tune_step:1173,_model:1319,_native_wrapp:43,_node_mapp:1173,_node_percent_mem:1173,_node_str:1173,_node_str_da_ratio:1173,_node_strs_da:1173,_node_strs_kei:1173,_node_strs_n:1173,_node_util:1173,_ns_step_tim:1173,_ns_time:1173,_ns_tune_count:1173,_num_nod:1173,_num_work:1173,_observed_config:1173,_output_queu:1173,_paramet:1315,_percent_mem_inc_per_sf:1173,_percent_mem_inc_per_unit_da_dim:1173,_percent_util_inc_per_unit_da_dim:1173,_ret_fn:1173,_safety_factor:1173,_save_dir:1173,_shift_da_split:1173,_shift_n:1173,_slice:1173,_step:[1306,1310],_sum_unify_arrai:1173,_timeout:1173,_tune:1173,_tune_da:1173,_tune_n:1173,_tune_step:1173,_unit_da_tune_count:1173,_unroll_step:1319,_with_node_mappig:1173,_worker:1173,_worker_class:1173,_worker_fn:1173,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,952,961,967,1173,1302,1303,1306,1310],abil:1273,abl:[40,41],about:[873,874,875],abov:[43,867,871,893,894,1229,1231],above_height:[40,41],abs:[306,457,594,731,893,897,1026,1173],absolut:[40,41,893,895,1026,1027],abstractmethod:1173,accept:[15,43,877,889,1273],access:[40,41,43,1316],accord:[40,41,873,874,1026,1042,1060,1094,1095,1114,1119],accordingli:[893,897,907,908,909],accur:[59,406,455,456,952,964,965,966,967,1002,1121,1281,1283,1284,1286,1287,1289],aco:[815,1154],acosh:[815,1154],across:[40,41,952,961,962,971,972,974,975,976,977,978,984,994,995,1026,1031,1033,1034,1173,1217,1221],act:43,activ:[1247,1248,1249,1250,1251,1252,1253,1273,1277,1278],actual:1316,adam:[1121,1123,1124,1128,1273,1306,1308,1315],adam_step:1121,adam_upd:1121,adapt:[1121,1129,1306,1309],add:[40,41,43,1173,1267,1268,1269,1270,1271,1272,1273,1304,1305,1316],added:[43,1026,1104,1105,1312,1313],adding:[43,1026,1036],addit:[40,41,43,1026,1050,1051,1052,1271,1272,1290,1300],addition:43,address:43,adher:43,adjac:[1026,1029],adopt:[43,1026,1043],affect:[1026,1029],affin:[1304,1305],after:[877,891,1026,1077,1121,1124,1125,1126,1128,1129,1130,1137,1138,1271,1272,1306,1307,1308,1309,1310,1311,1319],after_1:[1026,1042,1119],after_n:[1026,1042,1119],again:43,against:[40,41,900,901,1144,1147,1236,1238,1239,1240,1241,1242,1243,1244],agnost:[43,1273,1315,1316],aim:1319,algebra:1144,algorithm:[1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297,1319],align:[40,41,43,1026,1036],aliv:[952,986,988,992,1026,1062,1086,1089],all:[15,16,17,18,19,40,41,43,118,248,442,573,709,867,871,893,897,898,899,907,950,951,952,961,986,992,1026,1027,1028,1033,1034,1043,1062,1068,1089,1103,1144,1149,1169,1170,1171,1172,1173,1217,1218,1219,1225,1226,1229,1230,1233,1236,1238,1239,1240,1241,1242,1243,1244,1254,1264,1273,1316,1319],all_depth:[40,41],all_equ:1026,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1217,all_tru:[40,41],alloc:[43,867,871,952,1173],allow:[1026,1078,1079,1080,1302,1303],allow_dupl:[1026,1080],alon:[952,991,1001,1173,1273],along:[40,41,43,505,893,897,898,899,900,901,903,904,905,906,907,908,909,952,975,976,977,978,981,982,983,984,996,1026,1041,1046,1047,1060,1077,1078,1079,1091,1102,1106,1109,1116,1144,1147,1169,1170,1171,1172,1173,1229,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244],alongsid:[1315,1316],alpha:[1246,1248],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,877,880,952,1173],also:[40,41,43,1026,1029,1121,1124,1169,1170,1171,1172,1217,1218,1219,1225,1226,1254,1263,1273,1290,1300,1315],altern:1315,alwai:[40,41,43,1121,1127,1132],among:[40,41],amount:[952,998,1173,1273],angl:[877,882,1154,1155,1159],ani:[15,16,17,18,19,40,41,43,118,248,442,573,709,877,886,907,950,951,952,954,957,961,962,964,973,974,977,978,983,1026,1028,1029,1032,1049,1050,1051,1052,1053,1054,1067,1075,1080,1104,1105,1121,1125,1173,1217,1218,1221,1225,1226,1227,1228,1229,1233,1273,1279,1280,1302,1303,1315,1316,1319],anoth:[40,41,43,1002,1008,1273],another_backend:43,anyth:[43,1319],anywai:43,apart:43,api:[1273,1274],appear:[43,1026,1055],append:[40,41,893,894,1173],appli:[15,18,19,40,41,893,896,1026,1050,1051,1052,1121,1128,1129,1151,1152,1153,1169,1170,1171,1217,1221,1224,1226,1246,1247,1248,1249,1250,1251,1252,1253,1254,1263,1265,1266,1271,1272,1273,1276,1277,1278,1304,1305],applic:[1217,1221,1226,1254,1265,1266,1273,1319],appropri:[900,901],approxim:[43,877,878,881,882,887,888,890,911,936,1246,1247],arang:[138,306,457,505,594,731,1026,1078,1079],arbitrari:[40,41,952,981,982,984,1173],arc:[1154,1159],arcco:[1154,1155],arctan:[1154,1158],area:[877,878,1273],arg:[15,16,17,40,41,43,59,63,952,961,974,978,984,996,1026,1050,1051,1052,1095,1173,1279,1280,1302,1303],arg_nam:1026,arg_stateful_idx:[1302,1303],argmax:[111,242,435,566,702,900],argmin:[138,457,594,731,1026],args_clon:1173,args_dist:1173,args_to_ivi:[15,1273],args_to_n:[15,1273],args_uni:1173,argsort:[114,245,438,569,705,903],argument:[15,16,17,18,19,40,41,42,43,59,63,950,951,952,961,962,974,978,984,1026,1029,1030,1037,1049,1080,1095,1154,1155,1173,1217,1221,1279,1280,1302,1303],aris:[1273,1319],arithmet:[43,1236,1239,1242,1244],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:505,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,138,306,457,505,594,731,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,909,929,930,936,952,970,971,972,975,976,977,978,981,982,983,984,986,988,992,996,997,1002,1006,1012,1017,1018,1026,1027,1028,1029,1031,1033,1034,1035,1036,1038,1039,1040,1041,1042,1044,1045,1046,1047,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1065,1067,1068,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1081,1082,1083,1084,1086,1087,1088,1089,1091,1092,1093,1094,1095,1100,1102,1103,1106,1107,1108,1109,1111,1112,1113,1114,1116,1117,1118,1119,1120,1121,1123,1124,1127,1128,1132,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1173,1217,1219,1226,1229,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1290,1298,1299,1301,1306,1310,1315,1316],arrang:[1026,1050],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,400,401,402,403,404,405,406,408,409,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,909],array_api_methods_to_test:43,array_builtin:[43,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949],array_equ:[306,731,1026],array_lik:[505,1026,1032],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1026],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1273],arraywithgener:[22,1273],arraywithgradi:[24,1273],arraywithimag:[26,1273],arraywithlinalg:[28,1273],arraywithlog:[30,1273],arraywithmath:[32,1273],arraywithmeta:[34,1273],arraywithrandom:[36,1273],arraywithreduct:[38,1273],arriv:[40,41,42],articl:1273,arxiv:1273,as_arrai:[40,41,1026,1065,1100],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[455,457,465,952,970,1002,1009,1010,1011,1012],as_tensor:457,as_vari:[40,41],as_zero:[40,41],asarrai:[457,1026],ascend:[903,904],asin:[815,1154],asinh:[88,411,541,677,877],aspect:[1137,1142],assert:[40,41,1026,1035,1173],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1026,associ:[43,1144,1150],assum:[877,881,890,1316,1319],astyp:[457,1002],asynchron:[40,41,42],at_dev:[40,42,952,965,966],at_kei:[40,41],at_key_chain:[40,41],at_nod:1173,atan2:[815,1154],atan:[815,1154],atanh:[815,1154],attent:[43,1254,1265,1266,1290,1301],attribut:[0,6,40,41,873,874,875,1026,1120],audienc:[1273,1316],author:1273,automat:43,avail:[40,41,43,952,987,989,990,999,1026,1051,1173],averag:[1121,1123,1124,1128,1169,1170,1171,1236,1239],average_across_step:[1169,1170,1171],avoid:[43,952,1173,1316],axes:[40,41,43,457,486,498,499,893,897,898,899,900,901,905,906,907,908,909,952,996,1026,1031,1042,1055,1108,1114,1119,1144,1147,1173,1236,1238,1239,1240,1241,1242,1243,1244],axes_length:[40,41,1026,1050,1051,1052],axi:[40,41,457,459,463,464,470,478,479,480,484,485,487,893,894,897,898,899,900,901,903,904,905,906,907,908,909,952,954,957,964,975,976,977,978,981,982,983,984,996,1026,1031,1041,1042,1045,1046,1047,1055,1060,1077,1078,1079,1091,1102,1103,1106,1108,1109,1116,1119,1173,1229,1235,1236,1238,1239,1240,1241,1242,1243,1244,1246,1251,1267,1269,1270],axis0:[40,41,1026,1108],axis1:[40,41,893,894,1026,1108],axis2:[893,894],back:[43,1302,1303,1306,1310],backend:[15,17,19,40,41,400,401,402,403,404,405,406,408,409,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,503,504,505,506,952,987,990,999,1002,1008,1016,1025,1026,1070,1074,1121,1124,1126,1128,1129,1130,1135,1173,1273,1274,1279,1280,1306,1307,1308,1309,1310,1311,1315,1316,1319],backend_nam:43,background:[1273,1316],backprop:1319,backward:[907,908,909,1315],band:[1026,1058],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,406,455,456,457,480,877,887,888,911,936,952,954,955,956,957,958,959,961,962,964,965,966,967,1002,1026,1063,1079,1096,1105,1121,1173,1236,1237,1273,1276,1277,1278,1281,1283,1284,1286,1287,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1319],basi:43,batch:[40,41,893,896,897,952,994,995,1026,1058,1068,1137,1141,1169,1170,1171,1172,1173,1254,1263,1271,1272,1304,1305],batch_shap:[457,472,1026,1068,1087,1137,1138,1139,1140,1141,1142,1143,1144,1150,1229,1230,1254,1264,1265,1266,1290,1299],batch_siz:[505,506,1173,1229,1230,1254,1255,1256,1257,1258,1259,1260,1261],bayesian:1319,becaus:[43,1026,1029],becom:[43,1026,1038,1154,1159,1319],been:[1026,1050,1051,1052,1229,1230],befor:[40,41,43,952,996,1169,1170,1171,1173,1217,1226,1236,1238,1239,1240,1241,1242,1243,1244,1254,1265,1266,1319],before_1:[1026,1042,1119],before_n:[1026,1042,1119],begin:[1217,1218,1225,1316],behaviour:[43,1319],behind:[1121,1124,1126,1128,1129,1130,1273],being:[40,41,43,1026,1029,1090,1098,1173],believ:43,belong:[40,41],below:[43,867,871,893,894,1273,1316,1319],below_depth:[40,41],benefit:1273,bernoul:[1254,1262,1290,1298],best:[43,1026,1080,1273],beta1:[1121,1123,1124,1128,1306,1307,1308],beta2:[1121,1123,1124,1128,1306,1307,1308],beta:[1271,1272],between:[40,41,42,873,874,1026,1029,1144,1149,1217,1221,1229,1231,1267,1269,1270,1306,1308],bia:[1254,1263,1264,1290,1291,1292,1293,1294,1295,1296,1297,1300],bias_initi:[1290,1291,1292,1293,1294,1295,1296,1297,1300],bilinear:[1137,1138],bilinear_resampl:[172,359,494,634,801,1137],bilinearli:[1137,1138],binari:[877,879,1267,1268],binary_cross_entropi:1267,bit:[406,873,874,875,1002,1013,1137,1139,1143,1273],bitwis:[877,879],bitwise_and:[88,225,411,541,677,877],bitwise_oper:[0,7,8],block:[1273,1316],bool:[15,18,19,40,41,42,43,877,883,884,885,886,889,893,896,897,900,901,903,904,905,906,907,908,909,911,930,950,951,952,970,983,987,991,996,999,1001,1002,1012,1026,1028,1033,1034,1046,1049,1053,1054,1058,1065,1067,1075,1080,1100,1102,1116,1117,1118,1121,1124,1125,1126,1127,1128,1129,1130,1132,1144,1147,1169,1170,1171,1172,1173,1217,1218,1219,1221,1225,1226,1229,1230,1236,1238,1239,1240,1241,1242,1243,1244,1246,1247,1254,1262,1279,1280,1290,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311],both:[43,1026,1045],bottom:1273,boundari:[40,41,1229,1233],branch:[43,950,951],brittl:43,broadcast:[40,41,43,877,879,885,886,893,897,900,901,907,908,909,911,929,930,936,1026,1036,1053,1082,1083,1084,1091,1144,1147,1154,1159,1162,1236,1238,1239,1240,1241,1242,1243,1244],broadcast_to:[306,731,1026],build:[1173,1273,1290,1301,1302,1303],build_mod:[1290,1301,1302,1303],builder:[43,1273],built:[952,1026,1029,1173,1290,1301,1302,1303],builtin:43,builtin_ab:[261,911],builtin_add:[261,911],builtin_and:[261,911],builtin_bool:[261,911],builtin_contain:[261,911],builtin_deepcopi:[261,911],builtin_dir:[261,911],builtin_eq:[261,911],builtin_float:[261,911],builtin_floordiv:[261,911],builtin_g:[261,911],builtin_getattr:[261,911],builtin_getattribut:[261,911],builtin_getitem:[261,911],builtin_gt:[261,911],builtin_int:[261,911],builtin_invert:[261,911],builtin_l:[261,911],builtin_lt:[261,582,718,911],builtin_mul:[261,911],builtin_n:[261,911],builtin_neg:[261,911],builtin_or:[261,911],builtin_po:[261,911],builtin_pow:[43,261,911],builtin_radd:[261,911],builtin_rand:[261,911],builtin_rfloordiv:[261,911],builtin_rmul:[261,911],builtin_ror:[261,911],builtin_rpow:[261,911],builtin_rsub:[261,911],builtin_rtruediv:[261,911],builtin_rxor:[261,911],builtin_setitem:[261,911],builtin_some_op:43,builtin_sub:[261,911],builtin_truediv:[261,911],builtin_xor:[261,911],busi:43,bypass:1316,cach:[952,968,1026,1037],cache_fn:1026,calcul:[40,41,42,43,877,878,881,882,887,888,890,891,911,929,936,1154,1162],call:[43,952,996,1026,1090,1098,1115,1121,1125,1173,1217,1218,1221,1225,1290,1301,1302,1303,1306,1310,1316,1319],callabl:[40,41,950,951,952,961,962,996,1026,1037,1049,1051,1080,1115,1169,1170,1171,1172,1173,1217,1221,1222,1223,1225,1226,1254,1265],can:[43,952,994,995,996,1026,1092,1137,1139,1173,1273,1315,1316,1319],cancel_join_thread:1173,cannot:43,captur:1273,cast:[40,41,138,306,457,594,731,1002,1026,1041,1137,1139,1143],catch_except:[1026,1049],categori:43,caus:43,ceil:[88,225,411,541,677,877,1026,1029],cell:[1254,1264,1290,1299],certain:[40,41,1026,1029,1078,1079],chain:[40,41,1169,1170,1171,1312,1313],chang:[43,952,1026,1092,1173,1217,1219,1226,1273,1315],channel:[1026,1058,1137,1139,1140,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300],check:[15,16,17,18,19,40,41,43,952,991,1001,1002,1007,1016,1025,1026,1035,1054,1067,1075,1107,1117,1121,1127,1173,1217,1218,1225,1273,1316],check_nest:[1217,1225],check_shap:[40,41],check_submod_ret:[1302,1303],check_typ:[40,41],choic:[1273,1316],choleski:[805,1144],choos:[877,889,1026,1118,1144,1149,1154,1159,1273],choose_random_framework:59,chosen:[40,41,1026,1029,1118],chunk:[952,994,995,996,1173],chunk_siz:[952,996,1173],circl:[1154,1155,1157],clark:1273,clear:[43,952,968,1173],clear_framework_stack:59,clear_mem_on_dev:[455,723,952],click:1273,clip:[40,41,306,457,731,1026,1039,1040,1082,1084,1273],clip_matrix_norm:1026,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1026],clipped_delta:1173,clone:[40,41,952,971,972,973,974,1173],clone_arrai:1173,clone_it:1173,clone_nest:1173,clonedit:1173,cloneditem:1173,clonednest:1173,close:[43,1137,1142,1154,1157,1173,1319],closest:[877,880,1002,1007],closest_valid_dtyp:1002,code:[40,41,42,43,505,1273,1274,1315,1316],codebas:[952,994,995,1173,1273,1316,1319],codomain:[877,878,881,882,888,890,891],colab:1273,collect:[15,40,41,455,457,489,494,498,502,503,505,911,950,952,1002,1026,1121,1137,1144,1151,1154,1173,1217,1229,1236,1246,1254,1267,1271,1276,1290,1304,1306],color:[40,41,42,1317,1318],column:[1026,1068],combin:[40,41,42,1137,1142,1273,1319],combined_batch_s:1173,come:1316,command:1273,comment:43,commit:1319,common:[40,41,43,1154,1159],common_key_chain:[40,41],commun:[43,1273,1316],communuti:43,compar:[40,41,903,904,911,929,1026,1028,1033,1034],comparison_oper:[0,9,10],compat:[43,877,879,885,886,893,897,907,908,909,911,929,930,936,1026,1053,1092,1154,1162,1273,1319],compil:[306,457,731,1302,1303,1306,1307,1308,1309,1310,1311],compile_on_next_step:[1302,1303,1306,1307,1308,1309,1310,1311],complet:[40,41,43,1144,1149,1173],complex:[1316,1319],compliant:[877,889],compon:[1026,1045],composit:43,comput:[40,41,877,879,885,886,889,893,895,897,905,906,911,930,952,996,1026,1039,1040,1046,1047,1053,1081,1121,1123,1124,1125,1126,1128,1129,1130,1132,1134,1137,1140,1144,1145,1146,1147,1148,1149,1151,1152,1153,1154,1155,1157,1158,1159,1163,1164,1165,1167,1217,1221,1236,1237,1238,1239,1240,1241,1242,1243,1244,1254,1255,1256,1257,1258,1259,1260,1261,1263,1265,1267,1268,1269,1270],concat:[40,41,952,981,982,983,984,996,1026,1058,1173],concaten:[40,41,138,306,457,594,731,1026,1058,1173,1273],concatten:[40,41,952,981,982,983,984,996,1173],condit:[457,950,951,1026,1118,1217,1225],conditon:[1217,1225],config:[40,41,1173],config_list:1173,configur:[40,41],conflict:43,conform:43,conjunct:1316,connect:[1290,1300,1301],consid:[40,41,877,889,1144,1149,1315,1319],consist:[40,41,952,984,1173,1236,1237,1302,1303,1316],constant:[952,961,962,1026,1042,1173,1217,1221,1267,1268,1269,1270,1271,1272,1281,1282,1286,1289,1302,1303,1304,1305,1316],constant_kwarg:1173,constant_pad:[306,457,594,731,1026],constitu:[40,41],construct:[1026,1109,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1315],constructor:[40,41,42,1026,1030,1312,1313],consum:[952,1173],cont_feat_dim:[1254,1265],contaienr:[40,41],contain:[15,18,19,42,43,867,869,871,872,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,897,905,906,907,908,909,911,929,930,936,952,971,975,996,1002,1006,1026,1027,1031,1038,1039,1040,1043,1053,1067,1082,1084,1093,1104,1105,1121,1123,1124,1126,1128,1129,1130,1154,1162,1169,1170,1171,1172,1173,1229,1230,1236,1238,1239,1240,1242,1244,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[457,731,1026],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[457,1026,1085,1254,1265,1290,1301],context_dim:[1290,1301],contextmanag:[59,60],continu:[43,1173,1316],contract:[40,41,1236,1237],contribut:[1273,1274],contributor:[43,1273],control:1273,conv1d:[203,389,519,856,1254,1273,1290],conv1d_transpos:[203,389,519,856,1254],conv1dtranspos:[1273,1290],conv2d:[203,389,519,659,856,1254,1273,1290],conv2d_transpos:[203,389,519,856,1254],conv2dtranspos:[1273,1290],conv3d:[203,389,519,659,856,1254,1273,1290],conv3d_transpos:[203,389,519,856,1254],conv3dtranspos:[1273,1290],convent:[40,41,1236,1237],conver:[952,968,979,991,998,1001,1173],convers:[16,17,18,19,40,41,1173,1273],convert:[15,16,17,18,19,40,41,43,952,979,980,1002,1008,1014,1015,1026,1101,1112,1113,1137,1139,1143,1144,1150,1173,1217,1219,1226,1273,1280],convert_dtyp:1002,convolut:[1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297],cool:43,cooler:43,coordin:[1026,1083,1154,1155,1157,1159],copi:[40,41,43,505,1026,1044,1173,1217,1219],copy_arrai:[457,731,1026],copy_nest:1217,core:[455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,503,504,505,506,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,954,955,956,957,958,959,961,962,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1273],corner:43,correct:[43,1273,1316],correctli:[40,41,43,900,901,1144,1147,1154,1159,1236,1238,1239,1240,1241,1242,1243,1244],correspond:[40,41,43,911,936,1026,1041,1229,1230],cos:[88,411,541,677,877,1026,1058,1154,1155,1167,1316],cosh:[88,411,541,677,815,877,1154],cosin:[877,881,882,1154,1155,1156,1161],cost:[1121,1123,1124,1126,1128,1129,1130,1169,1170,1171,1172],cost_fn:[1169,1172],could:1319,count:[40,41,898,899,907,908,909,1173,1236,1241,1243],cours:43,cprint:1317,cpu:[40,41,43,952,989,991,997,998,1001,1026,1029,1032,1060,1061,1068,1078,1079,1087,1088,1094,1095,1120,1173,1229,1230,1231,1232,1233,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1310,1312,1313,1315,1316],creat:[40,41,867,868,869,870,872,952,961,962,1026,1029,1032,1059,1060,1061,1068,1078,1079,1087,1088,1094,1095,1111,1120,1121,1134,1173,1229,1230,1231,1232,1233,1273,1274,1279,1280,1281,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1315,1319],create_if_abs:[40,41],create_vari:1281,creation:[40,41,42,43],creation_funct:[400,401,402,403,404,405,867,868,869,870,871,872],crop:[1137,1141],crop_siz:[1137,1141],cross:[306,731,1026,1267,1268,1269,1270],cross_entropi:1267,cuda:[40,41,952,961,980,997,1026,1029,1032,1060,1061,1068,1078,1079,1087,1088,1094,1095,1120,1173,1229,1230,1231,1232,1233,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1310,1312,1313],cumprod:[138,306,457,731,1026],cumsum:[731,1026],cumul:[1026,1046,1047],current:[40,41,42,43,952,961,985,986,988,992,1002,1008,1016,1025,1026,1048,1062,1070,1074,1086,1089,1173,1217,1218,1225,1273,1319],current_framework:59,current_framework_str:[457,731,1026,1173],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1254,1255,1256,1257,1258,1259,1260],d_out:[1254,1255,1256,1257,1258,1259,1260],da_can_termin:1173,da_dim_s:[952,1173],da_direct:1173,da_tune_step:[952,1173],dai:1319,daniel:1273,data:[40,41,42,43,867,868,869,870,871,872,874,875,877,878,879,880,881,882,883,884,885,886,888,889,890,891,893,894,897,898,899,903,904,907,908,909,911,929,930,936,952,954,955,956,957,958,959,964,965,966,980,1002,1006,1007,1008,1012,1013,1014,1015,1016,1017,1018,1025,1026,1029,1032,1053,1059,1068,1075,1088,1092,1103,1107,1120,1121,1127,1135,1154,1162,1173,1254,1263,1273],data_format:[1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297],data_type_funct:[406,408,409,873,874,875],dataset:[40,41],datatyp:[40,41,1002,1007,1017,1018],dcdw:[1121,1123,1124,1126,1128,1129],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1121,1128,1129,1306,1308,1309],decay_lambda:[1121,1128,1129,1306,1308,1309],decid:[40,41,1319],decompos:[1144,1145,1149],decomposit:[893,896,1144,1145,1149],decor:43,decrement:[1026,1071],dedic:[1121,1135,1279,1280],deep:[40,41,1273],deep_copi:[40,41],deeper:[952,974,978,984,1173,1217,1226,1273],deepli:[1217,1219],def:[43,60,84,221,407,537,673,953,960,963,1003,1004,1005,1122,1173,1177,1184,1273,1282,1285,1288,1315,1316,1319],default_dev:43,default_devic:952,default_dtyp:[43,1002],default_float_dtyp:1002,default_int_dtyp:1002,default_key_color:[40,41,42],default_nod:1173,default_rng:505,default_v:[1026,1049],defaultdevic:[952,953],defaultdtyp:[1002,1003],defaultfloatdtyp:[1002,1004],defaultintdtyp:[1002,1005],defer:43,defin:[43,1026,1045,1087,1120,1229,1231],definit:43,degre:[1154,1167],del:1173,delai:43,delet:43,delta:[1121,1123,1173],delta_dim_s:1173,delta_percent_mem:1173,delta_sf:1173,delta_util:1173,demo:1273,denomin:[1026,1057,1064,1097,1104,1105,1271,1272,1304,1305],denot:43,dens:[1290,1300],depend:[43,877,878,881,882,887,888,890,893,896,903,904,911,936,1026,1118,1273],depth:[40,41,457,481,952,974,978,984,1026,1066,1087,1173,1217,1226,1302,1303],depth_cutoff:[40,41],depthwis:[1254,1261,1290,1297],depthwise_conv2d:[203,389,519,659,856,1254],depthwiseconv2d:[1273,1290],deriv:[867,870,1121,1123,1124,1126,1128,1129,1130,1217,1219,1226,1273,1302,1306,1310,1312],descend:[893,896,903,904],descent:[1121,1126,1306,1311],describ:[40,41,1236,1237],descript:[893,897],design:[1273,1274],desir:[40,41,952,997,1002,1006,1026,1029,1032,1068,1069,1088,1120,1137,1142,1173,1236,1238,1239,1240,1242,1244],desired_aspect_ratio:[494,497,1137,1142],desired_percent_increas:1173,det:[558,694],detail:1319,detect:[40,41,1217,1218,1225],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,877,878,879,881,882,883,884,888,890,891,893,894,895,897,907,908,909,911,936,952,987,989,990,999,1002,1006,1007,1013,1016,1017,1018,1025,1026,1028,1029,1032,1033,1034,1067,1070,1074,1075,1107,1117,1121,1127,1154,1162,1169,1170,1171,1172,1173,1254,1265],dev:[40,41,42,43,131,300,400,403,455,457,458,460,470,471,472,479,480,481,482,483,488,505,506,587,723,867,870,952,955,956,958,959,961,962,965,966,968,969,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,988,991,992,993,994,995,996,997,998,1001,1026,1029,1032,1060,1061,1068,1078,1079,1087,1088,1094,1095,1120,1121,1136,1229,1230,1231,1232,1233,1279,1280,1281,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1310,1312,1313],dev_clon:[40,41,952],dev_clone_arrai:952,dev_clone_it:952,dev_clone_nest:952,dev_dist:[40,41,952],dev_dist_arrai:952,dev_dist_it:952,dev_dist_nest:952,dev_from_str:[43,131,300,455,587,723,952],dev_mapp:952,dev_str:[40,41],dev_to_str:[131,300,455,587,723,952],dev_unifi:952,dev_unify_arrai:952,dev_unify_it:952,dev_unify_nest:952,dev_util:952,devclonedit:952,devcloneditem:952,devclonednest:952,devdistit:952,devdistitem:952,devdistnest:952,develop:[43,1273,1316,1319],deviat:[40,41,1229,1232,1236,1242,1271,1272,1304,1305],devic:[21,40,41,43,400,401,402,405,456,457,469,867,868,869,870,871,872,954,955,956,957,958,959,961,962,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1026,1029,1032,1059,1060,1061,1068,1078,1079,1087,1088,1094,1095,1120,1121,1136,1229,1230,1231,1232,1233,1273,1279,1280,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1310,1312,1313],devmanag:[952,960],devmapp:[952,962],devmappermultiproc:952,diag:[893,896],diagon:[105,235,428,558,694,867,871,893,1026,1068],dict:[15,16,17,18,19,40,41,42,952,954,957,961,962,964,974,975,976,977,978,1026,1050,1051,1052,1080,1169,1170,1171,1173,1217,1219,1220,1221,1224,1226,1279,1280],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,873,874,952,971,972,975,976,1144,1149,1173,1254,1263,1273,1316,1319],differenti:[1273,1316],dilat:[1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297],dim:[40,41,43,893,896,1026,1087,1137,1138,1142,1173,1290,1301],dim_siz:[40,41,952,1173],dimens:[40,41,42,867,871,893,894,896,897,898,899,900,901,907,908,909,952,983,1026,1036,1041,1045,1050,1051,1052,1055,1058,1065,1077,1087,1091,1092,1102,1103,1106,1114,1116,1137,1141,1144,1147,1169,1170,1171,1172,1173,1229,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1251,1254,1255,1256,1257,1258,1259,1260,1261,1264,1267,1269,1270,1290,1291,1292,1293,1294,1295,1296,1297,1300,1301],dimension:[40,41,505,893,896,897,907,908,909,1026,1102,1103],direct:1173,directli:[43,1217,1226,1316,1319],directori:[1026,1099,1110],discord:43,discret:[1267,1269],discuss:43,disk:[40,41,1137,1139],distanc:[1026,1029],distribut:[40,41,952,971,975,976,977,978,1173,1229,1230,1231,1232,1233,1254,1262,1290,1298,1302,1303],distribute_nest:1173,distributedarrai:[40,41],distrubt:[1267,1269],dive:[1273,1316],divid:[40,41,1026,1102,1104,1154],dividend:[1154,1162],divis:[1026,1057,1064,1097,1104,1105,1121,1123,1124,1128,1154,1162,1306,1307,1308],divisor:[1121,1123,1124,1128,1154,1162,1306,1307,1308],doc:1273,docstr:43,document:43,doe:[40,41,43,1026,1029,1102,1315],doesn:[1144,1149,1273],doing:43,domain:[877,878,881,882,888,890,891,1154,1155],don:[43,1273],done:43,door:1319,dot:[1144,1146,1254,1265,1266,1290,1301],down:1315,downscal:[1026,1039,1040],drag:[1273,1319],draw:[1229,1230,1232,1233],drawn:[1229,1230,1231,1232,1233],drop:[1273,1319],dropout:[1254,1273,1290,1301],dropout_r:[1290,1301],ds_tune_step:952,dtype:[40,41,43,138,306,400,401,402,403,405,406,408,409,457,458,460,461,469,472,488,594,731,867,868,869,870,872,873,874,875,900,901,1006,1007,1008,1009,1010,1011,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1029,1032,1059,1068,1087,1088,1120],dtype_bit:[138,306,457,594,731,1002],dtype_from_str:[43,138,306,457,594,731,1002],dtype_in:[457,466,467,468,1002,1008,1013,1014,1015,1016,1017,1018,1025],dtype_to_str:[138,306,457,594,731,1002],duplic:[40,41,43],dure:[40,41,43,950,951,1026,1115,1121,1123,1124,1128,1169,1170,1171,1172,1302,1303,1306,1307,1308,1310],dynam:[43,457,462,950,951],each:[40,41,42,43,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,896,911,930,936,952,961,962,971,972,973,974,975,976,977,983,995,996,1026,1027,1028,1042,1053,1091,1102,1106,1109,1119,1121,1124,1126,1128,1129,1130,1137,1140,1154,1157,1162,1164,1165,1173,1217,1221,1229,1230,1236,1237,1254,1255,1256,1257,1258,1259,1260,1261,1262,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1316],eager:1316,easi:1319,easili:1273,econom:1319,ecosystem:1273,edg:[1026,1038,1042,1119],effect:[1121,1130],effective_grad:[1121,1130],effici:1319,einop:[40,41,1026,1050,1051,1052],einops_rearrang:[40,41,1026],einops_reduc:[40,41,1026],einops_repeat:[40,41,1026],einstein:[40,41,1236,1237],einsum:[40,41,189,377,507,649,836,1236],either:[40,41,43,877,888,890,1026,1049,1080,1083,1085,1169,1170,1171,1172,1173,1290,1301,1302,1303,1316],eleg:1173,element:[40,41,43,505,867,871,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,898,899,905,906,907,908,909,911,929,930,936,952,973,977,983,1002,1006,1026,1027,1029,1031,1033,1034,1038,1039,1040,1046,1047,1053,1056,1057,1068,1069,1082,1084,1091,1093,1102,1113,1118,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1173,1236,1237,1239,1241,1243,1246,1247,1248,1249,1250,1251,1252,1253,1254,1262,1290,1298],elementwis:[40,41,911,929],elementwise_affin:[1304,1305],elementwise_funct:[877,878,879,880,881,882,883,884,885,886,887,888,889,890,891],elemtn:[1229,1230],elif:1173,els:[43,1026,1035,1049,1054,1173],elsewher:[1026,1118],emphas:1273,empti:[40,41,77,214,400,530,666,867,907,908,909,1144,1149,1173],enabl:[40,41,42,43,1273],encapsul:[873,875],encod:[1026,1058,1137,1139],end:[1026,1029,1273,1316],engag:43,ensur:43,entir:[40,41,907,908,909,952,996,1173,1273,1290,1299],entri:[40,41,1026,1078,1079,1102,1103],entropi:[1267,1268,1269,1270],enumer:1173,environ:1273,eps:[406,873,874],epsilon:[1121,1123,1124,1128,1267,1268,1269,1270,1271,1272,1304,1305,1306,1307,1308],equal:[40,41,88,411,541,677,877,883,893,894,903,904,1026,1028,1033,1034,1042,1102,1119,1154,1167,1229,1233],equality_matrix:[1026,1028],equat:[40,41,1236,1237],equival:[877,889,893,897,1026,1029,1154,1167],erf:[503,815,1154],error:[40,41,43,952,1026,1103,1154,1163,1173,1246,1247,1302,1303,1306,1310],essenti:43,etc:[40,41,43,952,997,1026,1029,1032,1060,1061,1068,1078,1079,1087,1088,1094,1095,1120,1173,1229,1230,1231,1232,1233,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1310,1312,1313,1319],euclidean:[893,897],euler:866,evalu:[40,41,877,887,888,907,908,909,1026,1083,1217,1218,1225],even:[43,1319],evenli:[40,41,1026,1029,1078,1079,1102],everi:[43,1026,1028,1319],exact:[40,41],exampl:[43,950,951,1026,1038,1106,1144,1149,1273,1315,1316,1319],example_input:[457,462,950,951],exc_tb:1173,exc_typ:1173,exc_val:1173,exce:[1026,1084],except:[40,41,44,47,907,908,909,1026,1029,1035,1041,1049,1115,1173],excess_s:1173,excit:[1273,1316],exclud:[59,61,1026,1029,1229,1233],exclus:[40,41,457,464,477,489,491,1026,1046,1075,1121,1127,1229,1231],execut:[43,1026,1115,1316],execute_with_gradi:[169,354,489,629,795,1121,1273,1315],exist:[40,41,1026,1049,1173,1273,1306,1310,1319],exp:[815,1154],expand:[40,41,1026,1055,1058],expand_dim:[40,41,306,731,1026,1173],expect:[1026,1030],explain:[43,1316],explicitli:[43,1290,1299,1301,1302,1303,1316],expon:[43,911,936,1026,1105],exponenti:[43,911,936,1154,1163,1164],expos:[1026,1032,1043],express:[877,881,890,1026,1083],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1121,1125],eye:[1144,1146],fabian:1273,fabio:1273,factor:[893,896,952,961,994,995,996,1121,1123,1124,1128,1129,1173,1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297,1306,1307,1308,1309],fail:43,falck:1273,fall:[1302,1303,1306,1310],fallback_to_non_compil:[1302,1303,1306,1310],fals:[15,18,19,40,41,42,59,66,67,68,69,70,455,457,464,465,477,484,487,489,490,491,498,499,877,883,884,889,893,897,900,901,903,904,905,906,907,908,909,952,970,983,991,996,1001,1002,1009,1010,1011,1012,1026,1028,1046,1049,1054,1058,1065,1075,1080,1100,1102,1116,1118,1121,1124,1125,1126,1127,1128,1129,1130,1144,1147,1169,1170,1171,1172,1173,1217,1218,1219,1221,1225,1226,1236,1238,1239,1240,1241,1242,1243,1244,1279,1280,1302,1303,1306,1307,1308,1309,1310,1311],fan_in:1281,fan_mod:1281,fan_out:1281,far:[1217,1218,1225,1315],faster:[950,951],favourit:[1273,1315],feasibl:1319,feat_dim:[1254,1265,1266],fed:[952,996,1173],feed:[952,996,1173],few:43,field:1319,file:[40,41,43,1026,1099,1110,1302,1303],filepath:[40,41],fill:[40,41,867,868,869,870,872,1026,1059,1088,1229,1231],fill_valu:[457,469,1026,1059],filter:[1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297,1319],filter_s:[1290,1291,1292],filter_shap:[1290,1293,1294,1295,1296,1297],find:[40,41,43,1319],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,220,221,406,407,536,537,672,673,873],finish:[1273,1319],finit:[877,883],first:[40,41,43,505,877,879,885,886,893,894,896,911,929,950,951,952,983,1026,1033,1041,1045,1053,1078,1079,1106,1108,1121,1125,1169,1170,1171,1172,1173,1217,1218,1225,1229,1235,1236,1241,1243,1290,1301,1302,1303,1306,1310,1316,1319],firstlayersiren:[1273,1281],firstli:[1316,1319],fist:[952,996,1173],fit:[40,41,455,457,489,494,498,502,503,505,1026,1091,1137,1142],fix:43,fkt:1319,flag:[40,41,43,1121,1127],flat:[40,41,43,1026,1091,1094],flat_list:[40,41],flatten:[40,41,893,897,900,901,1026,1058,1091,1236,1238,1239,1240,1242,1244],flatten_key_chain:[40,41,1302,1303],flexibl:[1273,1316],flip:[40,41,109,240,433,564,700,898],float32:[43,457,472,1002,1006,1014,1015,1026,1029,1032,1068,1088,1120],float_dtyp:[1002,1010,1020],float_img_to_uint8_img:1137,floor:[306,457,731,1026,1057,1173],floormod:[306,457,731,1026],fluid:1319,folder:[43,1273],follow:[40,41,43,873,875,893,897,952,996,1026,1071,1072,1073,1104,1105,1121,1124,1126,1128,1129,1130,1173,1217,1221,1226,1254,1265,1266,1273,1290,1300,1306,1310],followng:[873,874],fomaml_step:1169,forget:[1121,1123,1124,1128,1306,1307,1308],fork:[1026,1085,1273,1274],forkserv:[1026,1085,1173],form:[15,16,17,18,19,40,41,867,871,893,894,1026,1032,1121,1124,1126,1128,1129,1130,1217,1219,1226,1254],format:[40,41,43,952,970,1002,1006,1008,1012,1026,1029,1032,1068,1088,1120,1173,1236,1237,1273,1315,1316],format_fn:[40,41],format_key_chain:[40,41],forward:[1302,1303,1306,1310,1315],found:[40,41,42],fourier:[1026,1058],fourier_encod:1026,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,110,112,115,117,119,120,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,360,361,362,364,365,366,367,369,370,373,374,375,376,378,379,380,381,382,383,384,385,388,390,391,392,393,394,395,396,401,402,403,404,405,407,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,429,430,431,432,434,436,439,441,443,444,456,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,495,496,497,499,500,501,504,506,508,509,510,511,512,513,514,517,518,520,521,522,523,524,525,526,531,532,533,534,535,537,538,539,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,559,560,561,562,563,565,567,570,572,574,575,583,588,589,590,591,592,593,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,630,631,632,633,635,636,637,639,640,641,645,646,647,648,650,651,652,653,654,655,656,660,661,662,667,668,669,670,671,673,674,675,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,695,696,697,698,699,701,703,706,708,710,711,719,724,725,726,727,728,729,730,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,796,797,798,799,800,802,803,804,806,807,808,809,810,811,813,814,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,833,834,835,837,838,839,840,841,842,843,846,847,848,849,850,851,852,854,855,857,858,859,860,861,862,863,868,869,870,871,872,874,875,878,879,880,881,882,883,884,885,886,887,888,889,890,891,894,895,896,897,899,901,904,905,906,908,909,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1247,1248,1249,1250,1251,1252,1253,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1272,1273,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1289,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1305,1306,1307,1308,1309,1310,1311,1313,1314,1315,1316,1318,1319],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1173,framewrk:[1026,1085],free:43,freed:43,freeli:43,frequenc:[1026,1058],from:[40,41,42,43,867,870,877,891,893,894,898,899,905,906,907,908,909,952,961,962,996,1002,1008,1026,1049,1060,1061,1068,1092,1103,1111,1118,1121,1124,1128,1137,1141,1144,1149,1169,1170,1171,1172,1173,1217,1219,1226,1229,1230,1231,1232,1233,1236,1241,1243,1254,1262,1265,1273,1279,1280,1290,1298,1301,1306,1310,1315,1316],from_cal:[1302,1303],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,138,306,457,594,731,873,874,1026,1144,1149,1273],full_matric:[893,896],fulli:[43,1273,1290,1300,1301,1315],func:[40,41,457,462,489,490,950,951,952,996,1026,1037,1121,1125,1173],further:[43,1319],furthermor:1319,futur:1319,gain:1281,gamma:[1271,1272],gather:[40,41,138,306,457,594,731,1026,1061],gather_nd:[40,41,138,306,457,594,731,1026],gauss:[1154,1163],gaussian:[1246,1247],geglu:[1273,1276],gelu:[387,516,845,1246,1273,1276],gener:[23,40,41,43,455,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,505,950,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1127,1229,1231,1233,1234,1273,1306,1310],geometr:[1026,1058],get:[40,41,43,873,874,875,952,961,962,970,985,986,991,995,998,1001,1002,1012,1013,1026,1030,1062,1063,1064,1090,1173,1273,1290,1299,1319],get_all_arrays_in_memori:1026,get_all_arrays_on_dev:952,get_framework:59,get_initial_st:[1290,1299],get_min_bas:1026,get_min_denomin:1026,get_mod_kei:[1302,1303],get_num_dim:[457,731,1026],get_referrers_recurs:1026,getfullargspec:1173,gist:1273,give:[43,1026,1092,1316],given:[40,41,43,867,868,898,899,952,985,991,994,995,996,998,1001,1002,1006,1026,1029,1032,1038,1046,1047,1061,1078,1079,1088,1091,1094,1095,1102,1109,1114,1116,1120,1121,1123,1124,1126,1128,1129,1130,1144,1146,1150,1154,1155,1173,1217,1222,1223,1229,1232,1233,1235,1236,1239,1241,1242,1243,1244,1254,1255,1256,1257,1258,1259,1260,1261,1279,1280,1319],global:[40,41,42,952,961,962,969,994,995,996,1002,1009,1010,1011,1026,1048,1063,1064,1090,1096,1097,1098,1104,1105,1121,1136,1173,1271,1272,1304,1305],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1273,1281,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300],good:43,googl:1273,got:[43,1273],gpu0:43,gpu2:43,gpu:[952,987,990,1173],gpu_is_avail:[455,952,1173],grad:[1273,1306,1310,1315],gradient:[25,40,41,490,491,492,493,952,996,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1140,1169,1170,1171,1172,1273,1306,1307,1308,1309,1310,1311,1315,1319],gradient_descent_upd:[1121,1169,1170,1171,1172],gradient_imag:[172,359,494,634,801,1137],gradienttrack:[1121,1122],graph:[1121,1124,1126,1128,1129,1130,1302,1303],greater:[40,41,1026,1029,1056,1103,1229,1233],green:[40,41,42,1317,1318],grid:[1026,1083],group:[1137,1142],guid:[43,1273,1274,1319],gym:1273,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1319,half:[1026,1029,1173,1229,1233],hand:1273,handl:[40,41,42,43,950,951,952,968,970,979,980,991,998,1001,1121,1124,1126,1128,1129,1130,1173,1306,1307,1308,1309,1310,1311],happen:43,has:[40,41,43,893,895,900,901,1026,1106,1144,1149,1154,1158],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1026],hasattr:1173,have:[40,41,43,867,868,869,870,871,872,873,874,877,878,879,880,881,882,883,884,885,886,888,889,890,891,893,894,896,897,898,899,900,901,903,904,907,908,909,911,929,930,936,1026,1041,1045,1050,1051,1052,1053,1059,1106,1121,1127,1135,1154,1162,1173,1273,1315,1316],haven:43,hdf5:[40,41,1302,1303],head:[1254,1265,1290,1301],head_dim:[1290,1301],height:[1137,1142],height_cutoff:[40,41],help:[43,59,406,455,456,952,964,965,966,967,1002,1121,1273,1281,1283,1284,1286,1287,1289],here:[43,1273],hidden:[1254,1264,1290,1299],hierarch:[1026,1043],hierarchi:[40,41],high:[40,41,505,1229,1231,1233],higher:[893,896,1121,1124,1126,1128,1129,1130],highest:[1229,1231],highest_util:1173,highest_util_nod:1173,highli:1273,highlight:1319,hint:43,hkt:1319,hold:[1002,1006,1026,1029,1032,1094,1095],host:1273,hot:[1026,1087],hour:43,how:[1273,1290,1301,1302,1303,1316,1319],howev:[43,1316],http:1319,hyperbol:[877,878,882,1154,1156,1160,1161,1166,1168,1246,1253],hypothet:[43,1319],icon:1273,idea:1273,ident:[40,41,43,138,306,457,594,731,1026],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[866,873,874,877,891],if_exist:[40,41],ignor:[40,41,1306,1310],ignore_key_error:[40,41],ignore_miss:[1306,1310],ignore_non:[40,41],iii:43,iinfo:[83,220,406,536,672,873],imag:[27,495,496,497,1026,1077,1138,1139,1140,1141,1142,1143,1254,1255,1256,1257,1258,1260,1261,1273,1319],image_dim:[1137,1141],imkkhk:1319,immedi:[1273,1316,1319],implement:[43,877,878,881,882,887,888,890,903,904,911,936,1273,1316,1319],in_featur:[1254,1263],inadvert:43,includ:[40,41,43,893,897,907,908,909,1026,1029,1067,1104,1105,1117,1217,1218,1229,1233,1290,1300,1301,1304,1305,1315],include_deriv:[1217,1219,1226],include_empti:[40,41],include_inf:[40,41,1026,1067,1117],include_nest:[1217,1218],include_self:[40,41],inclus:[43,1229,1231],incom:[1254,1263],increas:[952,974,978,984,1026,1042,1055,1119,1173,1217,1226],increasingli:1319,increment:[1026,1072,1173],inde:1273,indent:[40,41,42],independ:[1229,1230],index:[40,41,457,505,900,901,903,904,1026,1031,1060,1061,1083,1103,1106,1217,1220,1222,1223,1224,1227],index_nest:1217,indic:[40,41,457,470,471,481,482,483,893,897,900,901,903,904,1026,1031,1060,1061,1069,1087,1094,1095,1217,1218,1220,1222,1223,1224,1225,1227,1228,1229,1230,1246,1251,1254,1255,1256,1257,1258,1259,1260,1261,1271,1272,1290,1291,1292,1293,1294,1295,1296,1297,1302,1303],indices_wher:[138,306,457,731,1026],indistinguish:[877,891],inevit:1319,inf:[40,41,893,897,1026,1067,1076,1117,1154,1158],infer:[867,870,905,906,950,951,1026,1065,1068,1092,1100,1137,1141,1144,1149,1316,1319],infin:[877,878,880,881,882,883,888,890,891,893,897,907,908,909,1026,1076],infinit:[877,891],inform:[873,874,875,1121,1132],init_c:[1254,1264],init_h:[1254,1264],init_on_first_step:[1306,1310],initi:[40,41,42,43,59,406,455,456,952,964,965,966,967,1002,1121,1173,1254,1264,1273,1283,1284,1286,1287,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1306,1310],initialz:[1302,1303],inner:[1169,1170,1171,1172],inner_batch_fn:[1169,1170,1171],inner_batch_shap:[1254,1263],inner_cost_fn:[1169,1170,1171],inner_grad_step:[1169,1170,1171,1172],inner_learning_r:[1169,1170,1171,1172],inner_optimization_step:[1169,1170,1171,1172],inner_v:[1169,1170,1171],innermost:[867,871,893,894],inp:1173,inplac:[40,41,1026,1035,1070,1074,1107,1121,1124,1126,1128,1129,1130,1279,1280,1306,1307,1308,1309,1310,1311],inplace_arrays_support:[457,1026],inplace_decr:[138,306,457,594,731,1026],inplace_incr:[138,306,457,594,731,1026],inplace_oper:[0,11,12],inplace_upd:[40,41,138,306,457,594,731,1026,1279,1280],inplace_variables_support:[457,1026],input:[15,18,19,40,41,42,43,867,870,871,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,896,897,898,899,900,901,903,904,905,906,907,908,909,950,951,952,961,962,969,970,971,974,975,978,984,996,997,1002,1006,1007,1009,1010,1011,1012,1013,1017,1018,1026,1027,1028,1031,1033,1034,1035,1036,1038,1039,1040,1041,1042,1044,1046,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1065,1067,1068,1069,1071,1072,1073,1075,1076,1077,1081,1082,1083,1084,1091,1093,1100,1101,1103,1106,1107,1108,1109,1111,1112,1113,1114,1116,1117,1119,1121,1125,1127,1132,1136,1137,1138,1139,1140,1141,1143,1144,1147,1149,1151,1152,1153,1154,1156,1158,1160,1161,1162,1166,1167,1168,1169,1170,1171,1172,1173,1229,1230,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1271,1272,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1304,1305,1316],input_ax:[952,996,1173],input_channel:[1290,1291,1292,1293,1294,1295,1296,1299,1300],input_queu:1173,inputs_split:1173,insert:[900,901,1026,1055],insid:43,inspect:1173,inspir:1319,instal:1273,instanc:[15,16,17,18,19,40,41,43,505,911,929,930,936,952,961,1173,1279,1280,1312,1313],instead:[40,41,43,505,1236,1238,1239,1240,1241,1242,1243,1244,1319],int32:43,int64:[1002,1006,1026,1029,1032,1068,1088,1120],int_dtyp:[1002,1011,1021],integ:[40,41,505,873,875,877,879,880,893,897,907,908,909,1002,1018,1026,1029,1056,1093,1102,1229,1231,1234],integr:1273,intend:43,inter:1273,interact:1273,interchang:[40,41,1026,1108],interest:1273,interfac:[1026,1032,1316],intermedi:[40,41],intern:[40,41,952,1121,1135,1173,1217,1218,1225,1226,1281,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1312,1313],interpol:[1026,1077],intersect:[1154,1155],interv:[40,41,907,908,909,1026,1029,1038,1078,1079,1154,1157,1229,1233],introduc:1319,inv:[805,1144,1319],invalid:[907,908,909],invalid_dtyp:1002,invers:[877,878,1144,1146,1148,1154,1155,1156,1157,1158,1160,1319],invert:[1144,1146,1148],invest:1319,investig:43,invoc:[950,951],irrespect:1273,is_al:1173,is_arrai:[138,306,457,594,731,1026,1173],is_float_dtyp:1002,is_int_dtyp:1002,is_mean:1173,is_sum:1173,is_vari:[169,354,489,629,795,1121],isfinit:[88,225,411,541,677,877],isinf:[306,594,731,1026],isinst:1173,isnan:[88,225,411,541,677,877],isnumer:1173,issu:[1273,1274],issue_numb:43,item:[15,19,40,41,911,923,924,952,961,962,964,971,973,975,977,983,1002,1009,1026,1043,1066,1104,1105,1173,1217,1221,1222,1223,1226,1227,1228,1273,1302,1303,1315],iter:[15,16,17,18,19,40,41,42,950,951,952,955,956,958,959,961,962,965,966,973,975,976,977,978,983,996,1026,1028,1036,1041,1042,1068,1083,1088,1091,1092,1095,1100,1102,1106,1109,1114,1119,1173,1217,1218,1219,1221,1225,1226],iterbal:[952,973,977,983,1173],its:[505,952,996,1026,1068,1092,1108,1114,1173,1273],itself:[43,1217,1226],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,400,401,402,403,404,405,406,408,409,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,954,955,956,957,958,959,961,962,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1283,1284,1286,1287,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1317,1318],ivy_backend:[40,41],ivy_bay:1319,ivy_test:43,ivyfcmodel:1315,ivyh:[40,41,42],ivymodul:[200,853],jame:1273,jax:[43,1121,1127,1273,1319],jax_concat:1273,jnp:1273,join:[40,41,1026,1041,1106,1173],journal:1273,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1273,1290,1299,1319],kaimingnorm:[1281,1285],kalman:1319,kalman_filt:1319,kalman_filter_step:1319,kalman_filter_upd:1319,keep:[40,41,952,997,1026,1116,1173,1273,1274,1319],keep_inner_v:[1169,1170,1171],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1169,1170,1171],keepdim:[40,41,457,487,498,499,893,897,900,901,905,906,907,908,909,1026,1116,1144,1147,1236,1238,1239,1240,1241,1242,1243,1244],kei:[15,16,17,40,41,42,43,911,916,952,964,1026,1043,1169,1170,1171,1173,1217,1220,1224,1254,1265,1266,1273,1279,1280,1290,1301,1306,1310],kept:[40,41,42,1169,1170,1171],kera:1319,kernel:[1254,1264],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,952,961,962,974,978,984,1026,1030,1050,1051,1052,1080,1173,1217,1221,1302,1303],keyword_color_dict:[40,41,42],kind:[873,874,875,1319],kwarg:[15,16,17,40,41,42,59,63,952,961,974,978,984,1026,1080,1173,1279,1280,1302,1303],kwarg_stateful_idx:[1302,1303],kwargs_clon:1173,kwargs_dist:1173,kwargs_uni:1173,label:[43,1267,1268,1269,1270],lamb:[1121,1128,1273,1306],lamb_upd:1121,lambda:[1173,1306,1309,1311,1315],lar:[1121,1128,1129,1273,1306],larger:[873,874,1026,1038],largest:[40,41,873,874,875,1026,1056],lars_upd:1121,last:[40,41,893,894,896,898,899,903,904,907,908,909,1026,1029,1045,1077,1102,1106,1144,1147,1236,1241,1243,1246,1251,1254,1264,1290,1300],later:[40,41,1026,1037],latest:[1290,1299],layer:[1121,1124,1126,1128,1130,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1271,1272,1273,1281,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1310,1312,1313,1319],layer_norm:1271,layernorm:[1273,1304],layerwis:[1121,1129,1306,1309],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1217,1218,1225],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1246,1247,1248],leaky_relu:[845,1246],learn:[905,906,1121,1124,1126,1128,1129,1130,1144,1149,1169,1170,1171,1172,1229,1235,1273,1306,1307,1308,1309,1310,1311,1316,1319],learnabl:[1271,1272,1304,1305],least:43,leav:[15,18,19,40,41,1217,1218,1219,1225,1226],left:[40,41,43,900,901,1144,1147,1236,1238,1239,1240,1241,1242,1243,1244,1273],leftmost:[40,41],len:1173,length:[40,41,42,1026,1029,1092,1103,1114],lenton2021ivi:1273,lenton:1273,less:[40,41,43,88,225,411,541,677,877,880,888,891,893,897,1173,1229,1233],less_equ:[88,411,541,677,877],less_util_node_str:1173,let:[1316,1319],level:1273,librari:[877,889,1273,1315,1319],lightweight:1273,like:[43,1121,1127,1229,1233,1273,1315,1316,1319],likewis:43,limit:[40,41,42,43,873,874,875,1026,1038,1039,1040],linalg:[29,1145,1146,1147,1148,1149,1150,1273],line:43,linear0:[1273,1315],linear1:1273,linear2:1315,linear:[1026,1058,1077,1144,1246,1247,1248,1249,1254,1262,1273,1290,1291,1292,1293,1294,1295,1296,1297,1315],linear_algebra:[498,499,500,501,893,894,895,896,897],linear_resampl:[138,306,457,594,731,1026],linearli:[1026,1058],link:[43,1273],linspac:[138,306,457,594,731,1026,1029],list:[15,18,19,40,41,400,401,402,405,867,868,869,872,898,899,907,908,909,952,961,962,971,972,974,975,976,978,981,982,996,1026,1029,1032,1034,1083,1101,1102,1111,1116,1169,1170,1171,1173,1217,1218,1219,1221,1225,1226,1254,1255,1256,1257,1258,1259,1260,1261,1273,1274,1279,1280,1290,1291,1292,1293,1294,1295,1296,1297],list_join:[40,41,42],list_stack:[40,41],liter:[893,897],littl:1316,load:[40,41],loaded_kwarg:1173,loader:1273,local:43,local_set:[1026,1066],locat:[43,1026,1076,1229,1230],log1p:[88,411,541,677,877],log2:[88,411,541,677,877],log:[815,877,887,893,895,1026,1079,1154,1173,1267,1268,1269,1270],logarithm:[877,887,888,893,895,1154,1165],logdet:[893,895],logic:[31,877,889,907,908,909,1152,1153,1273],logical_and:[368,812,1151],logical_not:[88,225,411,541,677,877],logical_or:[368,812,1151],logit:[1267,1270],logspac:[138,306,457,594,731,1026],look:[43,1316,1319],loop:[1169,1170,1171,1172],loss:[1268,1269,1270,1273,1315],loss_fn:[1273,1315],lot:1316,low:[40,41,505,1229,1231,1233],lower:[40,41,43,867,871,1026,1082,1229,1233],lower_depth:[1302,1303],lowest:[15,18,19,40,41,1217,1226,1229,1231],lstm:[1254,1264,1273,1290],lstm_updat:[43,1254],machin:[873,874,875,905,906,1144,1149,1229,1235,1273,1316,1319],made:43,mai:[877,886,889,903,904,1026,1029,1049,1053,1273,1316,1319],main:[867,871,893,894,1026,1068,1273],mainli:1273,maintain:[43,903,904],make:[43,505,952,1173,1273,1316],maml:[1169,1170,1171],maml_step:1169,manag:[952,1173],manhattan:[893,897],mani:[40,41,43,1026,1102,1273],manipulation_funct:[898,899],manner:[15,18,19,40,41,43,1217,1226],manual:[1217,1218,1225,1319],map:[40,41,42,952,961,1026,1076,1173,1217,1222,1223,1226,1290,1301,1315],map_cont:[40,41],map_nest_at_index:1217,map_nest_at_indic:1217,map_sequ:[40,41],mapper:[952,961,962,1173],mark:43,mask:[1254,1265,1266],master:43,match:[40,41,1026,1080],match_kwarg:1026,math:[33,504,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1173,1273],mathbb:[1144,1150],mathbf:[1144,1150],mathemat:[866,893,897],matmul:[43,306,457,594,731,1026,1319],matplotlib:1316,matric:[867,871,893,894,1254,1263],matrix:[40,41,867,871,893,894,1026,1028,1039,1081,1144,1145,1146,1147,1148,1149,1150,1254,1263,1290,1300],matrix_norm:[40,41,176,363,498,638,805,1144],matter:1273,max:[40,41,406,873,874,875,1026,1039,1040,1051,1082,1094,1095,1173,1236,1238,1306,1308],max_batch_s:[40,41],max_chunk_s:[952,996,1173],max_depth:[40,41,952,956,959,966,974,978,984,1026,1066,1173,1217,1226],max_dev_dim_step_ratio:952,max_freq:[1026,1058],max_length:[40,41],max_node_dim_step_ratio:1173,max_norm:[40,41,1026,1039,1040],max_split_factor_step_s:[952,1173],max_trust_ratio:[1121,1128,1306,1308],maxim:[1273,1316,1319],maximis:1273,maximum:[40,41,42,731,900,901,952,974,978,984,996,1026,1038,1039,1040,1058,1121,1128,1173,1217,1226,1236,1238],mayb:[15,18,19],mdi:1173,mean:[40,41,505,952,981,982,983,984,996,1026,1051,1169,1170,1171,1172,1173,1217,1221,1229,1232,1236,1239,1242,1244,1281,1315,1319],measur:[1254,1265,1290,1301],mech:1273,mechan:[1273,1319],medic:1319,member:43,memori:[952,968,991,996,998,1001,1173,1254,1264,1273],mention:43,merg:43,merge_with_upstream:43,meshgrid:[306,457,731,1026],messag:[1317,1318],meta:[35,1170,1171,1172,1273],method:[40,41,42,43,505,1026,1032,1043,1083,1094,1095,1121,1128,1129,1173,1217,1218,1225,1226,1273,1290,1301,1302,1303,1316],might:[1026,1049,1319],min:[40,41,116,406,440,571,707,873,874,875,893,897,905,1026,1051,1084,1094,1095,1104,1144,1149,1173,1236,1240],min_bas:[1026,1105],min_denomin:[1026,1104],min_dev_dim_s:952,min_node_dim_s:1173,min_sf_tune_step:[952,1173],min_unit_dev_tune_step:952,min_unit_node_tune_step:1173,mind:1273,mini:[1271,1272,1304,1305],minimum:[40,41,731,905,906,952,1002,1006,1026,1029,1031,1032,1038,1063,1064,1096,1097,1104,1105,1173,1236,1240],miss:[1306,1310],ml_framework:[1026,1029,1144,1149],mod:[1026,1057],mod_depth:[1302,1303],mod_height:[1302,1303],mod_with_top_mod_key_chain:[1302,1303],mode:[40,41,498,500,893,896,950,951,952,981,982,983,984,996,1144,1149,1173,1316],model:[1273,1315],modul:[40,41,42,59,1026,1085,1173,1273,1274,1276,1277,1278,1279,1280,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1304,1305,1312,1313,1319],moment:[1121,1123,1124,1128,1306,1307,1308],more:[43,898,899,1026,1106,1173,1273,1316,1319],more_util_node_str:1173,most:[40,41,43,1144,1149,1273,1319],move:[40,41,43,952,997,1173],much:[43,1273,1319],multi:[505,1026,1085,1254,1265,1290,1301],multi_head_attent:1254,multi_index_nest:1217,multi_map:[40,41],multi_nod:1173,multidev:[952,963,964,965,984],multidevcontain:[40,41],multidevic:[952,961],multidevit:[952,955,958,961,962,966],multidevitem:[952,954,957],multidevnest:[952,956,959],multiheadattent:[1273,1290],multinod:[1173,1177],multinodecontain:1173,multinodeit:1173,multinodeitem:1173,multinodenest:1173,multinomi:[182,372,505,644,829,1229],multipl:[40,41,907,908,909,1026,1080,1102,1144,1146,1236,1238,1239,1240,1241,1242,1244,1271,1272,1290,1300,1316],multipli:[40,41,1026,1046,1236,1241],multiprocess:[40,41,42,457,731,952,961,1026,1173],must:[40,41,42,43,867,868,869,870,871,872,877,878,879,880,881,882,883,885,886,888,889,890,891,893,894,897,898,899,903,904,905,906,907,908,909,911,929,930,936,952,981,982,983,984,996,1026,1029,1041,1043,1045,1053,1082,1084,1095,1106,1154,1159,1162,1173,1229,1234,1306,1310],mutabl:[1217,1219,1226],mutlidevic:[952,961],mutlinod:1173,mw_tm1:[1121,1124,1128],mx_concat:1273,mxn:[867,871,893,894],mxnet:[43,1273,1319],my_func:43,mymodel:1273,name:[43,950,951,1315],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1316],nan:[40,41,43,866,877,878,880,881,882,883,884,888,890,891,907,908,909,1026,1067,1117],nativ:[15,17,18,19,40,41,43,952,968,970,979,980,991,998,1001,1002,1007,1014,1015,1173,1273,1274,1279,1280],native_modul:[1279,1280],native_module_class:[1279,1280],nativearrai:[15,18,19,43,867,870,871,873,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,895,896,897,898,899,900,901,903,904,905,906,907,908,909,911,929,930,936,952,970,996,997,1002,1006,1012,1017,1018,1026,1027,1028,1029,1031,1032,1033,1034,1036,1038,1039,1040,1041,1042,1044,1045,1046,1047,1050,1051,1052,1053,1055,1056,1057,1058,1060,1061,1065,1067,1068,1069,1076,1077,1078,1079,1081,1082,1083,1084,1087,1088,1091,1092,1093,1094,1095,1100,1102,1103,1106,1108,1109,1111,1112,1113,1114,1116,1117,1118,1119,1120,1173,1217,1219,1226],natur:[877,887,893,895,1154,1165,1319],ncdhw:[1254,1259,1260,1290,1295,1296],nchw:[1254,1257,1258,1261,1290,1293,1294,1297],ncw:[1254,1255,1256,1290,1291,1292],ndarrai:[43,400,401,402,403,404,405,406,408,409,505,1026,1112],ndhwc:[1254,1259,1260,1290,1295,1296],nearest:[1026,1093],need:[43,1026,1039,1040,1254,1256,1258,1260,1273,1290,1292,1294,1296,1319],neg:[40,41,877,883,893,897,898,899,907,908,909,1236,1241,1243,1246,1248],negative_slop:1281,neither:1173,nest:[15,16,17,18,19,40,41,42,952,974,978,984,1026,1032,1111,1169,1170,1171,1173,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1302,1303,1306,1307,1308,1309,1310,1311],nested_indices_wher:1217,nested_map:[1173,1217],network:[1254,1263,1273,1274,1276,1290,1302,1303,1319],neural:[1254,1273,1276,1290,1315],never:43,new_node_percent_mem:1173,new_node_util:1173,new_node_utils_kei:1173,new_std:[1271,1272,1304,1305],newli:[43,950,951,1026,1036,1037],newlin:[40,41,42],newshap:[1026,1036,1092],next:[873,874,1173,1302,1303,1306,1307,1308,1309,1310,1311],nhwc:[1254,1257,1258,1261,1290,1293,1294,1297],node:[40,41,1217,1218,1225],node_clon:1173,node_dist:1173,node_dist_arrai:1173,node_dist_it:1173,node_in:1173,node_mapp:1173,node_str:1173,node_to_str:1173,node_util:1173,nodedistit:1173,nodedistitem:1173,nodedistnest:1173,nodemanag:[1173,1184],nodemapp:1173,nodemappermultiproc:1173,noinspect:[43,953,1003,1004,1005,1122,1173],non:[40,41,877,889,893,897,907,908,909,950,951,1002,1016,1302,1303,1306,1310,1316],none:[40,41,42,43,59,61,64,400,401,402,403,405,455,457,458,460,462,469,470,471,472,479,480,481,482,483,484,485,486,488,498,499,505,506,867,868,869,870,872,873,874,875,893,897,898,899,900,901,905,906,907,908,909,950,951,952,961,962,968,969,994,995,996,997,1002,1009,1010,1011,1026,1029,1032,1048,1049,1054,1059,1060,1061,1066,1068,1070,1071,1072,1073,1074,1078,1079,1085,1087,1088,1091,1094,1095,1096,1097,1102,1103,1104,1105,1114,1115,1120,1121,1124,1126,1128,1129,1130,1136,1137,1141,1144,1147,1149,1169,1170,1171,1172,1173,1217,1218,1221,1225,1226,1229,1230,1231,1232,1233,1236,1238,1239,1240,1241,1242,1243,1244,1254,1256,1258,1260,1263,1264,1265,1266,1271,1272,1279,1280,1281,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313],norm:[40,41,893,897,1026,1039,1040,1144,1147,1272,1273,1305,1306,1308],normal:[1229,1232,1271,1272,1304,1305],normalized_idx:[1271,1272],normalized_shap:[1304,1305],notat:[40,41,1236,1237],note:[43,1144,1149],noth:[40,41,1316],notimplementederror:1173,now:[40,41,43,952,997,1026,1027,1173,1273,1290,1301,1302,1303,1315,1316,1319],np_concat:1273,np_finfo:406,ns_tune_step:1173,num:[457,479,480,1026,1078,1079],num_arrai:[40,41],num_arrays_in_memori:1026,num_arrays_on_dev:952,num_band:[1026,1058],num_channel:[1290,1297],num_chunk:1173,num_chunks_floor:1173,num_class:[1229,1230],num_cpu_cor:952,num_gpu:[131,455,952,1173],num_head:[1254,1265,1290,1301],num_kei:[1254,1265,1266],num_lay:[1290,1299],num_or_size_split:[40,41,457,484,1026,1102],num_output:1173,num_queri:[1254,1265,1266],num_sampl:[457,478,505,506,1026,1077,1137,1138,1229,1230],num_task:[1169,1170,1171,1172],number:[40,41,42,866,873,874,875,877,880,893,895,896,907,908,909,950,951,952,988,989,990,1002,1013,1017,1018,1026,1029,1038,1042,1055,1058,1065,1068,1077,1078,1079,1082,1086,1091,1102,1109,1113,1117,1119,1169,1170,1171,1172,1173,1229,1230,1234,1236,1238,1239,1240,1242,1244,1254,1265,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1316,1319],numer:[43,877,880,883,884,885,889,911,930,936,1026,1063,1064,1096,1097,1104,1105,1154,1162,1281],numhead:[1254,1265],numpi:[40,41,43,400,401,402,403,404,405,406,408,409,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,893,896,1026,1112,1144,1149,1236,1237,1273,1315,1316,1319],nwc:[1254,1255,1256,1290,1291,1292],obj:[40,41],object:[40,41,42,59,406,873,874,952,1002,1006,1026,1029,1032,1121,1217,1220,1222,1223,1224,1227,1228,1229,1235,1281,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1302,1303],object_in:[457,460,1026,1032],observ:1173,obvious:43,occupi:[873,874,875,1026,1094,1095],off:[893,894,1026,1029],offer:1273,offset:[893,894,1271,1272],often:1316,old:[40,41],on_init:[1290,1301,1302,1303],onc:[43,952,996,1173,1229,1230,1273],one:[40,41,43,893,897,898,899,900,901,952,981,982,983,984,996,1002,1008,1026,1068,1080,1087,1094,1095,1103,1106,1144,1147,1173,1236,1237,1238,1239,1240,1241,1242,1243,1244,1273,1316,1319],one_hot:[138,457,594,731,1026],onearrai:[1026,1055],ones:[40,41,77,214,400,530,666,867,870,1026,1068,1087,1273],ones_lik:[77,214,400,530,666,867],ongo:43,onli:[40,41,43,505,877,889,898,899,952,1144,1149,1173,1217,1218,1219,1225,1306,1307,1308,1309,1310,1311,1315,1316],onlin:[43,1273],onto:[952,981,982,997,1173,1217,1221,1226],oom:[952,1173],open:[1026,1029,1229,1233,1273,1319],opencv:1316,oper:[40,41,1026,1035,1050,1051,1052,1078,1079,1107,1121,1124,1126,1128,1129,1130,1151,1152,1153,1254,1255,1256,1257,1258,1259,1260,1261,1263,1273,1274],operand:[40,41,877,878,880,881,882,888,890,891,1236,1237],oppos:[1026,1058],optim:[952,1121,1124,1126,1128,1129,1130,1169,1170,1171,1172,1173,1273,1307,1308,1309,1311,1315,1319],optimizer_upd:1121,option:[15,18,19,40,41,42,43,400,401,402,403,405,867,868,869,870,872,893,897,898,899,900,901,905,906,907,908,909,950,951,952,961,962,970,974,975,976,977,978,981,982,983,984,991,994,995,996,997,1001,1002,1007,1012,1016,1025,1026,1028,1029,1031,1032,1039,1040,1041,1046,1048,1049,1058,1059,1060,1061,1065,1067,1068,1075,1077,1078,1079,1080,1083,1085,1087,1088,1091,1094,1095,1098,1100,1102,1103,1104,1105,1106,1114,1116,1117,1120,1121,1124,1126,1127,1128,1129,1130,1132,1137,1141,1144,1147,1149,1169,1170,1171,1172,1173,1217,1218,1219,1221,1225,1226,1229,1230,1236,1238,1239,1240,1241,1242,1243,1244,1246,1247,1251,1254,1262,1263,1265,1266,1267,1268,1269,1270,1271,1272,1279,1280,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1316],ord:[893,896,897],order:[40,41,42,43,893,897,898,899,903,904,1121,1124,1126,1128,1129,1130,1144,1147,1169,1170,1171,1312,1313],ordered_node_util_kei:1173,org:1319,organ:43,origin:[40,41,42,1026,1092,1120,1144,1147],other:[40,41,43,911,913,914,919,921,922,926,928,929,930,931,932,934,936,937,938,939,940,941,943,944,945,947,948,949,950,951,1026,1028,1029,1068,1121,1125,1229,1233,1273,1315,1316,1319],other_i:[43,911,930,936],otherwis:[15,16,17,18,19,40,41,877,883,884,893,897,900,901,907,908,909,952,969,1002,1009,1010,1011,1026,1035,1114,1115,1118,1121,1127,1132,1136,1169,1170,1171,1173,1236,1238,1239,1240,1242,1244],our:[43,1273,1319],out:[43,505,867,869,871,872,873,874,875,877,878,879,880,881,882,883,884,885,887,888,889,890,891,893,894,895,897,898,899,900,901,903,904,907,908,909,911,930,1026,1029,1154,1158,1254,1262,1264,1273,1290,1298],out_feat_dim:[1254,1265],out_featur:[1254,1262,1263],out_i:[877,883,884],outdat:1319,outer:[1169,1170,1171,1172],outer_batch_fn:[1169,1170,1171],outer_batch_shap:[1254,1263],outer_cost_fn:[1169,1170,1171],outer_v:[1169,1170,1171],outlin:1316,output:[40,41,43,867,868,869,870,872,898,899,952,961,962,996,1026,1029,1037,1059,1068,1091,1109,1121,1125,1154,1159,1173,1229,1231,1232,1233,1254,1256,1258,1260,1262,1264,1265,1266,1273,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301],output_ax:[952,996,1173],output_axi:1173,output_channel:[1290,1291,1292,1293,1294,1295,1296,1299,1300],output_queu:1173,output_shap:[1254,1256,1258,1260,1290,1292,1294,1296],outsid:[1026,1038],over:[40,41,893,897,907,908,909,1144,1147,1229,1233,1236,1238,1239,1240,1242,1244,1271,1272,1304,1305],overal:1316,overflow:[1026,1029],overhead:1316,overrid:[1026,1087,1120],overriden:[1306,1310],overwrit:[40,41,952,996,1173],overwrite_at_key_chain:[40,41],own:[1273,1316,1319],packag:[43,1316],pad:[1026,1042,1058,1119,1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297],pad_width:[457,1026,1042,1119],page:1273,pair:[1254,1266],parallel:[952,961,962,1173],parallelis:[952,961,962,1173],param:[40,41,42,457,470,471,867,868,870,900,901,905,906,952,996,1026,1027,1060,1061,1087,1088,1173,1302,1303,1315],paramet:[15,16,17,18,19,40,41,42,43,867,868,870,877,886,893,894,896,905,906,911,929,930,936,950,951,952,961,962,968,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,991,994,995,996,997,998,1001,1002,1006,1007,1008,1012,1013,1014,1015,1016,1017,1018,1025,1026,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1044,1045,1046,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1065,1067,1068,1069,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1088,1091,1092,1093,1094,1095,1096,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1132,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1279,1280,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1315],parameter:[1229,1232,1233],pardo:1273,pars:[1026,1043],part:[867,871,1121,1124,1126,1128,1129,1130,1154,1158,1273,1302,1303,1316],partial:[40,41,43,1302,1303],particl:1319,particular:[43,1319],pass:[40,41,42,43,952,961,996,1002,1007,1026,1037,1121,1135,1169,1170,1171,1173,1279,1280,1302,1303,1306,1310,1312,1313],pattern:[40,41,1026,1050,1051,1052],peopl:43,per:[952,1173,1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297],percent_used_mem_on_dev:952,percent_used_mem_on_nod:1173,percentag:[952,991,1173],perf_count:1173,perform:[40,41,43,907,908,909,952,1026,1031,1046,1050,1051,1052,1071,1072,1073,1077,1078,1079,1121,1124,1126,1128,1129,1130,1137,1138,1169,1170,1171,1172,1173,1217,1222,1223,1236,1238,1239,1240,1241,1242,1243,1244,1246,1251,1254,1262,1264],period:43,permissable_step:1173,permit:43,permut:[505,1026,1108,1114],perpendicular:[1026,1045],person:[43,1273],physci:1319,pickl:[40,41,1173],pickle_filepath:[40,41],pinv:[363,805,1144],pip:1273,pipelin:1315,pkk:1319,pkkm1:1319,pkm1km1:1319,place:[40,41,43,867,868,869,870,872,952,997,1026,1055,1059,1071,1072,1073,1173,1306,1307,1308,1309,1310,1311],placehold:[43,1217,1226],pleas:[43,505,1144,1149],point:[43,866,867,868,869,872,873,874,877,878,880,881,882,888,890,891,893,897,1002,1017,1026,1029,1154,1162],popul:[40,41,1229,1230],popular:1319,population_s:[505,506,1229,1230],portabl:[1273,1274],posit:[15,16,17,873,874,877,883,907,908,909,952,974,978,984,1026,1027,1029,1055,1058,1173,1229,1234,1279,1280],possibi:[40,41],possibl:[43,1026,1080,1111,1137,1142,1319],post:[1271,1272],post_shap:[40,41],power:[43,911,936,942,1026,1063,1096,1105,1281],practic:1273,pre:[952,1173,1273],pre_shap:[40,41],precis:[873,874,877,891],pred:[1267,1268,1269,1270],predict:[1267,1268,1269,1270,1319],preprint:1273,present:[40,41],preserv:[40,41,42,898,899,1121,1132],preserve_typ:[40,41,489,492,1121,1132],press:1273,prevent:[43,1121,1123,1124,1128,1173,1306,1307,1308],prevet:43,previou:[1121,1124,1128],previous:[1026,1037],prime:1273,print:[40,41,42,952,992,1026,1089,1273,1315],print_all_arrays_in_memori:1026,print_all_arrays_on_dev:952,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1306,1310],prob:[505,506,1229,1230,1254,1262,1290,1298],probabl:[1229,1230,1254,1262,1290,1298],problem:[43,1319],process:[43,952,961,962,991,1001,1026,1085,1173],process_specif:[952,991,1001,1173],prod:[40,41,1026,1051],produc:[952,961,962,1173],product:[40,41,1026,1045,1046,1081,1236,1237,1254,1265,1266,1290,1301],profil:[131,300,455,587,723,952,1173],progress:43,project:[1273,1315,1316,1319],promot:[43,877,878,879,881,882,888,890,891,893,897,911,936,1154,1162],prompt:1273,properli:43,properti:[40,41,406,952,964,1173,1302,1303,1306,1307,1308,1309,1311],provid:[40,41,43,898,899,900,901,907,908,909,950,951,952,969,1002,1009,1010,1011,1016,1025,1026,1049,1087,1095,1120,1121,1124,1126,1128,1129,1130,1136,1173,1273,1290,1299,1306,1307,1308,1309,1310,1311,1316],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1144,1148],pull:[1273,1274],pure:[40,41,1273,1319],purpos:[43,1319],put:1173,pybroadexcept:1173,pyprotectedmemb:1173,pyshadowingbuiltin:43,pyshadowingnam:[953,1003,1004,1005,1122,1173],python:[40,41,952,991,1001,1026,1029,1173,1273],pytorch:[1121,1124,1126,1128,1129,1130,1144,1149,1273,1306,1307,1308,1309,1310,1311,1315,1316,1319],pyunresolvedrefer:1173,quadrant:[1154,1159],qualiti:43,queri:[40,41,911,925,946,952,985,995,1173,1254,1265,1266,1290,1301],query_dim:[1290,1301],query_kei:[40,41],queue:[40,41,42,952,961,962,1026,1090,1098,1173],queue_class:[952,961,962,1173],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1026,1173],quick:[505,1273],quickli:[43,1315],radian:[877,881,890,1154,1155,1157,1159,1167],rai:[1154,1155],rais:[40,41,43,907,908,909,911,936,1026,1035,1063,1096,1103,1105,1115,1173,1302,1303,1306,1310],ram:[952,991,998,1001,1173],randint:[182,372,505,644,829,1229],random:[37,40,41,506,1230,1231,1232,1233,1234,1235,1273],random_crop:1137,random_norm:[182,372,505,644,829,1229],random_uniform:[182,372,505,644,829,1229],randomli:[505,1137,1141,1254,1262,1290,1298],rang:[505,1026,1029,1078,1079,1154,1159,1173,1273,1315,1319],rank:[893,897,907,908,909,1026,1042,1116,1119],rate:[1121,1124,1126,1128,1129,1130,1169,1170,1171,1172,1290,1301,1306,1307,1308,1309,1310,1311],rather:[40,41,43,952,996,1026,1029,1075,1121,1127,1173],ratio:[952,1121,1128,1137,1142,1173,1306,1308],raw:[40,41,1144,1149],raw_delta:1173,reach:[43,952,974,978,984,1173,1217,1226],read:[40,41],readi:[1173,1315],real:[1154,1155,1158],realiti:1316,rearrang:[40,41,1026,1050,1052],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1169,1171],receiv:[43,952,961,962,1026,1030,1080,1173,1290,1300],receivess:[952,1173],receivng:[1169,1172],recev:[1169,1170,1171],recognit:1319,recommend:[877,889,1273],rectifi:[1246,1248,1249],recurr:[1254,1264],recurrent_bia:[1254,1264],recurrent_kernel:[1254,1264],recurs:[40,41,1217,1218,1219,1225,1226],redefin:43,reduc:[40,41,900,901,907,908,909,952,996,1026,1051,1144,1149,1173,1236,1238,1239,1240,1241,1242,1243,1244],reduce_max:[40,41,189,377,507,649,836,1236],reduce_mean:[40,41,189,377,507,649,836,1236,1273,1315],reduce_min:[40,41,189,377,507,649,836,1236],reduce_prod:[40,41,189,377,507,649,836,1236],reduce_std:[40,41,377,1236],reduce_sum:[40,41,189,377,507,649,836,1173,1236],reduce_var:[40,41,189,377,507,649,836,1236],reduct:[39,40,41,457,482,483,907,908,909,1026,1051,1094,1095,1237,1238,1239,1240,1241,1242,1243,1244,1273],refactor:43,refer:[43,877,887,907,908,909,1121,1123,1124,1144,1150,1290,1300,1319],reflect:43,reflected_oper:[0,13,14],regard:[952,1173],regardless:[40,41,950,951],register_paramet:1315,reimplement:1319,rel:[893,894,898,899,903,904,1121,1124,1126,1128,1129,1130],rel_slice_obj:1173,relat:43,relev:[1306,1307,1308,1309,1310,1311],relu:[845,1246,1247,1248,1273,1315],remain:[43,1026,1092,1217,1221],remaind:[40,41,1026,1057,1102],remov:[40,41,43,893,894,900,901,1026,1103,1169,1170,1171],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,898,899],rep:[1026,1109],repeat:[40,41,43,306,731,1026,1052,1109,1173,1316],repeated_config_check:[952,1173],repeatedli:[1217,1224],repetit:[40,41,1026,1091,1109],replac:[40,41,43,505,506,1026,1038,1094,1095,1229,1230],repo:[43,1273],repositori:43,repres:[43,877,878,882,893,895,1002,1008,1013,1254,1263],represent:[40,41,42,43,866,873,874,875,877,879,952,979,980,1002,1008,1014,1015,1026,1101,1111,1173],reptil:[1169,1172],reptile_step:1169,request:[1273,1274],requir:[43,877,891,950,951,1002,1006,1026,1029,1032,1279,1280],resampl:[1026,1077],reserv:43,reshap:[40,41,43,505,731,1026],reshape_lik:[40,41],respect:[877,879,885,886,911,930,1026,1053,1121,1123,1124,1125,1126,1128,1129,1130,1144,1149,1154,1162,1169,1170,1171,1172],respond:43,respons:[43,1173],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,897,900,901,907,908,909,911,929,930,936,952,961,1026,1029,1053,1094,1095,1106,1144,1147,1151,1152,1153,1154,1162,1173,1236,1238,1239,1240,1241,1242,1243,1244,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1273],ret:1173,ret_dict:1173,ret_fn:[952,961,962,1173],retain:[1121,1125],retain_grad:[489,490,1121,1125],retreiv:1173,retrn:[1026,1101],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1169,1170,1171,1172],return_sequ:[1290,1299],return_st:[1290,1299],rev:[1026,1049],revers:[40,41,898,899,1026,1049,1114],review:43,right:[40,41,43],rk_e:1319,robot:1273,ronald:1273,root:[43,877,891],round:[306,457,731,877,880,891,1026,1029,1173],row:[1026,1068,1229,1230],rule:[43,911,936,1026,1029,1154,1162],run:[43,952,961,1121,1123,1124,1128,1169,1170,1171,1172,1173,1273,1274,1290,1301,1302,1303],safe:[952,961,1173],safety_factor:[952,1173],same:[15,16,17,40,41,43,867,870,871,877,880,893,894,896,898,899,900,901,903,904,952,961,962,996,997,1002,1006,1026,1027,1041,1056,1057,1060,1061,1087,1093,1094,1095,1106,1120,1121,1127,1132,1154,1158,1169,1170,1171,1173,1236,1237,1254,1255,1256,1257,1258,1259,1260,1261,1273,1290,1291,1292,1293,1294,1295,1296,1297,1315,1319],same_arrai:[40,41],sampl:[1026,1077,1137,1138,1229,1230,1232,1233,1254,1262,1273,1290,1298],satisfi:[1026,1032,1144,1146,1150],save:[40,41,1026,1099,1110,1137,1139,1302,1303],save_dir:[455,456,952,967,1173],save_weight:[1302,1303],scalar:[893,897,1026,1038,1087,1113,1117],scale:[952,994,995,1121,1129,1173,1254,1262,1265,1266,1271,1272,1290,1298,1301,1306,1309],scaled_dot_product_attent:1254,scatter:[1026,1087,1094,1095],scatter_flat:[138,306,457,594,731,1026],scatter_nd:[138,306,457,594,731,1026],scene:[1121,1124,1126,1128,1129,1130],schemat:1273,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[900,901],second:[40,41,877,879,885,886,893,894,952,983,1026,1033,1045,1053,1090,1098,1108,1121,1123,1124,1128,1169,1171,1173,1306,1307,1308],secondli:1319,sector:[877,878],see:[43,59,406,455,456,505,877,879,885,893,897,907,908,909,911,929,930,936,952,964,965,966,967,1002,1026,1029,1078,1079,1121,1154,1162,1273,1281,1283,1284,1286,1287,1289],seed:[40,41,182,505,829,1229],seed_valu:[40,41,505,1229,1234],seem:1273,seen_set:[1026,1066],select:[1026,1032,1103,1316,1319],self:[40,41,43,59,406,455,456,911,930,936,952,964,965,966,967,1002,1121,1173,1273,1281,1283,1284,1286,1287,1289,1306,1310,1315,1319],self_i:[911,930],sent:1173,seper:[43,1026,1058],seq:[40,41,42,1236,1237,1302,1303],sequenc:[15,16,17,40,41,42,43,505,950,951,952,961,962,971,972,973,974,975,976,977,978,981,982,996,1002,1006,1026,1029,1032,1034,1036,1041,1042,1068,1080,1083,1088,1091,1092,1095,1102,1106,1109,1114,1119,1121,1125,1137,1141,1142,1144,1147,1173,1217,1228,1229,1231,1233,1236,1238,1239,1240,1241,1242,1243,1244,1254,1255,1256,1257,1258,1259,1260,1261,1271,1272,1279,1280,1290,1291,1292,1293,1294,1295,1296,1297,1299,1302,1303,1304,1305,1306,1310,1312,1313],sequenti:1273,seri:43,set:[15,18,19,40,41,900,901,903,904,952,981,982,994,995,996,1026,1028,1048,1068,1096,1097,1098,1099,1121,1124,1126,1127,1128,1129,1130,1144,1147,1173,1217,1218,1225,1227,1228,1229,1230,1234,1236,1238,1239,1240,1241,1242,1243,1244,1273,1290,1299,1306,1307,1308,1309,1310,1311,1316,1319],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:952,set_default_dtyp:1002,set_default_float_dtyp:1002,set_default_int_dtyp:1002,set_default_nod:1173,set_exception_debug_mod:44,set_framework:[40,41,43,59,1173,1273,1315,1316,1319],set_ivy_backend:[40,41],set_min_bas:1026,set_min_denomin:1026,set_nest_at_index:1217,set_nest_at_indic:1217,set_queue_timeout:1026,set_split_factor:[952,1173],set_stat:[1306,1307,1308,1309,1310,1311],set_tmp_dir:1026,set_with_grad:1121,setter:1173,sever:1319,sgd:[1273,1306],shape0:1173,shape:[40,41,43,400,401,402,405,457,469,483,505,731,867,868,869,870,871,872,893,894,898,899,900,901,903,904,952,964,1002,1006,1026,1027,1036,1041,1042,1055,1056,1057,1059,1061,1065,1068,1087,1088,1091,1092,1093,1094,1095,1101,1103,1106,1119,1120,1137,1141,1144,1146,1149,1154,1158,1159,1173,1229,1231,1232,1233,1236,1237,1254,1256,1258,1260,1290,1292,1293,1294,1295,1296,1297,1304,1305],shape_slic:[40,41],shape_to_tupl:1026,share:[40,41,1273,1316],shift:1173,should:[40,41,42,43,505,867,871,877,878,879,880,881,882,883,884,885,888,889,890,891,893,894,897,900,901,911,929,930,936,950,951,952,1026,1036,1037,1043,1087,1092,1121,1124,1126,1128,1129,1130,1154,1162,1173,1236,1237,1273],show:[40,41,1273,1319],show_mod_in_top_mod:[1302,1303],show_structur:[1302,1303],show_sub_contain:[40,41],show_v:[1302,1303],show_v_in_top_v:[1302,1303],shown:[40,41],shp:1173,shuffl:[40,41,182,505,829,1229],shuffle_h5_fil:[40,41],side:43,sigmoid:[845,1246,1273,1315],sign:[893,895],signatur:[43,59,406,455,456,457,489,494,498,502,503,505,952,964,965,966,967,1002,1121,1281,1283,1284,1286,1287,1289],signific:1319,similar:[43,1254,1265,1290,1301],similarli:[1144,1149],simpl:[43,1026,1054,1273,1316,1319],simpler:43,simplest:1316,simpli:[40,41,43,1273,1316,1319],simultan:1273,sin:[88,225,411,541,677,877,1026,1058,1154,1167,1316],sinco:1316,sine:[877,878,890,1154,1157,1166],singl:[40,41,950,951,952,961,962,981,982,983,984,1026,1103,1113,1117,1137,1142,1173,1229,1232,1233,1236,1238,1239,1240,1241,1242,1243,1244,1273,1316,1319],singleton:[893,897,907,908,909],singular:[893,896],sinh:[815,1154],siren:[1273,1281],situat:43,size:[40,41,42,457,482,893,894,896,900,901,907,908,909,952,975,976,977,978,994,995,996,1026,1029,1036,1078,1079,1094,1102,1137,1141,1144,1147,1173,1229,1230,1232,1233,1236,1238,1239,1240,1241,1242,1243,1244,1290,1291,1292],size_ordered_arrai:[40,41],skew:[1144,1150],skinv:1319,skip:[40,41],slice:[40,41,1026,1060,1061,1173,1217,1224],slice_kei:[40,41],slice_obj:[40,41,1173],slice_via_kei:[40,41],slide:[1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297],slodget:893,slogdet:[235,428,558,694],slope:[1246,1248],small:[1267,1268,1269,1270,1271,1272,1273,1304,1305,1316],smaller:[1026,1038],smallest:[40,41,873,874,875,877,880,1026,1031],smallest_norm:[406,873,874],softmax:[198,516,845,1246,1254,1265,1266],softplu:[845,1246],solut:43,solv:1319,some:[40,41,43,1026,1029,1121,1123,1124,1126,1128,1129,1130,1135,1254,1262,1273,1290,1298,1316,1319],some_backend:43,some_namespac:43,someth:[43,1319],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,893,896,904,1173],sort_by_kei:[40,41],sorting_funct:[903,904],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,400,401,402,403,404,405,406,408,409,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,503,504,505,506,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,898,899,900,901,903,904,905,906,907,908,909,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,954,955,956,957,958,959,961,962,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1276,1277,1278,1279,1280,1281,1283,1284,1286,1287,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1317,1318,1319],space:[1026,1029,1058,1078,1079],spars:[1267,1270],sparse_cross_entropi:1267,spawn:[1026,1085],special:[43,877,878,880,881,882,888,890,891],specif:[40,41,43,877,889,952,994,1026,1043,1050,1051,1052,1085,1169,1170,1171,1172,1173,1229,1235,1273,1302,1303,1315,1316],specifc:[1229,1230],specifi:[40,41,43,867,868,869,871,872,893,894,897,898,899,900,901,903,904,907,908,909,952,971,972,973,974,975,976,977,978,981,982,986,988,992,995,996,997,1002,1006,1008,1026,1029,1031,1032,1038,1041,1042,1059,1060,1061,1067,1078,1079,1106,1116,1119,1144,1147,1173,1217,1222,1223,1227,1228,1236,1237,1238,1239,1240,1241,1242,1243,1244],sphinx:43,split:[40,41,138,306,457,594,731,952,961,975,976,977,978,994,995,996,1026,1080,1173],split_arg:1173,split_factor:[952,961,1173],split_func_cal:[952,1173],split_siz:1173,spread:[952,984,1173],sqrt:[88,225,411,541,677,877,893,897],squar:[877,891,893,895,1026,1068,1144,1146],squeez:[138,306,457,594,731,1026],stabil:[903,904,1026,1104,1105],stabl:[903,904,1026,1063,1064,1096,1097,1104,1105],stable_divid:1026,stable_pow:1026,stack:[40,41,306,731,867,871,893,894,1026,1137,1142,1217,1218,1225,1290,1299],stack_imag:[172,359,494,634,801,1137],stacked_dim_s:1173,stage:43,standard:[40,41,873,874,1229,1232,1236,1242,1271,1272,1273,1274,1304,1305],start:[40,41,43,455,456,457,458,479,480,505,952,967,1026,1029,1078,1079,1173,1273,1316],starting_index:[40,41],starting_split_factor:[952,1173],state:[1173,1254,1264,1273,1276,1277,1278,1279,1280,1281,1283,1284,1286,1287,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1315],statement:1316,static_argnam:[457,462,950,951],static_argnum:[457,462,950,951],statistical_funct:[905,906],std:[505,1229,1232],step:[40,41,457,458,952,1026,1029,1078,1079,1121,1123,1124,1126,1128,1129,1130,1169,1170,1171,1172,1173,1273,1306,1307,1308,1309,1310,1311,1315,1319],stephen:1273,stick:1273,still:[40,41,43],stochast:[1306,1311],stop:[40,41,455,456,457,458,479,480,952,967,996,1026,1029,1078,1079,1121,1124,1126,1128,1129,1130,1132,1169,1170,1171,1172,1173,1306,1307,1308,1309,1310,1311],stop_gradi:[40,41,354,489,629,795,952,996,1121,1124,1126,1128,1129,1130,1169,1170,1171,1172,1173,1306,1307,1308,1309,1310,1311],stopiter:1173,store:[40,41,1026,1058,1102,1121,1135,1302,1303],store_var:[1302,1303],str:[15,16,17,40,41,42,43,400,401,402,403,405,406,408,409,867,870,873,874,875,950,951,952,961,962,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,996,1002,1007,1008,1013,1014,1015,1016,1017,1018,1025,1026,1032,1048,1050,1051,1052,1083,1085,1088,1094,1095,1144,1147,1149,1169,1170,1171,1172,1173,1217,1221,1236,1237,1279,1280,1290,1301,1302,1303],str_to_nod:1173,straight:1316,strength:[1273,1319],stride:[1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297],string:[40,41,43,952,968,970,979,980,985,991,997,998,1001,1002,1006,1012,1014,1015,1016,1025,1026,1029,1032,1048,1068,1088,1120,1173,1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297,1302,1303],structur:[40,41,42,43,1026,1043],structural_diff:[40,41],style:43,sub:[40,41,43,893,894,952,975,976,981,982,983,984,1026,1102,1169,1170,1171,1172,1173],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1173,sub_mod:[1302,1303],sub_modul:[1312,1313],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1273,1274,1304,1305,1312,1313],subsequ:43,subset:43,substr:[40,41],suffici:[1144,1149],suggest:1273,suitabl:[1137,1142],sum:[40,41,457,482,483,893,897,952,981,982,983,984,996,1026,1047,1051,1094,1095,1173,1236,1237,1243],summat:[40,41,1236,1237],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,110,112,115,117,119,120,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,360,361,362,364,365,366,367,369,370,373,374,375,376,378,379,380,381,382,383,384,385,388,390,391,392,393,394,395,396,401,402,403,404,405,407,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,429,430,431,432,434,436,439,441,443,444,456,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,495,496,497,499,500,501,504,506,508,509,510,511,512,513,514,517,518,520,521,522,523,524,525,526,531,532,533,534,535,537,538,539,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,559,560,561,562,563,565,567,570,572,574,575,583,588,589,590,591,592,593,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,630,631,632,633,635,636,637,639,640,641,645,646,647,648,650,651,652,653,654,655,656,660,661,662,667,668,669,670,671,673,674,675,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,695,696,697,698,699,701,703,706,708,710,711,719,724,725,726,727,728,729,730,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,796,797,798,799,800,802,803,804,806,807,808,809,810,811,813,814,816,817,818,819,820,821,822,823,824,825,826,827,828,830,831,832,833,834,835,837,838,839,840,841,842,843,846,847,848,849,850,851,852,854,855,857,858,859,860,861,862,863,868,869,870,871,872,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,894,895,896,897,899,901,904,906,908,909,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,951,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1170,1171,1172,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1272,1273,1277,1278,1280,1282,1283,1284,1285,1286,1287,1288,1289,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1305,1306,1307,1308,1309,1310,1311,1313,1314,1315,1316,1318,1319],supports_inplac:1026,suppos:1319,sure:43,svd:[105,235,428,558,694,893],swap:[40,41,1026,1108],swapax:[40,41,594,731,1026,1319],symmetr:[1144,1150],syntax:[455,457,489,494,498,502,503,505],tab:1273,take:[43,1026,1077],taken:[43,893,894,1236,1238,1239,1240,1242,1244],tan:[815,1154,1158],tangent:[1154,1158,1159,1160,1167,1168,1246,1253],tanh:[815,845,1154,1246],target:[40,41,952,968,971,972,973,974,975,976,977,978,981,982,983,984,997,1173,1273],target_dict:[40,41],task:[43,1169,1170,1171,1172],team:[43,1319],templat:1273,temporari:[1026,1099,1110],tensor:[40,41,43,457,482,483,952,970,1002,1012,1026,1029,1031,1036,1078,1079,1082,1084,1087,1088,1092,1094,1095,1102,1120,1173,1229,1230,1231,1254,1262,1264,1273,1290,1298,1300,1306,1307,1308,1309,1310,1311,1315,1316],tensorflow:[43,1144,1149,1254,1256,1258,1260,1273,1290,1292,1294,1296,1316,1319],term:[40,41,43,1254,1264,1273,1290,1300],termcolor:[40,41,42],termin:[40,41,42,1173],test:[43,877,883,884,907,908,909,1002,1017,1018],test_array_api:43,tf_concat:1273,than:[40,41,43,873,874,877,880,888,891,893,897,898,899,952,996,1026,1029,1038,1056,1075,1082,1103,1106,1121,1127,1173,1229,1233,1273,1316],thei:[40,41,43,1154,1159,1169,1170,1171,1229,1230,1273,1312,1313,1316],them:[1273,1319],themselv:[1217,1218],therefor:43,thi:[40,41,42,43,877,889,893,895,900,901,952,974,978,984,991,996,1001,1026,1029,1058,1090,1092,1098,1121,1124,1126,1127,1128,1129,1130,1135,1144,1147,1173,1217,1221,1226,1236,1238,1239,1240,1241,1242,1243,1244,1254,1263,1273,1302,1303,1306,1307,1308,1309,1310,1311,1315,1316,1319],thing:[43,1273],those:[40,41,43,893,896,1026,1038,1121,1135,1173],though:43,thought:43,threshold:[1026,1082,1084],through:[40,41,43],tick:43,tickbox:43,tile:[306,594,731,1026],time:[43,1026,1109,1121,1124,1128,1169,1170,1171,1172,1173,1229,1230,1254,1264,1290,1301,1302,1303,1319],timeout:[40,41,42,952,961,962,1026,1090,1098,1173],timestep:[1254,1264,1290,1299],titl:[43,1273],tmp_dir:1026,tmp_dr:[1026,1099],to_appli:[40,41],to_clon:[952,1173],to_dev:[40,41,131,300,455,587,723,952],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[952,1173],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1273],to_ivy_modul:[200,853,1273,1279],to_json:[40,41],to_kv_fn:[1254,1265],to_kv_v:[1254,1265],to_list:[40,41,457,731,1026],to_multi_dev:[40,41],to_mut:[1217,1219,1226],to_n:[15,40,41,1273],to_nod:1173,to_numpi:[40,41,457,731,1026,1273,1315],to_out_fn:[1254,1265],to_out_v:[1254,1265],to_q_fn:[1254,1265],to_q_v:[1254,1265],to_raw:[40,41],to_scalar:[457,731,1026],todo:[1173,1273,1274],togeth:[40,41,1312,1313],tool:[1273,1316],top_mod:[1302,1303],topic:1319,torch:[43,950,951,1273,1315,1316,1319],torch_concat:1273,torchfcmodel:1315,total:[40,41,42,952,998,1173],total_mem_on_dev:952,total_mem_on_nod:1173,tpu:[952,999,1173],tpu_is_avail:[455,587,723,952,1173],trace:[40,41,1026,1075],track:[43,952,1173,1217,1226,1302,1303],track_submod_call_ord:[1302,1303],track_submod_ret:[1302,1303],trail:[1304,1305],train:[1121,1123,1124,1128,1273,1274],trainabl:[1121,1127,1273,1274,1279,1280,1302,1303,1312],trainer:1273,tran:1319,transform:[1254,1262,1263],transpos:[40,41,138,306,457,731,952,983,1026,1173,1254,1256,1258,1260,1290,1292,1294,1296],travers:[15,18,19,40,41,1217,1226],treat:[40,41,950,951],tri:[40,41],triangular:[867,871],trigonometr:[1154,1155,1158],tril:[77,214,400,530,666,867],trim_kei:[40,41],trust:[1121,1128,1306,1308],truth:[877,885,886,911,929,930,1026,1053,1151,1152,1153],try_else_non:1026,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[952,1173],tune_dev_alloc:952,tune_dev_split:952,tune_node_alloc:1173,tune_node_split:1173,tune_step:[952,1173],tupl:[15,16,17,18,19,40,41,43,400,401,402,405,867,868,869,872,893,896,897,898,899,905,906,907,908,909,950,951,1026,1042,1058,1059,1101,1119,1173,1217,1218,1219,1220,1222,1223,1224,1225,1226,1227,1228,1229,1231,1236,1238,1239,1240,1241,1242,1243,1244],tutori:43,two:[40,41,867,871,893,894,895,896,1026,1029,1033,1045,1081,1108,1144,1147],type:[15,18,40,41,42,43,59,408,409,455,456,867,868,869,870,871,872,874,875,877,878,879,880,881,882,883,884,885,886,888,889,890,891,893,894,897,898,899,903,904,907,908,909,911,929,930,936,952,964,965,966,967,979,980,984,996,1002,1006,1007,1008,1012,1013,1014,1015,1016,1017,1018,1025,1026,1027,1029,1032,1041,1043,1053,1056,1057,1059,1068,1075,1087,1088,1093,1107,1117,1120,1121,1127,1132,1154,1162,1173,1273,1281,1283,1284,1286,1287,1289,1302,1303,1316],types_to_iteratively_nest:[40,41,42],uint8:[1137,1139,1143],uint8_img_to_float_img:1137,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[877,879],underwai:43,unecessari:43,unfairli:43,unif:1173,unifi:[40,41,952,981,982,983,984,996,1173,1273],uniform:[40,41,1229,1230,1232,1233,1281,1283,1284,1287,1288],uniformli:[1229,1231,1233],unify_arrai:1173,unify_it:1173,unify_nest:1173,uniniti:[867,868],union:[15,18,19,40,41,43,400,401,402,403,405,406,408,409,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,893,895,896,897,898,899,900,901,903,904,905,906,907,908,909,911,929,930,936,950,951,952,970,975,976,977,978,996,997,1002,1006,1007,1008,1012,1013,1014,1015,1016,1017,1018,1025,1026,1027,1028,1029,1031,1032,1033,1034,1036,1038,1039,1040,1041,1042,1044,1045,1046,1047,1050,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1065,1067,1068,1069,1076,1077,1078,1079,1081,1082,1083,1084,1087,1088,1091,1092,1093,1094,1095,1100,1101,1102,1103,1106,1108,1109,1111,1112,1113,1114,1116,1117,1118,1119,1120,1173,1217,1218,1219,1225,1226],uniqu:[952,961,962,1169,1170,1171,1172,1173,1217,1221],unique_kwarg:1173,unit:[43,952,1154,1155,1157,1173,1246,1247,1248,1249],unitari:[893,896],unless:[1026,1087,1120],unlik:[952,1173],unnorm:[1229,1230],unpack:[1026,1116],unrol:[1254,1264],unset:1316,unset_debug_mod:44,unset_default_devic:952,unset_default_dtyp:1002,unset_default_float_dtyp:1002,unset_default_int_dtyp:1002,unset_framework:[59,1316],unset_with_grad:1121,unstack:[40,41,138,306,457,594,731,1026],until:43,unus:[950,951],updat:[40,41,457,482,483,952,961,1026,1073,1094,1095,1121,1123,1124,1126,1128,1129,1130,1169,1170,1171,1173,1217,1222,1223,1227,1228,1254,1264,1273,1274,1279,1280,1306,1307,1308,1309,1310,1311,1316,1319],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1229,1233],upper_depth:[1302,1303],upstream:43,usabl:[1273,1319],usag:[952,996,1173],use:[40,41,42,43,505,952,961,962,987,999,1026,1091,1104,1105,1144,1149,1173,1254,1265,1271,1272,1273,1304,1305,1316,1319],used:[40,41,43,505,893,894,952,961,991,994,995,1001,1002,1013,1026,1063,1064,1080,1094,1095,1096,1097,1120,1121,1128,1129,1144,1147,1169,1170,1171,1172,1173,1217,1226,1290,1301,1306,1308,1309,1315,1316],used_dev:[952,961],used_mem_on_dev:952,used_mem_on_nod:1173,used_node_str:1173,used_node_strs_dict:1173,useful:[40,41,952,996,1173,1254,1263,1273,1316],user:[1273,1290,1301,1302,1303,1316,1319],uses:1273,using:[40,41,43,1121,1123,1124,1217,1220,1224,1236,1237,1254,1262,1266,1273,1290,1298,1315,1316,1319],util:[952,985,1173],utility_funct:[907,908,909],v_with_top_v_key_chain:[1302,1303],val:[40,41,457,474,475,476,911,946,1026,1071,1072,1073,1096,1097],valid:[907,908,909,1002,1007,1026,1104,1105,1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297],valid_dtyp:1002,valu:[40,41,457,877,880,885,886,893,895,896,897,900,901,903,904,905,906,911,929,930,952,964,995,996,1026,1027,1029,1031,1038,1039,1040,1042,1043,1049,1053,1058,1059,1060,1061,1076,1078,1079,1082,1084,1090,1091,1092,1093,1094,1095,1096,1097,1098,1114,1117,1118,1119,1121,1125,1128,1137,1143,1151,1152,1153,1154,1163,1164,1165,1169,1170,1171,1173,1217,1221,1222,1223,1227,1228,1229,1232,1233,1236,1238,1240,1254,1265,1266,1271,1272,1290,1301,1304,1305,1306,1308],value_is_nan:1026,vanilla:[1169,1171],var_shap:1281,variabl:[15,16,17,18,19,40,41,354,489,629,795,1026,1035,1071,1072,1073,1074,1075,1107,1121,1124,1125,1126,1127,1128,1129,1130,1132,1135,1169,1170,1171,1172,1254,1265,1271,1272,1279,1280,1281,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313],variable_data:[489,795,1121],varianc:[40,41,1236,1244,1319],varieti:1316,variou:[43,1273],vector:[40,41,498,501,893,896,897,1026,1040,1045,1144,1150,1254,1263,1290,1300],vector_norm:[40,41,105,235,428,558,694,893],vector_to_skew_symmetric_matrix:[176,363,498,638,805,1144],verbos:1318,veri:[43,1273],verifi:43,version:43,via:[1217,1218,1225,1316],view:[1137,1142],vision:1273,visual:1316,volum:[1254,1259],vw_tm1:[1121,1124,1128],wai:[1316,1319],wait:[40,41,42,43],want:[43,1273,1316,1319],warn:[59,66,67,68,69,70],warp:[494,495,1137,1138],watch:1315,websit:43,weight:[1121,1123,1124,1126,1128,1129,1130,1254,1263,1264,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1302,1303,1306,1308,1309],weight_initi:[1290,1291,1292,1293,1294,1295,1296,1297,1299,1300],weights_path:[1302,1303],well:[40,41,1026,1067],were:[40,41,1173],what:[43,1273],when:[40,41,42,43,893,896,952,1026,1037,1105,1118,1173,1273,1302,1303,1316,1319],where:[40,41,43,306,457,731,877,887,893,896,907,908,909,911,936,1026,1029,1036,1038,1042,1055,1069,1076,1087,1119,1217,1218,1225,1229,1230],wherea:43,wherebi:[1217,1226],whether:[15,18,19,40,41,42,877,884,907,908,909,950,951,952,970,983,987,991,996,999,1001,1002,1012,1016,1017,1018,1025,1026,1028,1033,1034,1046,1049,1054,1058,1065,1067,1070,1074,1075,1080,1100,1107,1116,1117,1121,1124,1125,1126,1127,1128,1129,1130,1132,1169,1170,1171,1172,1173,1217,1218,1219,1221,1225,1226,1229,1230,1246,1247,1254,1262,1273,1279,1280,1290,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311],which:[40,41,42,43,505,867,868,869,870,871,872,873,874,875,893,894,897,898,899,900,901,903,904,905,906,907,908,909,950,951,952,961,962,970,975,976,977,978,981,982,983,984,986,988,992,994,995,996,1002,1007,1012,1016,1025,1026,1029,1032,1041,1043,1045,1046,1047,1049,1059,1060,1061,1062,1068,1069,1077,1078,1079,1086,1087,1088,1089,1091,1094,1095,1102,1106,1116,1118,1120,1121,1124,1125,1126,1128,1129,1130,1132,1134,1135,1137,1139,1144,1147,1154,1159,1173,1217,1221,1222,1223,1227,1228,1229,1230,1231,1232,1233,1236,1238,1239,1240,1241,1242,1243,1244,1246,1251,1254,1265,1266,1273,1279,1280,1290,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1310,1312,1313,1315,1316],whilst:43,whitespac:[40,41,42],who:43,whose:[43,867,871,877,878,881,882,890,893,894,898,899,911,929,936,1026,1032,1037,1236,1237,1238,1239,1240,1242,1244],why:[1273,1274],width:[1137,1142],wiki:1319,wikipedia:1319,window:[1137,1142,1254,1255,1256,1257,1258,1259,1260,1261,1290,1291,1292,1293,1294,1295,1296,1297],wise:[40,41,43,877,879,885,886,889,911,929,930,936,1026,1038,1053,1056,1057,1082,1084,1093,1121,1124,1126,1128,1130,1151,1152,1153,1154,1155,1157,1158,1159,1162,1163,1164,1165,1167,1246,1247,1248,1249,1250,1251,1252,1253],wish:1316,with_bia:[1290,1300],with_cal:[1026,1049],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1121,1131],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1173,with_partial_v:[1302,1303],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,457,484,1026,1102,1173],with_to_kv_fn:[1290,1301],with_to_out_fn:[1290,1301],with_to_q_fn:[1290,1301],within:[15,18,19,43,893,896,1026,1029,1229,1233],without:[40,41,43,1026,1090,1092,1098,1217,1219,1316],wonder:1273,word:[15,16,17,1026,1029,1229,1233,1279,1280],work:[43,1315],worker:[952,961,962,1173],worker_class:[952,961,962,1173],worker_kwarg:1173,would:[43,1246,1251,1273,1316,1319],wrap:[15,40,41,42,43,455,457,489,494,498,502,503,505,1026,1037,1121,1135,1273],wrapper:43,write:[40,41,43,1273,1274,1319],written:[43,1273,1319],ws_new:[1121,1124,1126,1128,1129,1130],x1_i:[877,879,885,886,1026,1053,1154,1162],x2_i:[877,879,885,886,1026,1053,1154,1162],x_feat_dim:[1254,1265],x_i:[877,878,880,881,882,883,884,888,889,890,891],x_in:[1273,1315],x_inv:[1144,1146],x_max:[457,1026,1038],x_min:[457,1026,1038],x_sub:1173,xkk:1319,xkkm1:1319,xkm1km1:1319,xs0:1173,xs_t:1173,year:[1273,1319],yet:[1217,1226,1319],yield:[1026,1118],you:[43,1273,1315,1316,1319],your:[1273,1274,1315,1316,1319],your_awesome_project:1316,yourself:[43,1273],yourslef:43,youtub:43,zero:[40,41,77,214,400,530,666,867,868,871,877,889,893,897,907,908,909,1026,1042,1087,1094,1095,1119,1120,1121,1123,1124,1128,1129,1254,1262,1273,1281,1290,1291,1292,1293,1294,1295,1296,1297,1298,1300,1306,1307,1308,1309],zero_pad:[306,457,594,731,1026],zeros_lik:[138,306,457,594,731,1026],zip:1173,zk_e:1319},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1049,"function":[77,83,88,104,109,111,113,114,116,118,214,220,225,234,240,242,244,245,247,248,400,406,411,427,433,435,437,438,440,442,530,536,541,557,564,566,568,569,571,573,666,672,677,693,700,702,704,705,707,709,867,873,877,892,898,900,902,903,905,907],Ones:1286,Using:1316,abs:[307,595,732,1027],aco:[816,1155],acosh:[817,1156],activ:[198,387,516,658,845,1246,1276],adam:1307,adam_step:1123,adam_upd:1124,algebra:[105,176,235,363,428,498,558,638,694,805,893],all:[119,249,443,574,710,908],all_equ:1028,all_nested_indic:1218,ani:[120,250,444,575,711,909],api:[0,43,75,122,212,252,398,446,528,577,664,713,865],arang:[139,308,458,596,733,1029],arg_nam:1030,argmax:[112,243,436,567,703,901],argmin:[140,459,597,734,1031],args_to_ivi:16,args_to_n:17,argsort:[115,246,439,570,706,904],arithmet:[1,123,253,447,578,714],arrai:[0,3,43,75,121,122,124,141,212,251,252,254,261,309,398,445,446,448,460,528,576,577,579,598,664,712,713,715,735,865,911,1032],array_equ:[310,736,1033],arrays_equ:1034,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[818,1157],asinh:[89,412,542,678,878],assert_supports_inplac:1035,atan2:[820,1159],atan:[819,1158],atanh:[821,1160],attribut:[5,125,255,449,580,716],backend:[43,73],bilinear_resampl:[173,360,495,635,802,1138],binary_cross_entropi:1268,bitwis:[7,126,256,450,581,717],bitwise_and:[90,226,413,543,679,879],broadcast_to:[311,737,1036],builder:51,builtin:[121,251,261,445,576,712,911],builtin_ab:[262,912],builtin_add:[263,913],builtin_and:[264,914],builtin_bool:[265,915],builtin_contain:[266,916],builtin_deepcopi:[267,917],builtin_dir:[268,918],builtin_eq:[269,919],builtin_float:[270,920],builtin_floordiv:[271,921],builtin_g:[272,922],builtin_getattr:[273,923],builtin_getattribut:[274,924],builtin_getitem:[275,925],builtin_gt:[276,926],builtin_int:[277,927],builtin_invert:[278,928],builtin_l:[279,929],builtin_lt:[280,583,719,930],builtin_mul:[281,931],builtin_n:[282,932],builtin_neg:[283,933],builtin_or:[284,934],builtin_po:[285,935],builtin_pow:[286,936],builtin_radd:[287,937],builtin_rand:[288,938],builtin_rfloordiv:[289,939],builtin_rmul:[290,940],builtin_ror:[291,941],builtin_rpow:[292,942],builtin_rsub:[293,943],builtin_rtruediv:[294,944],builtin_rxor:[295,945],builtin_setitem:[296,946],builtin_sub:[297,947],builtin_truediv:[298,948],builtin_xor:[299,949],cache_fn:1037,cast:[142,312,461,599,738,1006],ceil:[91,227,414,544,680,880],choleski:[806,1145],choose_random_framework:61,citat:1273,clear_framework_stack:62,clear_mem_on_dev:[725,968],clip:[313,739,1038],clip_matrix_norm:1039,clip_vector_norm:1040,clone:1188,clone_arrai:1189,clone_it:1190,clone_nest:1191,clonedit:1175,cloneditem:1174,clonednest:1176,closest_valid_dtyp:1007,code:1319,comparison:[9,127,257,451,582,718],compil:[314,462,740,950,951],concaten:[143,315,463,600,741,1041],constant:[76,213,399,529,665,866],constant_pad:[316,601,742,1042],contain:[40,41],container_typ:[743,1043],content:1273,contribut:43,conv1d:[204,390,520,857,1255,1291],conv1d_transpos:[205,391,521,858,1256],conv1dtranspos:1292,conv2d:[206,392,522,660,859,1257,1293],conv2d_transpos:[207,393,523,860,1258],conv2dtranspos:1294,conv3d:[208,394,524,661,861,1259,1295],conv3d_transpos:[209,395,525,862,1260],conv3dtranspos:1296,convers:15,convert:[200,853,1279],convert_dtyp:1008,copy_arrai:[744,1044],copy_nest:1219,core:[130,260,454,586,722,910],cos:[92,415,545,681,881],cosh:[93,416,546,682,822,882,1161],cprint:1318,creat:43,creation:[77,214,400,530,666,867],cross:[317,745,1045],cross_entropi:1269,cumprod:[144,318,464,746,1046],cumsum:[747,1047],current_framework:63,current_framework_str:[748,1048],data:[83,87,220,224,406,410,536,540,672,676,873,876],debug_mod:45,debugg:44,default_devic:969,default_dtyp:1009,default_float_dtyp:1010,default_int_dtyp:1011,default_nod:1192,depthwise_conv2d:[210,396,526,662,863,1261],depthwiseconv2d:1297,design:43,det:[559,695],dev:[133,302,589,726,970],dev_clon:971,dev_clone_arrai:972,dev_clone_it:973,dev_clone_nest:974,dev_dist:975,dev_dist_arrai:976,dev_dist_it:977,dev_dist_nest:978,dev_from_str:[134,303,590,727,979],dev_to_str:[135,304,591,728,980],dev_unifi:981,dev_unify_arrai:982,dev_unify_it:983,dev_unify_nest:984,dev_util:985,devclonedit:955,devcloneditem:954,devclonednest:956,devdistit:958,devdistitem:957,devdistnest:959,devic:[20,131,300,455,587,723,952],devmapp:961,devmappermultiproc:962,diagon:[106,236,429,560,696,894],distribute_nest:1193,divid:1162,document:1273,dropout:[1262,1298],dtype:[145,319,465,602,749,1002,1012],dtype_bit:[146,320,466,603,750,1013],dtype_from_str:[147,321,467,604,751,1014],dtype_to_str:[148,322,468,605,752,1015],ecosystem:52,einops_rearrang:1050,einops_reduc:1051,einops_repeat:1052,einsum:[190,378,508,650,837,1237],elementwis:[88,225,411,541,677,877],empti:[78,215,401,531,667,868],equal:[94,417,547,683,1053],erf:[504,823,1163],execute_with_gradi:[170,355,490,630,796,1125],exist:1054,exp:[824,1164],expand_dim:[323,753,1055],finfo:[85,222,408,538,674,874],firstlayersiren:1283,flip:[110,241,434,565,701,899],float_img_to_uint8_img:1139,floor:[324,754,1056],floormod:[325,755,1057],fomaml_step:1170,fork:43,fourier_encod:1058,framework:59,full:[149,326,469,606,756,1059],func:72,gather:[150,327,470,607,757,1060],gather_nd:[151,328,471,608,758,1061],geglu:1277,gelu:[388,517,846,1247,1278],gener:[22,138,306,457,594,731,1026],get_all_arrays_in_memori:1062,get_all_arrays_on_dev:986,get_framework:64,get_min_bas:1063,get_min_denomin:1064,get_num_dim:[759,1065],get_referrers_recurs:1066,glorotuniform:1284,gpu_is_avail:[987,1194],gradient:[24,169,354,489,629,795,1121],gradient_descent_upd:1126,gradient_imag:[174,361,496,636,803,1140],gym:53,handler:59,has_nan:1067,ident:[152,329,472,609,760,1068],iinfo:[86,223,409,539,675,875],imag:[26,172,359,494,634,801,1137],index_nest:1220,indices_wher:[153,330,473,761,1069],initi:1281,inplac:[11,128,258,452,584,720],inplace_arrays_support:1070,inplace_decr:[154,331,474,610,762,1071],inplace_incr:[155,332,475,611,763,1072],inplace_upd:[156,333,476,612,764,1073],inplace_variables_support:1074,inv:[807,1146],invalid_dtyp:1016,is_arrai:[157,334,477,613,765,1075],is_float_dtyp:1017,is_int_dtyp:1018,is_vari:[171,356,491,631,797,1127],isfinit:[95,228,418,548,684,883],isinf:[335,614,766,1076],isnan:[96,229,419,549,685,884],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,864,1315,1316,1319],ivymodul:[201,854],jax:74,keep:43,lamb:1308,lamb_upd:1128,lar:1309,lars_upd:1129,layer:[203,389,519,659,856,1254,1290],layer_norm:1272,layernorm:1305,leaky_relu:[847,1248],less:[97,230,420,550,686,885],less_equ:[98,421,551,687,886],linalg:[28,1144],linear:[105,176,235,363,428,498,558,638,694,805,893,1263,1300],linear_resampl:[158,336,478,615,767,1077],linspac:[159,337,479,616,768,1078],list:43,log1p:[99,422,552,688,887],log2:[100,423,553,689,888],log:[825,1165],logic:[30,180,368,502,642,812,1151],logical_and:[369,813,1152],logical_not:[101,231,424,554,690,889],logical_or:[370,814,1153],logspac:[160,338,480,617,769,1079],loss:1267,lstm:1299,lstm_updat:1264,maml_step:1171,manipul:[109,240,433,564,700,898],map:1221,map_nest_at_index:1222,map_nest_at_indic:1223,match_kwarg:1080,math:[32,181,371,503,643,815,1154],matmul:[339,618,770,1081],matrix_norm:[177,364,499,639,808,1147],maximum:[771,1082],mech:54,memori:55,meshgrid:[340,772,1083],meta:[34,1169],method:[104,234,427,557,693,892],min:[117,441,572,708,906],minimum:[773,1084],model:56,modul:[1302,1303,1315],multi:1173,multi_head_attent:1265,multi_index_nest:1224,multidevcontain:42,multidevit:965,multidevitem:964,multidevnest:966,multiheadattent:1301,multinodeit:1179,multinodeitem:1178,multinodenest:1180,multinomi:[183,373,506,645,830,1230],multiprocess:[774,1085],mxnet:211,nativ:1315,nest:1217,nested_indices_wher:1225,nested_map:1226,network:1315,next:1273,node:[1173,1195],node_dist:1196,node_dist_arrai:1197,node_dist_it:1198,node_str:1199,node_to_str:1200,node_util:1201,nodedistit:1182,nodedistitem:1181,nodedistnest:1183,nodemapp:1185,nodemappermultiproc:1186,norm:[1271,1304],num_arrays_in_memori:1086,num_arrays_on_dev:988,num_cpu_cor:989,num_gpu:[136,990,1202],numpi:397,nutshel:1273,one_hot:[161,481,619,775,1087],ones:[79,216,402,532,668,869,1088],ones_lik:[80,217,403,533,669,870],oper:[1,3,7,9,11,13,43,123,124,126,127,128,129,253,254,256,257,258,259,447,448,450,451,452,453,578,579,581,582,584,585,714,715,717,718,720,721],optim:[1306,1310],optimizer_upd:1130,overview:1273,percent_used_mem_on_dev:991,percent_used_mem_on_nod:1203,pinv:[365,809,1148],portabl:1319,print_all_arrays_in_memori:1089,print_all_arrays_on_dev:992,profil:[132,301,456,588,724,967,1187],pull:43,queue_timeout:1090,randint:[184,374,646,831,1231],random:[36,182,372,505,644,829,1229],random_crop:1141,random_norm:[185,375,647,832,1232],random_uniform:[186,376,648,833,1233],reduce_max:[191,379,509,651,838,1238],reduce_mean:[192,380,510,652,839,1239],reduce_min:[193,381,511,653,840,1240],reduce_prod:[194,382,512,654,841,1241],reduce_std:[383,1242],reduce_sum:[195,384,513,655,842,1243],reduce_var:[196,385,514,656,843,1244],reduct:[38,189,377,507,649,836,1236],reflect:[13,129,259,453,585,721],relu:[848,1249],repeat:[341,776,1091],reptile_step:1172,request:43,reshap:[777,1092],robot:57,round:[342,778,1093],run:1316,scaled_dot_product_attent:1266,scatter_flat:[162,343,482,620,779,1094],scatter_nd:[163,344,483,621,780,1095],search:[111,242,435,566,702,900],seed:[187,834,1234],sequenti:[1312,1313],set:[113,244,437,568,704,902],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:993,set_default_dtyp:1019,set_default_float_dtyp:1020,set_default_int_dtyp:1021,set_default_nod:1204,set_exception_debug_mod:48,set_framework:65,set_min_bas:1096,set_min_denomin:1097,set_nest_at_index:1227,set_nest_at_indic:1228,set_queue_timeout:1098,set_split_factor:[994,1205],set_tmp_dir:1099,set_with_grad:1131,sgd:1311,shape:[781,1100],shape_to_tupl:1101,shuffl:[188,835,1235],sigmoid:[849,1250],signatur:[104,234,427,557,693,892],sin:[102,232,425,555,691,890],sinh:[826,1166],siren:1287,slodget:895,slogdet:[237,430,561,697],softmax:[199,518,850,1251],softplu:[851,1252],sort:[114,245,438,569,705,903],sparse_cross_entropi:1270,split:[164,345,484,622,782,1102],split_factor:[995,1206],split_func_cal:[996,1207],sqrt:[103,233,426,556,692,891],squeez:[165,346,485,623,783,1103],stable_divid:1104,stable_pow:1105,stack:[347,784,1106],stack_imag:[175,362,497,637,804,1142],standard:43,statist:[116,247,440,571,707,905],stop_gradi:[357,492,632,798,1132],str_to_nod:1208,submodul:43,supports_inplac:1107,svd:[107,238,431,562,698,896],swapax:[624,785,1108],tan:[827,1167],tanh:[828,852,1168,1253],tensorflow:527,tile:[348,625,786,1109],tmp_dir:1110,to_dev:[137,305,592,729,997],to_ivi:18,to_ivy_modul:[202,855,1280],to_list:[787,1111],to_n:19,to_nod:1209,to_numpi:[788,1112],to_scalar:[789,1113],todo:43,torch:663,total_mem_on_dev:998,total_mem_on_nod:1210,tpu_is_avail:[593,730,999,1211],train:1315,trainabl:1315,transpos:[166,349,486,790,1114],tree:1273,tril:[81,218,404,534,670,871],try_else_non:1115,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,220,224,406,410,536,540,672,676,873,876],uint8_img_to_float_img:1143,unifi:1212,unify_arrai:1213,unify_it:1214,unify_nest:1215,unset_debug_mod:49,unset_default_devic:1000,unset_default_dtyp:1022,unset_default_float_dtyp:1023,unset_default_int_dtyp:1024,unset_framework:71,unset_with_grad:1133,unstack:[167,350,487,626,791,1116],updat:43,used_mem_on_dev:1001,used_mem_on_nod:1216,util:[118,248,442,573,709,907],valid_dtyp:1025,value_is_nan:1117,variabl:[358,493,633,799,1134],variable_data:[800,1135],vector_norm:[108,239,432,563,699,897],vector_to_skew_symmetric_matrix:[179,367,501,641,811,1150],verbos:1317,vision:58,where:[351,792,1118,1273],why:1319,with_grad:1136,wrapper:72,write:1316,your:43,zero:[82,219,405,535,671,872,1289],zero_pad:[352,627,793,1119],zeros_lik:[168,353,488,628,794,1120]}})
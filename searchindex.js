Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/det","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/det","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/det","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/det","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/det","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/slogdet","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/slodget","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/det.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/det.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/det.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/det.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/det.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/slogdet.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/slodget.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[846,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[391,0,0,"-"],creation_functions:[392,0,0,"-"],data_type_functions:[396,0,0,"-"],data_types:[400,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[393,2,1,""],tril:[394,2,1,""],zeros:[395,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[396,1,1,""],finfo:[398,2,1,""],iinfo:[399,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[396,3,1,""],bits:[396,3,1,""],eps:[396,3,1,""],max:[396,3,1,""],min:[396,3,1,""],smallest_normal:[396,3,1,""]},"ivy.functional.backends.numpy.core":{device:[440,0,0,"-"],general:[442,0,0,"-"],gradients:[476,0,0,"-"],image:[481,0,0,"-"],linear_algebra:[485,0,0,"-"],logic:[489,0,0,"-"],math:[490,0,0,"-"],random:[492,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[441,1,1,""],clear_mem_on_dev:[440,2,1,""],dev:[440,2,1,""],dev_from_str:[440,2,1,""],dev_to_str:[440,2,1,""],gpu_is_available:[440,2,1,""],num_gpus:[440,2,1,""],to_dev:[440,2,1,""],tpu_is_available:[440,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[441,3,1,""],start:[441,3,1,""],stop:[441,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[442,2,1,""],arange:[443,2,1,""],argmax:[444,2,1,""],argmin:[445,2,1,""],array:[446,2,1,""],asarray:[442,2,1,""],astype:[442,2,1,""],cast:[447,2,1,""],clip:[442,2,1,""],compile:[448,2,1,""],concatenate:[449,2,1,""],constant_pad:[442,2,1,""],container_types:[442,2,1,""],copy_array:[442,2,1,""],cumprod:[450,2,1,""],current_framework_str:[442,2,1,""],dtype:[451,2,1,""],dtype_bits:[452,2,1,""],dtype_from_str:[453,2,1,""],dtype_to_str:[454,2,1,""],equal:[442,2,1,""],floor:[442,2,1,""],floormod:[442,2,1,""],full:[455,2,1,""],gather:[456,2,1,""],gather_nd:[457,2,1,""],get_num_dims:[442,2,1,""],identity:[458,2,1,""],indices_where:[459,2,1,""],inplace_arrays_supported:[442,2,1,""],inplace_decrement:[460,2,1,""],inplace_increment:[461,2,1,""],inplace_update:[462,2,1,""],inplace_variables_supported:[442,2,1,""],is_array:[463,2,1,""],linear_resample:[464,2,1,""],linspace:[465,2,1,""],logspace:[466,2,1,""],matmul:[442,2,1,""],meshgrid:[442,2,1,""],multiprocessing:[442,2,1,""],one_hot:[467,2,1,""],ones_like:[468,2,1,""],round:[442,2,1,""],scatter_flat:[469,2,1,""],scatter_nd:[470,2,1,""],shape:[442,2,1,""],split:[471,2,1,""],squeeze:[472,2,1,""],to_list:[442,2,1,""],to_numpy:[442,2,1,""],to_scalar:[442,2,1,""],transpose:[473,2,1,""],unstack:[474,2,1,""],where:[442,2,1,""],zero_pad:[442,2,1,""],zeros_like:[475,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[477,2,1,""],is_variable:[478,2,1,""],stop_gradient:[479,2,1,""],variable:[480,2,1,""],variable_data:[476,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[482,2,1,""],gradient_image:[483,2,1,""],stack_images:[484,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[486,2,1,""],qr:[487,2,1,""],vector_to_skew_symmetric_matrix:[488,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[491,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[493,2,1,""],randint:[492,2,1,""],random_normal:[492,2,1,""],random_uniform:[492,2,1,""],seed:[492,2,1,""],shuffle:[492,2,1,""]},"ivy.functional.ivy":{array_api:[847,0,0,"-"],core:[885,0,0,"-"],nn:[1225,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[848,0,0,"-"],creation_functions:[849,0,0,"-"],data_type_functions:[853,0,0,"-"],data_types:[856,0,0,"-"],elementwise_functions:[857,0,0,"-"],function_and_method_signatures:[870,0,0,"-"],linear_algebra:[871,0,0,"-"],manipulation_functions:[875,0,0,"-"],searching_functions:[877,0,0,"-"],set_functions:[878,0,0,"-"],sorting_functions:[879,0,0,"-"],statistical_functions:[881,0,0,"-"],utility_functions:[882,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[848,4,1,""],nan:[848,4,1,""],pi:[848,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[850,2,1,""],tril:[851,2,1,""],zeros:[852,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[854,2,1,""],iinfo:[855,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[858,2,1,""],bitwise_and:[859,2,1,""],ceil:[860,2,1,""],cos:[861,2,1,""],cosh:[862,2,1,""],isfinite:[863,2,1,""],isnan:[864,2,1,""],less:[865,2,1,""],log1p:[866,2,1,""],log2:[867,2,1,""],logical_not:[868,2,1,""],sqrt:[869,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[872,2,1,""],slodget:[873,2,1,""],vector_norm:[874,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[876,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[880,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[883,2,1,""],any:[884,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[886,0,0,"-"],compilation:[925,0,0,"-"],device:[927,0,0,"-"],dtype:[977,0,0,"-"],general:[1001,0,0,"-"],gradients:[1098,0,0,"-"],image:[1114,0,0,"-"],linalg:[1121,0,0,"-"],logic:[1130,0,0,"-"],math:[1133,0,0,"-"],meta:[1149,0,0,"-"],multi_node:[1153,0,0,"-"],nest:[1197,0,0,"-"],random:[1209,0,0,"-"],reductions:[1216,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[887,2,1,""],builtin_add:[888,2,1,""],builtin_and:[889,2,1,""],builtin_bool:[890,2,1,""],builtin_contains:[891,2,1,""],builtin_deepcopy:[892,2,1,""],builtin_dir:[893,2,1,""],builtin_eq:[894,2,1,""],builtin_float:[895,2,1,""],builtin_floordiv:[896,2,1,""],builtin_ge:[897,2,1,""],builtin_getattr:[898,2,1,""],builtin_getattribute:[899,2,1,""],builtin_getitem:[900,2,1,""],builtin_gt:[901,2,1,""],builtin_int:[902,2,1,""],builtin_invert:[903,2,1,""],builtin_le:[904,2,1,""],builtin_lt:[905,2,1,""],builtin_mul:[906,2,1,""],builtin_ne:[907,2,1,""],builtin_neg:[908,2,1,""],builtin_or:[909,2,1,""],builtin_pos:[910,2,1,""],builtin_pow:[911,2,1,""],builtin_radd:[912,2,1,""],builtin_rand:[913,2,1,""],builtin_rfloordiv:[914,2,1,""],builtin_rmul:[915,2,1,""],builtin_ror:[916,2,1,""],builtin_rpow:[917,2,1,""],builtin_rsub:[918,2,1,""],builtin_rtruediv:[919,2,1,""],builtin_rxor:[920,2,1,""],builtin_setitem:[921,2,1,""],builtin_sub:[922,2,1,""],builtin_truediv:[923,2,1,""],builtin_xor:[924,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[926,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[927,1,1,""],DevClonedItem:[929,1,1,""],DevClonedIter:[930,1,1,""],DevClonedNest:[931,1,1,""],DevDistItem:[932,1,1,""],DevDistIter:[933,1,1,""],DevDistNest:[934,1,1,""],DevManager:[927,1,1,""],DevMapper:[936,1,1,""],DevMapperMultiProc:[937,1,1,""],MultiDev:[927,1,1,""],MultiDevItem:[939,1,1,""],MultiDevIter:[940,1,1,""],MultiDevNest:[941,1,1,""],Profiler:[942,1,1,""],clear_mem_on_dev:[943,2,1,""],default_device:[944,2,1,""],dev:[945,2,1,""],dev_clone:[946,2,1,""],dev_clone_array:[947,2,1,""],dev_clone_iter:[948,2,1,""],dev_clone_nest:[949,2,1,""],dev_dist:[950,2,1,""],dev_dist_array:[951,2,1,""],dev_dist_iter:[952,2,1,""],dev_dist_nest:[953,2,1,""],dev_from_str:[954,2,1,""],dev_to_str:[955,2,1,""],dev_unify:[956,2,1,""],dev_unify_array:[957,2,1,""],dev_unify_iter:[958,2,1,""],dev_unify_nest:[959,2,1,""],dev_util:[960,2,1,""],get_all_arrays_on_dev:[961,2,1,""],gpu_is_available:[962,2,1,""],num_arrays_on_dev:[963,2,1,""],num_cpu_cores:[964,2,1,""],num_gpus:[965,2,1,""],percent_used_mem_on_dev:[966,2,1,""],print_all_arrays_on_dev:[967,2,1,""],set_default_device:[968,2,1,""],set_split_factor:[969,2,1,""],split_factor:[970,2,1,""],split_func_call:[971,2,1,""],to_dev:[972,2,1,""],total_mem_on_dev:[973,2,1,""],tpu_is_available:[974,2,1,""],unset_default_device:[975,2,1,""],used_mem_on_dev:[976,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[927,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[927,3,1,""],da_tune_step:[927,3,1,""],dim_size:[927,3,1,""],ds_tune_step:[927,3,1,""],map:[927,3,1,""],repeated_config_check:[927,3,1,""],tune_step:[927,3,1,""],tuned:[927,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[936,3,1,""],map:[936,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[937,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[927,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[939,3,1,""],items:[939,3,1,""],keys:[939,3,1,""],shape:[939,3,1,""],values:[939,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[940,3,1,""],at_dev:[940,3,1,""],at_devs:[940,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[941,3,1,""],at_dev:[941,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[942,3,1,""],start:[942,3,1,""],stop:[942,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[977,1,1,""],DefaultFloatDtype:[977,1,1,""],DefaultIntDtype:[977,1,1,""],astype:[977,2,1,""],cast:[981,2,1,""],closest_valid_dtype:[982,2,1,""],convert_dtype:[983,2,1,""],default_dtype:[984,2,1,""],default_float_dtype:[985,2,1,""],default_int_dtype:[986,2,1,""],dtype:[987,2,1,""],dtype_bits:[988,2,1,""],dtype_from_str:[989,2,1,""],dtype_to_str:[990,2,1,""],invalid_dtype:[991,2,1,""],is_float_dtype:[992,2,1,""],is_int_dtype:[993,2,1,""],set_default_dtype:[994,2,1,""],set_default_float_dtype:[995,2,1,""],set_default_int_dtype:[996,2,1,""],unset_default_dtype:[997,2,1,""],unset_default_float_dtype:[998,2,1,""],unset_default_int_dtype:[999,2,1,""],valid_dtype:[1000,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[977,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[977,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[977,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1025,2,1,""],abs:[1002,2,1,""],all_equal:[1003,2,1,""],arange:[1004,2,1,""],arg_names:[1005,2,1,""],argmax:[1006,2,1,""],argmin:[1007,2,1,""],array:[1008,2,1,""],array_equal:[1009,2,1,""],arrays_equal:[1010,2,1,""],asarray:[1001,2,1,""],assert_supports_inplace:[1011,2,1,""],broadcast_to:[1012,2,1,""],cache_fn:[1013,2,1,""],clip:[1014,2,1,""],clip_matrix_norm:[1015,2,1,""],clip_vector_norm:[1016,2,1,""],concatenate:[1017,2,1,""],constant_pad:[1018,2,1,""],container_types:[1019,2,1,""],copy_array:[1020,2,1,""],cross:[1021,2,1,""],cumprod:[1022,2,1,""],cumsum:[1023,2,1,""],current_framework_str:[1024,2,1,""],einops_rearrange:[1026,2,1,""],einops_reduce:[1027,2,1,""],einops_repeat:[1028,2,1,""],equal:[1029,2,1,""],exists:[1030,2,1,""],expand_dims:[1031,2,1,""],floor:[1032,2,1,""],floormod:[1033,2,1,""],fourier_encode:[1034,2,1,""],full:[1035,2,1,""],gather:[1036,2,1,""],gather_nd:[1037,2,1,""],get_all_arrays_in_memory:[1038,2,1,""],get_min_base:[1039,2,1,""],get_min_denominator:[1040,2,1,""],get_num_dims:[1041,2,1,""],get_referrers_recursive:[1042,2,1,""],has_nans:[1043,2,1,""],identity:[1044,2,1,""],indices_where:[1045,2,1,""],inplace_arrays_supported:[1046,2,1,""],inplace_decrement:[1047,2,1,""],inplace_increment:[1048,2,1,""],inplace_update:[1049,2,1,""],inplace_variables_supported:[1050,2,1,""],is_array:[1051,2,1,""],isinf:[1052,2,1,""],linear_resample:[1053,2,1,""],linspace:[1054,2,1,""],logspace:[1055,2,1,""],match_kwargs:[1056,2,1,""],matmul:[1057,2,1,""],maximum:[1058,2,1,""],meshgrid:[1059,2,1,""],minimum:[1060,2,1,""],multiprocessing:[1061,2,1,""],num_arrays_in_memory:[1062,2,1,""],one_hot:[1063,2,1,""],ones:[1064,2,1,""],ones_like:[1065,2,1,""],print_all_arrays_in_memory:[1066,2,1,""],queue_timeout:[1067,2,1,""],repeat:[1068,2,1,""],reshape:[1069,2,1,""],round:[1070,2,1,""],scatter_flat:[1071,2,1,""],scatter_nd:[1072,2,1,""],set_min_base:[1073,2,1,""],set_min_denominator:[1074,2,1,""],set_queue_timeout:[1075,2,1,""],set_tmp_dir:[1076,2,1,""],shape:[1077,2,1,""],shape_to_tuple:[1078,2,1,""],split:[1079,2,1,""],squeeze:[1080,2,1,""],stable_divide:[1081,2,1,""],stable_pow:[1082,2,1,""],stack:[1083,2,1,""],supports_inplace:[1084,2,1,""],swapaxes:[1085,2,1,""],tile:[1086,2,1,""],tmp_dir:[1087,2,1,""],to_list:[1088,2,1,""],to_numpy:[1089,2,1,""],to_scalar:[1090,2,1,""],transpose:[1091,2,1,""],try_else_none:[1092,2,1,""],unstack:[1093,2,1,""],value_is_nan:[1094,2,1,""],where:[1095,2,1,""],zero_pad:[1096,2,1,""],zeros_like:[1097,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1098,1,1,""],adam_step:[1100,2,1,""],adam_update:[1101,2,1,""],execute_with_gradients:[1102,2,1,""],gradient_descent_update:[1103,2,1,""],is_variable:[1104,2,1,""],lamb_update:[1105,2,1,""],lars_update:[1106,2,1,""],optimizer_update:[1107,2,1,""],set_with_grads:[1108,2,1,""],stop_gradient:[1109,2,1,""],unset_with_grads:[1110,2,1,""],variable:[1111,2,1,""],variable_data:[1112,2,1,""],with_grads:[1113,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1098,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1115,2,1,""],float_img_to_uint8_img:[1116,2,1,""],gradient_image:[1117,2,1,""],random_crop:[1118,2,1,""],stack_images:[1119,2,1,""],uint8_img_to_float_img:[1120,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1122,2,1,""],inv:[1123,2,1,""],matrix_norm:[1124,2,1,""],pinv:[1125,2,1,""],qr:[1126,2,1,""],slodget:[1127,2,1,""],svd:[1128,2,1,""],vector_to_skew_symmetric_matrix:[1129,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1131,2,1,""],logical_or:[1132,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1134,2,1,""],acosh:[1135,2,1,""],asin:[1136,2,1,""],atan2:[1138,2,1,""],atan:[1137,2,1,""],atanh:[1139,2,1,""],cosh:[1140,2,1,""],divide:[1141,2,1,""],erf:[1142,2,1,""],exp:[1143,2,1,""],log:[1144,2,1,""],sin:[1145,2,1,""],sinh:[1146,2,1,""],tan:[1147,2,1,""],tanh:[1148,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1150,2,1,""],maml_step:[1151,2,1,""],reptile_step:[1152,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1153,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1198,2,1,""],copy_nest:[1199,2,1,""],index_nest:[1200,2,1,""],map:[1201,2,1,""],map_nest_at_index:[1202,2,1,""],map_nest_at_indices:[1203,2,1,""],multi_index_nest:[1204,2,1,""],nested_indices_where:[1205,2,1,""],nested_map:[1206,2,1,""],set_nest_at_index:[1207,2,1,""],set_nest_at_indices:[1208,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1210,2,1,""],randint:[1211,2,1,""],random_normal:[1212,2,1,""],random_uniform:[1213,2,1,""],seed:[1214,2,1,""],shuffle:[1215,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1217,2,1,""],reduce_max:[1218,2,1,""],reduce_mean:[1219,2,1,""],reduce_min:[1220,2,1,""],reduce_prod:[1221,2,1,""],reduce_std:[1222,2,1,""],reduce_sum:[1223,2,1,""],reduce_var:[1224,2,1,""]},"ivy.functional.ivy.nn":{activations:[1226,0,0,"-"],layers:[1234,0,0,"-"],losses:[1247,0,0,"-"],norms:[1251,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1227,2,1,""],leaky_relu:[1228,2,1,""],relu:[1229,2,1,""],sigmoid:[1230,2,1,""],softmax:[1231,2,1,""],softplus:[1232,2,1,""],tanh:[1233,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1235,2,1,""],conv1d_transpose:[1236,2,1,""],conv2d:[1237,2,1,""],conv2d_transpose:[1238,2,1,""],conv3d:[1239,2,1,""],conv3d_transpose:[1240,2,1,""],depthwise_conv2d:[1241,2,1,""],dropout:[1242,2,1,""],linear:[1243,2,1,""],lstm_update:[1244,2,1,""],multi_head_attention:[1245,2,1,""],scaled_dot_product_attention:[1246,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1248,2,1,""],cross_entropy:[1249,2,1,""],sparse_cross_entropy:[1250,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1252,2,1,""]},"ivy.stateful":{activations:[1256,0,0,"-"],converters:[1259,0,0,"-"],initializers:[1261,0,0,"-"],layers:[1270,0,0,"-"],module:[1282,0,0,"-"],norms:[1284,0,0,"-"],optimizers:[1286,0,0,"-"],sequential:[1292,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1257,1,1,""],GELU:[1258,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1257,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1258,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1260,2,1,""]},"ivy.stateful.initializers":{Constant:[1261,1,1,""],FirstLayerSiren:[1263,1,1,""],GlorotUniform:[1264,1,1,""],KaimingNormal:[1261,1,1,""],Ones:[1266,1,1,""],Siren:[1267,1,1,""],Uniform:[1261,1,1,""],Zeros:[1269,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1261,3,1,""],create_variables:[1261,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1263,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1264,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1261,3,1,""],create_variables:[1261,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1266,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1267,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1261,3,1,""],create_variables:[1261,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1269,3,1,""]},"ivy.stateful.layers":{Conv1D:[1271,1,1,""],Conv1DTranspose:[1272,1,1,""],Conv2D:[1273,1,1,""],Conv2DTranspose:[1274,1,1,""],Conv3D:[1275,1,1,""],Conv3DTranspose:[1276,1,1,""],DepthwiseConv2D:[1277,1,1,""],Dropout:[1278,1,1,""],LSTM:[1279,1,1,""],Linear:[1280,1,1,""],MultiHeadAttention:[1281,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1271,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1272,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1273,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1274,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1275,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1276,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1277,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1278,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1279,3,1,""],get_initial_state:[1279,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1280,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1281,3,1,""]},"ivy.stateful.module":{Module:[1283,1,1,""]},"ivy.stateful.module.Module":{__init__:[1283,3,1,""],build:[1283,3,1,""],build_mode:[1283,3,1,""],built:[1283,3,1,""],check_submod_rets:[1283,3,1,""],get_mod_key:[1283,3,1,""],mod_depth:[1283,3,1,""],mod_height:[1283,3,1,""],mod_with_top_mod_key_chain:[1283,3,1,""],save_weights:[1283,3,1,""],show_mod_in_top_mod:[1283,3,1,""],show_structure:[1283,3,1,""],show_v_in_top_v:[1283,3,1,""],sub_mods:[1283,3,1,""],track_submod_call_order:[1283,3,1,""],track_submod_rets:[1283,3,1,""],v_with_top_v_key_chains:[1283,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1285,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1285,3,1,""]},"ivy.stateful.optimizers":{Adam:[1287,1,1,""],LAMB:[1288,1,1,""],LARS:[1289,1,1,""],Optimizer:[1290,1,1,""],SGD:[1291,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1287,3,1,""],set_state:[1287,3,1,""],state:[1287,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1288,3,1,""],set_state:[1288,3,1,""],state:[1288,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1289,3,1,""],set_state:[1289,3,1,""],state:[1289,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1290,3,1,""],set_state:[1290,3,1,""],step:[1290,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1291,3,1,""],set_state:[1291,3,1,""],state:[1291,3,1,""]},"ivy.stateful.sequential":{Sequential:[1293,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1293,3,1,""]},"ivy.verbosity":{cprint:[1298,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1297,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1286,1287,1288],"02886":1253,"100":[1153,1253,1295],"141592653589793":848,"2021":1253,"2102":1253,"360":[1133,1145,1147],"718281828459045":848,"754":[848,853,854,857,869],"999":[1098,1100,1101,1105,1286,1287,1288],"abstract":[927,942,1253,1286,1290],"boolean":[40,41,857,859,868,927,962,974,977,991,1000,1001,1003,1009,1010,1043,1045,1046,1050,1051,1052,1084,1094,1098,1104,1130,1131,1132,1149,1150,1151,1153],"break":43,"case":[15,18,19,40,41,42,43,857,858,860,861,862,867,869,927,966,973,976,1001,1004,1069,1071,1072,1121,1124,1126,1153,1197,1200,1204,1253,1270,1281,1282,1283,1286,1290,1299],"catch":[1001,1025],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,396,440,441,853,855,927,929,930,931,932,933,934,936,937,939,940,941,942,954,955,977,1001,1005,1056,1098,1112,1153,1197,1199,1206,1247,1249,1250,1253,1256,1257,1258,1259,1260,1261,1263,1264,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1299],"default":[15,18,19,40,41,42,43,849,850,851,852,871,872,874,875,876,879,880,882,883,884,925,926,927,936,937,944,945,949,950,951,952,953,956,957,958,959,966,969,970,971,976,977,984,985,986,987,1001,1003,1004,1006,1007,1015,1016,1017,1018,1021,1022,1023,1034,1035,1036,1041,1043,1044,1053,1055,1056,1059,1061,1064,1067,1068,1071,1072,1075,1077,1079,1081,1082,1091,1093,1094,1098,1101,1103,1104,1105,1106,1107,1109,1113,1121,1124,1126,1149,1150,1151,1152,1153,1197,1198,1199,1201,1205,1206,1209,1210,1212,1213,1216,1218,1219,1220,1221,1222,1223,1224,1226,1227,1231,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1259,1260,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293],"final":[40,41,43,1001,1034,1054,1055,1153,1270,1281,1296],"float":[40,41,42,43,848,849,850,852,853,854,857,858,860,861,862,867,869,871,874,886,905,911,927,936,937,960,966,969,973,976,977,985,992,1001,1004,1015,1016,1018,1034,1035,1039,1040,1055,1073,1074,1075,1081,1082,1098,1100,1101,1103,1105,1106,1107,1114,1116,1120,1133,1141,1149,1150,1151,1152,1153,1209,1212,1213,1226,1228,1234,1242,1245,1246,1247,1248,1249,1250,1251,1252,1270,1278,1281,1284,1285,1286,1287,1288,1289,1290,1291],"function":[15,40,41,43,393,394,395,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,848,850,851,852,854,855,858,859,860,861,862,863,864,865,866,867,868,869,871,872,873,874,876,880,883,884,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,929,930,931,932,933,934,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1256,1257,1258,1286,1289,1290,1291,1295,1296,1299],"import":[43,1253,1296,1299],"int":[40,41,42,43,392,393,394,395,492,849,850,851,852,853,854,855,871,872,874,875,876,879,880,882,883,884,886,905,911,925,926,927,949,950,951,952,953,956,957,958,959,964,965,971,977,986,988,993,1001,1006,1007,1012,1017,1018,1022,1023,1026,1027,1028,1031,1034,1035,1036,1041,1044,1053,1054,1055,1063,1064,1068,1069,1071,1072,1077,1078,1079,1080,1083,1085,1086,1091,1093,1096,1098,1100,1101,1105,1114,1118,1119,1121,1124,1149,1150,1151,1152,1153,1197,1206,1209,1210,1211,1213,1214,1216,1218,1219,1220,1221,1222,1223,1224,1226,1231,1234,1235,1236,1237,1238,1239,1240,1241,1245,1247,1249,1250,1251,1252,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1284,1285],"long":[43,1234,1244],"new":[40,41,43,492,849,850,852,857,866,977,981,1001,1002,1012,1026,1027,1028,1031,1034,1035,1036,1037,1064,1069,1071,1072,1073,1074,1081,1082,1083,1098,1101,1103,1105,1106,1107,1114,1116,1118,1120,1133,1135,1139,1140,1146,1148,1153,1197,1207,1208,1209,1210,1251,1252,1253,1259,1260,1270,1280,1284,1285,1286,1287,1288,1289,1290,1291,1296,1299],"public":[1001,1019],"return":[15,16,17,18,19,40,41,42,43,492,849,850,851,852,857,858,859,860,861,862,863,864,865,867,868,869,871,872,873,874,879,880,882,883,884,886,905,911,925,926,927,936,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,962,963,965,966,970,971,972,973,974,976,977,981,982,983,984,985,986,987,988,989,990,991,992,993,1000,1001,1002,1003,1004,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1041,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1068,1069,1070,1071,1072,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1109,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1197,1198,1199,1201,1205,1206,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1259,1260,1270,1279,1280,1286,1290,1295,1296,1299],"short":[43,1234,1244,1253,1299],"static":[40,41,925,926],"super":1153,"true":[40,41,42,442,448,476,479,492,493,857,863,864,868,871,874,879,880,882,883,884,925,926,927,1001,1003,1011,1013,1030,1034,1043,1045,1094,1095,1098,1101,1103,1104,1105,1106,1107,1109,1121,1124,1149,1150,1151,1152,1153,1197,1198,1205,1209,1210,1216,1218,1219,1220,1221,1222,1223,1224,1226,1227,1234,1242,1247,1248,1249,1250,1270,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291],"try":[40,41,1001,1092,1153],"var":[40,41,1149,1150,1151,1299],"while":[40,41,42,857,868,1153],AND:[857,859,882,883,1130,1131],But:1299,For:[43,857,858,860,861,862,867,869,1001,1004,1014,1083,1098,1104,1112,1121,1126,1133,1134,1253,1259,1260,1296,1299],Its:[1133,1137],NOT:[857,868],Not:848,One:[40,41,43,1001,1027,1069,1209,1211,1299],Ones:[1253,1261],PRs:43,Such:[1001,1019],That:1296,The:[15,16,17,18,19,40,41,42,43,849,851,857,858,859,860,861,862,863,864,865,867,868,869,871,872,874,875,876,879,880,882,883,884,886,905,911,925,926,927,936,937,943,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,966,969,970,971,972,973,976,977,981,982,983,988,989,990,991,1000,1001,1004,1008,1009,1012,1013,1015,1016,1017,1018,1020,1021,1024,1025,1029,1034,1036,1037,1044,1047,1048,1049,1051,1053,1055,1057,1059,1061,1064,1065,1068,1069,1071,1072,1073,1074,1075,1078,1079,1080,1081,1082,1083,1086,1094,1097,1098,1100,1101,1103,1105,1106,1107,1109,1112,1114,1116,1118,1120,1121,1124,1126,1128,1133,1134,1136,1137,1141,1142,1143,1144,1145,1147,1149,1150,1151,1152,1153,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1253,1259,1260,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1281,1282,1283,1284,1285,1286,1288,1289,1290,1296,1299],There:[43,1253,1296],These:[43,1253],Use:43,Used:[1197,1198,1205,1282,1283],Using:[1253,1254,1299],With:[40,41,1121,1124,1216,1218,1219,1220,1221,1222,1223,1224,1253,1295,1299],__array__:[1001,1008],__call__:[1270,1281,1282,1283],__del__:1153,__dict__:[1153,1296],__enter__:1153,__exit__:1153,__getitem__:1153,__getstate__:1153,__init__:[40,41,42,43,59,60,82,213,396,397,440,441,522,654,927,928,935,936,937,938,939,940,941,942,977,978,979,980,1098,1099,1153,1157,1164,1253,1256,1257,1258,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1299],__iter__:1153,__len__:1153,__next__:1153,__pow__:43,__repr__:1153,_assign_vari:1295,_axi:1153,_base:[1197,1198,1205],_compute_node_da_ratio:1153,_compute_node_strs_da:1153,_concat_unify_arrai:1153,_counter:1153,_cur_framework:[43,1153],_da_direct:1153,_da_directions_flip:1153,_da_step_tim:1153,_da_tim:1153,_da_tune_count:1153,_data:1153,_delta_da_dim_s:1153,_delta_sf:1153,_dict:1153,_dim_siz:1153,_first_da_tune_step:1153,_first_ns_tune_step:1153,_fn:1153,_forward:[1253,1295],_get_kalman_param:1299,_get_prior:1299,_get_some_model:1299,_handle_flat_arrays_in_out:43,_index:[1197,1198,1205],_input_queu:1153,_length:1153,_max_depth:1153,_max_node_dim_step_ratio:1153,_max_node_dim_step_s:1153,_max_split_factor_step_s:1153,_mean_unify_arrai:1153,_min_bas:[1001,1082,1251,1252,1284,1285],_min_denomin:[1001,1081],_min_node_dim_s:1153,_min_sf_tune_step:1153,_min_unit_node_tune_step:1153,_model:1299,_native_wrapp:43,_node_mapp:1153,_node_percent_mem:1153,_node_str:1153,_node_str_da_ratio:1153,_node_strs_da:1153,_node_strs_kei:1153,_node_strs_n:1153,_node_util:1153,_ns_step_tim:1153,_ns_time:1153,_ns_tune_count:1153,_num_nod:1153,_num_work:1153,_observed_config:1153,_output_queu:1153,_paramet:1295,_percent_mem_inc_per_sf:1153,_percent_mem_inc_per_unit_da_dim:1153,_percent_util_inc_per_unit_da_dim:1153,_ret_fn:1153,_safety_factor:1153,_save_dir:1153,_shift_da_split:1153,_shift_n:1153,_slice:1153,_step:[1286,1290],_sum_unify_arrai:1153,_timeout:1153,_tune:1153,_tune_da:1153,_tune_n:1153,_tune_step:1153,_unit_da_tune_count:1153,_unroll_step:1299,_with_node_mappig:1153,_worker:1153,_worker_class:1153,_worker_fn:1153,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,927,936,942,1153,1282,1283,1286,1290],abil:1253,abl:[40,41],about:[853,854,855],abov:[43,849,851,871,872,1209,1211],above_height:[40,41],abs:[296,442,573,706,871,874,1001,1153],absolut:[40,41,871,873,1001,1002,1121,1127],abstractmethod:1153,accept:[15,43,857,868,1253],access:[40,41,43,1296],accord:[40,41,853,854,1001,1018,1036,1071,1072,1091,1096],accordingli:[871,874,882,883,884],accur:[59,396,440,441,927,939,940,941,942,977,1098,1261,1263,1264,1266,1267,1269],aco:[796,1133],acosh:[796,1133],across:[40,41,927,936,937,946,947,949,950,951,952,953,959,969,970,1001,1006,1007,1009,1010,1153,1197,1201],act:43,activ:[1227,1228,1229,1230,1231,1232,1233,1253,1257,1258],actual:1296,adam:[1098,1100,1101,1105,1253,1286,1288,1295],adam_step:1098,adam_upd:1098,adapt:[1098,1106,1286,1289],add:[40,41,43,1153,1247,1248,1249,1250,1251,1252,1253,1284,1285,1296],added:[43,1001,1081,1082,1292,1293],adding:[43,1001,1012],addit:[40,41,43,1001,1026,1027,1028,1251,1252,1270,1280],addition:43,address:43,adher:43,adjac:[1001,1004],adopt:[43,1001,1019],affect:[1001,1004],affin:[1284,1285],after:[857,869,1001,1053,1098,1101,1102,1103,1105,1106,1107,1114,1115,1251,1252,1286,1287,1288,1289,1290,1291,1299],after_1:[1001,1018,1096],after_n:[1001,1018,1096],again:43,against:[40,41,1121,1124,1216,1218,1219,1220,1221,1222,1223,1224],agnost:[43,1253,1295,1296],aim:1299,algebra:1121,algorithm:[1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277,1299],align:[40,41,43,1001,1012],aliv:[927,961,963,967,1001,1038,1062,1066],all:[15,16,17,18,19,40,41,43,110,238,427,552,684,849,851,871,874,875,876,882,925,926,927,936,961,967,1001,1002,1003,1009,1010,1019,1038,1044,1066,1080,1121,1126,1149,1150,1151,1152,1153,1197,1198,1199,1205,1206,1209,1210,1213,1216,1218,1219,1220,1221,1222,1223,1224,1234,1244,1253,1296,1299],all_depth:[40,41],all_equ:1001,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1197,all_tru:[40,41],alloc:[43,849,851,927,1153],allow:[1001,1054,1055,1056,1282,1283],allow_dupl:[1001,1056],alon:[927,966,976,1153,1253],along:[40,41,43,492,871,874,875,876,879,880,882,883,884,927,950,951,952,953,956,957,958,959,971,1001,1017,1022,1023,1036,1053,1054,1055,1068,1079,1083,1086,1093,1121,1124,1149,1150,1151,1152,1153,1209,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224],alongsid:[1295,1296],alpha:[1226,1228],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,857,860,927,1153],also:[40,41,43,1001,1004,1098,1101,1149,1150,1151,1152,1197,1198,1199,1205,1206,1234,1243,1253,1270,1280,1295],altern:1295,alwai:[40,41,43,1098,1104,1109],among:[40,41],amount:[927,973,1153,1253],angl:[857,862,1133,1134,1138],ani:[15,16,17,18,19,40,41,43,110,238,427,552,684,882,925,926,927,929,932,936,937,939,948,949,952,953,958,1001,1003,1004,1008,1025,1026,1027,1028,1029,1030,1043,1051,1056,1081,1082,1098,1102,1153,1197,1198,1201,1205,1206,1207,1208,1209,1213,1253,1259,1260,1282,1283,1295,1296,1299],anoth:[40,41,43,977,983,1253],another_backend:43,anyth:[43,1299],anywai:43,apart:43,api:[1253,1254],appear:[43,1001,1031],append:[40,41,871,872,1153],appli:[15,18,19,40,41,1001,1026,1027,1028,1098,1105,1106,1121,1128,1130,1131,1132,1149,1150,1151,1197,1201,1204,1206,1226,1227,1228,1229,1230,1231,1232,1233,1234,1243,1245,1246,1251,1252,1253,1256,1257,1258,1284,1285],applic:[1197,1201,1206,1234,1245,1246,1253,1299],approxim:[43,857,858,861,862,866,867,886,911,1226,1227],arang:[130,296,442,492,573,706,1001,1054,1055],arbitrari:[40,41,927,956,957,959,1153],arc:[1133,1138],arcco:[1133,1134],arctan:[1133,1137],area:[857,858,1253],arg:[15,16,17,40,41,43,59,63,927,936,949,953,959,971,1001,1026,1027,1028,1072,1153,1259,1260,1282,1283],arg_nam:1001,arg_stateful_idx:[1282,1283],argmax:[130,442,573,706,1001],argmin:[130,442,573,706,1001],args_clon:1153,args_dist:1153,args_to_ivi:[15,1253],args_to_n:[15,1253],args_uni:1153,argsort:[107,235,424,549,681,879],argument:[15,16,17,18,19,40,41,42,43,59,63,925,926,927,936,937,949,953,959,1001,1004,1005,1013,1025,1056,1072,1133,1134,1153,1197,1201,1259,1260,1282,1283],aris:[1253,1299],arithmet:[43,1216,1219,1222,1224],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:492,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,130,296,442,492,573,706,849,850,851,852,853,854,855,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,873,874,875,876,879,880,882,883,884,905,911,927,945,946,947,950,951,952,953,956,957,958,959,961,963,967,971,972,977,981,987,992,993,1001,1002,1003,1004,1006,1007,1009,1010,1011,1012,1014,1015,1016,1017,1018,1020,1021,1022,1023,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1041,1043,1044,1045,1046,1047,1048,1049,1051,1052,1053,1054,1055,1057,1058,1059,1060,1062,1063,1064,1065,1066,1068,1069,1070,1071,1072,1077,1079,1080,1083,1084,1085,1086,1088,1089,1090,1091,1093,1094,1095,1096,1097,1098,1100,1101,1104,1105,1109,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1153,1197,1199,1206,1209,1210,1211,1212,1213,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1270,1278,1279,1281,1286,1290,1295,1296],arrang:[1001,1026],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,392,393,394,395,396,398,399,848,849,850,851,852,853,854,855,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,873,874,875,876,879,880,882,883,884],array_api_methods_to_test:43,array_builtin:[43,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924],array_equ:[296,706,1001],array_lik:[492,1001,1008],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1001],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1253],arraywithgener:[22,1253],arraywithgradi:[24,1253],arraywithimag:[26,1253],arraywithlinalg:[28,1253],arraywithlog:[30,1253],arraywithmath:[32,1253],arraywithmeta:[34,1253],arraywithrandom:[36,1253],arraywithreduct:[38,1253],arriv:[40,41,42],articl:1253,arxiv:1253,as_arrai:[40,41,1001,1041,1077],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[440,442,451,927,945,977,984,985,986,987],as_tensor:442,as_vari:[40,41],as_zero:[40,41],asarrai:[442,1001],ascend:[879,880],asin:[796,1133],asinh:[86,401,526,658,857],aspect:[1114,1119],assert:[40,41,1001,1011,1153],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1001,associ:[43,1121,1129],assum:[857,861,1296,1299],astyp:[442,977],asynchron:[40,41,42],at_dev:[40,42,927,940,941],at_kei:[40,41],at_key_chain:[40,41],at_nod:1153,atan2:[796,1133],atan:[796,1133],atanh:[796,1133],attent:[43,1234,1245,1246,1270,1281],attribut:[0,6,40,41,853,854,855,1001,1065,1097],audienc:[1253,1296],author:1253,automat:43,avail:[40,41,43,927,962,964,965,974,1001,1027,1153],averag:[1098,1100,1101,1105,1149,1150,1151,1216,1219],average_across_step:[1149,1150,1151],avoid:[43,927,1153,1296],axes:[40,41,43,442,473,485,486,871,874,875,876,882,883,884,927,971,1001,1006,1007,1018,1031,1085,1091,1096,1121,1124,1153,1216,1218,1219,1220,1221,1222,1223,1224],axes_length:[40,41,1001,1026,1027,1028],axi:[40,41,442,444,445,449,450,456,464,465,466,471,472,474,871,872,874,875,876,879,880,882,883,884,927,929,932,939,950,951,952,953,956,957,958,959,971,1001,1006,1007,1017,1018,1021,1022,1023,1031,1036,1053,1054,1055,1068,1079,1080,1083,1085,1086,1093,1096,1153,1209,1215,1216,1218,1219,1220,1221,1222,1223,1224,1226,1231,1247,1249,1250],axis0:[40,41,1001,1085],axis1:[40,41,871,872,1001,1085],axis2:[871,872],back:[43,1282,1283,1286,1290],backend:[15,17,19,40,41,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,927,962,965,974,977,983,991,1000,1001,1046,1050,1098,1101,1103,1105,1106,1107,1112,1153,1253,1254,1259,1260,1286,1287,1288,1289,1290,1291,1295,1296,1299],backend_nam:43,background:[1253,1296],backprop:1299,backward:[882,883,884,1295],band:[1001,1034],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,396,440,441,442,466,857,866,867,886,911,927,929,930,931,932,933,934,936,937,939,940,941,942,977,1001,1039,1055,1073,1082,1098,1153,1216,1217,1253,1256,1257,1258,1261,1263,1264,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1299],basi:43,batch:[40,41,871,874,927,969,970,1001,1034,1044,1114,1118,1121,1128,1149,1150,1151,1152,1153,1234,1243,1251,1252,1284,1285],batch_shap:[442,458,1001,1044,1063,1114,1115,1116,1117,1118,1119,1120,1121,1129,1209,1210,1234,1244,1245,1246,1270,1279],batch_siz:[492,493,1153,1209,1210,1234,1235,1236,1237,1238,1239,1240,1241],bayesian:1299,becaus:[43,1001,1004],becom:[43,1001,1014,1133,1138,1299],been:[1001,1026,1027,1028,1209,1210],befor:[40,41,43,927,971,1149,1150,1151,1153,1197,1206,1216,1218,1219,1220,1221,1222,1223,1224,1234,1245,1246,1299],before_1:[1001,1018,1096],before_n:[1001,1018,1096],begin:[1197,1198,1205,1296],behaviour:[43,1299],behind:[1098,1101,1103,1105,1106,1107,1253],being:[40,41,43,1001,1004,1067,1075,1153],believ:43,belong:[40,41],below:[43,849,851,871,872,1253,1296,1299],below_depth:[40,41],benefit:1253,bernoul:[1234,1242,1270,1278],best:[43,1001,1056,1253],beta1:[1098,1100,1101,1105,1286,1287,1288],beta2:[1098,1100,1101,1105,1286,1287,1288],beta:[1251,1252],between:[40,41,42,853,854,1001,1004,1121,1126,1197,1201,1209,1211,1247,1249,1250,1286,1288],bia:[1234,1243,1244,1270,1271,1272,1273,1274,1275,1276,1277,1280],bias_initi:[1270,1271,1272,1273,1274,1275,1276,1277,1280],bilinear:[1114,1115],bilinear_resampl:[166,350,481,616,779,1114],bilinearli:[1114,1115],binari:[857,859,1247,1248],binary_cross_entropi:1247,bit:[396,853,854,855,977,988,1114,1116,1120,1253],bitwis:[857,859],bitwise_and:[86,217,401,526,658,857],bitwise_oper:[0,7,8],block:[1253,1296],bool:[15,18,19,40,41,42,43,857,863,864,865,868,871,874,879,880,882,883,884,886,905,925,926,927,945,958,962,966,971,974,976,977,987,1001,1003,1009,1010,1022,1025,1029,1030,1034,1041,1043,1051,1056,1077,1079,1093,1094,1095,1098,1101,1102,1103,1104,1105,1106,1107,1109,1121,1124,1149,1150,1151,1152,1153,1197,1198,1199,1201,1205,1206,1209,1210,1216,1218,1219,1220,1221,1222,1223,1224,1226,1227,1234,1242,1259,1260,1270,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291],both:[43,1001,1021],bottom:1253,boundari:[40,41,1209,1213],branch:[43,925,926],brittl:43,broadcast:[40,41,43,857,859,865,871,874,882,883,884,886,905,911,1001,1012,1029,1058,1059,1060,1068,1121,1124,1133,1138,1141,1216,1218,1219,1220,1221,1222,1223,1224],broadcast_to:[296,706,1001],build:[1153,1253,1270,1281,1282,1283],build_mod:[1270,1281,1282,1283],builder:[43,1253],built:[927,1001,1004,1153,1270,1281,1282,1283],builtin:43,builtin_ab:[251,886],builtin_add:[251,886],builtin_and:[251,886],builtin_bool:[251,886],builtin_contain:[251,886],builtin_deepcopi:[251,886],builtin_dir:[251,886],builtin_eq:[251,886],builtin_float:[251,886],builtin_floordiv:[251,886],builtin_g:[251,886],builtin_getattr:[251,886],builtin_getattribut:[251,886],builtin_getitem:[251,886],builtin_gt:[251,886],builtin_int:[251,886],builtin_invert:[251,886],builtin_l:[251,886],builtin_lt:[251,561,693,886],builtin_mul:[251,886],builtin_n:[251,886],builtin_neg:[251,886],builtin_or:[251,886],builtin_po:[251,886],builtin_pow:[43,251,886],builtin_radd:[251,886],builtin_rand:[251,886],builtin_rfloordiv:[251,886],builtin_rmul:[251,886],builtin_ror:[251,886],builtin_rpow:[251,886],builtin_rsub:[251,886],builtin_rtruediv:[251,886],builtin_rxor:[251,886],builtin_setitem:[251,886],builtin_some_op:43,builtin_sub:[251,886],builtin_truediv:[251,886],builtin_xor:[251,886],busi:43,bypass:1296,cach:[927,943,1001,1013],cache_fn:1001,calcul:[40,41,42,43,857,858,861,862,866,867,869,886,911,1133,1141],call:[43,927,971,1001,1067,1075,1092,1098,1102,1153,1197,1198,1201,1205,1270,1281,1282,1283,1286,1290,1296,1299],callabl:[40,41,925,926,927,936,937,971,1001,1013,1025,1027,1056,1092,1149,1150,1151,1152,1153,1197,1201,1202,1203,1205,1206,1234,1245],can:[43,927,969,970,971,1001,1069,1114,1116,1153,1253,1295,1296,1299],cancel_join_thread:1153,cannot:43,captur:1253,cast:[40,41,130,296,442,573,706,977,1001,1017,1114,1116,1120],catch_except:[1001,1025],categori:43,caus:43,ceil:[86,217,401,526,658,857,1001,1004],cell:[1234,1244,1270,1279],certain:[40,41,1001,1004,1054,1055],chain:[40,41,1149,1150,1151,1292,1293],chang:[43,927,1001,1069,1153,1197,1199,1206,1253,1295],channel:[1001,1034,1114,1116,1117,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280],check:[15,16,17,18,19,40,41,43,927,966,976,977,982,991,1000,1001,1011,1030,1043,1051,1084,1094,1098,1104,1153,1197,1198,1205,1253,1296],check_nest:[1197,1205],check_shap:[40,41],check_submod_ret:[1282,1283],check_typ:[40,41],choic:[1253,1296],choleski:[783,1121],choos:[857,868,1001,1095,1121,1126,1133,1138,1253],choose_random_framework:59,chosen:[40,41,1001,1004,1095],chunk:[927,969,970,971,1153],chunk_siz:[927,971,1153],circl:[1133,1134,1136],clark:1253,clear:[43,927,943,1153],clear_framework_stack:59,clear_mem_on_dev:[440,698,927],click:1253,clip:[40,41,296,442,706,1001,1015,1016,1058,1060,1253],clip_matrix_norm:1001,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1001],clipped_delta:1153,clone:[40,41,927,946,947,948,949,1153],clone_arrai:1153,clone_it:1153,clone_nest:1153,clonedit:1153,cloneditem:1153,clonednest:1153,close:[43,1114,1119,1133,1136,1153,1299],closest:[857,860,977,982],closest_valid_dtyp:977,code:[40,41,42,43,492,1253,1254,1295,1296],codebas:[927,969,970,1153,1253,1296,1299],codomain:[857,858,861,862,867,869],colab:1253,collect:[15,40,41,440,442,476,481,485,489,490,492,886,925,927,977,1001,1098,1114,1121,1130,1133,1153,1197,1209,1216,1226,1234,1247,1251,1256,1270,1284,1286],color:[40,41,42,1297,1298],column:[1001,1044],combin:[40,41,42,1114,1119,1253,1299],combined_batch_s:1153,come:1296,command:1253,comment:43,commit:1299,common:[40,41,43,1133,1138],common_key_chain:[40,41],commun:[43,1253,1296],communuti:43,compar:[40,41,879,880,1001,1003,1009,1010],comparison_oper:[0,9,10],compat:[43,857,859,865,871,874,882,883,884,886,905,911,1001,1029,1069,1133,1141,1253,1299],compil:[296,442,706,1282,1283,1286,1287,1288,1289,1290,1291],compile_on_next_step:[1282,1283,1286,1287,1288,1289,1290,1291],complet:[40,41,43,1121,1126,1153],complex:[1296,1299],compliant:[857,868],compon:[1001,1021],composit:43,comput:[40,41,857,859,865,868,871,873,874,886,905,927,971,1001,1015,1016,1022,1023,1029,1057,1098,1100,1101,1102,1103,1105,1106,1107,1109,1111,1114,1117,1121,1122,1123,1124,1125,1126,1127,1130,1131,1132,1133,1134,1136,1137,1138,1142,1143,1144,1145,1147,1197,1201,1216,1217,1218,1219,1220,1221,1222,1223,1224,1234,1235,1236,1237,1238,1239,1240,1241,1243,1245,1247,1248,1249,1250],concat:[40,41,927,956,957,958,959,971,1001,1034,1153],concaten:[40,41,130,296,442,573,706,1001,1034,1153,1253],concatten:[40,41,927,956,957,958,959,971,1153],condit:[442,925,926,1001,1095,1197,1205],conditon:[1197,1205],config:[40,41,1153],config_list:1153,configur:[40,41],conflict:43,conform:43,conjunct:1296,connect:[1270,1280,1281],consid:[40,41,857,868,1121,1126,1295,1299],consist:[40,41,927,959,1153,1216,1217,1282,1283,1296],constant:[927,936,937,1001,1018,1153,1197,1201,1247,1248,1249,1250,1251,1252,1261,1262,1266,1269,1282,1283,1284,1285,1296],constant_kwarg:1153,constant_pad:[296,442,573,706,1001],constitu:[40,41],construct:[1001,1086,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295],constructor:[40,41,42,1001,1005,1292,1293],consum:[927,1153],cont_feat_dim:[1234,1245],contaienr:[40,41],contain:[15,18,19,42,43,849,850,851,852,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,874,882,883,884,886,905,911,927,946,950,971,977,981,1001,1002,1006,1007,1014,1015,1016,1019,1029,1043,1058,1060,1070,1081,1082,1098,1100,1101,1103,1105,1106,1107,1133,1141,1149,1150,1151,1152,1153,1209,1210,1216,1218,1219,1220,1222,1224,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[442,706,1001],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[442,1001,1061,1234,1245,1270,1281],context_dim:[1270,1281],contextmanag:[59,60],continu:[43,1153,1296],contract:[40,41,1216,1217],contribut:[1253,1254],contributor:[43,1253],control:1253,conv1d:[197,381,506,838,1234,1253,1270],conv1d_transpos:[197,381,506,838,1234],conv1dtranspos:[1253,1270],conv2d:[197,381,506,642,838,1234,1253,1270],conv2d_transpos:[197,381,506,838,1234],conv2dtranspos:[1253,1270],conv3d:[197,381,506,642,838,1234,1253,1270],conv3d_transpos:[197,381,506,838,1234],conv3dtranspos:[1253,1270],convent:[40,41,1216,1217],conver:[927,943,954,966,973,976,1153],convers:[16,17,18,19,40,41,1153,1253],convert:[15,16,17,18,19,40,41,43,927,954,955,977,983,989,990,1001,1078,1089,1090,1114,1116,1120,1121,1129,1153,1197,1199,1206,1253,1260],convert_dtyp:977,convolut:[1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277],cool:43,cooler:43,coordin:[1001,1059,1133,1134,1136,1138],copi:[40,41,43,492,1001,1020,1153,1197,1199],copy_arrai:[442,706,1001],copy_nest:1197,core:[440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,929,930,931,932,933,934,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1253],corner:43,correct:[43,1253,1296],correctli:[40,41,43,1121,1124,1133,1138,1216,1218,1219,1220,1221,1222,1223,1224],correspond:[40,41,43,886,911,1001,1017,1209,1210],cos:[86,401,526,658,857,1001,1034,1133,1134,1147,1296],cosh:[86,401,526,658,796,857,1133],cosin:[857,861,862,1133,1134,1135,1140],cost:[1098,1100,1101,1103,1105,1106,1107,1149,1150,1151,1152],cost_fn:[1149,1152],could:1299,count:[40,41,875,876,882,883,884,1153,1216,1221,1223],cours:43,cprint:1297,cpu:[40,41,43,927,964,966,972,973,976,1001,1004,1008,1036,1037,1044,1054,1055,1063,1064,1065,1071,1072,1097,1153,1209,1210,1211,1212,1213,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1292,1293,1295,1296],creat:[40,41,849,850,852,927,936,937,1001,1004,1008,1035,1036,1037,1044,1054,1055,1063,1064,1065,1071,1072,1088,1097,1098,1111,1153,1209,1210,1211,1212,1213,1253,1254,1259,1260,1261,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295,1299],create_if_abs:[40,41],create_vari:1261,creation:[40,41,42,43],creation_funct:[392,393,394,395,849,850,851,852],crop:[1114,1118],crop_siz:[1114,1118],cross:[296,706,1001,1247,1248,1249,1250],cross_entropi:1247,cuda:[40,41,927,936,955,972,1001,1004,1008,1036,1037,1044,1054,1055,1063,1064,1065,1071,1072,1097,1153,1209,1210,1211,1212,1213,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1292,1293],cumprod:[130,296,442,706,1001],cumsum:[706,1001],cumul:[1001,1022,1023],current:[40,41,42,43,927,936,960,961,963,967,977,983,991,1000,1001,1024,1038,1046,1050,1062,1066,1153,1197,1198,1205,1253,1299],current_framework:59,current_framework_str:[442,706,1001,1153],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1234,1235,1236,1237,1238,1239,1240],d_out:[1234,1235,1236,1237,1238,1239,1240],da_can_termin:1153,da_dim_s:[927,1153],da_direct:1153,da_tune_step:[927,1153],dai:1299,daniel:1253,data:[40,41,42,43,849,850,851,852,854,855,857,858,859,860,861,862,863,864,865,867,868,869,871,872,874,875,876,879,880,882,883,884,886,905,911,927,929,930,931,932,933,934,939,940,941,955,977,981,982,983,987,988,989,990,991,992,993,1000,1001,1004,1008,1029,1035,1044,1051,1064,1065,1069,1080,1084,1097,1098,1104,1112,1133,1141,1153,1234,1243,1253],data_format:[1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277],data_type_funct:[396,398,399,853,854,855],dataset:[40,41],datatyp:[40,41,977,982,992,993],dcdw:[1098,1100,1101,1103,1105,1106],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1098,1105,1106,1286,1288,1289],decay_lambda:[1098,1105,1106,1286,1288,1289],decid:[40,41,1299],decompos:[1121,1122,1126],decomposit:[1121,1122,1126,1128],decor:43,decrement:[1001,1047],dedic:[1098,1112,1259,1260],deep:[40,41,1253],deep_copi:[40,41],deeper:[927,949,953,959,1153,1197,1206,1253],deepli:[1197,1199],def:[43,60,82,213,397,522,654,928,935,938,978,979,980,1099,1153,1157,1164,1253,1262,1265,1268,1295,1296,1299],default_dev:43,default_devic:927,default_dtyp:[43,977],default_float_dtyp:977,default_int_dtyp:977,default_key_color:[40,41,42],default_nod:1153,default_rng:492,default_v:[1001,1025],defaultdevic:[927,928],defaultdtyp:[977,978],defaultfloatdtyp:[977,979],defaultintdtyp:[977,980],defer:43,defin:[43,1001,1021,1063,1065,1097,1209,1211],definit:43,degre:[1133,1145,1147],del:1153,delai:43,delet:43,delta:[1098,1100,1153],delta_dim_s:1153,delta_percent_mem:1153,delta_sf:1153,delta_util:1153,demo:1253,denomin:[1001,1033,1040,1074,1081,1082,1251,1252,1284,1285],denot:43,dens:[1270,1280],depend:[43,857,858,861,862,866,867,879,880,886,911,1001,1095,1121,1128,1253],depth:[40,41,442,467,927,949,953,959,1001,1042,1063,1153,1197,1206,1282,1283],depth_cutoff:[40,41],depthwis:[1234,1241,1270,1277],depthwise_conv2d:[197,381,506,642,838,1234],depthwiseconv2d:[1253,1270],deriv:[1098,1100,1101,1103,1105,1106,1107,1197,1199,1206,1253,1282,1286,1290,1292],descend:[879,880,1121,1128],descent:[1098,1103,1286,1291],describ:[40,41,1216,1217],descript:[871,874],design:[1253,1254],desir:[40,41,927,972,977,981,1001,1004,1008,1044,1045,1064,1065,1097,1114,1119,1153,1216,1218,1219,1220,1222,1224],desired_aspect_ratio:[481,484,1114,1119],desired_percent_increas:1153,det:[226,415,540,672,783],detail:1299,detect:[40,41,1197,1198,1205],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,857,858,859,861,862,863,864,867,869,871,872,873,874,882,883,884,886,911,927,962,964,965,974,977,981,982,988,991,992,993,1000,1001,1003,1004,1008,1009,1010,1043,1046,1050,1051,1084,1094,1098,1104,1121,1127,1133,1141,1149,1150,1151,1152,1153,1234,1245],dev:[40,41,42,43,123,290,440,442,443,446,456,457,458,465,466,467,468,469,470,475,492,493,566,698,927,930,931,933,934,936,937,940,941,943,944,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,963,966,967,968,969,970,971,972,973,976,1001,1004,1008,1036,1037,1044,1054,1055,1063,1064,1065,1071,1072,1097,1098,1113,1209,1210,1211,1212,1213,1259,1260,1261,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1292,1293],dev_clon:[40,41,927],dev_clone_arrai:927,dev_clone_it:927,dev_clone_nest:927,dev_dist:[40,41,927],dev_dist_arrai:927,dev_dist_it:927,dev_dist_nest:927,dev_from_str:[43,123,290,440,566,698,927],dev_mapp:927,dev_str:[40,41],dev_to_str:[123,290,440,566,698,927],dev_unifi:927,dev_unify_arrai:927,dev_unify_it:927,dev_unify_nest:927,dev_util:927,devclonedit:927,devcloneditem:927,devclonednest:927,devdistit:927,devdistitem:927,devdistnest:927,develop:[43,1253,1296,1299],deviat:[40,41,1209,1212,1216,1222,1251,1252,1284,1285],devic:[21,40,41,43,392,393,395,441,442,455,849,850,851,852,929,930,931,932,933,934,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,1001,1004,1008,1035,1036,1037,1044,1054,1055,1063,1064,1065,1071,1072,1097,1098,1113,1209,1210,1211,1212,1213,1253,1259,1260,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1292,1293],devmanag:[927,935],devmapp:[927,937],devmappermultiproc:927,diag:[1121,1128],diagon:[100,226,415,540,672,849,851,871,1001,1044],dict:[15,16,17,18,19,40,41,42,927,929,932,936,937,939,949,950,951,952,953,1001,1026,1027,1028,1056,1149,1150,1151,1153,1197,1199,1200,1201,1204,1206,1259,1260],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,853,854,927,946,947,950,951,1121,1126,1153,1234,1243,1253,1296,1299],differenti:[1253,1296],dilat:[1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277],dim:[40,41,43,1001,1063,1114,1115,1119,1121,1128,1153,1270,1281],dim_siz:[40,41,927,1153],dimens:[40,41,42,849,851,871,872,874,875,876,882,883,884,927,958,1001,1012,1017,1021,1026,1027,1028,1031,1034,1041,1053,1063,1068,1069,1079,1080,1083,1091,1093,1114,1118,1121,1124,1128,1149,1150,1151,1152,1153,1209,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1231,1234,1235,1236,1237,1238,1239,1240,1241,1244,1247,1249,1250,1270,1271,1272,1273,1274,1275,1276,1277,1280,1281],dimension:[40,41,492,871,874,882,883,884,1001,1079,1080,1121,1128],direct:1153,directli:[43,1197,1206,1296,1299],directori:[1001,1076,1087],discord:43,discret:[1247,1249],discuss:43,disk:[40,41,1114,1116],distanc:[1001,1004],distribut:[40,41,927,946,950,951,952,953,1153,1209,1210,1211,1212,1213,1234,1242,1270,1278,1282,1283],distribute_nest:1153,distributedarrai:[40,41],distrubt:[1247,1249],dive:[1253,1296],divid:[40,41,1001,1079,1081,1133],dividend:[1133,1141],divis:[1001,1033,1040,1074,1081,1082,1098,1100,1101,1105,1133,1141,1286,1287,1288],divisor:[1098,1100,1101,1105,1133,1141,1286,1287,1288],doc:1253,docstr:43,document:43,doe:[40,41,43,1001,1004,1079,1295],doesn:[1121,1126,1253],doing:43,domain:[857,858,861,862,867,869,1133,1134],don:[43,1253],done:43,door:1299,dot:[1121,1123,1234,1245,1246,1270,1281],down:1295,downscal:[1001,1015,1016],drag:[1253,1299],draw:[1209,1210,1212,1213],drawn:[1209,1210,1211,1212,1213],drop:[1253,1299],dropout:[1234,1253,1270,1281],dropout_r:[1270,1281],ds_tune_step:927,dtype:[40,41,43,130,296,392,393,395,396,398,399,442,443,446,447,455,458,468,475,573,706,849,850,852,853,854,855,981,982,983,984,985,986,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1004,1008,1035,1044,1063,1064,1065,1097],dtype_bit:[130,296,442,573,706,977],dtype_from_str:[43,130,296,442,573,706,977],dtype_in:[442,452,453,454,977,983,988,989,990,991,992,993,1000],dtype_to_str:[130,296,442,573,706,977],duplic:[40,41,43],dure:[40,41,43,925,926,1001,1092,1098,1100,1101,1105,1149,1150,1151,1152,1282,1283,1286,1287,1288,1290],dynam:[43,442,448,925,926],each:[40,41,42,43,857,858,859,860,861,862,863,864,865,866,867,868,869,886,905,911,927,936,937,946,947,948,949,950,951,952,958,970,971,1001,1002,1003,1018,1029,1068,1079,1083,1086,1096,1098,1101,1103,1105,1106,1107,1114,1117,1121,1128,1133,1136,1141,1143,1144,1153,1197,1201,1209,1210,1216,1217,1234,1235,1236,1237,1238,1239,1240,1241,1242,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1296],eager:1296,easi:1299,easili:1253,econom:1299,ecosystem:1253,edg:[1001,1014,1018,1096],effect:[1098,1107],effective_grad:[1098,1107],effici:1299,einop:[40,41,1001,1026,1027,1028],einops_rearrang:[40,41,1001],einops_reduc:[40,41,1001],einops_repeat:[40,41,1001],einstein:[40,41,1216,1217],einsum:[40,41,183,369,494,632,818,1216],either:[40,41,43,857,867,1001,1025,1056,1059,1061,1149,1150,1151,1152,1153,1270,1281,1282,1283,1296],eleg:1153,element:[40,41,43,492,849,851,857,858,859,860,861,862,863,864,865,866,867,868,869,875,876,882,883,884,886,905,911,927,948,952,958,977,981,1001,1002,1004,1006,1007,1009,1010,1014,1015,1016,1022,1023,1029,1032,1033,1044,1045,1058,1060,1068,1070,1079,1090,1095,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1153,1216,1217,1219,1221,1223,1226,1227,1228,1229,1230,1231,1232,1233,1234,1242,1270,1278],elementwis:[40,41],elementwise_affin:[1284,1285],elementwise_funct:[857,858,859,860,861,862,863,864,865,866,867,868,869],elemtn:[1209,1210],elif:1153,els:[43,1001,1011,1025,1030,1153],elsewher:[1001,1095],emphas:1253,empti:[40,41,882,883,884,1121,1126,1153],enabl:[40,41,42,43,1253],encapsul:[853,855],encod:[1001,1034,1114,1116],end:[1001,1004,1253,1296],engag:43,ensur:43,entir:[40,41,882,883,884,927,971,1153,1253,1270,1279],entri:[40,41,1001,1054,1055,1079,1080],entropi:[1247,1248,1249,1250],enumer:1153,environ:1253,eps:[396,853,854],epsilon:[1098,1100,1101,1105,1247,1248,1249,1250,1251,1252,1284,1285,1286,1287,1288],equal:[40,41,442,573,706,857,863,871,872,879,880,1001,1003,1009,1010,1018,1079,1096,1133,1145,1147,1209,1213],equality_matrix:[1001,1003],equat:[40,41,1216,1217],equival:[857,868,871,874,1001,1004,1133,1147],erf:[490,796,1133],error:[40,41,43,927,1001,1080,1133,1142,1153,1226,1227,1282,1283,1286,1290],essenti:43,etc:[40,41,43,927,972,1001,1004,1008,1036,1037,1044,1054,1055,1063,1064,1065,1071,1072,1097,1153,1209,1210,1211,1212,1213,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1292,1293,1299],euclidean:[871,874],euler:848,evalu:[40,41,857,866,867,882,883,884,1001,1059,1197,1198,1205],even:[43,1299],evenli:[40,41,1001,1004,1054,1055,1079],everi:[43,1001,1003,1299],exact:[40,41],exampl:[43,925,926,1001,1014,1083,1121,1126,1253,1295,1296,1299],example_input:[442,448,925,926],exc_tb:1153,exc_typ:1153,exc_val:1153,exce:[1001,1060],except:[40,41,44,47,882,883,884,1001,1004,1011,1017,1025,1092,1153],excess_s:1153,excit:[1253,1296],exclud:[59,61,1001,1004,1209,1213],exclus:[40,41,442,450,463,476,478,1001,1022,1051,1098,1104,1209,1211],execut:[43,1001,1092,1296],execute_with_gradi:[163,345,476,611,773,1098,1253,1295],exist:[40,41,1001,1025,1153,1253,1286,1290,1299],exp:[796,1133],expand:[40,41,1001,1031,1034],expand_dim:[40,41,296,706,1001,1153],expect:[1001,1005],explain:[43,1296],explicitli:[43,1270,1279,1281,1282,1283,1296],expon:[43,886,911,1001,1082],exponenti:[43,886,911,1133,1142,1143],expos:[1001,1008,1019],express:[857,861,1001,1059],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1098,1102],eye:[1121,1123],fabian:1253,fabio:1253,factor:[927,936,969,970,971,1098,1100,1101,1105,1106,1121,1128,1153,1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277,1286,1287,1288,1289],fail:43,falck:1253,fall:[1282,1283,1286,1290],fallback_to_non_compil:[1282,1283,1286,1290],fals:[15,18,19,40,41,42,59,66,67,68,69,70,440,442,450,451,463,471,474,476,477,478,485,486,857,863,864,868,871,874,879,880,882,883,884,927,945,958,966,971,976,977,984,985,986,987,1001,1003,1022,1025,1030,1034,1041,1051,1056,1077,1079,1093,1095,1098,1101,1102,1103,1104,1105,1106,1107,1121,1124,1149,1150,1151,1152,1153,1197,1198,1199,1201,1205,1206,1216,1218,1219,1220,1221,1222,1223,1224,1259,1260,1282,1283,1286,1287,1288,1289,1290,1291],fan_in:1261,fan_mod:1261,fan_out:1261,far:[1197,1198,1205,1295],faster:[925,926],favourit:[1253,1295],feasibl:1299,feat_dim:[1234,1245,1246],fed:[927,971,1153],feed:[927,971,1153],few:43,field:1299,file:[40,41,43,1001,1076,1087,1282,1283],filepath:[40,41],fill:[40,41,849,850,852,1001,1035,1064,1209,1211],fill_valu:[442,455,1001,1035],filter:[1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277,1299],filter_s:[1270,1271,1272],filter_shap:[1270,1273,1274,1275,1276,1277],find:[40,41,43,1299],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,212,213,396,397,521,522,653,654,853],finish:[1253,1299],finit:[857,863],first:[40,41,43,492,857,859,865,871,872,925,926,927,958,1001,1009,1017,1021,1029,1054,1055,1083,1085,1098,1102,1121,1128,1149,1150,1151,1152,1153,1197,1198,1205,1209,1215,1216,1221,1223,1270,1281,1282,1283,1286,1290,1296,1299],firstlayersiren:[1253,1261],firstli:[1296,1299],fist:[927,971,1153],fit:[40,41,440,442,476,481,485,489,490,492,1001,1068,1114,1119],fix:43,fkt:1299,flag:[40,41,43,1098,1104],flat:[40,41,43,1001,1068,1071],flat_list:[40,41],flatten:[40,41,871,874,1001,1034,1068,1216,1218,1219,1220,1222,1224],flatten_key_chain:[40,41,1282,1283],flexibl:[1253,1296],flip:[40,41,103,231,420,545,677,875],float32:[43,442,458,977,981,989,990,1001,1004,1008,1044,1064,1065,1097],float_dtyp:[977,985,995],float_img_to_uint8_img:1114,floor:[296,442,706,1001,1033,1153],floormod:[296,442,706,1001],fluid:1299,folder:[43,1253],follow:[40,41,43,853,855,871,874,927,971,1001,1047,1048,1049,1081,1082,1098,1101,1103,1105,1106,1107,1153,1197,1201,1206,1234,1245,1246,1253,1270,1280,1286,1290],followng:[853,854],fomaml_step:1149,forget:[1098,1100,1101,1105,1286,1287,1288],fork:[1001,1061,1253,1254],forkserv:[1001,1061,1153],form:[15,16,17,18,19,40,41,849,851,871,872,1001,1008,1098,1101,1103,1105,1106,1107,1197,1199,1206,1234],format:[40,41,43,927,945,977,981,983,987,1001,1004,1008,1044,1064,1065,1097,1153,1216,1217,1253,1295,1296],format_fn:[40,41],format_key_chain:[40,41],forward:[1282,1283,1286,1290,1295],found:[40,41,42],fourier:[1001,1034],fourier_encod:1001,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,419,421,425,428,429,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,483,484,486,487,488,491,493,495,496,497,498,499,500,501,504,505,507,508,509,510,511,512,513,518,519,520,522,523,524,527,528,529,530,531,532,533,534,535,536,537,538,541,542,543,544,546,550,553,554,562,567,568,569,570,571,572,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,612,613,614,615,617,618,619,621,622,623,624,628,629,630,631,633,634,635,636,637,638,639,643,644,645,650,651,652,654,655,656,659,660,661,662,663,664,665,666,667,668,669,670,673,674,675,676,678,682,685,686,694,699,700,701,702,703,704,705,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,774,775,776,777,778,780,781,782,784,785,786,787,788,789,790,791,792,794,795,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,819,820,821,822,823,824,825,828,829,830,831,832,833,834,836,837,839,840,841,842,843,844,845,850,851,852,854,855,858,859,860,861,862,863,864,865,866,867,868,869,872,873,874,876,880,883,884,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1227,1228,1229,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1252,1253,1257,1258,1259,1260,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286,1287,1288,1289,1290,1291,1293,1294,1295,1296,1298,1299],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1153,framewrk:[1001,1061],free:43,freed:43,freeli:43,frequenc:[1001,1034],from:[40,41,42,43,857,869,871,872,875,876,882,883,884,927,936,937,971,977,983,1001,1025,1036,1037,1044,1069,1080,1088,1095,1098,1101,1105,1114,1118,1121,1126,1149,1150,1151,1152,1153,1197,1199,1206,1209,1210,1211,1212,1213,1216,1221,1223,1234,1242,1245,1253,1259,1260,1270,1278,1281,1286,1290,1295,1296],from_cal:[1282,1283],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,130,296,442,573,706,853,854,1001,1121,1126,1253],full_matric:[1121,1128],fulli:[43,1253,1270,1280,1281,1295],func:[40,41,442,448,476,477,925,926,927,971,1001,1013,1098,1102,1153],further:[43,1299],furthermor:1299,futur:1299,gain:1261,gamma:[1251,1252],gather:[40,41,130,296,442,573,706,1001,1037],gather_nd:[40,41,130,296,442,573,706,1001],gauss:[1133,1142],gaussian:[1226,1227],geglu:[1253,1256],gelu:[379,503,827,1226,1253,1256],gener:[23,40,41,43,440,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,492,925,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1104,1209,1211,1213,1214,1253,1286,1290],geometr:[1001,1034],get:[40,41,43,853,854,855,927,936,937,945,960,961,966,970,973,976,977,987,988,1001,1005,1038,1039,1040,1067,1153,1253,1270,1279,1299],get_all_arrays_in_memori:1001,get_all_arrays_on_dev:927,get_framework:59,get_initial_st:[1270,1279],get_min_bas:1001,get_min_denomin:1001,get_mod_kei:[1282,1283],get_num_dim:[442,706,1001],get_referrers_recurs:1001,getfullargspec:1153,gist:1253,give:[43,1001,1069,1296],given:[40,41,43,875,876,927,960,966,969,970,971,973,976,977,981,1001,1004,1008,1014,1022,1023,1037,1054,1055,1064,1065,1068,1071,1072,1079,1086,1091,1093,1097,1098,1100,1101,1103,1105,1106,1107,1121,1123,1129,1133,1134,1153,1197,1202,1203,1209,1212,1213,1215,1216,1219,1221,1222,1223,1224,1234,1235,1236,1237,1238,1239,1240,1241,1259,1260,1299],global:[40,41,42,927,936,937,944,969,970,971,977,984,985,986,1001,1024,1039,1040,1067,1073,1074,1075,1081,1082,1098,1113,1153,1251,1252,1284,1285],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1253,1261,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280],good:43,googl:1253,got:[43,1253],gpu0:43,gpu2:43,gpu:[927,962,965,1153],gpu_is_avail:[440,927,1153],grad:[1253,1286,1290,1295],gradient:[25,40,41,477,478,479,480,927,971,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1117,1149,1150,1151,1152,1253,1286,1287,1288,1289,1290,1291,1295,1299],gradient_descent_upd:[1098,1149,1150,1151,1152],gradient_imag:[166,350,481,616,779,1114],gradienttrack:[1098,1099],graph:[1098,1101,1103,1105,1106,1107,1282,1283],greater:[40,41,1001,1004,1032,1080,1209,1213],green:[40,41,42,1297,1298],grid:[1001,1059],group:[1114,1119],guid:[43,1253,1254,1299],gym:1253,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1299,half:[1001,1004,1153,1209,1213],hand:1253,handl:[40,41,42,43,925,926,927,943,945,954,955,966,973,976,1098,1101,1103,1105,1106,1107,1153,1286,1287,1288,1289,1290,1291],happen:43,has:[40,41,43,871,873,1001,1083,1121,1126,1127,1133,1137],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1001],hasattr:1153,have:[40,41,43,849,850,851,852,853,854,857,858,859,860,861,862,863,864,865,867,868,869,871,872,874,875,876,879,880,882,883,884,886,905,911,1001,1017,1021,1026,1027,1028,1029,1035,1083,1098,1104,1112,1121,1128,1133,1141,1153,1253,1295,1296],haven:43,hdf5:[40,41,1282,1283],head:[1234,1245,1270,1281],head_dim:[1270,1281],height:[1114,1119],height_cutoff:[40,41],help:[43,59,396,440,441,927,939,940,941,942,977,1098,1253,1261,1263,1264,1266,1267,1269],here:[43,1253],hidden:[1234,1244,1270,1279],hierarch:[1001,1019],hierarchi:[40,41],high:[40,41,492,1209,1211,1213],higher:[1098,1101,1103,1105,1106,1107,1121,1128],highest:[1209,1211],highest_util:1153,highest_util_nod:1153,highli:1253,highlight:1299,hint:43,hkt:1299,hold:[977,981,1001,1004,1008,1071,1072],host:1253,hot:[1001,1063],hour:43,how:[1253,1270,1281,1282,1283,1296,1299],howev:[43,1296],http:1299,hyperbol:[857,858,862,1133,1135,1139,1140,1146,1148,1226,1233],hypothet:[43,1299],icon:1253,idea:1253,ident:[40,41,43,130,296,442,573,706,1001],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[848,853,854,857,869],if_exist:[40,41],ignor:[40,41,1286,1290],ignore_key_error:[40,41],ignore_miss:[1286,1290],ignore_non:[40,41],iii:43,iinfo:[81,212,396,521,653,853],imag:[27,482,483,484,1001,1053,1115,1116,1117,1118,1119,1120,1234,1235,1236,1237,1238,1240,1241,1253,1299],image_dim:[1114,1118],imkkhk:1299,immedi:[1253,1296,1299],implement:[43,857,858,861,862,866,867,879,880,886,911,1253,1296,1299],in_featur:[1234,1243],inadvert:43,includ:[40,41,43,871,874,882,883,884,1001,1004,1043,1081,1082,1094,1197,1198,1209,1213,1270,1280,1281,1284,1285,1295],include_deriv:[1197,1199,1206],include_empti:[40,41],include_inf:[40,41,1001,1043,1094],include_nest:[1197,1198],include_self:[40,41],inclus:[43,1209,1211],incom:[1234,1243],increas:[927,949,953,959,1001,1018,1031,1096,1153,1197,1206],increasingli:1299,increment:[1001,1048,1153],inde:1253,indent:[40,41,42],independ:[1209,1210],index:[40,41,442,492,879,880,1001,1006,1007,1036,1037,1059,1080,1083,1197,1200,1202,1203,1204,1207],index_nest:1197,indic:[40,41,442,456,457,467,469,470,871,874,879,880,1001,1006,1007,1036,1037,1045,1063,1071,1072,1197,1198,1200,1202,1203,1204,1205,1207,1208,1209,1210,1226,1231,1234,1235,1236,1237,1238,1239,1240,1241,1251,1252,1270,1271,1272,1273,1274,1275,1276,1277,1282,1283],indices_wher:[130,296,442,706,1001],indistinguish:[857,869],inevit:1299,inf:[40,41,871,874,1001,1043,1052,1094,1133,1137],infer:[925,926,1001,1041,1044,1069,1077,1114,1118,1121,1126,1296,1299],infin:[857,858,860,861,862,863,867,869,871,874,882,883,884,1001,1052],infinit:[857,869],inform:[853,854,855,1098,1109],init_c:[1234,1244],init_h:[1234,1244],init_on_first_step:[1286,1290],initi:[40,41,42,43,59,396,440,441,927,939,940,941,942,977,1098,1153,1234,1244,1253,1263,1264,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1286,1290],initialz:[1282,1283],inner:[1149,1150,1151,1152],inner_batch_fn:[1149,1150,1151],inner_batch_shap:[1234,1243],inner_cost_fn:[1149,1150,1151],inner_grad_step:[1149,1150,1151,1152],inner_learning_r:[1149,1150,1151,1152],inner_optimization_step:[1149,1150,1151,1152],inner_v:[1149,1150,1151],innermost:[849,851,871,872],inp:1153,inplac:[40,41,1001,1011,1046,1050,1084,1098,1101,1103,1105,1106,1107,1259,1260,1286,1287,1288,1289,1290,1291],inplace_arrays_support:[442,1001],inplace_decr:[130,296,442,573,706,1001],inplace_incr:[130,296,442,573,706,1001],inplace_oper:[0,11,12],inplace_upd:[40,41,130,296,442,573,706,1001,1259,1260],inplace_variables_support:[442,1001],input:[15,18,19,40,41,42,43,849,851,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,874,875,876,879,880,882,883,884,925,926,927,936,937,944,945,946,949,950,953,959,971,972,977,981,982,984,985,986,987,988,992,993,1001,1002,1003,1006,1007,1009,1010,1011,1012,1014,1015,1016,1017,1018,1020,1022,1023,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1041,1043,1044,1045,1047,1048,1049,1051,1052,1053,1057,1058,1059,1060,1068,1070,1077,1078,1080,1083,1084,1085,1086,1088,1089,1090,1091,1093,1094,1096,1098,1102,1104,1109,1113,1114,1115,1116,1117,1118,1120,1121,1124,1126,1128,1130,1131,1132,1133,1135,1137,1139,1140,1141,1145,1146,1147,1148,1149,1150,1151,1152,1153,1209,1210,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1251,1252,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1284,1285,1296],input_ax:[927,971,1153],input_channel:[1270,1271,1272,1273,1274,1275,1276,1279,1280],input_queu:1153,inputs_split:1153,insert:[1001,1031],insid:43,inspect:1153,inspir:1299,instal:1253,instanc:[15,16,17,18,19,40,41,43,492,886,905,911,927,936,1153,1259,1260,1292,1293],instead:[40,41,43,492,1216,1218,1219,1220,1221,1222,1223,1224,1299],int32:43,int64:[977,981,1001,1004,1008,1044,1064,1065,1097],int_dtyp:[977,986,996],integ:[40,41,492,853,855,857,859,860,871,874,882,883,884,977,993,1001,1004,1032,1070,1079,1209,1211,1214],integr:1253,intend:43,inter:1253,interact:1253,interchang:[40,41,1001,1085],interest:1253,interfac:[1001,1008,1296],intermedi:[40,41],intern:[40,41,927,1098,1112,1153,1197,1198,1205,1206,1261,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1292,1293],interpol:[1001,1053],intersect:[1133,1134],interv:[40,41,882,883,884,1001,1004,1014,1054,1055,1133,1136,1209,1213],introduc:1299,inv:[783,1121,1299],invalid:[882,883,884],invalid_dtyp:977,invers:[857,858,1121,1123,1125,1133,1134,1135,1136,1137,1139,1299],invert:[1121,1123,1125],invest:1299,investig:43,invoc:[925,926],irrespect:1253,is_al:1153,is_arrai:[130,296,442,573,706,1001,1153],is_float_dtyp:977,is_int_dtyp:977,is_mean:1153,is_sum:1153,is_vari:[163,345,476,611,773,1098],isfinit:[86,217,401,526,658,857],isinf:[296,573,706,1001],isinst:1153,isnan:[86,217,401,526,658,857],isnumer:1153,issu:[1253,1254],issue_numb:43,item:[15,19,40,41,886,898,899,927,936,937,939,946,948,950,952,958,977,984,1001,1019,1042,1081,1082,1153,1197,1201,1202,1203,1206,1207,1208,1253,1282,1283,1295],iter:[15,16,17,18,19,40,41,42,925,926,927,930,931,933,934,936,937,940,941,948,950,951,952,953,958,971,1001,1003,1012,1017,1018,1044,1059,1064,1068,1069,1072,1077,1079,1083,1086,1091,1096,1153,1197,1198,1199,1201,1205,1206],iterbal:[927,948,952,958,1153],its:[492,927,971,1001,1044,1069,1085,1091,1153,1253],itself:[43,1197,1206],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,848,849,850,851,852,853,854,855,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,873,874,875,876,879,880,882,883,884,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,929,930,931,932,933,934,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1256,1257,1258,1259,1260,1261,1263,1264,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1297,1298],ivy_backend:[40,41],ivy_bay:1299,ivy_test:43,ivyfcmodel:1295,ivyh:[40,41,42],ivymodul:[194,835],jame:1253,jax:[43,1098,1104,1253,1299],jax_concat:1253,jnp:1253,join:[40,41,1001,1017,1083,1153],journal:1253,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1253,1270,1279,1299],kaimingnorm:[1261,1265],kalman:1299,kalman_filt:1299,kalman_filter_step:1299,kalman_filter_upd:1299,keep:[40,41,927,972,1001,1093,1153,1253,1254,1299],keep_inner_v:[1149,1150,1151],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1149,1150,1151],keepdim:[40,41,442,474,485,486,871,874,882,883,884,1001,1093,1121,1124,1216,1218,1219,1220,1221,1222,1223,1224],kei:[15,16,17,40,41,42,43,886,891,927,939,1001,1019,1149,1150,1151,1153,1197,1200,1204,1234,1245,1246,1253,1259,1260,1270,1281,1286,1290],kept:[40,41,42,1149,1150,1151],kera:1299,kernel:[1234,1244],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,927,936,937,949,953,959,1001,1005,1026,1027,1028,1056,1153,1197,1201,1282,1283],keyword_color_dict:[40,41,42],kind:[853,854,855,1299],kwarg:[15,16,17,40,41,42,59,63,927,936,949,953,959,1001,1056,1153,1259,1260,1282,1283],kwarg_stateful_idx:[1282,1283],kwargs_clon:1153,kwargs_dist:1153,kwargs_uni:1153,label:[43,1247,1248,1249,1250],lamb:[1098,1105,1253,1286],lamb_upd:1098,lambda:[1153,1286,1289,1291,1295],lar:[1098,1105,1106,1253,1286],larger:[853,854,1001,1014],largest:[40,41,853,854,855,1001,1006,1032],lars_upd:1098,last:[40,41,871,872,875,876,879,880,882,883,884,1001,1004,1021,1053,1079,1083,1121,1124,1128,1216,1221,1223,1226,1231,1234,1244,1270,1280],later:[40,41,1001,1013],latest:[1270,1279],layer:[1098,1101,1103,1105,1107,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1251,1252,1253,1261,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1292,1293,1299],layer_norm:1251,layernorm:[1253,1284],layerwis:[1098,1106,1286,1289],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1197,1198,1205],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1226,1227,1228],leaky_relu:[827,1226],learn:[1098,1101,1103,1105,1106,1107,1121,1126,1149,1150,1151,1152,1209,1215,1253,1286,1287,1288,1289,1290,1291,1296,1299],learnabl:[1251,1252,1284,1285],least:43,leav:[15,18,19,40,41,1197,1198,1199,1205,1206],left:[40,41,43,1121,1124,1216,1218,1219,1220,1221,1222,1223,1224,1253],leftmost:[40,41],len:1153,length:[40,41,42,1001,1004,1069,1080,1091],lenton2021ivi:1253,lenton:1253,less:[40,41,43,86,217,401,526,658,857,860,867,869,871,874,1153,1209,1213],less_util_node_str:1153,let:[1296,1299],level:1253,librari:[857,868,1253,1295,1299],lightweight:1253,like:[43,1098,1104,1209,1213,1253,1295,1296,1299],likewis:43,limit:[40,41,42,43,853,854,855,1001,1014,1015,1016],linalg:[29,1122,1123,1124,1125,1126,1127,1128,1129,1253],line:43,linear0:[1253,1295],linear1:1253,linear2:1295,linear:[1001,1034,1053,1121,1226,1227,1228,1229,1234,1242,1253,1270,1271,1272,1273,1274,1275,1276,1277,1295],linear_algebra:[485,486,487,488,871,872,873,874],linear_resampl:[130,296,442,573,706,1001],linearli:[1001,1034],link:[43,1253],linspac:[130,296,442,573,706,1001,1004],list:[15,18,19,40,41,392,393,395,849,850,852,875,876,882,883,884,927,936,937,946,947,949,950,951,953,956,957,971,1001,1004,1008,1010,1059,1078,1079,1088,1093,1149,1150,1151,1153,1197,1198,1199,1201,1205,1206,1234,1235,1236,1237,1238,1239,1240,1241,1253,1254,1259,1260,1270,1271,1272,1273,1274,1275,1276,1277],list_join:[40,41,42],list_stack:[40,41],liter:[871,874],littl:1296,load:[40,41],loaded_kwarg:1153,loader:1253,local:43,local_set:[1001,1042],locat:[43,1001,1052,1209,1210],log1p:[86,401,526,658,857],log2:[86,401,526,658,857],log:[796,857,866,871,873,1001,1055,1121,1127,1133,1153,1247,1248,1249,1250],logarithm:[857,866,867,871,873,1121,1127,1133,1144],logic:[31,857,868,882,883,884,1131,1132,1253],logical_and:[360,793,1130],logical_not:[86,217,401,526,658,857],logical_or:[360,793,1130],logit:[1247,1250],logspac:[130,296,442,573,706,1001],look:[43,1296,1299],loop:[1149,1150,1151,1152],loss:[1248,1249,1250,1253,1295],loss_fn:[1253,1295],lot:1296,low:[40,41,492,1209,1211,1213],lower:[40,41,43,849,851,1001,1058,1209,1213],lower_depth:[1282,1283],lowest:[15,18,19,40,41,1197,1206,1209,1211],lstm:[1234,1244,1253,1270],lstm_updat:[43,1234],machin:[853,854,855,1121,1126,1209,1215,1253,1296,1299],made:43,mai:[857,868,879,880,1001,1004,1025,1029,1253,1296,1299],main:[849,851,871,872,1001,1044,1253],mainli:1253,maintain:[43,879,880],make:[43,492,927,1153,1253,1296],maml:[1149,1150,1151],maml_step:1149,manag:[927,1153],manhattan:[871,874],mani:[40,41,43,1001,1079,1253],manipulation_funct:[875,876],manner:[15,18,19,40,41,43,1197,1206],manual:[1197,1198,1205,1299],map:[40,41,42,927,936,1001,1052,1153,1197,1202,1203,1206,1270,1281,1295],map_cont:[40,41],map_nest_at_index:1197,map_nest_at_indic:1197,map_sequ:[40,41],mapper:[927,936,937,1153],mark:43,mask:[1234,1245,1246],master:43,match:[40,41,1001,1056],match_kwarg:1001,math:[33,491,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1153,1253],mathbb:[1121,1129],mathbf:[1121,1129],mathemat:[848,871,874],matmul:[43,296,442,573,706,1001,1299],matplotlib:1296,matric:[849,851,871,872,1234,1243],matrix:[40,41,849,851,871,872,873,1001,1003,1015,1057,1121,1122,1123,1124,1125,1126,1127,1129,1234,1243,1270,1280],matrix_norm:[40,41,170,354,485,620,783,1121],matter:1253,max:[40,41,396,853,854,855,1001,1015,1016,1027,1058,1071,1072,1153,1216,1218,1286,1288],max_batch_s:[40,41],max_chunk_s:[927,971,1153],max_depth:[40,41,927,931,934,941,949,953,959,1001,1042,1153,1197,1206],max_dev_dim_step_ratio:927,max_freq:[1001,1034],max_length:[40,41],max_node_dim_step_ratio:1153,max_norm:[40,41,1001,1015,1016],max_split_factor_step_s:[927,1153],max_trust_ratio:[1098,1105,1286,1288],maxim:[1253,1296,1299],maximis:1253,maximum:[40,41,42,706,927,949,953,959,971,1001,1006,1014,1015,1016,1034,1098,1105,1153,1197,1206,1216,1218],mayb:[15,18,19],mdi:1153,mean:[40,41,492,927,956,957,958,959,971,1001,1027,1149,1150,1151,1152,1153,1197,1201,1209,1212,1216,1219,1222,1224,1261,1295,1299],measur:[1234,1245,1270,1281],mech:1253,mechan:[1253,1299],medic:1299,member:43,memori:[927,943,966,971,973,976,1153,1234,1244,1253],mention:43,merg:43,merge_with_upstream:43,meshgrid:[296,442,706,1001],messag:[1297,1298],meta:[35,1150,1151,1152,1253],method:[40,41,42,43,492,1001,1008,1019,1059,1071,1072,1098,1105,1106,1153,1197,1198,1205,1206,1253,1270,1281,1282,1283,1296],might:[1001,1025,1299],min:[40,41,396,853,854,855,871,874,1001,1027,1060,1071,1072,1081,1121,1126,1153,1216,1220],min_bas:[1001,1082],min_denomin:[1001,1081],min_dev_dim_s:927,min_node_dim_s:1153,min_sf_tune_step:[927,1153],min_unit_dev_tune_step:927,min_unit_node_tune_step:1153,mind:1253,mini:[1251,1252,1284,1285],minimum:[40,41,706,927,977,981,1001,1004,1007,1008,1014,1039,1040,1073,1074,1081,1082,1153,1216,1220],miss:[1286,1290],ml_framework:[1001,1004,1121,1126],mod:[1001,1033],mod_depth:[1282,1283],mod_height:[1282,1283],mod_with_top_mod_key_chain:[1282,1283],mode:[40,41,485,487,925,926,927,956,957,958,959,971,1121,1126,1128,1153,1296],model:[1253,1295],modul:[40,41,42,59,1001,1061,1153,1253,1254,1256,1257,1258,1259,1260,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1284,1285,1292,1293,1299],moment:[1098,1100,1101,1105,1286,1287,1288],more:[43,875,876,1001,1083,1153,1253,1296,1299],more_util_node_str:1153,most:[40,41,43,1121,1126,1253,1299],move:[40,41,43,927,972,1153],much:[43,1253,1299],multi:[492,1001,1061,1234,1245,1270,1281],multi_head_attent:1234,multi_index_nest:1197,multi_map:[40,41],multi_nod:1153,multidev:[927,938,939,940,959],multidevcontain:[40,41],multidevic:[927,936],multidevit:[927,930,933,936,937,941],multidevitem:[927,929,932],multidevnest:[927,931,934],multiheadattent:[1253,1270],multinod:[1153,1157],multinodecontain:1153,multinodeit:1153,multinodeitem:1153,multinodenest:1153,multinomi:[176,364,492,627,811,1209],multipl:[40,41,882,883,884,1001,1056,1079,1121,1123,1216,1218,1219,1220,1221,1222,1224,1251,1252,1270,1280,1296],multipli:[40,41,1001,1022,1216,1221],multiprocess:[40,41,42,442,706,927,936,1001,1153],must:[40,41,42,43,849,850,851,852,857,858,859,860,861,862,863,865,867,868,869,871,872,874,875,876,879,880,882,883,884,886,905,911,927,956,957,958,959,971,1001,1004,1017,1019,1021,1029,1058,1060,1072,1083,1133,1138,1141,1153,1209,1214,1286,1290],mutabl:[1197,1199,1206],mutlidevic:[927,936],mutlinod:1153,mw_tm1:[1098,1101,1105],mx_concat:1253,mxn:[849,851,871,872],mxnet:[43,1253,1299],my_func:43,mymodel:1253,name:[43,925,926,1295],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1296],nan:[40,41,43,848,857,858,860,861,862,863,864,867,869,882,883,884,1001,1043,1094],nativ:[15,17,18,19,40,41,43,927,943,945,954,955,966,973,976,977,982,989,990,1153,1253,1254,1259,1260],native_modul:[1259,1260],native_module_class:[1259,1260],nativearrai:[15,18,19,43,849,851,853,854,855,857,858,859,860,861,862,863,864,865,866,867,868,869,871,874,875,876,879,880,882,883,884,886,905,911,927,945,971,972,977,981,987,992,993,1001,1002,1003,1004,1006,1007,1008,1009,1010,1012,1014,1015,1016,1017,1018,1020,1021,1022,1023,1026,1027,1028,1029,1031,1032,1033,1034,1036,1037,1041,1043,1044,1045,1052,1053,1054,1055,1057,1058,1059,1060,1063,1064,1065,1068,1069,1070,1071,1072,1077,1079,1080,1083,1085,1086,1088,1089,1090,1091,1093,1094,1095,1096,1097,1153,1197,1199,1206],natur:[857,866,871,873,1121,1127,1133,1144,1299],ncdhw:[1234,1239,1240,1270,1275,1276],nchw:[1234,1237,1238,1241,1270,1273,1274,1277],ncw:[1234,1235,1236,1270,1271,1272],ndarrai:[43,392,393,394,395,396,398,399,492,1001,1089],ndhwc:[1234,1239,1240,1270,1275,1276],nearest:[1001,1070],need:[43,1001,1015,1016,1234,1236,1238,1240,1253,1270,1272,1274,1276,1299],neg:[40,41,857,863,871,874,875,876,882,883,884,1216,1221,1223,1226,1228],negative_slop:1261,neither:1153,nest:[15,16,17,18,19,40,41,42,927,949,953,959,1001,1008,1088,1149,1150,1151,1153,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1282,1283,1286,1287,1288,1289,1290,1291],nested_indices_wher:1197,nested_map:[1153,1197],network:[1234,1243,1253,1254,1256,1270,1282,1283,1299],neural:[1234,1253,1256,1270,1295],never:43,new_node_percent_mem:1153,new_node_util:1153,new_node_utils_kei:1153,new_std:[1251,1252,1284,1285],newli:[43,925,926,1001,1012,1013],newlin:[40,41,42],newshap:[1001,1012,1069],next:[853,854,1153,1282,1283,1286,1287,1288,1289,1290,1291],nhwc:[1234,1237,1238,1241,1270,1273,1274,1277],node:[40,41,1197,1198,1205],node_clon:1153,node_dist:1153,node_dist_arrai:1153,node_dist_it:1153,node_in:1153,node_mapp:1153,node_str:1153,node_to_str:1153,node_util:1153,nodedistit:1153,nodedistitem:1153,nodedistnest:1153,nodemanag:[1153,1164],nodemapp:1153,nodemappermultiproc:1153,noinspect:[43,928,978,979,980,1099,1153],non:[40,41,857,868,871,874,882,883,884,925,926,977,991,1282,1283,1286,1290,1296],none:[40,41,42,43,59,61,64,392,393,395,440,442,443,446,448,455,456,457,458,465,466,467,468,469,470,471,472,473,475,485,486,492,493,849,850,852,853,854,855,871,874,875,876,882,883,884,925,926,927,936,937,943,944,969,970,971,972,977,984,985,986,1001,1004,1008,1024,1025,1030,1035,1036,1037,1042,1044,1046,1047,1048,1049,1050,1054,1055,1061,1063,1064,1065,1068,1071,1072,1073,1074,1079,1080,1081,1082,1091,1092,1097,1098,1101,1103,1105,1106,1107,1113,1114,1118,1121,1124,1126,1149,1150,1151,1152,1153,1197,1198,1201,1205,1206,1209,1210,1211,1212,1213,1216,1218,1219,1220,1221,1222,1223,1224,1234,1236,1238,1240,1243,1244,1245,1246,1251,1252,1259,1260,1261,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293],norm:[40,41,871,874,1001,1015,1016,1121,1124,1252,1253,1285,1286,1288],normal:[1209,1212,1251,1252,1284,1285],normalized_idx:[1251,1252],normalized_shap:[1284,1285],notat:[40,41,1216,1217],note:[43,1121,1126],noth:[40,41,1296],notimplementederror:1153,now:[40,41,43,927,972,1001,1002,1153,1253,1270,1281,1282,1283,1295,1296,1299],np_concat:1253,np_finfo:396,ns_tune_step:1153,num:[442,465,466,1001,1054,1055],num_arrai:[40,41],num_arrays_in_memori:1001,num_arrays_on_dev:927,num_band:[1001,1034],num_channel:[1270,1277],num_chunk:1153,num_chunks_floor:1153,num_class:[1209,1210],num_cpu_cor:927,num_gpu:[123,440,927,1153],num_head:[1234,1245,1270,1281],num_kei:[1234,1245,1246],num_lay:[1270,1279],num_or_size_split:[40,41,442,471,1001,1079],num_output:1153,num_queri:[1234,1245,1246],num_sampl:[442,464,492,493,1001,1053,1114,1115,1209,1210],num_task:[1149,1150,1151,1152],number:[40,41,42,848,853,854,855,857,860,882,883,884,925,926,927,963,964,965,977,988,992,993,1001,1004,1014,1018,1031,1034,1041,1044,1053,1054,1055,1058,1062,1068,1079,1086,1090,1094,1096,1121,1128,1149,1150,1151,1152,1153,1209,1210,1214,1216,1218,1219,1220,1222,1224,1234,1245,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1296,1299],numer:[43,857,860,863,864,865,868,886,905,911,1001,1039,1040,1073,1074,1081,1082,1133,1141,1261],numhead:[1234,1245],numpi:[40,41,43,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,1001,1089,1121,1126,1128,1216,1217,1253,1295,1296,1299],nwc:[1234,1235,1236,1270,1271,1272],obj:[40,41],object:[40,41,42,59,396,853,854,927,977,981,1001,1004,1008,1098,1197,1200,1202,1203,1204,1207,1208,1209,1215,1261,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1282,1283],object_in:[442,446,1001,1008],observ:1153,obvious:43,occupi:[853,854,855,1001,1071,1072],off:[871,872,1001,1004],offer:1253,offset:[871,872,1251,1252],often:1296,old:[40,41],on_init:[1270,1281,1282,1283],onc:[43,927,971,1153,1209,1210,1253],one:[40,41,43,871,874,875,876,927,956,957,958,959,971,977,983,1001,1044,1056,1063,1071,1072,1080,1083,1121,1124,1153,1216,1217,1218,1219,1220,1221,1222,1223,1224,1253,1296,1299],one_hot:[130,442,573,706,1001],onearrai:[1001,1031],ones:[40,41,77,208,392,517,649,849,1001,1044,1063,1065,1253],ones_lik:[130,296,442,573,706,1001],ongo:43,onli:[40,41,43,492,857,868,875,876,927,1121,1126,1153,1197,1198,1199,1205,1286,1287,1288,1289,1290,1291,1295,1296],onlin:[43,1253],onto:[927,956,957,972,1153,1197,1201,1206],oom:[927,1153],open:[1001,1004,1209,1213,1253,1299],opencv:1296,oper:[40,41,1001,1011,1026,1027,1028,1054,1055,1084,1098,1101,1103,1105,1106,1107,1130,1131,1132,1234,1235,1236,1237,1238,1239,1240,1241,1243,1253,1254],operand:[40,41,857,858,860,861,862,867,869,1216,1217],oppos:[1001,1034],optim:[927,1098,1101,1103,1105,1106,1107,1149,1150,1151,1152,1153,1253,1287,1288,1289,1291,1295,1299],optimizer_upd:1098,option:[15,18,19,40,41,42,43,392,393,395,849,850,852,871,874,875,876,882,883,884,925,926,927,936,937,945,949,950,951,952,953,956,957,958,959,966,969,970,971,972,976,977,982,987,991,1000,1001,1003,1004,1006,1007,1008,1015,1016,1017,1022,1024,1025,1034,1035,1036,1037,1041,1043,1044,1051,1053,1054,1055,1056,1059,1061,1063,1064,1065,1068,1071,1072,1075,1077,1079,1080,1081,1082,1083,1091,1093,1094,1097,1098,1101,1103,1104,1105,1106,1107,1109,1114,1118,1121,1124,1126,1149,1150,1151,1152,1153,1197,1198,1199,1201,1205,1206,1209,1210,1216,1218,1219,1220,1221,1222,1223,1224,1226,1227,1231,1234,1242,1243,1245,1246,1247,1248,1249,1250,1251,1252,1259,1260,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1296],ord:[871,874,1121,1128],order:[40,41,42,43,871,874,875,876,879,880,1098,1101,1103,1105,1106,1107,1121,1124,1149,1150,1151,1292,1293],ordered_node_util_kei:1153,org:1299,organ:43,origin:[40,41,42,1001,1065,1069,1097,1121,1124],other:[40,41,43,886,888,889,894,896,897,901,903,904,905,906,907,909,911,912,913,914,915,916,918,919,920,922,923,924,925,926,1001,1003,1004,1044,1098,1102,1209,1213,1253,1295,1296,1299],other_i:[43,886,905,911],otherwis:[15,16,17,18,19,40,41,857,863,864,871,874,882,883,884,927,944,977,984,985,986,1001,1011,1091,1092,1095,1098,1104,1109,1113,1149,1150,1151,1153,1216,1218,1219,1220,1222,1224],our:[43,1253,1299],out:[43,492,849,850,851,852,853,854,855,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,874,875,876,879,880,882,883,884,886,905,1001,1004,1133,1137,1234,1242,1244,1253,1270,1278],out_feat_dim:[1234,1245],out_featur:[1234,1242,1243],out_i:[857,863,864],outdat:1299,outer:[1149,1150,1151,1152],outer_batch_fn:[1149,1150,1151],outer_batch_shap:[1234,1243],outer_cost_fn:[1149,1150,1151],outer_v:[1149,1150,1151],outlin:1296,output:[40,41,43,849,850,852,875,876,927,936,937,971,1001,1004,1013,1035,1044,1068,1086,1098,1102,1133,1138,1153,1209,1211,1212,1213,1234,1236,1238,1240,1242,1244,1245,1246,1253,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281],output_ax:[927,971,1153],output_axi:1153,output_channel:[1270,1271,1272,1273,1274,1275,1276,1279,1280],output_queu:1153,output_shap:[1234,1236,1238,1240,1270,1272,1274,1276],outsid:[1001,1014],over:[40,41,871,874,882,883,884,1121,1124,1209,1213,1216,1218,1219,1220,1222,1224,1251,1252,1284,1285],overal:1296,overflow:[1001,1004],overhead:1296,overrid:[1001,1063,1065,1097],overriden:[1286,1290],overwrit:[40,41,927,971,1153],overwrite_at_key_chain:[40,41],own:[1253,1296,1299],packag:[43,1296],pad:[1001,1018,1034,1096,1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277],pad_width:[442,1001,1018,1096],page:1253,pair:[1234,1246],parallel:[927,936,937,1153],parallelis:[927,936,937,1153],param:[40,41,42,442,456,457,927,971,1001,1002,1036,1037,1063,1064,1153,1282,1283,1295],paramet:[15,16,17,18,19,40,41,42,43,871,872,873,886,905,911,925,926,927,936,937,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,966,969,970,971,972,973,976,977,981,982,983,987,988,989,990,991,992,993,1000,1001,1003,1004,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1020,1021,1022,1023,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1041,1043,1044,1045,1047,1048,1049,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1064,1065,1068,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1109,1111,1112,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1259,1260,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295],parameter:[1209,1212,1213],pardo:1253,pars:[1001,1019],part:[849,851,1098,1101,1103,1105,1106,1107,1133,1137,1253,1282,1283,1296],partial:[40,41,43,1282,1283],particl:1299,particular:[43,1299],pass:[40,41,42,43,927,936,971,977,982,1001,1013,1098,1112,1149,1150,1151,1153,1259,1260,1282,1283,1286,1290,1292,1293],pattern:[40,41,1001,1026,1027,1028],peopl:43,per:[927,1153,1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277],percent_used_mem_on_dev:927,percent_used_mem_on_nod:1153,percentag:[927,966,1153],perf_count:1153,perform:[40,41,43,882,883,884,927,1001,1006,1007,1022,1026,1027,1028,1047,1048,1049,1053,1054,1055,1098,1101,1103,1105,1106,1107,1114,1115,1149,1150,1151,1152,1153,1197,1202,1203,1216,1218,1219,1220,1221,1222,1223,1224,1226,1231,1234,1242,1244],period:43,permissable_step:1153,permit:43,permut:[492,1001,1085,1091],perpendicular:[1001,1021],person:[43,1253],physci:1299,pickl:[40,41,1153],pickle_filepath:[40,41],pinv:[354,783,1121],pip:1253,pipelin:1295,pkk:1299,pkkm1:1299,pkm1km1:1299,place:[40,41,43,849,850,852,927,972,1001,1031,1035,1047,1048,1049,1153,1286,1287,1288,1289,1290,1291],placehold:[43,1197,1206],pleas:[43,492,1121,1126],point:[43,848,849,850,852,853,854,857,858,860,861,862,867,869,871,874,977,992,1001,1004,1133,1141],popul:[40,41,1209,1210],popular:1299,population_s:[492,493,1209,1210],portabl:[1253,1254],posit:[15,16,17,853,854,857,863,882,883,884,927,949,953,959,1001,1002,1004,1031,1034,1153,1209,1214,1259,1260],possibi:[40,41],possibl:[43,1001,1056,1088,1114,1119,1299],post:[1251,1252],post_shap:[40,41],power:[43,886,911,917,1001,1039,1073,1082,1261],practic:1253,pre:[927,1153,1253],pre_shap:[40,41],precis:[853,854,857,869],pred:[1247,1248,1249,1250],predict:[1247,1248,1249,1250,1299],preprint:1253,present:[40,41],preserv:[40,41,42,875,876,1098,1109],preserve_typ:[40,41,476,479,1098,1109],press:1253,prevent:[43,1098,1100,1101,1105,1153,1286,1287,1288],prevet:43,previou:[1098,1101,1105],previous:[1001,1013],prime:1253,print:[40,41,42,927,967,1001,1066,1253,1295],print_all_arrays_in_memori:1001,print_all_arrays_on_dev:927,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1286,1290],prob:[492,493,1209,1210,1234,1242,1270,1278],probabl:[1209,1210,1234,1242,1270,1278],problem:[43,1299],process:[43,927,936,937,966,976,1001,1061,1153],process_specif:[927,966,976,1153],prod:[40,41,1001,1027],produc:[927,936,937,1153],product:[40,41,1001,1021,1022,1057,1216,1217,1234,1245,1246,1270,1281],profil:[123,290,440,566,698,927,1153],progress:43,project:[1253,1295,1296,1299],promot:[43,857,858,859,861,862,867,869,871,874,886,911,1133,1141],prompt:1253,properli:43,properti:[40,41,396,927,939,1153,1282,1283,1286,1287,1288,1289,1291],provid:[40,41,43,875,876,882,883,884,925,926,927,944,977,984,985,986,991,1000,1001,1025,1063,1065,1072,1097,1098,1101,1103,1105,1106,1107,1113,1153,1253,1270,1279,1286,1287,1288,1289,1290,1291,1296],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1121,1125],pull:[1253,1254],pure:[40,41,1253,1299],purpos:[43,1299],put:1153,pybroadexcept:1153,pyprotectedmemb:1153,pyshadowingbuiltin:43,pyshadowingnam:[928,978,979,980,1099,1153],python:[40,41,927,966,976,1001,1004,1153,1253],pytorch:[1098,1101,1103,1105,1106,1107,1121,1126,1253,1286,1287,1288,1289,1290,1291,1295,1296,1299],pyunresolvedrefer:1153,quadrant:[1133,1138],qualiti:43,queri:[40,41,886,900,921,927,960,970,1153,1234,1245,1246,1270,1281],query_dim:[1270,1281],query_kei:[40,41],queue:[40,41,42,927,936,937,1001,1067,1075,1153],queue_class:[927,936,937,1153],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1001,1153],quick:[492,1253],quickli:[43,1295],radian:[857,861,1133,1134,1136,1138,1145,1147],rai:[1133,1134],rais:[40,41,43,882,883,884,886,911,1001,1011,1039,1073,1080,1082,1092,1153,1282,1283,1286,1290],ram:[927,966,973,976,1153],randint:[176,364,492,627,811,1209],random:[37,40,41,493,1210,1211,1212,1213,1214,1215,1253],random_crop:1114,random_norm:[176,364,492,627,811,1209],random_uniform:[176,364,492,627,811,1209],randomli:[492,1114,1118,1234,1242,1270,1278],rang:[492,1001,1004,1054,1055,1133,1138,1153,1253,1295,1299],rank:[871,874,882,883,884,1001,1018,1093,1096],rate:[1098,1101,1103,1105,1106,1107,1149,1150,1151,1152,1270,1281,1286,1287,1288,1289,1290,1291],rather:[40,41,43,927,971,1001,1004,1051,1098,1104,1153],ratio:[927,1098,1105,1114,1119,1153,1286,1288],raw:[40,41,1121,1126],raw_delta:1153,reach:[43,927,949,953,959,1153,1197,1206],read:[40,41],readi:[1153,1295],real:[1133,1134,1137],realiti:1296,rearrang:[40,41,1001,1026,1028],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1149,1151],receiv:[43,927,936,937,1001,1005,1056,1153,1270,1280],receivess:[927,1153],receivng:[1149,1152],recev:[1149,1150,1151],recognit:1299,recommend:[857,868,1253],rectifi:[1226,1228,1229],recurr:[1234,1244],recurrent_bia:[1234,1244],recurrent_kernel:[1234,1244],recurs:[40,41,1197,1198,1199,1205,1206],redefin:43,reduc:[40,41,882,883,884,927,971,1001,1027,1121,1126,1153,1216,1218,1219,1220,1221,1222,1223,1224],reduce_max:[40,41,183,369,494,632,818,1216],reduce_mean:[40,41,183,369,494,632,818,1216,1253,1295],reduce_min:[40,41,183,369,494,632,818,1216],reduce_prod:[40,41,183,369,494,632,818,1216],reduce_std:[40,41,369,1216],reduce_sum:[40,41,183,369,494,632,818,1153,1216],reduce_var:[40,41,183,369,494,632,818,1216],reduct:[39,40,41,442,469,470,882,883,884,1001,1027,1071,1072,1217,1218,1219,1220,1221,1222,1223,1224,1253],refactor:43,refer:[43,857,866,882,883,884,1098,1100,1101,1121,1129,1270,1280,1299],reflect:43,reflected_oper:[0,13,14],regard:[927,1153],regardless:[40,41,925,926],register_paramet:1295,reimplement:1299,rel:[871,872,875,876,879,880,1098,1101,1103,1105,1106,1107],rel_slice_obj:1153,relat:43,relev:[1286,1287,1288,1289,1290,1291],relu:[827,1226,1227,1228,1253,1295],remain:[43,1001,1069,1197,1201],remaind:[40,41,1001,1033,1079],remov:[40,41,43,871,872,1001,1080,1149,1150,1151],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,875,876],rep:[1001,1086],repeat:[40,41,43,296,706,1001,1028,1086,1153,1296],repeated_config_check:[927,1153],repeatedli:[1197,1204],repetit:[40,41,1001,1068,1086],replac:[40,41,43,492,493,1001,1014,1071,1072,1209,1210],repo:[43,1253],repositori:43,repres:[43,857,858,862,977,983,988,1234,1243],represent:[40,41,42,43,848,853,854,855,857,859,927,954,955,977,983,989,990,1001,1078,1088,1153],reptil:[1149,1152],reptile_step:1149,request:[1253,1254],requir:[43,857,869,925,926,977,981,1001,1004,1008,1259,1260],resampl:[1001,1053],reserv:43,reshap:[40,41,43,492,706,1001],reshape_lik:[40,41],respect:[857,859,865,886,905,1001,1029,1098,1100,1101,1102,1103,1105,1106,1107,1121,1126,1133,1141,1149,1150,1151,1152],respond:43,respons:[43,1153],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,874,882,883,884,886,905,911,927,936,1001,1004,1029,1071,1072,1083,1121,1124,1130,1131,1132,1133,1141,1153,1216,1218,1219,1220,1221,1222,1223,1224,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1253],ret:1153,ret_dict:1153,ret_fn:[927,936,937,1153],retain:[1098,1102],retain_grad:[476,477,1098,1102],retreiv:1153,retrn:[1001,1078],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1149,1150,1151,1152],return_sequ:[1270,1279],return_st:[1270,1279],rev:[1001,1025],revers:[40,41,875,876,1001,1025,1091],review:43,right:[40,41,43],rk_e:1299,robot:1253,ronald:1253,root:[43,857,869],round:[296,442,706,857,860,869,1001,1004,1153],row:[1001,1044,1209,1210],rule:[43,886,911,1001,1004,1133,1141],run:[43,927,936,1098,1100,1101,1105,1149,1150,1151,1152,1153,1253,1254,1270,1281,1282,1283],safe:[927,936,1153],safety_factor:[927,1153],same:[15,16,17,40,41,43,849,851,857,860,871,872,875,876,879,880,927,936,937,971,972,977,981,1001,1002,1017,1032,1033,1036,1037,1063,1065,1070,1071,1072,1083,1097,1098,1104,1109,1121,1128,1133,1137,1149,1150,1151,1153,1216,1217,1234,1235,1236,1237,1238,1239,1240,1241,1253,1270,1271,1272,1273,1274,1275,1276,1277,1295,1299],same_arrai:[40,41],sampl:[1001,1053,1114,1115,1209,1210,1212,1213,1234,1242,1253,1270,1278],satisfi:[1001,1008,1121,1123,1129],save:[40,41,1001,1076,1087,1114,1116,1282,1283],save_dir:[440,441,927,942,1153],save_weight:[1282,1283],scalar:[871,874,1001,1014,1063,1090,1094],scale:[927,969,970,1098,1106,1153,1234,1242,1245,1246,1251,1252,1270,1278,1281,1286,1289],scaled_dot_product_attent:1234,scatter:[1001,1063,1071,1072],scatter_flat:[130,296,442,573,706,1001],scatter_nd:[130,296,442,573,706,1001],scene:[1098,1101,1103,1105,1106,1107],schemat:1253,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,857,859,865,871,872,927,958,1001,1009,1021,1029,1067,1075,1085,1098,1100,1101,1105,1149,1151,1153,1286,1287,1288],secondli:1299,sector:[857,858],see:[43,59,396,440,441,492,857,859,865,871,874,882,883,884,886,905,911,927,939,940,941,942,977,1001,1004,1054,1055,1098,1133,1141,1253,1261,1263,1264,1266,1267,1269],seed:[40,41,176,492,811,1209],seed_valu:[40,41,492,1209,1214],seem:1253,seen_set:[1001,1042],select:[1001,1008,1080,1296,1299],self:[40,41,43,59,396,440,441,886,905,911,927,939,940,941,942,977,1098,1153,1253,1261,1263,1264,1266,1267,1269,1286,1290,1295,1299],self_i:[886,905],sent:1153,seper:[43,1001,1034],seq:[40,41,42,1216,1217,1282,1283],sequenc:[15,16,17,40,41,42,43,492,925,926,927,936,937,946,947,948,949,950,951,952,953,956,957,971,977,981,1001,1004,1008,1010,1012,1017,1018,1044,1056,1059,1064,1068,1069,1072,1079,1083,1086,1091,1096,1098,1102,1114,1118,1119,1121,1124,1153,1197,1208,1209,1211,1213,1216,1218,1219,1220,1221,1222,1223,1224,1234,1235,1236,1237,1238,1239,1240,1241,1251,1252,1259,1260,1270,1271,1272,1273,1274,1275,1276,1277,1279,1282,1283,1284,1285,1286,1290,1292,1293],sequenti:1253,seri:43,set:[15,18,19,40,41,879,880,927,956,957,969,970,971,1001,1003,1024,1044,1073,1074,1075,1076,1098,1101,1103,1104,1105,1106,1107,1121,1124,1153,1197,1198,1205,1207,1208,1209,1210,1214,1216,1218,1219,1220,1221,1222,1223,1224,1253,1270,1279,1286,1287,1288,1289,1290,1291,1296,1299],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:927,set_default_dtyp:977,set_default_float_dtyp:977,set_default_int_dtyp:977,set_default_nod:1153,set_exception_debug_mod:44,set_framework:[40,41,43,59,1153,1253,1295,1296,1299],set_ivy_backend:[40,41],set_min_bas:1001,set_min_denomin:1001,set_nest_at_index:1197,set_nest_at_indic:1197,set_queue_timeout:1001,set_split_factor:[927,1153],set_stat:[1286,1287,1288,1289,1290,1291],set_tmp_dir:1001,set_with_grad:1098,setter:1153,sever:1299,sgd:[1253,1286],shape0:1153,shape:[40,41,43,392,393,395,442,455,470,492,706,849,850,851,852,871,872,875,876,879,880,927,939,977,981,1001,1002,1012,1017,1018,1031,1032,1033,1035,1037,1041,1044,1063,1064,1065,1068,1069,1070,1071,1072,1078,1080,1083,1096,1097,1114,1118,1121,1123,1126,1133,1137,1138,1153,1209,1211,1212,1213,1216,1217,1234,1236,1238,1240,1270,1272,1273,1274,1275,1276,1277,1284,1285],shape_slic:[40,41],shape_to_tupl:1001,share:[40,41,1253,1296],shift:1153,should:[40,41,42,43,492,849,851,857,858,859,860,861,862,863,864,865,867,868,869,871,872,874,886,905,911,925,926,927,1001,1012,1013,1019,1063,1069,1098,1101,1103,1105,1106,1107,1133,1141,1153,1216,1217,1253],show:[40,41,1253,1299],show_mod_in_top_mod:[1282,1283],show_structur:[1282,1283],show_sub_contain:[40,41],show_v:[1282,1283],show_v_in_top_v:[1282,1283],shown:[40,41],shp:1153,shuffl:[40,41,176,492,811,1209],shuffle_h5_fil:[40,41],side:43,sigmoid:[827,1226,1253,1295],sign:[871,873,1121,1127],signatur:[43,59,396,440,441,442,476,481,485,489,490,492,927,939,940,941,942,977,1098,1261,1263,1264,1266,1267,1269],signific:1299,similar:[43,1234,1245,1270,1281],similarli:[1121,1126],simpl:[43,1001,1030,1253,1296,1299],simpler:43,simplest:1296,simpli:[40,41,43,1253,1296,1299],simultan:1253,sin:[796,1001,1034,1133,1147,1296],sinco:1296,sine:[857,858,1133,1136,1145,1146],singl:[40,41,925,926,927,936,937,956,957,958,959,1001,1080,1090,1094,1114,1119,1153,1209,1212,1213,1216,1218,1219,1220,1221,1222,1223,1224,1253,1296,1299],singleton:[871,874,882,883,884],singular:[1121,1128],sinh:[796,1133],siren:[1253,1261],situat:43,size:[40,41,42,442,469,871,872,882,883,884,927,950,951,952,953,969,970,971,1001,1004,1012,1054,1055,1071,1079,1114,1118,1121,1124,1128,1153,1209,1210,1212,1213,1216,1218,1219,1220,1221,1222,1223,1224,1270,1271,1272],size_ordered_arrai:[40,41],skew:[1121,1129],skinv:1299,skip:[40,41],slice:[40,41,1001,1036,1037,1153,1197,1204],slice_kei:[40,41],slice_obj:[40,41,1153],slice_via_kei:[40,41],slide:[1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277],slodget:[871,1121],slogdet:[226,415,540,672,783,871,873,1121,1127],slope:[1226,1228],small:[1247,1248,1249,1250,1251,1252,1253,1284,1285,1296],smaller:[1001,1014],smallest:[40,41,853,854,855,857,860,1001,1007],smallest_norm:[396,853,854],softmax:[192,503,827,1226,1234,1245,1246],softplu:[827,1226],solut:43,solv:1299,some:[40,41,43,1001,1004,1098,1100,1101,1103,1105,1106,1107,1112,1234,1242,1253,1270,1278,1296,1299],some_backend:43,some_namespac:43,someth:[43,1299],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,880,1121,1128,1153],sort_by_kei:[40,41],sorting_funct:[879,880],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,849,850,851,852,853,854,855,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,873,874,875,876,879,880,882,883,884,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,929,930,931,932,933,934,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1256,1257,1258,1259,1260,1261,1263,1264,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1297,1298,1299],space:[1001,1004,1034,1054,1055],spars:[1247,1250],sparse_cross_entropi:1247,spawn:[1001,1061],special:[43,857,858,860,861,862,867,869],specif:[40,41,43,857,868,927,969,1001,1019,1026,1027,1028,1061,1149,1150,1151,1152,1153,1209,1215,1253,1282,1283,1295,1296],specifc:[1209,1210],specifi:[40,41,43,849,850,851,852,871,872,874,875,876,879,880,882,883,884,927,946,947,948,949,950,951,952,953,956,957,961,963,967,970,971,972,977,981,983,1001,1004,1006,1007,1008,1014,1017,1018,1035,1036,1037,1043,1054,1055,1083,1093,1096,1121,1124,1153,1197,1202,1203,1207,1208,1216,1217,1218,1219,1220,1221,1222,1223,1224],sphinx:43,split:[40,41,130,296,442,573,706,927,936,950,951,952,953,969,970,971,1001,1056,1153],split_arg:1153,split_factor:[927,936,1153],split_func_cal:[927,1153],split_siz:1153,spread:[927,959,1153],sqrt:[86,217,401,526,658,857,871,874],squar:[857,869,871,873,1001,1044,1121,1123,1127],squeez:[130,296,442,573,706,1001],stabil:[879,880,1001,1081,1082],stabl:[879,880,1001,1039,1040,1073,1074,1081,1082],stable_divid:1001,stable_pow:1001,stack:[40,41,296,706,849,851,871,872,1001,1114,1119,1197,1198,1205,1270,1279],stack_imag:[166,350,481,616,779,1114],stacked_dim_s:1153,stage:43,standard:[40,41,853,854,1209,1212,1216,1222,1251,1252,1253,1254,1284,1285],start:[40,41,43,440,441,442,443,465,466,492,927,942,1001,1004,1054,1055,1153,1253,1296],starting_index:[40,41],starting_split_factor:[927,1153],state:[1153,1234,1244,1253,1256,1257,1258,1259,1260,1261,1263,1264,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1295],statement:1296,static_argnam:[442,448,925,926],static_argnum:[442,448,925,926],std:[492,1209,1212],step:[40,41,442,443,927,1001,1004,1054,1055,1098,1100,1101,1103,1105,1106,1107,1149,1150,1151,1152,1153,1253,1286,1287,1288,1289,1290,1291,1295,1299],stephen:1253,stick:1253,still:[40,41,43],stochast:[1286,1291],stop:[40,41,440,441,442,443,465,466,927,942,971,1001,1004,1054,1055,1098,1101,1103,1105,1106,1107,1109,1149,1150,1151,1152,1153,1286,1287,1288,1289,1290,1291],stop_gradi:[40,41,345,476,611,773,927,971,1098,1101,1103,1105,1106,1107,1149,1150,1151,1152,1153,1286,1287,1288,1289,1290,1291],stopiter:1153,store:[40,41,1001,1034,1079,1098,1112,1282,1283],store_var:[1282,1283],str:[15,16,17,40,41,42,43,392,393,395,396,398,399,853,854,855,925,926,927,936,937,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,971,977,982,983,988,989,990,991,992,993,1000,1001,1008,1024,1026,1027,1028,1059,1061,1064,1071,1072,1121,1124,1126,1149,1150,1151,1152,1153,1197,1201,1216,1217,1259,1260,1270,1281,1282,1283],str_to_nod:1153,straight:1296,strength:[1253,1299],stride:[1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277],string:[40,41,43,927,943,945,954,955,960,966,972,973,976,977,981,987,989,990,991,1000,1001,1004,1008,1024,1044,1064,1065,1097,1153,1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277,1282,1283],structur:[40,41,42,43,1001,1019],structural_diff:[40,41],style:43,sub:[40,41,43,871,872,927,950,951,956,957,958,959,1001,1079,1149,1150,1151,1152,1153],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1153,sub_mod:[1282,1283],sub_modul:[1292,1293],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1253,1254,1284,1285,1292,1293],subsequ:43,subset:43,substr:[40,41],suffici:[1121,1126],suggest:1253,suitabl:[1114,1119],sum:[40,41,442,469,470,871,874,927,956,957,958,959,971,1001,1023,1027,1071,1072,1153,1216,1217,1223],summat:[40,41,1216,1217],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,419,421,425,428,429,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,483,484,486,487,488,491,493,495,496,497,498,499,500,501,504,505,507,508,509,510,511,512,513,518,519,520,522,523,524,527,528,529,530,531,532,533,534,535,536,537,538,541,542,543,544,546,550,553,554,562,567,568,569,570,571,572,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,612,613,614,615,617,618,619,621,622,623,624,628,629,630,631,633,634,635,636,637,638,639,643,644,645,650,651,652,654,655,656,659,660,661,662,663,664,665,666,667,668,669,670,673,674,675,676,678,682,685,686,694,699,700,701,702,703,704,705,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,774,775,776,777,778,780,781,782,784,785,786,787,788,789,790,791,792,794,795,797,798,799,800,801,802,803,804,805,806,807,808,809,810,812,813,814,815,816,817,819,820,821,822,823,824,825,828,829,830,831,832,833,834,836,837,839,840,841,842,843,844,845,850,851,852,854,855,857,858,859,860,861,862,863,864,865,866,867,868,869,871,872,873,874,876,880,883,884,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,926,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1131,1132,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1252,1253,1257,1258,1260,1262,1263,1264,1265,1266,1267,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1285,1286,1287,1288,1289,1290,1291,1293,1294,1295,1296,1298,1299],supports_inplac:1001,suppos:1299,sure:43,svd:[354,620,783,1121],swap:[40,41,1001,1085],swapax:[40,41,573,706,1001,1299],symmetr:[1121,1129],syntax:[440,442,476,481,485,489,490,492],tab:1253,take:[43,1001,1053],taken:[43,871,872,1216,1218,1219,1220,1222,1224],tan:[796,1133,1137],tangent:[1133,1137,1138,1139,1147,1148,1226,1233],tanh:[796,827,1133,1226],target:[40,41,927,943,946,947,948,949,950,951,952,953,956,957,958,959,972,1153,1253],target_dict:[40,41],task:[43,1149,1150,1151,1152],team:[43,1299],templat:1253,temporari:[1001,1076,1087],tensor:[40,41,43,442,469,470,927,945,977,987,1001,1004,1006,1007,1012,1054,1055,1058,1060,1063,1064,1065,1069,1071,1072,1079,1097,1153,1209,1210,1211,1234,1242,1244,1253,1270,1278,1280,1286,1287,1288,1289,1290,1291,1295,1296],tensorflow:[43,1121,1126,1234,1236,1238,1240,1253,1270,1272,1274,1276,1296,1299],term:[40,41,43,1234,1244,1253,1270,1280],termcolor:[40,41,42],termin:[40,41,42,1153],test:[43,857,863,864,882,883,884,977,992,993],test_array_api:43,tf_concat:1253,than:[40,41,43,853,854,857,860,867,869,871,874,875,876,927,971,1001,1004,1014,1032,1051,1058,1080,1083,1098,1104,1153,1209,1213,1253,1296],thei:[40,41,43,1133,1138,1149,1150,1151,1209,1210,1253,1292,1293,1296],them:[1253,1299],themselv:[1197,1198],therefor:43,thi:[40,41,42,43,857,868,871,873,927,949,953,959,966,971,976,1001,1004,1034,1067,1069,1075,1098,1101,1103,1104,1105,1106,1107,1112,1121,1124,1127,1153,1197,1201,1206,1216,1218,1219,1220,1221,1222,1223,1224,1234,1243,1253,1282,1283,1286,1287,1288,1289,1290,1291,1295,1296,1299],thing:[43,1253],those:[40,41,43,1001,1014,1098,1112,1121,1128,1153],though:43,thought:43,threshold:[1001,1058,1060],through:[40,41,43],tick:43,tickbox:43,tile:[296,573,706,1001],time:[43,1001,1086,1098,1101,1105,1149,1150,1151,1152,1153,1209,1210,1234,1244,1270,1281,1282,1283,1299],timeout:[40,41,42,927,936,937,1001,1067,1075,1153],timestep:[1234,1244,1270,1279],titl:[43,1253],tmp_dir:1001,tmp_dr:[1001,1076],to_appli:[40,41],to_clon:[927,1153],to_dev:[40,41,123,290,440,566,698,927],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[927,1153],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1253],to_ivy_modul:[194,835,1253,1259],to_json:[40,41],to_kv_fn:[1234,1245],to_kv_v:[1234,1245],to_list:[40,41,442,706,1001],to_multi_dev:[40,41],to_mut:[1197,1199,1206],to_n:[15,40,41,1253],to_nod:1153,to_numpi:[40,41,442,706,1001,1253,1295],to_out_fn:[1234,1245],to_out_v:[1234,1245],to_q_fn:[1234,1245],to_q_v:[1234,1245],to_raw:[40,41],to_scalar:[442,706,1001],todo:[1153,1253,1254],togeth:[40,41,1292,1293],tool:[1253,1296],top_mod:[1282,1283],topic:1299,torch:[43,925,926,1253,1295,1296,1299],torch_concat:1253,torchfcmodel:1295,total:[40,41,42,927,973,1153],total_mem_on_dev:927,total_mem_on_nod:1153,tpu:[927,974,1153],tpu_is_avail:[440,566,698,927,1153],tpye:[977,988],trace:[40,41,1001,1051],track:[43,927,1153,1197,1206,1282,1283],track_submod_call_ord:[1282,1283],track_submod_ret:[1282,1283],trail:[1284,1285],train:[1098,1100,1101,1105,1253,1254],trainabl:[1098,1104,1253,1254,1259,1260,1282,1283,1292],trainer:1253,tran:1299,transform:[1234,1242,1243],transpos:[40,41,130,296,442,706,927,958,1001,1153,1234,1236,1238,1240,1270,1272,1274,1276],travers:[15,18,19,40,41,1197,1206],treat:[40,41,925,926],tri:[40,41],triangular:[849,851],trigonometr:[1133,1134,1137,1145],tril:[77,208,392,517,649,849],trim_kei:[40,41],trust:[1098,1105,1286,1288],truth:[857,865,886,905,1001,1029,1130,1131,1132],try_else_non:1001,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[927,1153],tune_dev_alloc:927,tune_dev_split:927,tune_node_alloc:1153,tune_node_split:1153,tune_step:[927,1153],tupl:[15,16,17,18,19,40,41,43,392,393,395,849,850,852,871,874,875,876,882,883,884,925,926,1001,1018,1034,1035,1078,1096,1153,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1211,1216,1218,1219,1220,1221,1222,1223,1224],tutori:43,two:[40,41,849,851,871,872,873,1001,1004,1009,1021,1057,1085,1121,1124,1127,1128],type:[15,18,40,41,42,43,59,398,399,440,441,849,850,851,852,854,855,857,858,859,860,861,862,863,864,865,867,868,869,871,872,874,875,876,879,880,882,883,884,886,905,911,927,939,940,941,942,954,955,959,971,977,981,982,983,987,988,989,990,991,992,993,1000,1001,1002,1004,1008,1017,1019,1029,1032,1033,1035,1044,1051,1063,1064,1065,1070,1084,1094,1097,1098,1104,1109,1133,1141,1153,1253,1261,1263,1264,1266,1267,1269,1282,1283,1296],types_to_iteratively_nest:[40,41,42],uint8:[1114,1116,1120],uint8_img_to_float_img:1114,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[857,859],underwai:43,unecessari:43,unfairli:43,unif:1153,unifi:[40,41,927,956,957,958,959,971,1153,1253],uniform:[40,41,1209,1210,1212,1213,1261,1263,1264,1267,1268],uniformli:[1209,1211,1213],unify_arrai:1153,unify_it:1153,unify_nest:1153,union:[15,18,19,40,41,43,392,393,395,396,398,399,849,850,851,852,853,854,855,857,858,859,860,861,862,863,864,865,866,867,868,869,871,874,875,876,879,880,882,883,884,886,905,911,925,926,927,945,950,951,952,953,971,972,977,981,982,983,987,988,989,990,991,992,993,1000,1001,1002,1003,1004,1006,1007,1008,1009,1010,1012,1014,1015,1016,1017,1018,1020,1021,1022,1023,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1041,1043,1044,1045,1052,1053,1054,1055,1057,1058,1059,1060,1063,1064,1065,1068,1069,1070,1071,1072,1077,1078,1079,1080,1083,1085,1086,1088,1089,1090,1091,1093,1094,1095,1096,1097,1153,1197,1198,1199,1205,1206],uniqu:[927,936,937,1149,1150,1151,1152,1153,1197,1201],unique_kwarg:1153,unit:[43,927,1133,1134,1136,1153,1226,1227,1228,1229],unitari:[1121,1128],unless:[1001,1063,1065,1097],unlik:[927,1153],unnorm:[1209,1210],unpack:[1001,1093],unrol:[1234,1244],unset:1296,unset_debug_mod:44,unset_default_devic:927,unset_default_dtyp:977,unset_default_float_dtyp:977,unset_default_int_dtyp:977,unset_framework:[59,1296],unset_with_grad:1098,unstack:[40,41,130,296,442,573,706,1001],until:43,unus:[925,926],updat:[40,41,442,469,470,927,936,1001,1049,1071,1072,1098,1100,1101,1103,1105,1106,1107,1149,1150,1151,1153,1197,1202,1203,1207,1208,1234,1244,1253,1254,1259,1260,1286,1287,1288,1289,1290,1291,1296,1299],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1209,1213],upper_depth:[1282,1283],upstream:43,usabl:[1253,1299],usag:[927,971,1153],use:[40,41,42,43,492,927,936,937,962,974,1001,1068,1081,1082,1121,1126,1153,1234,1245,1251,1252,1253,1284,1285,1296,1299],used:[40,41,43,492,871,872,927,936,966,969,970,976,977,988,1001,1039,1040,1056,1065,1071,1072,1073,1074,1097,1098,1105,1106,1121,1124,1149,1150,1151,1152,1153,1197,1206,1270,1281,1286,1288,1289,1295,1296],used_dev:[927,936],used_mem_on_dev:927,used_mem_on_nod:1153,used_node_str:1153,used_node_strs_dict:1153,useful:[40,41,927,971,1153,1234,1243,1253,1296],user:[1253,1270,1281,1282,1283,1296,1299],uses:1253,using:[40,41,43,1098,1100,1101,1197,1200,1204,1216,1217,1234,1242,1246,1253,1270,1278,1295,1296,1299],util:[927,960,1153],utility_funct:[882,883,884],v_with_top_v_key_chain:[1282,1283],val:[40,41,442,460,461,462,886,921,1001,1047,1048,1049,1073,1074],valid:[882,883,884,977,982,1001,1081,1082,1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277],valid_dtyp:977,valu:[40,41,442,857,860,865,871,873,874,879,880,886,905,927,939,970,971,1001,1002,1004,1006,1007,1014,1015,1016,1018,1019,1025,1029,1034,1035,1036,1037,1052,1054,1055,1058,1060,1067,1068,1069,1070,1071,1072,1073,1074,1075,1091,1094,1095,1096,1098,1102,1105,1114,1120,1121,1127,1128,1130,1131,1132,1133,1142,1143,1144,1149,1150,1151,1153,1197,1201,1202,1203,1207,1208,1209,1212,1213,1216,1218,1220,1234,1245,1246,1251,1252,1270,1281,1284,1285,1286,1288],value_is_nan:1001,vanilla:[1149,1151],var_shap:1261,variabl:[15,16,17,18,19,40,41,345,476,611,773,1001,1011,1047,1048,1049,1050,1051,1084,1098,1101,1102,1103,1104,1105,1106,1107,1109,1112,1149,1150,1151,1152,1234,1245,1251,1252,1259,1260,1261,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293],variable_data:[476,773,1098],varianc:[40,41,1216,1224,1299],varieti:1296,variou:[43,1253],vector:[40,41,485,488,871,874,1001,1016,1021,1121,1128,1129,1234,1243,1270,1280],vector_norm:[40,41,100,226,415,540,672,871],vector_to_skew_symmetric_matrix:[170,354,485,620,783,1121],verbos:1298,veri:[43,1253],verifi:43,version:43,via:[1197,1198,1205,1296],view:[1114,1119],vision:1253,visual:1296,volum:[1234,1239],vw_tm1:[1098,1101,1105],wai:[1296,1299],wait:[40,41,42,43],want:[43,1253,1296,1299],warn:[59,66,67,68,69,70],warp:[481,482,1114,1115],watch:1295,websit:43,weight:[1098,1100,1101,1103,1105,1106,1107,1234,1243,1244,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1282,1283,1286,1288,1289],weight_initi:[1270,1271,1272,1273,1274,1275,1276,1277,1279,1280],weights_path:[1282,1283],well:[40,41,1001,1043],were:[40,41,1153],what:[43,1253],when:[40,41,42,43,927,1001,1013,1082,1095,1121,1128,1153,1253,1282,1283,1296,1299],where:[40,41,43,296,442,706,857,866,882,883,884,886,911,1001,1004,1012,1014,1018,1031,1045,1052,1063,1096,1121,1128,1197,1198,1205,1209,1210],wherea:43,wherebi:[1197,1206],whether:[15,18,19,40,41,42,857,864,882,883,884,925,926,927,945,958,962,966,971,974,976,977,987,991,992,993,1000,1001,1003,1009,1010,1022,1025,1030,1034,1041,1043,1046,1050,1051,1056,1077,1084,1093,1094,1098,1101,1102,1103,1104,1105,1106,1107,1109,1149,1150,1151,1152,1153,1197,1198,1199,1201,1205,1206,1209,1210,1226,1227,1234,1242,1253,1259,1260,1270,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291],which:[40,41,42,43,492,849,850,851,852,853,854,855,871,872,874,875,876,879,880,882,883,884,925,926,927,936,937,945,950,951,952,953,956,957,958,959,961,963,967,969,970,971,977,982,987,991,1000,1001,1004,1008,1017,1019,1021,1022,1023,1025,1035,1036,1037,1038,1044,1045,1053,1054,1055,1062,1063,1064,1065,1066,1068,1071,1072,1079,1083,1093,1095,1097,1098,1101,1102,1103,1105,1106,1107,1109,1111,1112,1114,1116,1121,1124,1133,1138,1153,1197,1201,1202,1203,1207,1208,1209,1210,1211,1212,1213,1216,1218,1219,1220,1221,1222,1223,1224,1226,1231,1234,1245,1246,1253,1259,1260,1270,1271,1272,1273,1274,1275,1276,1277,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1292,1293,1295,1296],whilst:43,whitespac:[40,41,42],who:43,whose:[43,849,851,857,858,861,862,871,872,875,876,886,911,1001,1008,1013,1216,1217,1218,1219,1220,1222,1224],why:[1253,1254],width:[1114,1119],wiki:1299,wikipedia:1299,window:[1114,1119,1234,1235,1236,1237,1238,1239,1240,1241,1270,1271,1272,1273,1274,1275,1276,1277],wise:[40,41,43,857,859,865,868,886,905,911,1001,1014,1029,1032,1033,1058,1060,1070,1098,1101,1103,1105,1107,1130,1131,1132,1133,1134,1136,1137,1138,1141,1142,1143,1144,1145,1147,1226,1227,1228,1229,1230,1231,1232,1233],wish:1296,with_bia:[1270,1280],with_cal:[1001,1025],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1098,1108],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1153,with_partial_v:[1282,1283],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,442,471,1001,1079,1153],with_to_kv_fn:[1270,1281],with_to_out_fn:[1270,1281],with_to_q_fn:[1270,1281],within:[15,18,19,43,1001,1004,1121,1128,1209,1213],without:[40,41,43,1001,1067,1069,1075,1197,1199,1296],wonder:1253,word:[15,16,17,1001,1004,1209,1213,1259,1260],work:[43,1295],worker:[927,936,937,1153],worker_class:[927,936,937,1153],worker_kwarg:1153,would:[43,1226,1231,1253,1296,1299],wrap:[15,40,41,42,43,440,442,476,481,485,489,490,492,1001,1013,1098,1112,1253],wrapper:43,write:[40,41,43,1253,1254,1299],written:[43,1253,1299],ws_new:[1098,1101,1103,1105,1106,1107],x1_i:[857,859,865,1001,1029,1133,1141],x2_i:[857,859,865,1001,1029,1133,1141],x_feat_dim:[1234,1245],x_i:[857,858,860,861,862,863,864,867,868,869],x_in:[1253,1295],x_inv:[1121,1123],x_max:[442,1001,1014],x_min:[442,1001,1014],x_sub:1153,xkk:1299,xkkm1:1299,xkm1km1:1299,xs0:1153,xs_t:1153,year:[1253,1299],yet:[1197,1206,1299],yield:[1001,1095],you:[43,1253,1295,1296,1299],your:[1253,1254,1295,1296,1299],your_awesome_project:1296,yourself:[43,1253],yourslef:43,youtub:43,zero:[40,41,77,208,392,517,649,849,851,857,868,871,874,882,883,884,1001,1018,1063,1065,1071,1072,1096,1097,1098,1100,1101,1105,1106,1234,1242,1253,1261,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1286,1287,1288,1289],zero_pad:[296,442,573,706,1001],zeros_lik:[130,296,442,573,706,1001],zip:1153,zk_e:1299},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","det","inv","matrix_norm","pinv","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","slodget","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","slodget","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1025,"function":[77,81,86,99,103,105,106,107,109,110,208,212,217,225,231,233,234,235,237,238,392,396,401,414,420,422,423,424,426,427,517,521,526,539,545,547,548,549,551,552,649,653,658,671,677,679,680,681,683,684,849,853,857,870,875,877,878,879,881,882],Ones:1266,Using:1296,abs:[297,574,707,1002],aco:[797,1134],acosh:[798,1135],activ:[192,379,503,641,827,1226,1256],adam:1287,adam_step:1100,adam_upd:1101,algebra:[100,170,226,354,415,485,540,620,672,783,871],all:[111,239,428,553,685,883],all_equ:1003,all_nested_indic:1198,ani:[112,240,429,554,686,884],api:[0,43,75,114,206,242,390,431,515,556,647,688,847],arang:[131,298,443,575,708,1004],arg_nam:1005,argmax:[132,444,576,709,1006],argmin:[133,445,577,710,1007],args_to_ivi:16,args_to_n:17,argsort:[108,236,425,550,682,880],arithmet:[1,115,243,432,557,689],arrai:[0,3,43,75,113,114,116,134,206,241,242,244,251,299,390,430,431,433,446,515,555,556,558,578,647,687,688,690,711,847,886,1008],array_equ:[300,712,1009],arrays_equ:1010,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[799,1136],asinh:[87,402,527,659,858],assert_supports_inplac:1011,atan2:[801,1138],atan:[800,1137],atanh:[802,1139],attribut:[5,117,245,434,559,691],backend:[43,73],bilinear_resampl:[167,351,482,617,780,1115],binary_cross_entropi:1248,bitwis:[7,118,246,435,560,692],bitwise_and:[88,218,403,528,660,859],broadcast_to:[301,713,1012],builder:51,builtin:[113,241,251,430,555,687,886],builtin_ab:[252,887],builtin_add:[253,888],builtin_and:[254,889],builtin_bool:[255,890],builtin_contain:[256,891],builtin_deepcopi:[257,892],builtin_dir:[258,893],builtin_eq:[259,894],builtin_float:[260,895],builtin_floordiv:[261,896],builtin_g:[262,897],builtin_getattr:[263,898],builtin_getattribut:[264,899],builtin_getitem:[265,900],builtin_gt:[266,901],builtin_int:[267,902],builtin_invert:[268,903],builtin_l:[269,904],builtin_lt:[270,562,694,905],builtin_mul:[271,906],builtin_n:[272,907],builtin_neg:[273,908],builtin_or:[274,909],builtin_po:[275,910],builtin_pow:[276,911],builtin_radd:[277,912],builtin_rand:[278,913],builtin_rfloordiv:[279,914],builtin_rmul:[280,915],builtin_ror:[281,916],builtin_rpow:[282,917],builtin_rsub:[283,918],builtin_rtruediv:[284,919],builtin_rxor:[285,920],builtin_setitem:[286,921],builtin_sub:[287,922],builtin_truediv:[288,923],builtin_xor:[289,924],cache_fn:1013,cast:[135,302,447,579,714,981],ceil:[89,219,404,529,661,860],choleski:[784,1122],choose_random_framework:61,citat:1253,clear_framework_stack:62,clear_mem_on_dev:[700,943],clip:[303,715,1014],clip_matrix_norm:1015,clip_vector_norm:1016,clone:1168,clone_arrai:1169,clone_it:1170,clone_nest:1171,clonedit:1155,cloneditem:1154,clonednest:1156,closest_valid_dtyp:982,code:1299,comparison:[9,119,247,436,561,693],compil:[304,448,716,925,926],concaten:[136,305,449,580,717,1017],constant:[76,207,391,516,648,848],constant_pad:[306,581,718,1018],contain:[40,41],container_typ:[719,1019],content:1253,contribut:43,conv1d:[198,382,507,839,1235,1271],conv1d_transpos:[199,383,508,840,1236],conv1dtranspos:1272,conv2d:[200,384,509,643,841,1237,1273],conv2d_transpos:[201,385,510,842,1238],conv2dtranspos:1274,conv3d:[202,386,511,644,843,1239,1275],conv3d_transpos:[203,387,512,844,1240],conv3dtranspos:1276,convers:15,convert:[194,835,1259],convert_dtyp:983,copy_arrai:[720,1020],copy_nest:1199,core:[122,250,439,565,697,885],cos:[90,405,530,662,861],cosh:[91,406,531,663,803,862,1140],cprint:1298,creat:43,creation:[77,208,392,517,649,849],cross:[307,721,1021],cross_entropi:1249,cumprod:[137,308,450,722,1022],cumsum:[723,1023],current_framework:63,current_framework_str:[724,1024],data:[81,85,212,216,396,400,521,525,653,657,853,856],debug_mod:45,debugg:44,default_devic:944,default_dtyp:984,default_float_dtyp:985,default_int_dtyp:986,default_nod:1172,depthwise_conv2d:[204,388,513,645,845,1241],depthwiseconv2d:1277,design:43,det:[227,416,541,673,785],dev:[125,292,568,701,945],dev_clon:946,dev_clone_arrai:947,dev_clone_it:948,dev_clone_nest:949,dev_dist:950,dev_dist_arrai:951,dev_dist_it:952,dev_dist_nest:953,dev_from_str:[126,293,569,702,954],dev_to_str:[127,294,570,703,955],dev_unifi:956,dev_unify_arrai:957,dev_unify_it:958,dev_unify_nest:959,dev_util:960,devclonedit:930,devcloneditem:929,devclonednest:931,devdistit:933,devdistitem:932,devdistnest:934,devic:[20,123,290,440,566,698,927],devmapp:936,devmappermultiproc:937,diagon:[101,228,417,542,674,872],distribute_nest:1173,divid:1141,document:1253,dropout:[1242,1278],dtype:[138,309,451,582,725,977,987],dtype_bit:[139,310,452,583,726,988],dtype_from_str:[140,311,453,584,727,989],dtype_to_str:[141,312,454,585,728,990],ecosystem:52,einops_rearrang:1026,einops_reduc:1027,einops_repeat:1028,einsum:[184,370,495,633,819,1217],elementwis:[86,217,401,526,658,857],equal:[586,729,1029],erf:[491,804,1142],execute_with_gradi:[164,346,477,612,774,1102],exist:1030,exp:[805,1143],expand_dim:[313,730,1031],finfo:[83,214,398,523,655,854],firstlayersiren:1263,flip:[104,232,421,546,678,876],float_img_to_uint8_img:1116,floor:[314,731,1032],floormod:[315,732,1033],fomaml_step:1150,fork:43,fourier_encod:1034,framework:59,full:[142,316,455,587,733,1035],func:72,gather:[143,317,456,588,734,1036],gather_nd:[144,318,457,589,735,1037],geglu:1257,gelu:[380,504,828,1227,1258],gener:[22,130,296,442,573,706,1001],get_all_arrays_in_memori:1038,get_all_arrays_on_dev:961,get_framework:64,get_min_bas:1039,get_min_denomin:1040,get_num_dim:[736,1041],get_referrers_recurs:1042,glorotuniform:1264,gpu_is_avail:[962,1174],gradient:[24,163,345,476,611,773,1098],gradient_descent_upd:1103,gradient_imag:[168,352,483,618,781,1117],gym:53,handler:59,has_nan:1043,ident:[145,319,458,590,737,1044],iinfo:[84,215,399,524,656,855],imag:[26,166,350,481,616,779,1114],index_nest:1200,indices_wher:[146,320,459,738,1045],initi:1261,inplac:[11,120,248,437,563,695],inplace_arrays_support:1046,inplace_decr:[147,321,460,591,739,1047],inplace_incr:[148,322,461,592,740,1048],inplace_upd:[149,323,462,593,741,1049],inplace_variables_support:1050,inv:[786,1123],invalid_dtyp:991,is_arrai:[150,324,463,594,742,1051],is_float_dtyp:992,is_int_dtyp:993,is_vari:[165,347,478,613,775,1104],isfinit:[92,220,407,532,664,863],isinf:[325,595,743,1052],isnan:[93,221,408,533,665,864],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,846,1295,1296,1299],ivymodul:[195,836],jax:74,keep:43,lamb:1288,lamb_upd:1105,lar:1289,lars_upd:1106,layer:[197,381,506,642,838,1234,1270],layer_norm:1252,layernorm:1285,leaky_relu:[829,1228],less:[94,222,409,534,666,865],linalg:[28,1121],linear:[100,170,226,354,415,485,540,620,672,783,871,1243,1280],linear_resampl:[151,326,464,596,744,1053],linspac:[152,327,465,597,745,1054],list:43,log1p:[95,410,535,667,866],log2:[96,411,536,668,867],log:[806,1144],logic:[30,174,360,489,625,793,1130],logical_and:[361,794,1131],logical_not:[97,223,412,537,669,868],logical_or:[362,795,1132],logspac:[153,328,466,598,746,1055],loss:1247,lstm:1279,lstm_updat:1244,maml_step:1151,manipul:[103,231,420,545,677,875],map:1201,map_nest_at_index:1202,map_nest_at_indic:1203,match_kwarg:1056,math:[32,175,363,490,626,796,1133],matmul:[329,599,747,1057],matrix_norm:[171,355,486,621,787,1124],maximum:[748,1058],mech:54,memori:55,meshgrid:[330,749,1059],meta:[34,1149],method:[99,225,414,539,671,870],minimum:[750,1060],model:56,modul:[1282,1283,1295],multi:1153,multi_head_attent:1245,multi_index_nest:1204,multidevcontain:42,multidevit:940,multidevitem:939,multidevnest:941,multiheadattent:1281,multinodeit:1159,multinodeitem:1158,multinodenest:1160,multinomi:[177,365,493,628,812,1210],multiprocess:[751,1061],mxnet:205,nativ:1295,nest:1197,nested_indices_wher:1205,nested_map:1206,network:1295,next:1253,node:[1153,1175],node_dist:1176,node_dist_arrai:1177,node_dist_it:1178,node_str:1179,node_to_str:1180,node_util:1181,nodedistit:1162,nodedistitem:1161,nodedistnest:1163,nodemapp:1165,nodemappermultiproc:1166,norm:[1251,1284],num_arrays_in_memori:1062,num_arrays_on_dev:963,num_cpu_cor:964,num_gpu:[128,965,1182],numpi:389,nutshel:1253,one_hot:[154,467,600,752,1063],ones:[78,209,393,518,650,850,1064],ones_lik:[155,331,468,601,753,1065],oper:[1,3,7,9,11,13,43,115,116,118,119,120,121,243,244,246,247,248,249,432,433,435,436,437,438,557,558,560,561,563,564,689,690,692,693,695,696],optim:[1286,1290],optimizer_upd:1107,overview:1253,percent_used_mem_on_dev:966,percent_used_mem_on_nod:1183,pinv:[356,788,1125],portabl:1299,print_all_arrays_in_memori:1066,print_all_arrays_on_dev:967,profil:[124,291,441,567,699,942,1167],pull:43,queue_timeout:1067,randint:[178,366,629,813,1211],random:[36,176,364,492,627,811,1209],random_crop:1118,random_norm:[179,367,630,814,1212],random_uniform:[180,368,631,815,1213],reduce_max:[185,371,496,634,820,1218],reduce_mean:[186,372,497,635,821,1219],reduce_min:[187,373,498,636,822,1220],reduce_prod:[188,374,499,637,823,1221],reduce_std:[375,1222],reduce_sum:[189,376,500,638,824,1223],reduce_var:[190,377,501,639,825,1224],reduct:[38,183,369,494,632,818,1216],reflect:[13,121,249,438,564,696],relu:[830,1229],repeat:[332,754,1068],reptile_step:1152,request:43,reshap:[755,1069],robot:57,round:[333,756,1070],run:1296,scaled_dot_product_attent:1246,scatter_flat:[156,334,469,602,757,1071],scatter_nd:[157,335,470,603,758,1072],search:[105,233,422,547,679,877],seed:[181,816,1214],sequenti:[1292,1293],set:[106,234,423,548,680,878],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:968,set_default_dtyp:994,set_default_float_dtyp:995,set_default_int_dtyp:996,set_default_nod:1184,set_exception_debug_mod:48,set_framework:65,set_min_bas:1073,set_min_denomin:1074,set_nest_at_index:1207,set_nest_at_indic:1208,set_queue_timeout:1075,set_split_factor:[969,1185],set_tmp_dir:1076,set_with_grad:1108,sgd:1291,shape:[759,1077],shape_to_tupl:1078,shuffl:[182,817,1215],sigmoid:[831,1230],signatur:[99,225,414,539,671,870],sin:[807,1145],sinh:[808,1146],siren:1267,slodget:[873,1127],slogdet:[229,418,543,675,790],softmax:[193,505,832,1231],softplu:[833,1232],sort:[107,235,424,549,681,879],sparse_cross_entropi:1250,split:[158,336,471,604,760,1079],split_factor:[970,1186],split_func_cal:[971,1187],sqrt:[98,224,413,538,670,869],squeez:[159,337,472,605,761,1080],stable_divid:1081,stable_pow:1082,stack:[338,762,1083],stack_imag:[169,353,484,619,782,1119],standard:43,statist:[109,237,426,551,683,881],stop_gradi:[348,479,614,776,1109],str_to_nod:1188,submodul:43,supports_inplac:1084,svd:[358,623,791,1128],swapax:[606,763,1085],tan:[809,1147],tanh:[810,834,1148,1233],tensorflow:514,tile:[339,607,764,1086],tmp_dir:1087,to_dev:[129,295,571,704,972],to_ivi:18,to_ivy_modul:[196,837,1260],to_list:[765,1088],to_n:19,to_nod:1189,to_numpi:[766,1089],to_scalar:[767,1090],todo:43,torch:646,total_mem_on_dev:973,total_mem_on_nod:1190,tpu_is_avail:[572,705,974,1191],train:1295,trainabl:1295,transpos:[160,340,473,768,1091],tree:1253,tril:[79,210,394,519,651,851],try_else_non:1092,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,212,216,396,400,521,525,653,657,853,856],uint8_img_to_float_img:1120,unifi:1192,unify_arrai:1193,unify_it:1194,unify_nest:1195,unset_debug_mod:49,unset_default_devic:975,unset_default_dtyp:997,unset_default_float_dtyp:998,unset_default_int_dtyp:999,unset_framework:71,unset_with_grad:1110,unstack:[161,341,474,608,769,1093],updat:43,used_mem_on_dev:976,used_mem_on_nod:1196,util:[110,238,427,552,684,882],valid_dtyp:1000,value_is_nan:1094,variabl:[349,480,615,777,1111],variable_data:[778,1112],vector_norm:[102,230,419,544,676,874],vector_to_skew_symmetric_matrix:[173,359,488,624,792,1129],verbos:1297,vision:58,where:[342,770,1095,1253],why:1299,with_grad:1113,wrapper:72,write:1296,your:43,zero:[80,211,395,520,652,852,1269],zero_pad:[343,609,771,1096],zeros_lik:[162,344,475,610,772,1097]}})
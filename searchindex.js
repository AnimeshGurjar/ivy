Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/det","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/slogdet","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/det","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/slogdet","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/det","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/slogdet","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/det","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/slogdet","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/slodget","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/det.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/slogdet.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/det.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/slogdet.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/det.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/slogdet.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/det.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/slogdet.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/slodget.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[832,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[387,0,0,"-"],creation_functions:[388,0,0,"-"],data_type_functions:[391,0,0,"-"],data_types:[395,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[389,2,1,""],zeros:[390,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[391,1,1,""],finfo:[393,2,1,""],iinfo:[394,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[391,3,1,""],bits:[391,3,1,""],eps:[391,3,1,""],max:[391,3,1,""],min:[391,3,1,""],smallest_normal:[391,3,1,""]},"ivy.functional.backends.numpy.core":{device:[431,0,0,"-"],general:[433,0,0,"-"],gradients:[467,0,0,"-"],image:[472,0,0,"-"],linear_algebra:[476,0,0,"-"],logic:[482,0,0,"-"],math:[483,0,0,"-"],random:[485,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[432,1,1,""],clear_mem_on_dev:[431,2,1,""],dev:[431,2,1,""],dev_from_str:[431,2,1,""],dev_to_str:[431,2,1,""],gpu_is_available:[431,2,1,""],num_gpus:[431,2,1,""],to_dev:[431,2,1,""],tpu_is_available:[431,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[432,3,1,""],start:[432,3,1,""],stop:[432,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[433,2,1,""],arange:[434,2,1,""],argmax:[435,2,1,""],argmin:[436,2,1,""],array:[437,2,1,""],asarray:[433,2,1,""],astype:[433,2,1,""],cast:[438,2,1,""],ceil:[433,2,1,""],clip:[433,2,1,""],compile:[439,2,1,""],concatenate:[440,2,1,""],constant_pad:[433,2,1,""],container_types:[433,2,1,""],copy_array:[433,2,1,""],cumprod:[441,2,1,""],current_framework_str:[433,2,1,""],dtype:[442,2,1,""],dtype_bits:[443,2,1,""],dtype_from_str:[444,2,1,""],dtype_to_str:[445,2,1,""],equal:[433,2,1,""],floor:[433,2,1,""],floormod:[433,2,1,""],full:[446,2,1,""],gather:[447,2,1,""],gather_nd:[448,2,1,""],get_num_dims:[433,2,1,""],identity:[449,2,1,""],indices_where:[450,2,1,""],inplace_arrays_supported:[433,2,1,""],inplace_decrement:[451,2,1,""],inplace_increment:[452,2,1,""],inplace_update:[453,2,1,""],inplace_variables_supported:[433,2,1,""],is_array:[454,2,1,""],linear_resample:[455,2,1,""],linspace:[456,2,1,""],logspace:[457,2,1,""],matmul:[433,2,1,""],meshgrid:[433,2,1,""],multiprocessing:[433,2,1,""],one_hot:[458,2,1,""],ones_like:[459,2,1,""],round:[433,2,1,""],scatter_flat:[460,2,1,""],scatter_nd:[461,2,1,""],shape:[433,2,1,""],split:[462,2,1,""],squeeze:[463,2,1,""],to_list:[433,2,1,""],to_numpy:[433,2,1,""],to_scalar:[433,2,1,""],transpose:[464,2,1,""],unstack:[465,2,1,""],where:[433,2,1,""],zero_pad:[433,2,1,""],zeros_like:[466,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[468,2,1,""],is_variable:[469,2,1,""],stop_gradient:[470,2,1,""],variable:[471,2,1,""],variable_data:[467,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[473,2,1,""],gradient_image:[474,2,1,""],stack_images:[475,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{det:[477,2,1,""],matrix_norm:[478,2,1,""],qr:[479,2,1,""],slogdet:[480,2,1,""],vector_to_skew_symmetric_matrix:[481,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[484,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[486,2,1,""],randint:[485,2,1,""],random_normal:[485,2,1,""],random_uniform:[485,2,1,""],seed:[485,2,1,""],shuffle:[485,2,1,""]},"ivy.functional.ivy":{array_api:[833,0,0,"-"],core:[867,0,0,"-"],nn:[1208,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[834,0,0,"-"],creation_functions:[835,0,0,"-"],data_type_functions:[838,0,0,"-"],data_types:[841,0,0,"-"],elementwise_functions:[842,0,0,"-"],function_and_method_signatures:[853,0,0,"-"],linear_algebra:[854,0,0,"-"],manipulation_functions:[857,0,0,"-"],searching_functions:[859,0,0,"-"],set_functions:[860,0,0,"-"],sorting_functions:[861,0,0,"-"],statistical_functions:[863,0,0,"-"],utility_functions:[864,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[834,4,1,""],nan:[834,4,1,""],pi:[834,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[836,2,1,""],zeros:[837,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[839,2,1,""],iinfo:[840,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[843,2,1,""],bitwise_and:[844,2,1,""],cos:[845,2,1,""],cosh:[846,2,1,""],isfinite:[847,2,1,""],isnan:[848,2,1,""],less:[849,2,1,""],log2:[850,2,1,""],logical_not:[851,2,1,""],sqrt:[852,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[855,2,1,""],vector_norm:[856,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[858,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[862,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[865,2,1,""],any:[866,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[868,0,0,"-"],compilation:[907,0,0,"-"],device:[909,0,0,"-"],dtype:[959,0,0,"-"],general:[983,0,0,"-"],gradients:[1081,0,0,"-"],image:[1097,0,0,"-"],linalg:[1104,0,0,"-"],logic:[1113,0,0,"-"],math:[1116,0,0,"-"],meta:[1132,0,0,"-"],multi_node:[1136,0,0,"-"],nest:[1180,0,0,"-"],random:[1192,0,0,"-"],reductions:[1199,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[869,2,1,""],builtin_add:[870,2,1,""],builtin_and:[871,2,1,""],builtin_bool:[872,2,1,""],builtin_contains:[873,2,1,""],builtin_deepcopy:[874,2,1,""],builtin_dir:[875,2,1,""],builtin_eq:[876,2,1,""],builtin_float:[877,2,1,""],builtin_floordiv:[878,2,1,""],builtin_ge:[879,2,1,""],builtin_getattr:[880,2,1,""],builtin_getattribute:[881,2,1,""],builtin_getitem:[882,2,1,""],builtin_gt:[883,2,1,""],builtin_int:[884,2,1,""],builtin_invert:[885,2,1,""],builtin_le:[886,2,1,""],builtin_lt:[887,2,1,""],builtin_mul:[888,2,1,""],builtin_ne:[889,2,1,""],builtin_neg:[890,2,1,""],builtin_or:[891,2,1,""],builtin_pos:[892,2,1,""],builtin_pow:[893,2,1,""],builtin_radd:[894,2,1,""],builtin_rand:[895,2,1,""],builtin_rfloordiv:[896,2,1,""],builtin_rmul:[897,2,1,""],builtin_ror:[898,2,1,""],builtin_rpow:[899,2,1,""],builtin_rsub:[900,2,1,""],builtin_rtruediv:[901,2,1,""],builtin_rxor:[902,2,1,""],builtin_setitem:[903,2,1,""],builtin_sub:[904,2,1,""],builtin_truediv:[905,2,1,""],builtin_xor:[906,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[908,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[909,1,1,""],DevClonedItem:[911,1,1,""],DevClonedIter:[912,1,1,""],DevClonedNest:[913,1,1,""],DevDistItem:[914,1,1,""],DevDistIter:[915,1,1,""],DevDistNest:[916,1,1,""],DevManager:[909,1,1,""],DevMapper:[918,1,1,""],DevMapperMultiProc:[919,1,1,""],MultiDev:[909,1,1,""],MultiDevItem:[921,1,1,""],MultiDevIter:[922,1,1,""],MultiDevNest:[923,1,1,""],Profiler:[924,1,1,""],clear_mem_on_dev:[925,2,1,""],default_device:[926,2,1,""],dev:[927,2,1,""],dev_clone:[928,2,1,""],dev_clone_array:[929,2,1,""],dev_clone_iter:[930,2,1,""],dev_clone_nest:[931,2,1,""],dev_dist:[932,2,1,""],dev_dist_array:[933,2,1,""],dev_dist_iter:[934,2,1,""],dev_dist_nest:[935,2,1,""],dev_from_str:[936,2,1,""],dev_to_str:[937,2,1,""],dev_unify:[938,2,1,""],dev_unify_array:[939,2,1,""],dev_unify_iter:[940,2,1,""],dev_unify_nest:[941,2,1,""],dev_util:[942,2,1,""],get_all_arrays_on_dev:[943,2,1,""],gpu_is_available:[944,2,1,""],num_arrays_on_dev:[945,2,1,""],num_cpu_cores:[946,2,1,""],num_gpus:[947,2,1,""],percent_used_mem_on_dev:[948,2,1,""],print_all_arrays_on_dev:[949,2,1,""],set_default_device:[950,2,1,""],set_split_factor:[951,2,1,""],split_factor:[952,2,1,""],split_func_call:[953,2,1,""],to_dev:[954,2,1,""],total_mem_on_dev:[955,2,1,""],tpu_is_available:[956,2,1,""],unset_default_device:[957,2,1,""],used_mem_on_dev:[958,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[909,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[909,3,1,""],da_tune_step:[909,3,1,""],dim_size:[909,3,1,""],ds_tune_step:[909,3,1,""],map:[909,3,1,""],repeated_config_check:[909,3,1,""],tune_step:[909,3,1,""],tuned:[909,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[918,3,1,""],map:[918,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[919,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[909,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[921,3,1,""],items:[921,3,1,""],keys:[921,3,1,""],shape:[921,3,1,""],values:[921,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[922,3,1,""],at_dev:[922,3,1,""],at_devs:[922,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[923,3,1,""],at_dev:[923,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[924,3,1,""],start:[924,3,1,""],stop:[924,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[959,1,1,""],DefaultFloatDtype:[959,1,1,""],DefaultIntDtype:[959,1,1,""],astype:[959,2,1,""],cast:[963,2,1,""],closest_valid_dtype:[964,2,1,""],convert_dtype:[965,2,1,""],default_dtype:[966,2,1,""],default_float_dtype:[967,2,1,""],default_int_dtype:[968,2,1,""],dtype:[969,2,1,""],dtype_bits:[970,2,1,""],dtype_from_str:[971,2,1,""],dtype_to_str:[972,2,1,""],invalid_dtype:[973,2,1,""],is_float_dtype:[974,2,1,""],is_int_dtype:[975,2,1,""],set_default_dtype:[976,2,1,""],set_default_float_dtype:[977,2,1,""],set_default_int_dtype:[978,2,1,""],unset_default_dtype:[979,2,1,""],unset_default_float_dtype:[980,2,1,""],unset_default_int_dtype:[981,2,1,""],valid_dtype:[982,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[959,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[959,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[959,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1008,2,1,""],abs:[984,2,1,""],all_equal:[985,2,1,""],arange:[986,2,1,""],arg_names:[987,2,1,""],argmax:[988,2,1,""],argmin:[989,2,1,""],array:[990,2,1,""],array_equal:[991,2,1,""],arrays_equal:[992,2,1,""],asarray:[983,2,1,""],assert_supports_inplace:[993,2,1,""],broadcast_to:[994,2,1,""],cache_fn:[995,2,1,""],ceil:[996,2,1,""],clip:[997,2,1,""],clip_matrix_norm:[998,2,1,""],clip_vector_norm:[999,2,1,""],concatenate:[1000,2,1,""],constant_pad:[1001,2,1,""],container_types:[1002,2,1,""],copy_array:[1003,2,1,""],cross:[1004,2,1,""],cumprod:[1005,2,1,""],cumsum:[1006,2,1,""],current_framework_str:[1007,2,1,""],einops_rearrange:[1009,2,1,""],einops_reduce:[1010,2,1,""],einops_repeat:[1011,2,1,""],equal:[1012,2,1,""],exists:[1013,2,1,""],expand_dims:[1014,2,1,""],floor:[1015,2,1,""],floormod:[1016,2,1,""],fourier_encode:[1017,2,1,""],full:[1018,2,1,""],gather:[1019,2,1,""],gather_nd:[1020,2,1,""],get_all_arrays_in_memory:[1021,2,1,""],get_min_base:[1022,2,1,""],get_min_denominator:[1023,2,1,""],get_num_dims:[1024,2,1,""],get_referrers_recursive:[1025,2,1,""],has_nans:[1026,2,1,""],identity:[1027,2,1,""],indices_where:[1028,2,1,""],inplace_arrays_supported:[1029,2,1,""],inplace_decrement:[1030,2,1,""],inplace_increment:[1031,2,1,""],inplace_update:[1032,2,1,""],inplace_variables_supported:[1033,2,1,""],is_array:[1034,2,1,""],isinf:[1035,2,1,""],linear_resample:[1036,2,1,""],linspace:[1037,2,1,""],logspace:[1038,2,1,""],match_kwargs:[1039,2,1,""],matmul:[1040,2,1,""],maximum:[1041,2,1,""],meshgrid:[1042,2,1,""],minimum:[1043,2,1,""],multiprocessing:[1044,2,1,""],num_arrays_in_memory:[1045,2,1,""],one_hot:[1046,2,1,""],ones:[1047,2,1,""],ones_like:[1048,2,1,""],print_all_arrays_in_memory:[1049,2,1,""],queue_timeout:[1050,2,1,""],repeat:[1051,2,1,""],reshape:[1052,2,1,""],round:[1053,2,1,""],scatter_flat:[1054,2,1,""],scatter_nd:[1055,2,1,""],set_min_base:[1056,2,1,""],set_min_denominator:[1057,2,1,""],set_queue_timeout:[1058,2,1,""],set_tmp_dir:[1059,2,1,""],shape:[1060,2,1,""],shape_to_tuple:[1061,2,1,""],split:[1062,2,1,""],squeeze:[1063,2,1,""],stable_divide:[1064,2,1,""],stable_pow:[1065,2,1,""],stack:[1066,2,1,""],supports_inplace:[1067,2,1,""],swapaxes:[1068,2,1,""],tile:[1069,2,1,""],tmp_dir:[1070,2,1,""],to_list:[1071,2,1,""],to_numpy:[1072,2,1,""],to_scalar:[1073,2,1,""],transpose:[1074,2,1,""],try_else_none:[1075,2,1,""],unstack:[1076,2,1,""],value_is_nan:[1077,2,1,""],where:[1078,2,1,""],zero_pad:[1079,2,1,""],zeros_like:[1080,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1081,1,1,""],adam_step:[1083,2,1,""],adam_update:[1084,2,1,""],execute_with_gradients:[1085,2,1,""],gradient_descent_update:[1086,2,1,""],is_variable:[1087,2,1,""],lamb_update:[1088,2,1,""],lars_update:[1089,2,1,""],optimizer_update:[1090,2,1,""],set_with_grads:[1091,2,1,""],stop_gradient:[1092,2,1,""],unset_with_grads:[1093,2,1,""],variable:[1094,2,1,""],variable_data:[1095,2,1,""],with_grads:[1096,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1081,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1098,2,1,""],float_img_to_uint8_img:[1099,2,1,""],gradient_image:[1100,2,1,""],random_crop:[1101,2,1,""],stack_images:[1102,2,1,""],uint8_img_to_float_img:[1103,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1105,2,1,""],inv:[1106,2,1,""],matrix_norm:[1107,2,1,""],pinv:[1108,2,1,""],qr:[1109,2,1,""],slodget:[1110,2,1,""],svd:[1111,2,1,""],vector_to_skew_symmetric_matrix:[1112,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1114,2,1,""],logical_or:[1115,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1117,2,1,""],acosh:[1118,2,1,""],asin:[1119,2,1,""],atan2:[1121,2,1,""],atan:[1120,2,1,""],atanh:[1122,2,1,""],cosh:[1123,2,1,""],divide:[1124,2,1,""],erf:[1125,2,1,""],exp:[1126,2,1,""],log:[1127,2,1,""],sin:[1128,2,1,""],sinh:[1129,2,1,""],tan:[1130,2,1,""],tanh:[1131,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1133,2,1,""],maml_step:[1134,2,1,""],reptile_step:[1135,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1136,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1181,2,1,""],copy_nest:[1182,2,1,""],index_nest:[1183,2,1,""],map:[1184,2,1,""],map_nest_at_index:[1185,2,1,""],map_nest_at_indices:[1186,2,1,""],multi_index_nest:[1187,2,1,""],nested_indices_where:[1188,2,1,""],nested_map:[1189,2,1,""],set_nest_at_index:[1190,2,1,""],set_nest_at_indices:[1191,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1193,2,1,""],randint:[1194,2,1,""],random_normal:[1195,2,1,""],random_uniform:[1196,2,1,""],seed:[1197,2,1,""],shuffle:[1198,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1200,2,1,""],reduce_max:[1201,2,1,""],reduce_mean:[1202,2,1,""],reduce_min:[1203,2,1,""],reduce_prod:[1204,2,1,""],reduce_std:[1205,2,1,""],reduce_sum:[1206,2,1,""],reduce_var:[1207,2,1,""]},"ivy.functional.ivy.nn":{activations:[1209,0,0,"-"],layers:[1217,0,0,"-"],losses:[1230,0,0,"-"],norms:[1234,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1210,2,1,""],leaky_relu:[1211,2,1,""],relu:[1212,2,1,""],sigmoid:[1213,2,1,""],softmax:[1214,2,1,""],softplus:[1215,2,1,""],tanh:[1216,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1218,2,1,""],conv1d_transpose:[1219,2,1,""],conv2d:[1220,2,1,""],conv2d_transpose:[1221,2,1,""],conv3d:[1222,2,1,""],conv3d_transpose:[1223,2,1,""],depthwise_conv2d:[1224,2,1,""],dropout:[1225,2,1,""],linear:[1226,2,1,""],lstm_update:[1227,2,1,""],multi_head_attention:[1228,2,1,""],scaled_dot_product_attention:[1229,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1231,2,1,""],cross_entropy:[1232,2,1,""],sparse_cross_entropy:[1233,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1235,2,1,""]},"ivy.graph_compiler":{compiler:[1236,0,0,"-"],globals:[1239,0,0,"-"],graph:[1242,0,0,"-"],helpers:[1244,0,0,"-"],op_logging:[1245,0,0,"-"],param:[1246,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1237,2,1,""],show_graph:[1238,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1240,2,1,""],log_global_inference_rel_times:[1241,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1242,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1242,3,1,""],add_fn_to_dict:[1242,3,1,""],add_param:[1242,3,1,""],compiled:[1242,3,1,""],connect:[1242,3,1,""],debug_info:[1242,3,1,""],get_param:[1242,3,1,""],get_param_recursive:[1242,3,1,""],include_generators:[1242,3,1,""],increment_param_count:[1242,3,1,""],log_all_ops:[1242,3,1,""],params_all_empty:[1242,3,1,""],save_debug_info:[1242,3,1,""],set_param:[1242,3,1,""],show:[1242,3,1,""],show_debug_info:[1242,3,1,""],update_inference_times:[1242,3,1,""],with_array_caching:[1242,3,1,""]},"ivy.graph_compiler.param":{Param:[1246,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1246,3,1,""],count:[1246,3,1,""],depth:[1246,3,1,""],get:[1246,3,1,""],is_var:[1246,3,1,""],ptype:[1246,3,1,""],set:[1246,3,1,""],set_count:[1246,3,1,""],shape:[1246,3,1,""]},"ivy.stateful":{activations:[1251,0,0,"-"],converters:[1254,0,0,"-"],initializers:[1256,0,0,"-"],layers:[1265,0,0,"-"],module:[1277,0,0,"-"],norms:[1279,0,0,"-"],optimizers:[1281,0,0,"-"],sequential:[1287,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1252,1,1,""],GELU:[1253,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1252,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1253,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1255,2,1,""]},"ivy.stateful.initializers":{Constant:[1256,1,1,""],FirstLayerSiren:[1258,1,1,""],GlorotUniform:[1259,1,1,""],KaimingNormal:[1256,1,1,""],Ones:[1261,1,1,""],Siren:[1262,1,1,""],Uniform:[1256,1,1,""],Zeros:[1264,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1256,3,1,""],create_variables:[1256,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1258,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1259,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1256,3,1,""],create_variables:[1256,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1261,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1262,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1256,3,1,""],create_variables:[1256,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1264,3,1,""]},"ivy.stateful.layers":{Conv1D:[1266,1,1,""],Conv1DTranspose:[1267,1,1,""],Conv2D:[1268,1,1,""],Conv2DTranspose:[1269,1,1,""],Conv3D:[1270,1,1,""],Conv3DTranspose:[1271,1,1,""],DepthwiseConv2D:[1272,1,1,""],Dropout:[1273,1,1,""],LSTM:[1274,1,1,""],Linear:[1275,1,1,""],MultiHeadAttention:[1276,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1266,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1267,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1268,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1269,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1270,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1271,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1272,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1273,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1274,3,1,""],get_initial_state:[1274,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1275,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1276,3,1,""]},"ivy.stateful.module":{Module:[1278,1,1,""]},"ivy.stateful.module.Module":{__init__:[1278,3,1,""],build:[1278,3,1,""],build_mode:[1278,3,1,""],built:[1278,3,1,""],check_submod_rets:[1278,3,1,""],compile_graph:[1278,3,1,""],compile_on_next_step:[1278,3,1,""],get_mod_key:[1278,3,1,""],mod_depth:[1278,3,1,""],mod_height:[1278,3,1,""],mod_with_top_mod_key_chain:[1278,3,1,""],save_weights:[1278,3,1,""],show_graph:[1278,3,1,""],show_mod_in_top_mod:[1278,3,1,""],show_structure:[1278,3,1,""],show_v_in_top_v:[1278,3,1,""],sub_mods:[1278,3,1,""],track_submod_call_order:[1278,3,1,""],track_submod_rets:[1278,3,1,""],v_with_top_v_key_chains:[1278,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1280,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1280,3,1,""]},"ivy.stateful.optimizers":{Adam:[1282,1,1,""],LAMB:[1283,1,1,""],LARS:[1284,1,1,""],Optimizer:[1285,1,1,""],SGD:[1286,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1282,3,1,""],set_state:[1282,3,1,""],state:[1282,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1283,3,1,""],set_state:[1283,3,1,""],state:[1283,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1284,3,1,""],set_state:[1284,3,1,""],state:[1284,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1285,3,1,""],compile_graph:[1285,3,1,""],compile_on_next_step:[1285,3,1,""],set_state:[1285,3,1,""],show_graph:[1285,3,1,""],step:[1285,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1286,3,1,""],set_state:[1286,3,1,""],state:[1286,3,1,""]},"ivy.stateful.sequential":{Sequential:[1288,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1288,3,1,""]},"ivy.verbosity":{cprint:[1293,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1292,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1281,1282,1283],"02886":1248,"100":[1136,1248,1290],"141592653589793":834,"2021":1248,"2102":1248,"360":[842,845,1116,1128,1130],"718281828459045":834,"754":[834,838,839,842,852],"999":[1081,1083,1084,1088,1281,1282,1283],"abstract":[909,924,1248,1281,1285],"boolean":[40,41,842,844,848,851,909,944,956,959,973,982,983,985,991,992,1026,1028,1029,1033,1034,1035,1067,1077,1081,1087,1113,1114,1115,1132,1133,1134,1136],"break":43,"case":[15,18,19,40,41,42,43,842,843,909,948,955,958,983,986,1052,1054,1055,1104,1107,1109,1136,1180,1183,1187,1248,1265,1276,1277,1278,1281,1285,1294],"catch":[983,1008],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,391,431,432,838,840,909,911,912,913,914,915,916,918,919,921,922,923,924,936,937,959,983,987,1039,1081,1095,1136,1180,1182,1189,1230,1232,1233,1242,1246,1248,1251,1252,1253,1254,1255,1256,1258,1259,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1294],"default":[15,18,19,40,41,42,43,835,836,837,854,855,856,857,858,861,862,864,865,866,907,908,909,918,919,926,927,931,932,933,934,935,938,939,940,941,948,951,952,953,958,959,966,967,968,969,983,985,986,988,989,998,999,1000,1001,1004,1005,1006,1017,1018,1019,1024,1026,1027,1036,1038,1039,1042,1044,1047,1050,1051,1054,1055,1058,1060,1062,1064,1065,1074,1076,1077,1081,1084,1086,1087,1088,1089,1090,1092,1096,1104,1107,1109,1132,1133,1134,1135,1136,1180,1181,1182,1184,1188,1189,1192,1193,1195,1196,1199,1201,1202,1203,1204,1205,1206,1207,1209,1210,1214,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1254,1255,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288],"final":[40,41,43,983,1017,1037,1038,1136,1265,1276,1291],"float":[40,41,42,43,834,835,836,837,838,839,842,843,852,854,856,868,887,893,909,918,919,942,948,951,955,958,959,967,974,983,986,998,999,1001,1017,1018,1022,1023,1038,1056,1057,1058,1064,1065,1081,1083,1084,1086,1088,1089,1090,1097,1099,1103,1116,1124,1132,1133,1134,1135,1136,1192,1195,1196,1209,1211,1217,1225,1228,1229,1230,1231,1232,1233,1234,1235,1265,1273,1276,1279,1280,1281,1282,1283,1284,1285,1286],"function":[15,40,41,43,389,390,393,394,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,834,836,837,839,840,843,844,845,846,847,848,849,850,851,852,854,855,856,858,862,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,911,912,913,914,915,916,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1248,1251,1252,1253,1281,1284,1285,1286,1290,1291,1294],"import":[43,1248,1291,1294],"int":[40,41,42,43,388,389,390,485,835,836,837,838,839,840,854,855,856,857,858,861,862,864,865,866,868,887,893,907,908,909,931,932,933,934,935,938,939,940,941,946,947,953,959,968,970,975,983,988,989,994,1000,1001,1005,1006,1009,1010,1011,1014,1017,1018,1019,1024,1027,1036,1037,1038,1046,1047,1051,1052,1054,1055,1060,1061,1062,1063,1066,1068,1069,1074,1076,1079,1081,1083,1084,1088,1097,1101,1102,1104,1107,1132,1133,1134,1135,1136,1180,1189,1192,1193,1194,1196,1197,1199,1201,1202,1203,1204,1205,1206,1207,1209,1214,1217,1218,1219,1220,1221,1222,1223,1224,1228,1230,1232,1233,1234,1235,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1279,1280],"long":[1217,1227],"new":[40,41,43,485,835,836,837,842,846,850,959,963,983,984,994,1009,1010,1011,1014,1017,1018,1019,1020,1047,1052,1054,1055,1056,1057,1064,1065,1066,1081,1084,1086,1088,1089,1090,1097,1099,1101,1103,1116,1118,1122,1123,1129,1131,1136,1180,1190,1191,1192,1193,1234,1235,1248,1254,1255,1265,1275,1279,1280,1281,1282,1283,1284,1285,1286,1291,1294],"public":[983,1002],"return":[15,16,17,18,19,40,41,42,43,485,835,836,837,838,839,840,842,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,861,862,864,865,866,868,887,893,907,908,909,918,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,944,945,947,948,952,953,954,955,956,958,959,963,964,965,966,967,968,969,970,971,972,973,974,975,982,983,984,985,986,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1024,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1051,1052,1053,1054,1055,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1180,1181,1182,1184,1188,1189,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1248,1254,1255,1265,1274,1275,1281,1285,1290,1291,1294],"short":[1217,1227,1248,1294],"static":[40,41,907,908],"super":1136,"true":[40,41,42,433,439,467,470,476,477,480,485,486,842,847,854,856,861,862,864,865,866,907,908,909,983,985,993,995,1013,1017,1026,1028,1077,1078,1081,1084,1086,1087,1088,1089,1090,1092,1104,1107,1132,1133,1134,1135,1136,1180,1181,1188,1192,1193,1199,1201,1202,1203,1204,1205,1206,1207,1209,1210,1217,1225,1230,1231,1232,1233,1236,1237,1238,1242,1265,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],"try":[40,41,983,1075,1136],"var":[40,41,1132,1133,1134,1294],"while":[40,41,42,1136],AND:[842,844,864,865,1113,1114],But:1294,For:[43,842,843,983,986,997,1066,1081,1087,1095,1104,1109,1116,1117,1248,1254,1255,1291,1294],Its:[1116,1120],NOT:[842,851],Not:834,One:[40,41,43,983,1010,1052,1192,1194,1294],Ones:[1248,1256],PRs:43,Such:[983,1002],That:1291,The:[15,16,17,18,19,40,41,42,43,842,843,844,845,847,849,852,854,856,857,858,861,862,864,865,866,868,887,893,907,908,909,918,919,925,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,948,951,952,953,954,955,958,959,963,964,965,970,971,972,973,982,983,986,990,991,994,995,998,999,1000,1001,1003,1004,1007,1008,1012,1017,1019,1020,1027,1030,1031,1032,1034,1036,1038,1040,1042,1044,1047,1048,1051,1052,1054,1055,1056,1057,1058,1061,1062,1063,1064,1065,1066,1069,1077,1080,1081,1083,1084,1086,1088,1089,1090,1092,1095,1097,1099,1101,1103,1104,1107,1109,1111,1116,1117,1119,1120,1124,1125,1126,1127,1128,1130,1132,1133,1134,1135,1136,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1248,1254,1255,1265,1266,1267,1268,1269,1270,1271,1272,1273,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1291,1294],There:[43,1248,1291],These:[43,1248],Used:[1180,1181,1188,1277,1278],Using:[1248,1249,1294],With:[40,41,1104,1107,1199,1201,1202,1203,1204,1205,1206,1207,1248,1290,1294],__array__:[983,990],__call__:[1265,1276,1277,1278],__del__:1136,__dict__:[1136,1291],__enter__:1136,__exit__:1136,__getitem__:1136,__getstate__:1136,__init__:[40,41,42,43,59,60,81,209,391,392,431,432,514,643,909,910,917,918,919,920,921,922,923,924,959,960,961,962,1081,1082,1136,1140,1147,1242,1243,1246,1247,1248,1251,1252,1253,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1294],__iter__:1136,__len__:1136,__next__:1136,__pow__:43,__repr__:1136,_assign_vari:1290,_axi:1136,_base:[1180,1181,1188],_compute_node_da_ratio:1136,_compute_node_strs_da:1136,_concat_unify_arrai:1136,_counter:1136,_cur_framework:[43,1136],_da_direct:1136,_da_directions_flip:1136,_da_step_tim:1136,_da_tim:1136,_da_tune_count:1136,_data:1136,_delta_da_dim_s:1136,_delta_sf:1136,_dict:1136,_dim_siz:1136,_first_da_tune_step:1136,_first_ns_tune_step:1136,_fn:1136,_forward:[1248,1290],_get_kalman_param:1294,_get_prior:1294,_get_some_model:1294,_handle_flat_arrays_in_out:43,_index:[1180,1181,1188],_input_queu:1136,_length:1136,_max_depth:1136,_max_node_dim_step_ratio:1136,_max_node_dim_step_s:1136,_max_split_factor_step_s:1136,_mean_unify_arrai:1136,_min_bas:[983,1065,1234,1235,1279,1280],_min_denomin:[983,1064],_min_node_dim_s:1136,_min_sf_tune_step:1136,_min_unit_node_tune_step:1136,_model:1294,_native_wrapp:43,_node_mapp:1136,_node_percent_mem:1136,_node_str:1136,_node_str_da_ratio:1136,_node_strs_da:1136,_node_strs_kei:1136,_node_strs_n:1136,_node_util:1136,_ns_step_tim:1136,_ns_time:1136,_ns_tune_count:1136,_num_nod:1136,_num_work:1136,_observed_config:1136,_output_queu:1136,_paramet:1290,_percent_mem_inc_per_sf:1136,_percent_mem_inc_per_unit_da_dim:1136,_percent_util_inc_per_unit_da_dim:1136,_ret_fn:1136,_safety_factor:1136,_save_dir:1136,_shift_da_split:1136,_shift_n:1136,_slice:1136,_step:[1281,1285],_sum_unify_arrai:1136,_timeout:1136,_tune:1136,_tune_da:1136,_tune_n:1136,_tune_step:1136,_unit_da_tune_count:1136,_unroll_step:1294,_with_node_mappig:1136,_worker:1136,_worker_class:1136,_worker_fn:1136,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,909,918,924,1136,1277,1278,1281,1285],abil:1248,abl:[40,41],about:[838,839,840],abov:[43,1192,1194],above_height:[40,41],abs:[289,433,561,691,854,856,983,1136],absolut:[40,41,983,984,1104,1110],abstractmethod:1136,accept:[15,43,1248],access:[40,41,43,1291],accord:[40,41,838,839,983,1001,1019,1054,1055,1074,1079],accordingli:[854,856,864,865,866],accur:[59,391,431,432,909,921,922,923,924,959,1081,1242,1246,1256,1258,1259,1261,1262,1264],aco:[782,1116],acosh:[782,1116],across:[40,41,909,918,919,928,929,931,932,933,934,935,941,951,952,983,988,989,991,992,1136,1180,1184],activ:[1210,1211,1212,1213,1214,1215,1216,1248,1252,1253],actual:1291,adam:[1081,1083,1084,1088,1248,1281,1283,1290],adam_step:1081,adam_upd:1081,adapt:[1081,1089,1281,1284],add:[40,41,43,1136,1230,1231,1232,1233,1234,1235,1248,1279,1280,1291],add_fn_to_dict:1242,add_param:1242,added:[43,983,1064,1065,1287,1288],adding:[983,994],addit:[40,41,43,983,1009,1010,1011,1234,1235,1265,1275],address:43,adher:43,adjac:[983,986],adopt:[983,1002],affect:[983,986],affin:[1279,1280],after:[842,852,983,1036,1081,1084,1085,1086,1088,1089,1090,1097,1098,1234,1235,1281,1282,1283,1284,1285,1286,1294],after_1:[983,1001,1079],after_n:[983,1001,1079],again:43,against:[40,41,1104,1107,1199,1201,1202,1203,1204,1205,1206,1207],agnost:[43,1248,1290,1291],aim:1294,algebra:1104,algorithm:[1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272,1294],align:[40,41,43,983,994],aliv:[909,943,945,949,983,1021,1045,1049],all:[15,16,17,18,19,40,41,43,107,231,418,540,669,854,856,857,858,864,907,908,909,918,943,949,983,984,985,991,992,1002,1021,1027,1049,1063,1104,1109,1132,1133,1134,1135,1136,1180,1181,1182,1188,1189,1192,1193,1196,1199,1201,1202,1203,1204,1205,1206,1207,1217,1227,1248,1291,1294],all_depth:[40,41],all_equ:983,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1180,all_tru:[40,41],alloc:[909,1136],allow:[983,1037,1038,1039,1277,1278],allow_dupl:[983,1039],alon:[909,948,958,1136,1248],along:[40,41,43,485,854,855,856,857,858,861,862,864,865,866,909,932,933,934,935,938,939,940,941,953,983,1000,1005,1006,1019,1036,1037,1038,1051,1062,1066,1069,1076,1104,1107,1132,1133,1134,1135,1136,1192,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207],alongsid:[1290,1291],alpha:[1209,1211],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,909,1136],also:[40,41,43,983,986,1081,1084,1132,1133,1134,1135,1180,1181,1182,1188,1189,1217,1226,1248,1265,1275,1290],altern:1290,alwai:[40,41,43,1081,1087,1092],among:[40,41],amount:[909,955,1136,1248],angl:[1116,1117,1121],ani:[15,16,17,18,19,40,41,43,107,231,418,540,669,864,907,908,909,911,914,918,919,921,930,931,934,935,940,983,985,986,990,1008,1009,1010,1011,1012,1013,1026,1034,1039,1064,1065,1081,1085,1136,1180,1181,1184,1188,1189,1190,1191,1192,1196,1248,1254,1255,1277,1278,1290,1291,1294],anoth:[40,41,43,959,965,1248],another_backend:43,anyth:[43,1294],anywai:43,apart:43,api:[1248,1249],appear:[983,1014],append:[40,41,1136],appli:[15,18,19,40,41,842,851,983,1009,1010,1011,1081,1088,1089,1104,1111,1113,1114,1115,1132,1133,1134,1180,1184,1187,1189,1209,1210,1211,1212,1213,1214,1215,1216,1217,1226,1228,1229,1234,1235,1248,1251,1252,1253,1279,1280],applic:[1180,1184,1189,1217,1228,1229,1248,1294],approxim:[43,842,843,850,868,893,1209,1210],arang:[127,289,433,485,561,691,983,1037,1038],arbitrari:[40,41,909,938,939,941,1136],arc:[1116,1121],arcco:[1116,1117],arctan:[1116,1120],area:[842,843,1248],arg:[15,16,17,40,41,43,59,63,909,918,931,935,941,953,983,1009,1010,1011,1055,1136,1236,1237,1238,1242,1254,1255,1277,1278],arg_nam:983,arg_stateful_idx:[1236,1237,1238,1242,1277,1278],argmax:[127,433,561,691,983],argmin:[127,433,561,691,983],args_clon:1136,args_dist:1136,args_to_ivi:[15,1248],args_to_n:[15,1248],args_uni:1136,argsort:[104,228,415,537,666,861],argument:[15,16,17,18,19,40,41,42,43,59,63,907,908,909,918,919,931,935,941,983,986,987,995,1008,1039,1055,1116,1117,1136,1180,1184,1254,1255,1277,1278],aris:[1248,1294],arithmet:[43,1199,1202,1205,1207],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:485,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,127,289,433,476,477,480,485,561,691,835,836,837,838,839,840,842,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,861,862,864,865,866,887,893,909,927,928,929,932,933,934,935,938,939,940,941,943,945,949,953,954,959,963,969,974,975,983,984,985,986,988,989,991,992,993,994,996,997,998,999,1000,1001,1003,1004,1005,1006,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1024,1026,1027,1028,1029,1030,1031,1032,1034,1035,1036,1037,1038,1040,1041,1042,1043,1045,1046,1047,1048,1049,1051,1052,1053,1054,1055,1060,1062,1063,1066,1067,1068,1069,1071,1072,1073,1074,1076,1077,1078,1079,1080,1081,1083,1084,1087,1088,1092,1094,1095,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1136,1180,1182,1189,1192,1193,1194,1195,1196,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1248,1249,1265,1273,1274,1276,1281,1285,1290,1291],arrang:[983,1009],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,388,389,390,391,393,394,834,835,836,837,838,839,840,842,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,861,862,864,865,866],array_api_methods_to_test:43,array_builtin:[43,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906],array_equ:[289,691,983],array_lik:[485,983,990],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,983],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1248],arraywithgener:[22,1248],arraywithgradi:[24,1248],arraywithimag:[26,1248],arraywithlinalg:[28,1248],arraywithlog:[30,1248],arraywithmath:[32,1248],arraywithmeta:[34,1248],arraywithrandom:[36,1248],arraywithreduct:[38,1248],arriv:[40,41,42],articl:1248,arxiv:1248,as_arrai:[40,41,983,1024,1060],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[431,433,442,909,927,959,966,967,968,969],as_tensor:433,as_vari:[40,41],as_zero:[40,41],asarrai:[433,983],asin:[782,1116],asinh:[85,396,518,647,842],aspect:[1097,1102],assert:[40,41,983,993,1136],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:983,associ:[43,1104,1112],assum:[1291,1294],astyp:[433,959],asynchron:[40,41,42],at_dev:[40,42,909,922,923],at_kei:[40,41],at_key_chain:[40,41],at_nod:1136,atan2:[782,1116],atan:[782,1116],atanh:[782,1116],attent:[43,1217,1228,1229,1265,1276],attribut:[0,6,40,41,838,839,840,983,1048,1080],audienc:[1248,1291],author:1248,avail:[40,41,43,909,944,946,947,956,983,1010,1136],averag:[1081,1083,1084,1088,1132,1133,1134,1199,1202],average_across_step:[1132,1133,1134],avoid:[909,1136,1291],axes:[40,41,43,433,464,476,478,854,856,857,858,864,865,866,909,953,983,988,989,1001,1014,1068,1074,1079,1104,1107,1136,1199,1201,1202,1203,1204,1205,1206,1207],axes_length:[40,41,983,1009,1010,1011],axi:[40,41,433,435,436,440,441,447,455,456,457,462,463,465,854,855,856,857,858,861,862,864,865,866,909,911,914,921,932,933,934,935,938,939,940,941,953,983,988,989,1000,1001,1004,1005,1006,1014,1019,1036,1037,1038,1051,1062,1063,1066,1068,1069,1076,1079,1136,1192,1198,1199,1201,1202,1203,1204,1205,1206,1207,1209,1214,1230,1232,1233],axis0:[40,41,983,1068],axis1:[40,41,854,855,983,1068],axis2:[854,855],back:[43,1277,1278,1281,1285],backend:[15,17,19,40,41,388,389,390,391,393,394,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,909,944,947,956,959,965,973,982,983,1029,1033,1081,1084,1086,1088,1089,1090,1095,1136,1248,1249,1254,1255,1281,1282,1283,1284,1285,1286,1290,1291,1294],backend_nam:43,background:[1248,1291],backprop:1294,backward:[864,865,866,1290],band:[983,1017],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,391,431,432,433,457,842,850,868,893,909,911,912,913,914,915,916,918,919,921,922,923,924,959,983,1022,1038,1056,1065,1081,1136,1199,1200,1242,1246,1248,1251,1252,1253,1256,1258,1259,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1294],batch:[40,41,854,856,909,951,952,983,1017,1027,1097,1101,1104,1111,1132,1133,1134,1135,1136,1217,1226,1234,1235,1279,1280],batch_shap:[433,449,983,1027,1046,1097,1098,1099,1100,1101,1102,1103,1104,1112,1192,1193,1217,1227,1228,1229,1265,1274],batch_siz:[485,486,1136,1192,1193,1217,1218,1219,1220,1221,1222,1223,1224],bayesian:1294,becaus:[43,983,986],becom:[983,997,1116,1121,1294],been:[983,1009,1010,1011,1192,1193],befor:[40,41,43,909,953,1132,1133,1134,1136,1180,1189,1199,1201,1202,1203,1204,1205,1206,1207,1217,1228,1229,1294],before_1:[983,1001,1079],before_n:[983,1001,1079],begin:[1180,1181,1188,1291],behaviour:[43,1294],behind:[1081,1084,1086,1088,1089,1090,1248],being:[40,41,43,983,986,1050,1058,1136],belong:[40,41],below:[43,1248,1291,1294],below_depth:[40,41],benefit:1248,bernoul:[1217,1225,1265,1273],best:[43,983,1039,1248],beta1:[1081,1083,1084,1088,1281,1282,1283],beta2:[1081,1083,1084,1088,1281,1282,1283],beta:[1234,1235],between:[40,41,42,838,839,983,986,1104,1109,1180,1184,1192,1194,1230,1232,1233,1281,1283],bia:[1217,1226,1227,1265,1266,1267,1268,1269,1270,1271,1272,1275],bias_initi:[1265,1266,1267,1268,1269,1270,1271,1272,1275],bilinear:[1097,1098],bilinear_resampl:[163,344,472,604,765,1097],bilinearli:[1097,1098],binari:[842,844,1230,1231],binary_cross_entropi:1230,bit:[391,838,839,840,959,970,1097,1099,1103,1248],bitwis:[842,844],bitwise_and:[85,213,396,518,647,842],bitwise_oper:[0,7,8],block:[1248,1291],bool:[15,18,19,40,41,42,43,476,477,480,842,847,849,854,856,861,862,864,865,866,868,887,907,908,909,927,940,944,948,953,956,958,959,969,983,985,991,992,1005,1008,1012,1013,1017,1024,1026,1034,1039,1060,1062,1076,1077,1078,1081,1084,1085,1086,1087,1088,1089,1090,1092,1104,1107,1132,1133,1134,1135,1136,1180,1181,1182,1184,1188,1189,1192,1193,1199,1201,1202,1203,1204,1205,1206,1207,1209,1210,1217,1225,1254,1255,1265,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],both:[43,983,1004],bottom:1248,boundari:[40,41,1192,1196],branch:[43,907,908],brittl:43,broadcast:[40,41,43,842,844,854,856,864,865,866,868,887,893,983,994,1012,1041,1042,1043,1051,1104,1107,1116,1121,1124,1199,1201,1202,1203,1204,1205,1206,1207],broadcast_to:[289,691,983],build:[1136,1248,1265,1276,1277,1278],build_mod:[1265,1276,1277,1278],builder:1248,built:[909,983,986,1136,1265,1276,1277,1278],builtin:43,builtin_ab:[244,868],builtin_add:[244,868],builtin_and:[244,868],builtin_bool:[244,868],builtin_contain:[244,868],builtin_deepcopi:[244,868],builtin_dir:[244,868],builtin_eq:[244,868],builtin_float:[244,868],builtin_floordiv:[244,868],builtin_g:[244,868],builtin_getattr:[244,868],builtin_getattribut:[244,868],builtin_getitem:[244,868],builtin_gt:[244,868],builtin_int:[244,868],builtin_invert:[244,868],builtin_l:[244,868],builtin_lt:[244,549,678,868],builtin_mul:[244,868],builtin_n:[244,868],builtin_neg:[244,868],builtin_or:[244,868],builtin_po:[244,868],builtin_pow:[43,244,868],builtin_radd:[244,868],builtin_rand:[244,868],builtin_rfloordiv:[244,868],builtin_rmul:[244,868],builtin_ror:[244,868],builtin_rpow:[244,868],builtin_rsub:[244,868],builtin_rtruediv:[244,868],builtin_rxor:[244,868],builtin_setitem:[244,868],builtin_some_op:43,builtin_sub:[244,868],builtin_truediv:[244,868],builtin_xor:[244,868],bypass:1291,cach:[909,925,983,995],cache_fn:983,calcul:[40,41,42,43,842,843,850,852,868,893,1116,1124],call:[43,909,953,983,1050,1058,1075,1081,1085,1136,1180,1181,1184,1188,1265,1276,1277,1278,1281,1285,1291,1294],callabl:[40,41,907,908,909,918,919,953,983,995,1008,1010,1039,1075,1132,1133,1134,1135,1136,1180,1184,1185,1186,1188,1189,1217,1228],can:[43,909,951,952,953,983,1052,1097,1099,1136,1248,1290,1291,1294],cancel_join_thread:1136,cannot:43,captur:1248,cast:[40,41,127,289,433,561,691,959,983,1000,1097,1099,1103],catch_except:[983,1008],categori:43,caus:43,ceil:[289,433,691,983,986],cell:[1217,1227,1265,1274],certain:[40,41,983,986,1037,1038],chain:[40,41,1132,1133,1134,1287,1288],chang:[43,909,983,1052,1136,1180,1182,1189,1248,1290],channel:[983,1017,1097,1099,1100,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275],check:[15,16,17,18,19,40,41,43,909,948,958,959,964,973,982,983,993,1013,1026,1034,1067,1077,1081,1087,1136,1180,1181,1188,1248,1291],check_nest:[1180,1188],check_shap:[40,41],check_submod_ret:[1277,1278],check_typ:[40,41],choic:[1248,1291],choleski:[769,1104],choos:[983,1078,1104,1109,1116,1121,1248],choose_random_framework:59,chosen:[40,41,983,986,1078],chunk:[909,951,952,953,1136],chunk_siz:[909,953,1136],circl:[1116,1117,1119],clark:1248,clear:[909,925,1136],clear_framework_stack:59,clear_mem_on_dev:[431,683,909],click:1248,clip:[40,41,289,433,691,983,998,999,1041,1043,1248],clip_matrix_norm:983,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,983],clipped_delta:1136,clone:[40,41,909,928,929,930,931,1136],clone_arrai:1136,clone_it:1136,clone_nest:1136,clonedit:1136,cloneditem:1136,clonednest:1136,close:[43,1097,1102,1116,1119,1136,1294],closest:[959,964],closest_valid_dtyp:959,code:[40,41,42,43,485,1248,1249,1290,1291],codebas:[909,951,952,1136,1248,1291,1294],codomain:[842,843,852],colab:1248,collect:[15,40,41,431,433,467,472,476,482,483,485,868,907,909,959,983,1081,1097,1104,1113,1116,1136,1180,1192,1199,1209,1217,1230,1234,1251,1265,1279,1281],color:[40,41,42,1292,1293],column:[983,1027],combin:[40,41,42,1097,1102,1248,1294],combined_batch_s:1136,come:1291,command:1248,comment:43,commit:1294,common:[40,41,43,1116,1121],common_key_chain:[40,41],commun:[43,1248,1291],compar:[40,41,983,985,991,992],comparison_oper:[0,9,10],compat:[43,842,844,854,856,864,865,866,868,887,893,983,1012,1052,1116,1124,1248,1294],compil:[289,433,691,1237,1238,1242,1248,1277,1278,1281,1282,1283,1284,1285,1286],compile_graph:[1236,1248,1277,1278,1281,1285],compile_on_next_step:[1277,1278,1281,1282,1283,1284,1285,1286],complet:[40,41,1104,1109,1136],complex:[1291,1294],compon:[983,1004],composit:43,comput:[40,41,842,844,845,849,851,854,856,868,887,909,953,983,998,999,1005,1006,1012,1040,1081,1083,1084,1085,1086,1088,1089,1090,1092,1094,1097,1100,1104,1105,1106,1107,1108,1109,1110,1113,1114,1115,1116,1117,1119,1120,1121,1125,1126,1127,1128,1130,1180,1184,1199,1200,1201,1202,1203,1204,1205,1206,1207,1217,1218,1219,1220,1221,1222,1223,1224,1226,1228,1230,1231,1232,1233],concat:[40,41,909,938,939,940,941,953,983,1017,1136],concaten:[40,41,127,289,433,561,691,983,1017,1136,1248],concatten:[40,41,909,938,939,940,941,953,1136],condit:[433,907,908,983,1078,1180,1188],conditon:[1180,1188],config:[40,41,1136],config_list:1136,configur:[40,41],conflict:43,conform:43,conjunct:1291,connect:[1242,1265,1275,1276],consid:[40,41,1104,1109,1290,1294],consist:[40,41,909,941,1136,1199,1200,1277,1278,1291],constant:[909,918,919,983,1001,1136,1180,1184,1230,1231,1232,1233,1234,1235,1256,1257,1261,1264,1277,1278,1279,1280,1291],constant_kwarg:1136,constant_pad:[289,433,561,691,983],constitu:[40,41],construct:[983,1069,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290],constructor:[40,41,42,983,987,1287,1288],consum:[909,1136],cont_feat_dim:[1217,1228],contaienr:[40,41],contain:[15,18,19,42,43,835,836,837,842,843,844,847,849,850,852,854,856,861,862,864,865,866,868,887,893,909,928,932,953,959,963,983,984,988,989,997,998,999,1002,1012,1026,1041,1043,1053,1064,1065,1081,1083,1084,1086,1088,1089,1090,1116,1124,1132,1133,1134,1135,1136,1192,1193,1199,1201,1202,1203,1205,1207,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[433,691,983],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[433,983,1044,1217,1228,1265,1276],context_dim:[1265,1276],contextmanag:[59,60],continu:[43,1136,1291],contract:[40,41,1199,1200],contribut:[1248,1249],contributor:[43,1248],control:1248,conv1d:[194,377,499,824,1217,1248,1265],conv1d_transpos:[194,377,499,824,1217],conv1dtranspos:[1248,1265],conv2d:[194,377,499,632,824,1217,1248,1265],conv2d_transpos:[194,377,499,824,1217],conv2dtranspos:[1248,1265],conv3d:[194,377,499,632,824,1217,1248,1265],conv3d_transpos:[194,377,499,824,1217],conv3dtranspos:[1248,1265],convent:[40,41,1199,1200],conver:[909,925,936,948,955,958,1136],convers:[16,17,18,19,40,41,1136,1248],convert:[15,16,17,18,19,40,41,43,909,936,937,959,965,971,972,983,1061,1072,1073,1097,1099,1103,1104,1112,1136,1180,1182,1189,1248,1255],convert_dtyp:959,convolut:[1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272],cool:43,cooler:43,coordin:[983,1042,1116,1117,1119,1121],copi:[40,41,485,983,1003,1136,1180,1182],copy_arrai:[433,691,983],copy_nest:1180,core:[431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,911,912,913,914,915,916,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1248],corner:43,correct:[43,1248,1291],correctli:[40,41,1104,1107,1116,1121,1199,1201,1202,1203,1204,1205,1206,1207],correspond:[40,41,43,868,893,983,1000,1192,1193],cos:[85,396,518,647,842,983,1017,1116,1117,1130,1291],cosh:[85,396,518,647,782,842,1116],cosin:[842,845,846,1116,1117,1118,1123],cost:[1081,1083,1084,1086,1088,1089,1090,1132,1133,1134,1135],cost_fn:[1132,1135],could:1294,count:[40,41,857,858,864,865,866,1136,1199,1204,1206,1246],cprint:1292,cpu:[40,41,43,909,946,948,954,955,958,983,986,990,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1080,1136,1192,1193,1194,1195,1196,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1287,1288,1290,1291],creat:[40,41,835,836,837,909,918,919,983,986,990,1018,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1071,1080,1081,1094,1136,1192,1193,1194,1195,1196,1248,1249,1254,1255,1256,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290,1294],create_if_abs:[40,41],create_vari:1256,creation:[40,41,42,43],creation_funct:[388,389,390,835,836,837],crop:[1097,1101],crop_siz:[1097,1101],cross:[289,691,983,1230,1231,1232,1233],cross_entropi:1230,cuda:[40,41,909,918,937,954,983,986,990,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1080,1136,1192,1193,1194,1195,1196,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1287,1288],cumprod:[127,289,433,691,983],cumsum:[691,983],cumul:[983,1005,1006],current:[40,41,42,43,909,918,942,943,945,949,959,965,973,982,983,1007,1021,1029,1033,1045,1049,1136,1180,1181,1188,1248,1294],current_framework:59,current_framework_str:[433,691,983,1136],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1242,d_in:[1217,1218,1219,1220,1221,1222,1223],d_out:[1217,1218,1219,1220,1221,1222,1223],da_can_termin:1136,da_dim_s:[909,1136],da_direct:1136,da_tune_step:[909,1136],dai:1294,daniel:1248,data:[40,41,42,43,835,836,837,839,840,842,843,844,847,849,852,854,856,857,858,864,865,866,868,887,893,909,911,912,913,914,915,916,921,922,923,937,959,963,964,965,969,970,971,972,973,974,975,982,983,986,990,1012,1018,1027,1034,1047,1048,1052,1063,1067,1080,1081,1087,1095,1116,1124,1136,1217,1226,1248],data_format:[1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272],data_type_funct:[391,393,394,838,839,840],dataset:[40,41],datatyp:[40,41,959,964,974,975],dcdw:[1081,1083,1084,1086,1088,1089],debug_info:1242,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1081,1088,1089,1281,1283,1284],decay_lambda:[1081,1088,1089,1281,1283,1284],decid:[40,41,1294],decompos:[1104,1105,1109],decomposit:[1104,1105,1109,1111],decor:43,decrement:[983,1030],dedic:[1081,1095,1254,1255],deep:[40,41,1248],deep_copi:[40,41],deeper:[909,931,935,941,1136,1180,1189,1248],deepli:[1180,1182],def:[43,60,81,209,392,514,643,910,917,920,960,961,962,1082,1136,1140,1147,1243,1247,1248,1257,1260,1263,1290,1291,1294],default_dev:43,default_devic:909,default_dtyp:[43,959],default_float_dtyp:959,default_int_dtyp:959,default_key_color:[40,41,42],default_nod:1136,default_rng:485,default_v:[983,1008],defaultdevic:[909,910],defaultdtyp:[959,960],defaultfloatdtyp:[959,961],defaultintdtyp:[959,962],defer:43,defin:[43,983,1004,1046,1048,1080,1192,1194],degre:[842,845,1116,1128,1130],del:1136,delta:[1081,1083,1136,1242],delta_dim_s:1136,delta_percent_mem:1136,delta_sf:1136,delta_util:1136,demo:1248,denomin:[983,1016,1023,1057,1064,1065,1234,1235,1279,1280],dens:[1265,1275],depend:[43,842,843,850,868,893,983,1078,1104,1111,1248],depth:[40,41,433,458,909,931,935,941,983,1025,1046,1136,1180,1189,1242,1246,1277,1278],depth_cutoff:[40,41],depthwis:[1217,1224,1265,1272],depthwise_conv2d:[194,377,499,632,824,1217],depthwiseconv2d:[1248,1265],deriv:[1081,1083,1084,1086,1088,1089,1090,1180,1182,1189,1248,1277,1281,1285,1287],descend:[861,862,1104,1111],descent:[1081,1086,1281,1286],describ:[40,41,1199,1200],descript:[854,856],design:[1248,1249],desir:[40,41,909,954,959,963,983,986,990,1027,1028,1047,1048,1080,1097,1102,1136,1199,1201,1202,1203,1205,1207],desired_aspect_ratio:[472,475,1097,1102],desired_percent_increas:1136,det:[348,476,608,769],detail:1294,detect:[40,41,1180,1181,1188],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,842,843,844,847,852,854,856,864,865,866,868,893,909,944,946,947,956,959,963,964,970,973,974,975,982,983,985,986,990,991,992,1026,1029,1033,1034,1067,1077,1081,1087,1104,1110,1116,1124,1132,1133,1134,1135,1136,1217,1228],dev:[40,41,42,43,120,283,431,433,434,437,447,448,449,456,457,458,459,460,461,466,485,486,554,683,909,912,913,915,916,918,919,922,923,925,926,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,945,948,949,950,951,952,953,954,955,958,983,986,990,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1080,1081,1096,1192,1193,1194,1195,1196,1254,1255,1256,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1287,1288],dev_clon:[40,41,909],dev_clone_arrai:909,dev_clone_it:909,dev_clone_nest:909,dev_dist:[40,41,909],dev_dist_arrai:909,dev_dist_it:909,dev_dist_nest:909,dev_from_str:[43,120,283,431,554,683,909],dev_mapp:909,dev_str:[40,41],dev_to_str:[120,283,431,554,683,909],dev_unifi:909,dev_unify_arrai:909,dev_unify_it:909,dev_unify_nest:909,dev_util:909,devclonedit:909,devcloneditem:909,devclonednest:909,devdistit:909,devdistitem:909,devdistnest:909,develop:[43,1248,1291,1294],deviat:[40,41,1192,1195,1199,1205,1234,1235,1279,1280],devic:[21,40,41,43,388,389,390,432,433,446,835,836,837,911,912,913,914,915,916,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,983,986,990,1018,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1080,1081,1096,1192,1193,1194,1195,1196,1248,1254,1255,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1287,1288],devmanag:[909,917],devmapp:[909,919],devmappermultiproc:909,diag:[1104,1111],diagon:[97,221,408,530,659,854,983,1027],dict:[15,16,17,18,19,40,41,42,909,911,914,918,919,921,931,932,933,934,935,983,1009,1010,1011,1039,1132,1133,1134,1136,1180,1182,1183,1184,1187,1189,1254,1255],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,838,839,909,928,929,932,933,1104,1109,1136,1217,1226,1248,1291,1294],differenti:[1248,1291],dilat:[1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272],dim:[40,41,43,983,1046,1097,1098,1102,1104,1111,1136,1265,1276],dim_siz:[40,41,909,1136],dimens:[40,41,42,854,855,856,857,858,864,865,866,909,940,983,994,1000,1004,1009,1010,1011,1014,1017,1024,1036,1046,1051,1052,1062,1063,1066,1074,1076,1097,1101,1104,1107,1111,1132,1133,1134,1135,1136,1192,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1214,1217,1218,1219,1220,1221,1222,1223,1224,1227,1230,1232,1233,1265,1266,1267,1268,1269,1270,1271,1272,1275,1276],dimension:[40,41,485,854,856,864,865,866,983,1062,1063,1104,1111],direct:1136,directli:[43,1180,1189,1291,1294],directori:[983,1059,1070],discret:[1230,1232],disk:[40,41,1097,1099],distanc:[983,986],distribut:[40,41,909,928,932,933,934,935,1136,1192,1193,1194,1195,1196,1217,1225,1265,1273,1277,1278],distribute_nest:1136,distributedarrai:[40,41],distrubt:[1230,1232],dive:[1248,1291],divid:[40,41,983,1062,1064,1116],dividend:[1116,1124],divis:[983,1016,1023,1057,1064,1065,1081,1083,1084,1088,1116,1124,1281,1282,1283],divisor:[1081,1083,1084,1088,1116,1124,1281,1282,1283],doc:1248,docstr:43,doe:[40,41,43,983,986,1062,1290],doesn:[1104,1109,1248],doing:43,domain:[842,843,852,1116,1117],don:1248,done:43,door:1294,dot:[1104,1106,1217,1228,1229,1265,1276],down:1290,downscal:[983,998,999],drag:[1248,1294],draw:[1192,1193,1195,1196],drawn:[1192,1193,1194,1195,1196],drop:[1248,1294],dropout:[1217,1248,1265,1276],dropout_r:[1265,1276],ds_tune_step:909,dtype:[40,41,43,127,289,388,389,390,391,393,394,433,434,437,438,446,449,459,466,561,691,835,836,837,838,839,840,963,964,965,966,967,968,970,971,972,973,974,975,976,977,978,979,980,981,982,983,986,990,1018,1027,1046,1047,1048,1080],dtype_bit:[127,289,433,561,691,959],dtype_from_str:[43,127,289,433,561,691,959],dtype_in:[433,443,444,445,959,965,970,971,972,973,974,975,982],dtype_to_str:[127,289,433,561,691,959],duplic:[40,41],dure:[40,41,43,907,908,983,1075,1081,1083,1084,1088,1132,1133,1134,1135,1277,1278,1281,1282,1283,1285],dynam:[433,439,907,908],each:[40,41,42,43,842,843,844,847,849,850,852,861,862,868,887,893,909,918,919,928,929,930,931,932,933,934,940,952,953,983,984,985,1001,1012,1051,1062,1066,1069,1079,1081,1084,1086,1088,1089,1090,1097,1100,1104,1111,1116,1119,1124,1126,1127,1136,1180,1184,1192,1193,1199,1200,1217,1218,1219,1220,1221,1222,1223,1224,1225,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1291],eager:1291,easi:1294,easili:1248,econom:1294,ecosystem:1248,edg:[983,997,1001,1079],effect:[1081,1090],effective_grad:[1081,1090],effici:1294,einop:[40,41,983,1009,1010,1011],einops_rearrang:[40,41,983],einops_reduc:[40,41,983],einops_repeat:[40,41,983],einstein:[40,41,1199,1200],einsum:[40,41,180,365,487,622,804,1199],either:[40,41,43,983,1008,1039,1042,1044,1132,1133,1134,1135,1136,1265,1276,1277,1278,1291],eleg:1136,element:[40,41,43,485,842,843,844,845,846,847,849,850,851,852,857,858,861,862,864,865,866,868,887,893,909,930,934,940,959,963,983,984,986,988,989,991,992,996,997,998,999,1005,1006,1012,1015,1016,1027,1028,1041,1043,1051,1053,1062,1073,1078,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1136,1199,1200,1202,1204,1206,1209,1210,1211,1212,1213,1214,1215,1216,1217,1225,1265,1273],elementwis:[40,41],elementwise_affin:[1279,1280],elementwise_funct:[842,843,844,845,846,847,848,849,850,851,852],elemtn:[1192,1193],elif:1136,els:[983,993,1008,1013,1136],elsewher:[983,1078],emphas:1248,empti:[40,41,1104,1109,1136],enabl:[40,41,42,43,1248],encapsul:[838,840],encod:[983,1017,1097,1099],end:[983,986,1248,1291],ensur:43,entir:[40,41,864,865,866,909,953,1136,1248,1265,1274],entri:[40,41,983,1037,1038,1062,1063],entropi:[1230,1231,1232,1233],enumer:1136,environ:1248,eps:[391,838,839],epsilon:[1081,1083,1084,1088,1230,1231,1232,1233,1234,1235,1279,1280,1281,1282,1283],equal:[40,41,433,561,691,842,845,847,983,985,991,992,1001,1062,1079,1116,1128,1130,1192,1196],equality_matrix:[983,985],equat:[40,41,1199,1200],equival:[854,856,983,986,1116,1130],erf:[483,782,1116],error:[40,41,43,909,983,1063,1116,1125,1136,1209,1210,1277,1278,1281,1285],essenti:43,etc:[40,41,43,909,954,983,986,990,1019,1020,1027,1037,1038,1046,1047,1048,1054,1055,1080,1136,1192,1193,1194,1195,1196,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1287,1288,1294],euclidean:[854,856],euler:834,evalu:[40,41,842,850,864,865,866,983,1042,1180,1181,1188],even:[43,1294],evenli:[40,41,983,986,1037,1038,1062],everi:[983,985,1294],exact:[40,41],exampl:[43,907,908,983,997,1066,1104,1109,1248,1290,1291,1294],example_input:[433,439,907,908],exc_tb:1136,exc_typ:1136,exc_val:1136,exce:[983,1043],except:[40,41,44,47,864,865,866,983,986,993,1000,1008,1075,1136],excess_s:1136,excit:[1248,1291],exclud:[59,61,983,986,1192,1196],exclus:[40,41,433,441,454,467,469,983,1005,1034,1081,1087,1192,1194],execut:[43,983,1075,1291],execute_with_gradi:[160,339,467,599,759,1081,1248,1290],exist:[40,41,983,1008,1136,1248,1281,1285,1294],exp:[782,1116],expand:[40,41,983,1014,1017],expand_dim:[40,41,289,691,983,1136],expect:[983,987],explain:[43,1291],explicitli:[43,1265,1274,1276,1277,1278,1291],expon:[43,868,893,983,1065],exponenti:[43,868,893,1116,1125,1126],expos:[983,990,1002],express:[983,1042],exsit:[40,41],extend:43,extra:[40,41,42,1081,1085],extract:[854,855],eye:[1104,1106],fabian:1248,fabio:1248,factor:[909,918,951,952,953,1081,1083,1084,1088,1089,1104,1111,1136,1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272,1281,1282,1283,1284],fail:43,falck:1248,fall:[1277,1278,1281,1285],fallback_to_non_compil:[1277,1278,1281,1285],fals:[15,18,19,40,41,42,59,66,67,68,69,70,431,433,441,442,454,462,465,467,468,469,476,478,842,847,854,856,861,862,864,865,866,909,927,940,948,953,958,959,966,967,968,969,983,985,1005,1008,1013,1017,1024,1034,1039,1060,1062,1076,1078,1081,1084,1085,1086,1087,1088,1089,1090,1104,1107,1132,1133,1134,1135,1136,1180,1181,1182,1184,1188,1189,1199,1201,1202,1203,1204,1205,1206,1207,1236,1237,1238,1242,1246,1254,1255,1277,1278,1281,1282,1283,1284,1285,1286],fan_in:1256,fan_mod:1256,fan_out:1256,far:[1180,1181,1188,1290],faster:[907,908],favourit:[1248,1290],feasibl:1294,feat_dim:[1217,1228,1229],fed:[909,953,1136],feed:[909,953,1136],few:43,field:1294,file:[40,41,43,983,1059,1070,1277,1278],filepath:[40,41],fill:[40,41,835,836,837,983,1018,1047,1192,1194],fill_valu:[433,446,983,1018],filter:[1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272,1294],filter_s:[1265,1266,1267],filter_shap:[1265,1268,1269,1270,1271,1272],find:[40,41,1294],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,208,209,391,392,513,514,642,643,838],finish:[1248,1294],finit:[842,847],first:[40,41,43,485,842,844,907,908,909,940,983,991,1000,1004,1012,1037,1038,1066,1068,1081,1085,1104,1111,1132,1133,1134,1135,1136,1180,1181,1188,1192,1198,1199,1204,1206,1265,1276,1277,1278,1281,1285,1291,1294],firstlayersiren:[1248,1256],firstli:[1291,1294],fist:[909,953,1136],fit:[40,41,431,433,467,472,476,482,483,485,983,1051,1097,1102],fix:43,fkt:1294,flag:[40,41,43,1081,1087],flat:[40,41,43,983,1051,1054],flat_list:[40,41],flatten:[40,41,854,856,983,1017,1051,1199,1201,1202,1203,1205,1207],flatten_key_chain:[40,41,1277,1278],flexibl:[1248,1291],flip:[40,41,100,224,411,533,662,857],float32:[43,433,449,959,963,971,972,983,986,990,1027,1047,1048,1080],float_dtyp:[959,967,977],float_img_to_uint8_img:1097,floor:[289,433,691,983,1016,1136],floormod:[289,433,691,983],fluid:1294,fname:[1236,1238,1242,1277,1278],folder:[43,1248],follow:[40,41,43,838,840,854,856,909,953,983,1030,1031,1032,1064,1065,1081,1084,1086,1088,1089,1090,1136,1180,1184,1189,1217,1228,1229,1248,1265,1275,1281,1285],followng:[838,839],fomaml_step:1132,forget:[1081,1083,1084,1088,1281,1282,1283],fork:[983,1044,1248,1249],forkserv:[983,1044,1136],form:[15,16,17,18,19,40,41,983,990,1081,1084,1086,1088,1089,1090,1180,1182,1189,1217],format:[40,41,43,909,927,959,963,965,969,983,986,990,1027,1047,1048,1080,1136,1199,1200,1248,1290,1291],format_fn:[40,41],format_key_chain:[40,41],forward:[1277,1278,1281,1285,1290],found:[40,41,42],fourier:[983,1017],fourier_encod:983,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,99,101,105,108,109,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,174,175,176,177,178,179,181,182,183,184,185,186,187,190,192,193,195,196,197,198,199,200,201,206,207,209,210,211,214,215,216,217,218,219,222,223,225,229,232,233,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,345,346,347,349,350,351,352,353,354,355,357,358,361,362,363,364,366,367,368,369,370,371,372,373,376,378,379,380,381,382,383,384,389,390,392,393,394,397,398,399,400,401,402,403,404,405,406,409,410,412,416,419,420,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,468,469,470,471,473,474,475,477,478,479,480,481,484,486,488,489,490,491,492,493,494,497,498,500,501,502,503,504,505,506,511,512,514,515,516,519,520,521,522,523,524,525,526,527,528,531,532,534,538,541,542,550,555,556,557,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,600,601,602,603,605,606,607,609,610,611,612,613,614,618,619,620,621,623,624,625,626,627,628,629,633,634,635,640,641,643,644,645,648,649,650,651,652,653,654,655,656,657,660,661,663,667,670,671,679,684,685,686,687,688,689,690,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,760,761,762,763,764,766,767,768,770,771,772,773,774,775,776,777,778,780,781,783,784,785,786,787,788,789,790,791,792,793,794,795,796,798,799,800,801,802,803,805,806,807,808,809,810,811,814,815,816,817,818,819,820,822,823,825,826,827,828,829,830,831,836,837,839,840,842,843,844,845,846,847,848,849,850,851,852,854,855,856,858,862,865,866,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1210,1211,1212,1213,1214,1215,1216,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1235,1237,1238,1240,1241,1243,1247,1248,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281,1282,1283,1284,1285,1286,1288,1289,1290,1291,1293,1294],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1136,framewrk:[983,1044],freeli:43,frequenc:[983,1017],from:[40,41,42,43,842,849,852,854,855,857,858,864,865,866,909,918,919,953,959,965,983,1008,1019,1020,1027,1052,1063,1071,1078,1081,1084,1088,1097,1101,1104,1109,1132,1133,1134,1135,1136,1180,1182,1189,1192,1193,1194,1195,1196,1199,1204,1206,1217,1225,1228,1248,1254,1255,1265,1273,1276,1281,1285,1290,1291],from_cal:[1277,1278],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[127,289,433,561,691,838,839,983,1104,1109,1248],full_matric:[476,477,480,1104,1111],fulli:[43,1248,1265,1275,1276,1290],func:[40,41,433,439,467,468,907,908,909,953,983,995,1081,1085,1136],further:[43,1294],furthermor:1294,futur:1294,gain:1256,gamma:[1234,1235],gather:[40,41,127,289,433,561,691,983,1020],gather_nd:[40,41,127,289,433,561,691,983],gauss:[1116,1125],gaussian:[1209,1210],geglu:[1248,1251],gelu:[375,496,813,1209,1248,1251],gener:[23,40,41,43,431,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,485,907,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1087,1192,1194,1196,1197,1248,1281,1285],geometr:[983,1017],get:[40,41,43,838,839,840,909,918,919,927,942,943,948,952,955,958,959,969,970,983,987,1021,1022,1023,1050,1136,1246,1248,1265,1274,1294],get_all_arrays_in_memori:983,get_all_arrays_on_dev:909,get_framework:59,get_initial_st:[1265,1274],get_min_bas:983,get_min_denomin:983,get_mod_kei:[1277,1278],get_num_dim:[433,691,983],get_param:1242,get_param_recurs:1242,get_referrers_recurs:983,getfullargspec:1136,gist:1248,give:[43,861,862,983,1052,1291],given:[40,41,43,835,836,837,857,858,861,862,909,942,948,951,952,953,955,958,959,963,983,986,990,997,1005,1006,1020,1037,1038,1047,1048,1051,1054,1055,1062,1069,1074,1076,1080,1081,1083,1084,1086,1088,1089,1090,1104,1106,1112,1116,1117,1136,1180,1185,1186,1192,1195,1196,1198,1199,1202,1204,1205,1206,1207,1217,1218,1219,1220,1221,1222,1223,1224,1254,1255,1294],global:[40,41,42,909,918,919,926,951,952,953,959,966,967,968,983,1007,1022,1023,1050,1056,1057,1058,1064,1065,1081,1096,1136,1234,1235,1240,1241,1248,1279,1280],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1248,1256,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275],googl:1248,got:[43,1248],gpu0:43,gpu2:43,gpu:[909,944,947,1136],gpu_is_avail:[431,909,1136],grad:[1248,1281,1285,1290],gradient:[25,40,41,468,469,470,471,909,953,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1100,1132,1133,1134,1135,1248,1281,1282,1283,1284,1285,1286,1290,1294],gradient_descent_upd:[1081,1132,1133,1134,1135],gradient_imag:[163,344,472,604,765,1097],gradienttrack:[1081,1082],graph:[1081,1084,1086,1088,1089,1090,1236,1237,1238,1243,1248,1277,1278],graph_compil:[1236,1237,1238,1239,1240,1241,1242,1246],greater:[40,41,983,986,1015,1063,1192,1196],green:[40,41,42,1292,1293],grid:[983,1042],group:[1097,1102],guid:[1248,1249,1294],gym:1248,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1294,half:[983,986,1136,1192,1196],hand:1248,handl:[40,41,42,43,907,908,909,925,927,936,937,948,955,958,1081,1084,1086,1088,1089,1090,1136,1281,1282,1283,1284,1285,1286],has:[40,41,43,983,1066,1104,1109,1110,1116,1120],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,983],hasattr:1136,have:[40,41,43,838,839,842,843,844,847,849,852,854,856,857,858,864,865,866,868,887,893,983,1000,1004,1009,1010,1011,1012,1018,1066,1081,1087,1095,1104,1111,1116,1124,1136,1248,1290,1291],haven:43,hdf5:[40,41,1277,1278],head:[1217,1228,1265,1276],head_dim:[1265,1276],height:[1097,1102],height_cutoff:[40,41],help:[59,391,431,432,909,921,922,923,924,959,1081,1242,1246,1248,1256,1258,1259,1261,1262,1264],helper:1248,here:[43,1248],hidden:[1217,1227,1265,1274],hierarch:[983,1002],hierarchi:[40,41],high:[40,41,485,1192,1194,1196],higher:[1081,1084,1086,1088,1089,1090,1104,1111],highest:[1192,1194],highest_util:1136,highest_util_nod:1136,highli:1248,highlight:1294,highlight_subgraph:[1236,1238,1242],hint:43,hkt:1294,hold:[959,963,983,986,990,1054,1055],host:1248,hot:[983,1046],how:[1248,1265,1276,1277,1278,1291,1294],howev:[43,1291],http:1294,hyperbol:[842,843,846,1116,1118,1122,1123,1129,1131,1209,1216],hypothet:1294,icon:1248,idea:1248,ident:[40,41,43,127,289,433,561,691,983],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[834,838,839,842,852],if_exist:[40,41],ignor:[40,41,1281,1285],ignore_key_error:[40,41],ignore_miss:[1281,1285],ignore_non:[40,41],iinfo:[80,208,391,513,642,838],imag:[27,473,474,475,983,1036,1098,1099,1100,1101,1102,1103,1217,1218,1219,1220,1221,1223,1224,1248,1294],image_dim:[1097,1101],imkkhk:1294,immedi:[1248,1291,1294],implement:[43,842,843,850,868,893,1248,1291,1294],in_featur:[1217,1226],inadvert:43,includ:[40,41,43,854,856,864,865,866,983,986,1026,1064,1065,1077,1180,1181,1192,1196,1265,1275,1276,1279,1280,1290],include_deriv:[1180,1182,1189],include_empti:[40,41],include_gener:[1236,1237,1238,1242,1277,1278],include_inf:[40,41,983,1026,1077],include_nest:[1180,1181],include_self:[40,41],inclus:[1192,1194],incom:[1217,1226],increas:[909,931,935,941,983,1001,1014,1079,1136,1180,1189],increasingli:1294,increment:[983,1031,1136],increment_param_count:1242,inde:1248,indent:[40,41,42],independ:[1192,1193],index:[40,41,433,485,983,988,989,1019,1020,1042,1063,1066,1180,1183,1185,1186,1187,1190],index_nest:1180,indic:[40,41,433,447,448,458,460,461,854,856,861,862,983,988,989,1019,1020,1028,1046,1054,1055,1180,1181,1183,1185,1186,1187,1188,1190,1191,1192,1193,1209,1214,1217,1218,1219,1220,1221,1222,1223,1224,1234,1235,1265,1266,1267,1268,1269,1270,1271,1272,1277,1278],indices_wher:[127,289,433,691,983],indistinguish:[842,852],inevit:1294,inf:[40,41,854,856,983,1026,1035,1077,1116,1120],infer:[842,849,854,855,907,908,983,1024,1027,1052,1060,1097,1101,1104,1109,1291,1294],infin:[842,843,847,852,854,856,983,1035],infinit:[842,852],inform:[838,839,840,1081,1092],init_c:[1217,1227],init_h:[1217,1227],init_on_first_step:[1281,1285],initi:[40,41,42,59,391,431,432,909,921,922,923,924,959,1081,1136,1217,1227,1242,1246,1248,1258,1259,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1281,1285],initialz:[1277,1278],inner:[1132,1133,1134,1135],inner_batch_fn:[1132,1133,1134],inner_batch_shap:[1217,1226],inner_cost_fn:[1132,1133,1134],inner_grad_step:[1132,1133,1134,1135],inner_learning_r:[1132,1133,1134,1135],inner_optimization_step:[1132,1133,1134,1135],inner_v:[1132,1133,1134],inp:1136,inplac:[40,41,983,993,1029,1033,1067,1081,1084,1086,1088,1089,1090,1254,1255,1281,1282,1283,1284,1285,1286],inplace_arrays_support:[433,983],inplace_decr:[127,289,433,561,691,983],inplace_incr:[127,289,433,561,691,983],inplace_oper:[0,11,12],inplace_upd:[40,41,127,289,433,561,691,983,1254,1255],inplace_variables_support:[433,983],input:[15,18,19,40,41,42,43,842,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,861,862,864,865,866,907,908,909,918,919,926,927,928,931,932,935,941,953,954,959,963,964,966,967,968,969,970,974,975,983,984,985,988,989,991,992,993,994,996,997,998,999,1000,1001,1003,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1024,1026,1027,1028,1030,1031,1032,1034,1035,1036,1040,1041,1042,1043,1051,1053,1060,1061,1063,1066,1067,1068,1069,1071,1072,1073,1074,1076,1077,1079,1081,1085,1087,1092,1096,1097,1098,1099,1100,1101,1103,1104,1107,1109,1111,1113,1114,1115,1116,1118,1120,1122,1123,1124,1128,1129,1130,1131,1132,1133,1134,1135,1136,1192,1193,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1234,1235,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1279,1280,1291],input_ax:[909,953,1136],input_channel:[1265,1266,1267,1268,1269,1270,1271,1274,1275],input_queu:1136,inputs_split:1136,insert:[983,1014],insid:43,inspect:1136,inspir:1294,instal:1248,instanc:[15,16,17,18,19,40,41,43,485,868,887,893,909,918,1136,1254,1255,1287,1288],instead:[40,41,485,1199,1201,1202,1203,1204,1205,1206,1207,1294],int32:43,int64:[959,963,983,986,990,1027,1047,1048,1080],int_dtyp:[959,968,978],integ:[40,41,485,838,840,842,844,854,856,864,865,866,959,975,983,986,996,1015,1053,1062,1192,1194,1197],integr:1248,intend:43,inter:1248,interact:1248,interchang:[40,41,983,1068],interest:1248,interfac:[983,990,1291],intermedi:[40,41],intern:[40,41,909,1081,1095,1136,1180,1181,1188,1189,1256,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1287,1288],interpol:[983,1036],intersect:[1116,1117],interv:[40,41,864,865,866,983,986,997,1037,1038,1116,1119,1192,1196],introduc:1294,inv:[769,1104,1294],invalid:[864,865,866],invalid_dtyp:959,invers:[842,843,1104,1106,1108,1116,1117,1118,1119,1120,1122,1294],invert:[1104,1106,1108],invest:1294,invoc:[907,908],irrespect:1248,is_al:1136,is_arrai:[127,289,433,561,691,983,1136],is_float_dtyp:959,is_int_dtyp:959,is_mean:1136,is_sum:1136,is_var:[1242,1246],is_vari:[160,339,467,599,759,1081],isfinit:[85,213,396,518,647,842],isinf:[289,561,691,983],isinst:1136,isnan:[85,213,396,518,647,842],isnumer:1136,issu:43,item:[15,19,40,41,868,880,881,909,918,919,921,928,930,932,934,940,959,966,983,1002,1025,1064,1065,1136,1180,1184,1185,1186,1189,1190,1191,1248,1277,1278,1290],iter:[15,16,17,18,19,40,41,42,907,908,909,912,913,915,916,918,919,922,923,930,932,933,934,935,940,953,983,985,994,1000,1001,1027,1042,1047,1051,1052,1055,1060,1062,1066,1069,1074,1079,1136,1180,1181,1182,1184,1188,1189],iterbal:[909,930,934,940,1136],its:[485,861,862,909,953,983,1027,1052,1068,1074,1136,1248],itself:[43,1180,1189],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,388,389,390,391,393,394,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,834,835,836,837,838,839,840,842,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,861,862,864,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,911,912,913,914,915,916,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1246,1248,1249,1251,1252,1253,1254,1255,1256,1258,1259,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1292,1293],ivy_backend:[40,41],ivy_bay:1294,ivy_test:43,ivyfcmodel:1290,ivyh:[40,41,42],ivymodul:[191,821],jame:1248,jax:[43,1081,1087,1248,1294],jax_concat:1248,jnp:1248,join:[40,41,983,1000,1066,1136],journal:1248,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1248,1265,1274,1294],kaimingnorm:[1256,1260],kalman:1294,kalman_filt:1294,kalman_filter_step:1294,kalman_filter_upd:1294,keep:[40,41,909,954,983,1076,1136,1248,1249,1294],keep_inner_v:[1132,1133,1134],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1132,1133,1134],keepdim:[40,41,433,465,476,478,854,856,864,865,866,983,1076,1104,1107,1199,1201,1202,1203,1204,1205,1206,1207],kei:[15,16,17,40,41,42,43,868,873,909,921,983,1002,1132,1133,1134,1136,1180,1183,1187,1217,1228,1229,1248,1254,1255,1265,1276,1281,1285],kept:[40,41,42,1132,1133,1134],kera:1294,kernel:[1217,1227],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,909,918,919,931,935,941,983,987,1009,1010,1011,1039,1136,1180,1184,1277,1278],keyword_color_dict:[40,41,42],kind:[838,839,840,1294],kwarg:[15,16,17,40,41,42,59,63,909,918,931,935,941,983,1039,1136,1236,1237,1238,1242,1254,1255,1277,1278],kwarg_stateful_idx:[1236,1237,1238,1242,1277,1278],kwargs_clon:1136,kwargs_dist:1136,kwargs_uni:1136,label:[43,1230,1231,1232,1233],lamb:[1081,1088,1248,1281],lamb_upd:1081,lambda:[1136,1281,1284,1286,1290],lar:[1081,1088,1089,1248,1281],larger:[838,839,983,997],largest:[40,41,838,839,840,983,988,1015],lars_upd:1081,last:[40,41,857,858,864,865,866,983,986,1004,1036,1062,1066,1104,1107,1111,1199,1204,1206,1209,1214,1217,1227,1265,1275],later:[40,41,983,995],latest:[1265,1274],layer:[1081,1084,1086,1088,1090,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1234,1235,1248,1256,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1287,1288,1294],layer_norm:1234,layernorm:[1248,1279],layerwis:[1081,1089,1281,1284],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1180,1181,1188],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1209,1210,1211],leaky_relu:[813,1209],learn:[842,849,854,855,1081,1084,1086,1088,1089,1090,1104,1109,1132,1133,1134,1135,1192,1198,1248,1281,1282,1283,1284,1285,1286,1291,1294],learnabl:[1234,1235,1279,1280],least:43,leav:[15,18,19,40,41,1180,1181,1182,1188,1189],left:[40,41,43,1104,1107,1199,1201,1202,1203,1204,1205,1206,1207,1248],leftmost:[40,41],len:1136,length:[40,41,42,983,986,1052,1063,1074],lenton2021ivi:1248,lenton:1248,less:[40,41,43,85,213,396,518,647,842,854,856,983,996,1136,1192,1196],less_util_node_str:1136,let:[1291,1294],level:1248,librari:[1248,1290,1294],lightweight:1248,like:[43,1081,1087,1192,1196,1248,1290,1291,1294],limit:[40,41,42,838,839,840,983,997,998,999],linalg:[29,1105,1106,1107,1108,1109,1110,1111,1112,1248],line:43,linear0:[1248,1290],linear1:1248,linear2:1290,linear:[983,1017,1036,1104,1209,1210,1211,1212,1217,1225,1248,1265,1266,1267,1268,1269,1270,1271,1272,1290],linear_algebra:[476,477,478,479,480,481,854,855,856],linear_resampl:[127,289,433,561,691,983],linearli:[983,1017],link:[43,1248],linspac:[127,289,433,561,691,983,986],list:[15,18,19,40,41,43,388,389,390,835,836,837,857,858,864,865,866,909,918,919,928,929,931,932,933,935,938,939,953,983,986,990,992,1042,1061,1062,1071,1076,1132,1133,1134,1136,1180,1181,1182,1184,1188,1189,1217,1218,1219,1220,1221,1222,1223,1224,1248,1254,1255,1265,1266,1267,1268,1269,1270,1271,1272],list_join:[40,41,42],list_stack:[40,41],liter:[854,856],littl:1291,load:[40,41],loaded_kwarg:1136,loader:1248,local:43,local_set:[983,1025],locat:[43,842,848,983,1035,1192,1193],log2:[85,396,518,647,842],log:[782,983,1038,1104,1110,1116,1136,1230,1231,1232,1233,1248],log_all_op:1242,log_global_inference_abs_tim:[1239,1248],log_global_inference_rel_tim:[1239,1248],logarithm:[842,850,1104,1110,1116,1127],logic:[31,842,851,864,865,866,1114,1115,1248],logical_and:[356,779,1113],logical_not:[85,213,396,518,647,842],logical_or:[356,779,1113],logit:[1230,1233],logspac:[127,289,433,561,691,983],look:[43,1291,1294],loop:[1132,1133,1134,1135],loss:[1231,1232,1233,1248,1290],loss_fn:[1248,1290],lot:1291,low:[40,41,485,1192,1194,1196],lower:[40,41,43,983,1041,1192,1196],lower_depth:[1277,1278],lowest:[15,18,19,40,41,1180,1189,1192,1194],lstm:[1217,1227,1248,1265],lstm_updat:[43,1217],machin:[838,839,840,842,849,854,855,1104,1109,1192,1198,1248,1291,1294],made:43,mai:[983,986,1008,1012,1248,1291,1294],main:[983,1027,1248],mainli:1248,maintain:43,make:[43,485,909,1136,1248,1291],maml:[1132,1133,1134],maml_step:1132,manag:[909,1136],manhattan:[854,856],mani:[40,41,43,983,1062,1248],manipulation_funct:[857,858],manner:[15,18,19,40,41,43,1180,1189],manual:[1180,1181,1188,1294],map:[40,41,42,842,848,909,918,983,1035,1136,1180,1185,1186,1189,1265,1276,1290],map_cont:[40,41],map_nest_at_index:1180,map_nest_at_indic:1180,map_sequ:[40,41],mapper:[909,918,919,1136],mask:[1217,1228,1229],master:43,match:[40,41,983,1039],match_kwarg:983,math:[33,484,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1136,1248],mathbb:[1104,1112],mathbf:[1104,1112],mathemat:[834,854,856],matmul:[43,289,433,561,691,983,1294],matplotlib:1291,matric:[1217,1226],matrix:[40,41,854,855,983,985,998,1040,1104,1105,1106,1107,1108,1109,1110,1112,1217,1226,1265,1275],matrix_norm:[40,41,167,348,476,608,769,1104],matter:1248,max:[40,41,391,838,839,840,983,998,999,1010,1041,1054,1055,1136,1199,1201,1281,1283],max_batch_s:[40,41],max_chunk_s:[909,953,1136],max_depth:[40,41,909,913,916,923,931,935,941,983,1025,1136,1180,1189],max_dev_dim_step_ratio:909,max_freq:[983,1017],max_length:[40,41],max_node_dim_step_ratio:1136,max_norm:[40,41,983,998,999],max_split_factor_step_s:[909,1136],max_trust_ratio:[1081,1088,1281,1283],maxim:[1248,1291,1294],maximis:1248,maximum:[40,41,42,691,909,931,935,941,953,983,988,997,998,999,1017,1081,1088,1136,1180,1189,1199,1201],mayb:[15,18,19],mdi:1136,mean:[40,41,485,909,938,939,940,941,953,983,1010,1132,1133,1134,1135,1136,1180,1184,1192,1195,1199,1202,1205,1207,1256,1290,1294],measur:[1217,1228,1265,1276],mech:1248,mechan:[1248,1294],medic:1294,member:43,memori:[909,925,948,953,955,958,1136,1217,1227,1248],merg:43,merge_with_upstream:43,meshgrid:[289,433,691,983],messag:[1292,1293],meta:[35,1133,1134,1135,1248],method:[40,41,42,43,485,983,990,1002,1042,1054,1055,1081,1088,1089,1136,1180,1181,1188,1189,1248,1265,1276,1277,1278,1291],might:[983,1008,1294],min:[40,41,391,838,839,840,854,856,983,1010,1043,1054,1055,1064,1104,1109,1136,1199,1203],min_bas:[983,1065],min_denomin:[983,1064],min_dev_dim_s:909,min_node_dim_s:1136,min_sf_tune_step:[909,1136],min_unit_dev_tune_step:909,min_unit_node_tune_step:1136,mind:1248,mini:[1234,1235,1279,1280],minimum:[40,41,691,909,959,963,983,986,989,990,997,1022,1023,1056,1057,1064,1065,1136,1199,1203],miss:[1281,1285],ml_framework:[842,849,854,855,983,986,1104,1109],mod:[983,1016],mod_depth:[1277,1278],mod_height:[1277,1278],mod_with_top_mod_key_chain:[1277,1278],mode:[40,41,476,479,907,908,909,938,939,940,941,953,1104,1109,1111,1136,1291],model:[1248,1290],modul:[40,41,42,59,983,1044,1136,1248,1249,1251,1252,1253,1254,1255,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1279,1280,1287,1288,1294],moment:[1081,1083,1084,1088,1281,1282,1283],more:[43,857,858,983,1066,1136,1248,1291,1294],more_util_node_str:1136,most:[40,41,43,1104,1109,1248,1294],move:[40,41,43,909,954,1136],much:[43,1248,1294],multi:[485,983,1044,1217,1228,1265,1276],multi_head_attent:1217,multi_index_nest:1180,multi_map:[40,41],multi_nod:1136,multidev:[909,920,921,922,941],multidevcontain:[40,41],multidevic:[909,918],multidevit:[909,912,915,918,919,923],multidevitem:[909,911,914],multidevnest:[909,913,916],multiheadattent:[1248,1265],multinod:[1136,1140],multinodecontain:1136,multinodeit:1136,multinodeitem:1136,multinodenest:1136,multinomi:[173,360,485,617,797,1192],multipl:[40,41,864,865,866,983,1039,1062,1104,1106,1199,1201,1202,1203,1204,1205,1207,1234,1235,1265,1275,1291],multipli:[40,41,983,1005,1199,1204],multiprocess:[40,41,42,433,691,909,918,983,1136],must:[40,41,42,43,835,836,837,842,843,844,847,849,852,854,856,857,858,864,865,866,868,887,893,909,938,939,940,941,953,983,986,1000,1002,1004,1012,1041,1043,1055,1066,1116,1121,1124,1136,1192,1197,1281,1285],mutabl:[1180,1182,1189],mutlidevic:[909,918],mutlinod:1136,mw_tm1:[1081,1084,1088],mx_concat:1248,mxnet:[43,1248,1294],my_func:43,mymodel:1248,name:[907,908,1236,1237,1238,1242,1290],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1291],nan:[40,41,834,842,843,847,848,983,1026,1077],nativ:[15,17,18,19,40,41,43,909,925,927,936,937,948,955,958,959,964,971,972,1136,1248,1249,1254,1255],native_modul:[1254,1255],native_module_class:[1254,1255],nativearrai:[15,18,19,43,476,477,480,838,839,840,842,843,844,845,846,847,848,849,850,851,852,854,856,857,858,861,862,864,865,866,868,887,893,909,927,953,954,959,963,969,974,975,983,984,985,986,988,989,990,991,992,994,996,997,998,999,1000,1001,1003,1004,1005,1006,1009,1010,1011,1012,1014,1015,1016,1017,1019,1020,1024,1026,1027,1028,1035,1036,1037,1038,1040,1041,1042,1043,1046,1047,1048,1051,1052,1053,1054,1055,1060,1062,1063,1066,1068,1069,1071,1072,1073,1074,1076,1077,1078,1079,1080,1136,1180,1182,1189],natur:[1104,1110,1116,1127,1294],ncdhw:[1217,1222,1223,1265,1270,1271],nchw:[1217,1220,1221,1224,1265,1268,1269,1272],ncw:[1217,1218,1219,1265,1266,1267],ndarrai:[43,388,389,390,391,393,394,485,983,1072],ndhwc:[1217,1222,1223,1265,1270,1271],nearest:[983,1053],need:[43,983,998,999,1217,1219,1221,1223,1248,1265,1267,1269,1271,1294],neg:[40,41,842,847,854,856,857,858,864,865,866,1199,1204,1206,1209,1211],negative_slop:1256,neither:1136,nest:[15,16,17,18,19,40,41,42,909,931,935,941,983,990,1071,1132,1133,1134,1136,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1277,1278,1281,1282,1283,1284,1285,1286],nested_indices_wher:1180,nested_map:[1136,1180],network:[1217,1226,1248,1249,1251,1265,1277,1278,1294],neural:[1217,1248,1251,1265,1290],new_node_percent_mem:1136,new_node_util:1136,new_node_utils_kei:1136,new_std:[1234,1235,1279,1280],newli:[43,907,908,983,994,995],newlin:[40,41,42],newshap:[983,994,1052],next:[838,839,1136,1277,1278,1281,1282,1283,1284,1285,1286],nhwc:[1217,1220,1221,1224,1265,1268,1269,1272],node:[40,41,1180,1181,1188],node_clon:1136,node_dist:1136,node_dist_arrai:1136,node_dist_it:1136,node_in:1136,node_mapp:1136,node_str:1136,node_to_str:1136,node_util:1136,nodedistit:1136,nodedistitem:1136,nodedistnest:1136,nodemanag:[1136,1147],nodemapp:1136,nodemappermultiproc:1136,noinspect:[43,910,960,961,962,1082,1136,1243],non:[40,41,854,856,864,865,866,907,908,959,973,1277,1278,1281,1285,1291],none:[40,41,42,43,59,61,64,388,389,390,431,433,434,437,439,446,447,448,449,456,457,458,459,460,461,462,463,464,466,476,478,485,486,835,836,837,838,839,840,842,849,854,855,856,857,858,864,865,866,907,908,909,918,919,925,926,951,952,953,954,959,966,967,968,983,986,990,1007,1008,1013,1018,1019,1020,1025,1027,1029,1030,1031,1032,1033,1037,1038,1044,1046,1047,1048,1051,1054,1055,1056,1057,1062,1063,1064,1065,1074,1075,1080,1081,1084,1086,1088,1089,1090,1096,1097,1101,1104,1107,1109,1132,1133,1134,1135,1136,1180,1181,1184,1188,1189,1192,1193,1194,1195,1196,1199,1201,1202,1203,1204,1205,1206,1207,1217,1219,1221,1223,1226,1227,1228,1229,1234,1235,1236,1237,1238,1242,1246,1254,1255,1256,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288],norm:[40,41,854,856,983,998,999,1104,1107,1235,1248,1280,1281,1283],normal:[1192,1195,1234,1235,1279,1280],normalized_idx:[1234,1235],normalized_shap:[1279,1280],notat:[40,41,1199,1200],note:[43,1104,1109],noth:[40,41,1291],notimplementederror:1136,now:[40,41,909,954,983,984,1136,1248,1265,1276,1277,1278,1290,1291,1294],np_concat:1248,np_finfo:391,ns_tune_step:1136,num:[433,456,457,983,1037,1038],num_arrai:[40,41],num_arrays_in_memori:983,num_arrays_on_dev:909,num_band:[983,1017],num_channel:[1265,1272],num_chunk:1136,num_chunks_floor:1136,num_class:[1192,1193],num_cpu_cor:909,num_gpu:[120,431,909,1136],num_head:[1217,1228,1265,1276],num_kei:[1217,1228,1229],num_lay:[1265,1274],num_or_size_split:[40,41,433,462,983,1062],num_output:1136,num_queri:[1217,1228,1229],num_sampl:[433,455,485,486,983,1036,1097,1098,1192,1193],num_task:[1132,1133,1134,1135],number:[40,41,42,834,838,839,840,842,848,864,865,866,907,908,909,945,946,947,959,970,974,975,983,986,997,1001,1014,1017,1024,1027,1036,1037,1038,1041,1045,1051,1062,1069,1073,1077,1079,1104,1111,1132,1133,1134,1135,1136,1192,1193,1197,1199,1201,1202,1203,1205,1207,1217,1228,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1291,1294],numer:[43,842,847,868,887,893,983,1022,1023,1056,1057,1064,1065,1116,1124,1256],numhead:[1217,1228],numpi:[40,41,43,388,389,390,391,393,394,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,983,1072,1104,1109,1111,1199,1200,1248,1290,1291,1294],nwc:[1217,1218,1219,1265,1266,1267],obj:[40,41],object:[40,41,42,59,391,838,839,840,909,959,963,983,986,990,1081,1180,1183,1185,1186,1187,1190,1191,1192,1198,1242,1246,1256,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1277,1278],object_in:[433,437,983,990],observ:1136,occupi:[838,839,840,983,1054,1055],off:[983,986],offer:1248,offset:[854,855,1234,1235],often:1291,old:[40,41],on_init:[1265,1276,1277,1278],onc:[43,909,953,1136,1192,1193,1248],one:[40,41,43,854,856,857,858,909,938,939,940,941,953,959,965,983,1027,1039,1046,1054,1055,1063,1066,1104,1107,1136,1199,1200,1201,1202,1203,1204,1205,1206,1207,1248,1291,1294],one_hot:[127,433,561,691,983],onearrai:[983,1014],ones:[40,41,77,205,388,510,639,835,983,1027,1046,1048,1248],ones_lik:[127,289,433,561,691,983],ongo:43,onli:[40,41,43,485,857,858,909,1104,1109,1136,1180,1181,1182,1188,1281,1282,1283,1284,1285,1286,1290,1291],onlin:1248,onto:[909,938,939,954,1136,1180,1184,1189],oom:[909,1136],open:[983,986,1192,1196,1248,1294],opencv:1291,oper:[40,41,842,851,983,993,1009,1010,1011,1037,1038,1067,1081,1084,1086,1088,1089,1090,1113,1114,1115,1217,1218,1219,1220,1221,1222,1223,1224,1226,1248,1249],operand:[40,41,842,843,1199,1200],oppos:[983,1017],optim:[909,1081,1084,1086,1088,1089,1090,1132,1133,1134,1135,1136,1248,1282,1283,1284,1286,1290,1294],optimizer_upd:1081,option:[15,18,19,40,41,42,43,388,389,390,835,836,837,842,849,854,855,856,857,858,864,865,866,907,908,909,918,919,927,931,932,933,934,935,938,939,940,941,948,951,952,953,954,958,959,964,969,973,982,983,985,986,988,989,990,998,999,1000,1005,1007,1008,1017,1018,1019,1020,1024,1026,1027,1034,1036,1037,1038,1039,1042,1044,1046,1047,1048,1051,1054,1055,1058,1060,1062,1063,1064,1065,1066,1074,1076,1077,1080,1081,1084,1086,1087,1088,1089,1090,1092,1097,1101,1104,1107,1109,1132,1133,1134,1135,1136,1180,1181,1182,1184,1188,1189,1192,1193,1199,1201,1202,1203,1204,1205,1206,1207,1209,1210,1214,1217,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1254,1255,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1291],ord:[854,856,1104,1111],order:[40,41,42,43,854,856,857,858,861,862,1081,1084,1086,1088,1089,1090,1104,1107,1132,1133,1134,1287,1288],ordered_node_util_kei:1136,org:1294,organ:43,origin:[40,41,42,983,1048,1052,1080,1104,1107],other:[40,41,43,868,870,871,876,878,879,883,885,886,887,888,889,891,893,894,895,896,897,898,900,901,902,904,905,906,907,908,983,985,986,1027,1081,1085,1192,1196,1248,1290,1291,1294],other_i:[43,868,887,893],otherwis:[15,16,17,18,19,40,41,842,847,854,856,864,865,866,909,926,959,966,967,968,983,993,1074,1075,1078,1081,1087,1092,1096,1132,1133,1134,1136,1199,1201,1202,1203,1205,1207],our:[43,1248,1294],out:[43,485,868,887,983,986,1116,1120,1217,1225,1227,1248,1265,1273],out_feat_dim:[1217,1228],out_featur:[1217,1225,1226],out_i:[842,847],outdat:1294,outer:[1132,1133,1134,1135],outer_batch_fn:[1132,1133,1134],outer_batch_shap:[1217,1226],outer_cost_fn:[1132,1133,1134],outer_v:[1132,1133,1134],outlin:1291,output:[40,41,43,835,836,837,857,858,909,918,919,953,983,986,995,1018,1027,1051,1069,1081,1085,1116,1121,1136,1192,1194,1195,1196,1217,1219,1221,1223,1225,1227,1228,1229,1248,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276],output_ax:[909,953,1136],output_axi:1136,output_channel:[1265,1266,1267,1268,1269,1270,1271,1274,1275],output_connected_onli:[1236,1238,1242,1277,1278],output_queu:1136,output_shap:[1217,1219,1221,1223,1265,1267,1269,1271],outsid:[983,997],over:[40,41,854,856,864,865,866,1104,1107,1192,1196,1199,1201,1202,1203,1205,1207,1234,1235,1279,1280],overal:1291,overflow:[983,986],overhead:1291,overrid:[983,1046,1048,1080],overriden:[1281,1285],overwrit:[40,41,909,953,1136],overwrite_at_key_chain:[40,41],own:[1248,1291,1294],packag:[43,1291],pad:[983,1001,1017,1079,1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272],pad_width:[433,983,1001,1079],page:1248,pair:[1217,1229],parallel:[909,918,919,1136],parallelis:[909,918,919,1136],param:[40,41,42,43,433,447,448,842,852,909,953,983,984,1019,1020,1046,1047,1136,1247,1248,1277,1278,1290],paramet:[15,16,17,18,19,40,41,42,835,836,837,838,839,840,842,843,844,845,846,847,848,849,850,851,854,855,856,857,858,861,862,864,865,866,868,887,893,907,908,909,918,919,925,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,948,951,952,953,954,955,958,959,963,964,965,969,970,971,972,973,974,975,982,983,985,986,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1024,1026,1027,1028,1030,1031,1032,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1047,1048,1051,1052,1053,1054,1055,1056,1057,1058,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1092,1094,1095,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1254,1255,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290],parameter:[1192,1195,1196],params_all_empti:1242,pardo:1248,pars:[983,1002],part:[1081,1084,1086,1088,1089,1090,1116,1120,1248,1277,1278,1291],partial:[40,41,1277,1278],particl:1294,particular:[43,1294],pass:[40,41,42,43,909,918,953,959,964,983,995,1081,1095,1132,1133,1134,1136,1254,1255,1277,1278,1281,1285,1287,1288],pattern:[40,41,983,1009,1010,1011],per:[909,1136,1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272],percent_used_mem_on_dev:909,percent_used_mem_on_nod:1136,percentag:[909,948,1136],perf_count:1136,perform:[40,41,43,861,862,864,865,866,909,983,988,989,1005,1009,1010,1011,1030,1031,1032,1036,1037,1038,1081,1084,1086,1088,1089,1090,1097,1098,1132,1133,1134,1135,1136,1180,1185,1186,1199,1201,1202,1203,1204,1205,1206,1207,1209,1214,1217,1225,1227],permissable_step:1136,permit:43,permut:[485,983,1068,1074],perpendicular:[983,1004],person:1248,physci:1294,pickl:[40,41,1136],pickle_filepath:[40,41],pid:1242,pinv:[348,769,1104],pip:1248,pipelin:1290,pkk:1294,pkkm1:1294,pkm1km1:1294,place:[40,41,43,835,836,837,909,954,983,1014,1018,1030,1031,1032,1136,1281,1282,1283,1284,1285,1286],placehold:[1180,1189],pleas:[485,1104,1109],point:[43,834,835,836,837,838,839,842,843,852,854,856,959,974,983,986,1116,1124],popul:[40,41,1192,1193],popular:1294,population_s:[485,486,1192,1193],portabl:[1248,1249],posit:[15,16,17,838,839,842,847,909,931,935,941,983,984,986,1014,1017,1136,1192,1197,1254,1255],possibi:[40,41],possibl:[43,983,1039,1071,1097,1102,1294],post:[1234,1235],post_shap:[40,41],power:[43,868,893,899,983,1022,1056,1065,1256],practic:1248,pre:[909,1136,1248],pre_shap:[40,41],precis:[838,839,842,852],pred:[1230,1231,1232,1233],predict:[1230,1231,1232,1233,1294],preprint:1248,present:[40,41],preserv:[40,41,42,857,858,1081,1092],preserve_typ:[40,41,467,470,1081,1092],press:1248,prevent:[43,1081,1083,1084,1088,1136,1281,1282,1283],previou:[1081,1084,1088],previous:[983,995],prime:1248,print:[40,41,42,909,949,983,1049,1248,1290],print_all_arrays_in_memori:983,print_all_arrays_on_dev:909,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1281,1285],prob:[485,486,1192,1193,1217,1225,1265,1273],probabl:[1192,1193,1217,1225,1265,1273],problem:[43,1294],process:[43,909,918,919,948,958,983,1044,1136],process_specif:[909,948,958,1136],prod:[40,41,983,1010],produc:[909,918,919,1136],product:[40,41,983,1004,1005,1040,1199,1200,1217,1228,1229,1265,1276],profil:[120,283,431,554,683,909,1136],project:[1248,1290,1291,1294],promot:[43,842,843,844,852,854,856,868,893,1116,1124],prompt:1248,properli:43,properti:[40,41,391,909,921,1136,1242,1246,1277,1278,1281,1282,1283,1284,1286],provid:[40,41,43,857,858,864,865,866,907,908,909,926,959,966,967,968,973,982,983,1008,1046,1048,1055,1080,1081,1084,1086,1088,1089,1090,1096,1136,1248,1265,1274,1281,1282,1283,1284,1285,1286,1291],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1104,1108],ptype:[1242,1246],pull:[1248,1249],pure:[40,41,1248,1294],purpos:1294,put:1136,pybroadexcept:1136,pyprotectedmemb:[1136,1243],pyshadowingbuiltin:43,pyshadowingnam:[910,960,961,962,1082,1136],python:[40,41,909,948,958,983,986,1136,1248],pytorch:[1081,1084,1086,1088,1089,1090,1104,1109,1248,1281,1282,1283,1284,1285,1286,1290,1291,1294],pyunresolvedrefer:1136,quadrant:[1116,1121],queri:[40,41,868,882,903,909,942,952,1136,1217,1228,1229,1265,1276],query_dim:[1265,1276],query_kei:[40,41],queue:[40,41,42,909,918,919,983,1050,1058,1136],queue_class:[909,918,919,1136],queue_load_s:[40,41,42],queue_timeout:[40,41,42,983,1136],quick:[485,1248],quickli:[43,1290],radian:[842,845,1116,1117,1119,1121,1128,1130],rai:[1116,1117],rais:[40,41,43,864,865,866,868,893,983,993,1022,1056,1063,1065,1075,1136,1277,1278,1281,1285],ram:[909,948,955,958,1136],randint:[173,360,485,617,797,1192],random:[37,40,41,486,1193,1194,1195,1196,1197,1198,1248],random_crop:1097,random_norm:[173,360,485,617,797,1192],random_uniform:[173,360,485,617,797,1192],randomli:[485,1097,1101,1217,1225,1265,1273],randomness_factor:[1236,1238,1242,1277,1278],rang:[485,983,986,1037,1038,1116,1121,1136,1248,1290,1294],rank:[854,856,864,865,866,983,1001,1076,1079],rate:[1081,1084,1086,1088,1089,1090,1132,1133,1134,1135,1265,1276,1281,1282,1283,1284,1285,1286],rather:[40,41,909,953,983,986,1034,1081,1087,1136],ratio:[909,1081,1088,1097,1102,1136,1281,1283],raw:[40,41,1104,1109],raw_delta:1136,reach:[909,931,935,941,1136,1180,1189],read:[40,41],readi:[1136,1290],real:[1116,1117,1120],realiti:1291,rearrang:[40,41,983,1009,1011],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1132,1134],receiv:[43,909,918,919,983,987,1039,1136,1265,1275],receivess:[909,1136],receiving_fn:1242,receivng:[1132,1135],recev:[1132,1133,1134],recognit:1294,recommend:1248,rectifi:[1209,1211,1212],recurr:[1217,1227],recurrent_bia:[1217,1227],recurrent_kernel:[1217,1227],recurs:[40,41,1180,1181,1182,1188,1189],redefin:43,reduc:[40,41,864,865,866,909,953,983,1010,1104,1109,1136,1199,1201,1202,1203,1204,1205,1206,1207],reduce_max:[40,41,180,365,487,622,804,1199],reduce_mean:[40,41,180,365,487,622,804,1199,1248,1290],reduce_min:[40,41,180,365,487,622,804,1199],reduce_prod:[40,41,180,365,487,622,804,1199],reduce_std:[40,41,365,1199],reduce_sum:[40,41,180,365,487,622,804,1136,1199],reduce_var:[40,41,180,365,487,622,804,1199],reduct:[39,40,41,433,460,461,864,865,866,983,1010,1054,1055,1200,1201,1202,1203,1204,1205,1206,1207,1248],refactor:43,refer:[43,864,865,866,1081,1083,1084,1104,1112,1265,1275,1294],reflected_oper:[0,13,14],regard:[909,1136],regardless:[40,41,907,908],register_paramet:1290,reimplement:1294,rel:[857,858,1081,1084,1086,1088,1089,1090],rel_slice_obj:1136,relev:[1281,1282,1283,1284,1285,1286],relu:[813,1209,1210,1211,1248,1290],remain:[43,983,1052,1180,1184],remaind:[40,41,983,1016,1062],remov:[40,41,983,1063,1132,1133,1134],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,857,858],rep:[983,1069],repeat:[40,41,43,289,691,983,1011,1069,1136,1291],repeated_config_check:[909,1136],repeatedli:[1180,1187],repetit:[40,41,983,1051,1069],replac:[40,41,43,485,486,983,997,1054,1055,1192,1193],repo:[43,1248],repres:[43,842,843,959,965,970,1217,1226],represent:[40,41,42,43,834,838,839,840,842,844,909,936,937,959,965,971,972,983,1061,1071,1136],reptil:[1132,1135],reptile_step:1132,request:[1248,1249],requir:[43,842,852,907,908,959,963,983,986,990,1254,1255],resampl:[983,1036],reserv:43,reshap:[40,41,43,485,691,983],reshape_lik:[40,41],respect:[842,844,849,868,887,983,1012,1081,1083,1084,1085,1086,1088,1089,1090,1104,1109,1116,1124,1132,1133,1134,1135],respond:43,respons:1136,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,842,843,844,847,849,851,852,854,856,864,865,866,868,887,893,909,918,983,986,1012,1054,1055,1066,1104,1107,1113,1114,1115,1116,1124,1136,1199,1201,1202,1203,1204,1205,1206,1207,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1248],ret:1136,ret_dict:1136,ret_fn:[909,918,919,1136],retain:[1081,1085],retain_grad:[467,468,1081,1085],retreiv:1136,retrn:[983,1061],return_cont:[40,41],return_dict:[40,41],return_graph:[1236,1237,1238],return_inner_v:[1132,1133,1134,1135],return_sequ:[1265,1274],return_st:[1265,1274],rev:[983,1008],revers:[40,41,857,858,983,1008,1074],review:43,right:[40,41,43],rk_e:1294,robot:1248,ronald:1248,root:[43,842,852],round:[289,433,691,842,852,983,986,1136],row:[983,1027,1192,1193],rule:[43,842,844,852,868,893,983,986,1116,1124],run:[43,909,918,1081,1083,1084,1088,1132,1133,1134,1135,1136,1248,1249,1265,1276,1277,1278],safe:[909,918,1136],safety_factor:[909,1136],same:[15,16,17,40,41,43,857,858,909,918,919,953,954,959,963,983,984,996,1000,1015,1016,1019,1020,1046,1048,1053,1054,1055,1066,1080,1081,1087,1092,1104,1111,1116,1120,1132,1133,1134,1136,1199,1200,1217,1218,1219,1220,1221,1222,1223,1224,1248,1265,1266,1267,1268,1269,1270,1271,1272,1290,1294],same_arrai:[40,41],sampl:[983,1036,1097,1098,1192,1193,1195,1196,1217,1225,1248,1265,1273],satisfi:[983,990,1104,1106,1112],save:[40,41,983,1059,1070,1097,1099,1277,1278],save_debug_info:1242,save_dir:[431,432,909,924,1136],save_to_disk:[1236,1238,1242,1277,1278],save_weight:[1277,1278],scalar:[854,856,983,997,1046,1073,1077],scale:[909,951,952,1081,1089,1136,1217,1225,1228,1229,1234,1235,1265,1273,1276,1281,1284],scaled_dot_product_attent:1217,scatter:[983,1046,1054,1055],scatter_flat:[127,289,433,561,691,983],scatter_nd:[127,289,433,561,691,983],scene:[1081,1084,1086,1088,1089,1090],schemat:1248,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,842,844,909,940,983,991,1004,1012,1050,1058,1068,1081,1083,1084,1088,1132,1134,1136,1281,1282,1283],secondli:1294,sector:[842,843],see:[43,59,391,431,432,485,842,844,854,856,864,865,866,868,887,893,909,921,922,923,924,959,983,986,1037,1038,1081,1116,1124,1242,1246,1248,1256,1258,1259,1261,1262,1264],seed:[40,41,173,485,797,1192],seed_valu:[40,41,485,1192,1197],seem:1248,seen_set:[983,1025],select:[983,990,1063,1291,1294],self:[40,41,43,59,391,431,432,868,887,893,909,921,922,923,924,959,1081,1136,1242,1246,1248,1256,1258,1259,1261,1262,1264,1281,1285,1290,1294],self_i:[868,887],sent:1136,seper:[43,983,1017],seq:[40,41,42,1199,1200,1277,1278],sequenc:[15,16,17,40,41,42,43,485,907,908,909,918,919,928,929,930,931,932,933,934,935,938,939,953,959,963,983,986,990,992,994,1000,1001,1027,1039,1042,1047,1051,1052,1055,1062,1066,1069,1074,1079,1081,1085,1097,1101,1102,1104,1107,1136,1180,1191,1192,1194,1196,1199,1201,1202,1203,1204,1205,1206,1207,1217,1218,1219,1220,1221,1222,1223,1224,1234,1235,1254,1255,1265,1266,1267,1268,1269,1270,1271,1272,1274,1277,1278,1279,1280,1281,1285,1287,1288],sequenti:1248,seri:43,set:[15,18,19,40,41,909,938,939,951,952,953,983,985,1007,1027,1056,1057,1058,1059,1081,1084,1086,1087,1088,1089,1090,1104,1107,1136,1180,1181,1188,1190,1191,1192,1193,1197,1199,1201,1202,1203,1204,1205,1206,1207,1246,1248,1265,1274,1281,1282,1283,1284,1285,1286,1291,1294],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1246,set_debug_mod:44,set_default_devic:909,set_default_dtyp:959,set_default_float_dtyp:959,set_default_int_dtyp:959,set_default_nod:1136,set_exception_debug_mod:44,set_framework:[40,41,43,59,1136,1248,1290,1291,1294],set_ivy_backend:[40,41],set_min_bas:983,set_min_denomin:983,set_nest_at_index:1180,set_nest_at_indic:1180,set_param:1242,set_queue_timeout:983,set_split_factor:[909,1136],set_stat:[1281,1282,1283,1284,1285,1286],set_tmp_dir:983,set_with_grad:1081,setter:1136,sever:1294,sgd:[1248,1281],shape0:1136,shape:[40,41,43,388,389,390,433,446,461,485,691,835,836,837,857,858,909,921,959,963,983,984,994,996,1000,1001,1014,1015,1016,1018,1020,1024,1027,1046,1047,1048,1051,1052,1053,1054,1055,1061,1063,1066,1079,1080,1097,1101,1104,1106,1109,1116,1120,1121,1136,1192,1194,1195,1196,1199,1200,1217,1219,1221,1223,1242,1246,1265,1267,1268,1269,1270,1271,1272,1279,1280],shape_slic:[40,41],shape_to_tupl:983,share:[40,41,1248,1291],shift:1136,should:[40,41,42,43,485,842,843,844,847,852,854,856,868,887,893,907,908,909,983,994,995,1002,1046,1052,1081,1084,1086,1088,1089,1090,1116,1124,1136,1199,1200,1248],show:[40,41,1242,1248,1294],show_debug_info:1242,show_graph:[1236,1248,1277,1278,1281,1285],show_mod_in_top_mod:[1277,1278],show_structur:[1277,1278],show_sub_contain:[40,41],show_v:[1277,1278],show_v_in_top_v:[1277,1278],shown:[40,41],shp:1136,shuffl:[40,41,173,485,797,1192],shuffle_h5_fil:[40,41],sigmoid:[813,1209,1248,1290],sign:[1104,1110],signatur:[43,59,391,431,432,433,467,472,476,482,483,485,909,921,922,923,924,959,1081,1242,1246,1256,1258,1259,1261,1262,1264],signific:1294,similar:[43,1217,1228,1265,1276],similarli:[1104,1109],simpl:[43,983,1013,1248,1291,1294],simpler:43,simplest:1291,simpli:[40,41,43,1248,1291,1294],simultan:1248,sin:[782,983,1017,1116,1130,1291],sinco:1291,sine:[842,843,1116,1119,1128,1129],singl:[40,41,907,908,909,918,919,938,939,940,941,983,1063,1073,1077,1097,1102,1136,1192,1195,1196,1199,1201,1202,1203,1204,1205,1206,1207,1248,1291,1294],singleton:[854,856,864,865,866],singular:[1104,1111],sinh:[782,1116],siren:[1248,1256],size:[40,41,42,433,460,909,932,933,934,935,951,952,953,983,986,994,1037,1038,1054,1062,1097,1101,1104,1107,1111,1136,1192,1193,1195,1196,1199,1201,1202,1203,1204,1205,1206,1207,1265,1266,1267],size_ordered_arrai:[40,41],skew:[1104,1112],skinv:1294,skip:[40,41],slice:[40,41,861,862,983,1019,1020,1136,1180,1187],slice_kei:[40,41],slice_obj:[40,41,1136],slice_via_kei:[40,41],slide:[1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272],slodget:1104,slogdet:[348,476,608,769,1104,1110],slope:[1209,1211],small:[1230,1231,1232,1233,1234,1235,1248,1279,1280,1291],smaller:[983,997],smallest:[40,41,838,839,840,983,989,996],smallest_norm:[391,838,839],softmax:[189,496,813,1209,1217,1228,1229],softplu:[813,1209],solv:1294,some:[40,41,43,983,986,1081,1083,1084,1086,1088,1089,1090,1095,1217,1225,1248,1265,1273,1291,1294],some_backend:43,some_namespac:43,someth:[43,1294],something_cool:43,somewher:[40,41],soon:43,sort:[40,41,42,862,1104,1111,1136],sort_by_kei:[40,41],sorting_funct:[861,862],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,388,389,390,391,393,394,431,432,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,483,484,485,486,835,836,837,838,839,840,842,843,844,845,846,847,848,849,850,851,852,854,855,856,857,858,861,862,864,865,866,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,911,912,913,914,915,916,918,919,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1246,1251,1252,1253,1254,1255,1256,1258,1259,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1292,1293,1294],space:[983,986,1017,1037,1038],spars:[1230,1233],sparse_cross_entropi:1230,spawn:[983,1044],special:[842,843],specif:[40,41,43,909,951,983,1002,1009,1010,1011,1044,1132,1133,1134,1135,1136,1192,1198,1248,1277,1278,1290,1291],specifc:[1192,1193],specifi:[40,41,43,854,855,856,857,858,864,865,866,909,928,929,930,931,932,933,934,935,938,939,943,945,949,952,953,954,959,963,965,983,986,988,989,990,997,1000,1001,1018,1019,1020,1026,1037,1038,1066,1076,1079,1104,1107,1136,1180,1185,1186,1190,1191,1199,1200,1201,1202,1203,1204,1205,1206,1207],split:[40,41,127,289,433,561,691,909,918,932,933,934,935,951,952,953,983,1039,1136],split_arg:1136,split_factor:[909,918,1136],split_func_cal:[909,1136],split_siz:1136,spread:[909,941,1136],sqrt:[85,213,396,518,647,842,854,856],squar:[842,852,983,1027,1104,1106,1110],squeez:[127,289,433,561,691,983],stabil:[861,862,983,1064,1065],stabl:[861,862,983,1022,1023,1056,1057,1064,1065],stable_divid:983,stable_pow:983,stack:[40,41,289,691,983,1097,1102,1180,1181,1188,1265,1274],stack_imag:[163,344,472,604,765,1097],stacked_dim_s:1136,stage:43,standard:[40,41,838,839,1192,1195,1199,1205,1234,1235,1248,1249,1279,1280],start:[40,41,43,431,432,433,434,456,457,485,909,924,983,986,1037,1038,1136,1248,1291],starting_index:[40,41],starting_split_factor:[909,1136],state:[1136,1217,1227,1236,1237,1238,1242,1248,1251,1252,1253,1254,1255,1256,1258,1259,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1290],statement:1291,static_argnam:[433,439,907,908],static_argnum:[433,439,907,908],std:[485,1192,1195],step:[40,41,433,434,909,983,986,1037,1038,1081,1083,1084,1086,1088,1089,1090,1132,1133,1134,1135,1136,1248,1281,1282,1283,1284,1285,1286,1290,1294],stephen:1248,stick:1248,still:[40,41,43],stochast:[1281,1286],stop:[40,41,431,432,433,434,456,457,909,924,953,983,986,1037,1038,1081,1084,1086,1088,1089,1090,1092,1132,1133,1134,1135,1136,1281,1282,1283,1284,1285,1286],stop_gradi:[40,41,339,467,599,759,909,953,1081,1084,1086,1088,1089,1090,1132,1133,1134,1135,1136,1281,1282,1283,1284,1285,1286],stopiter:1136,store:[40,41,983,1017,1062,1081,1095,1277,1278],store_var:[1277,1278],str:[15,16,17,40,41,42,43,388,389,390,391,393,394,838,839,840,907,908,909,918,919,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,953,959,964,965,970,971,972,973,974,975,982,983,990,1007,1009,1010,1011,1042,1044,1047,1054,1055,1104,1107,1109,1132,1133,1134,1135,1136,1180,1184,1199,1200,1254,1255,1265,1276,1277,1278],str_to_nod:1136,straight:1291,strength:[1248,1294],stride:[1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272],string:[40,41,43,909,925,927,936,937,942,948,954,955,958,959,963,969,971,972,973,982,983,986,990,1007,1027,1047,1048,1080,1136,1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272,1277,1278],structur:[40,41,42,43,983,1002],structural_diff:[40,41],sub:[40,41,909,932,933,938,939,940,941,983,1062,1132,1133,1134,1135,1136],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1136,sub_mod:[1277,1278],sub_modul:[1287,1288],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1248,1249,1279,1280,1287,1288],subsequ:43,subset:43,substr:[40,41],suffici:[1104,1109],suggest:1248,suitabl:[1097,1102],sum:[40,41,433,460,461,854,856,909,938,939,940,941,953,983,1006,1010,1054,1055,1136,1199,1200,1206],summat:[40,41,1199,1200],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,98,99,101,105,108,109,121,122,123,124,125,126,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,161,162,164,165,166,168,169,170,174,175,176,177,178,179,181,182,183,184,185,186,187,190,192,193,195,196,197,198,199,200,201,206,207,209,210,211,214,215,216,217,218,219,222,223,225,229,232,233,245,246,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,284,285,286,287,288,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,340,341,342,343,345,346,347,349,350,351,352,353,354,355,357,358,361,362,363,364,366,367,368,369,370,371,372,373,376,378,379,380,381,382,383,384,389,390,392,393,394,397,398,399,400,401,402,403,404,405,406,409,410,412,416,419,420,432,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,468,469,470,471,473,474,475,477,478,479,480,481,484,486,488,489,490,491,492,493,494,497,498,500,501,502,503,504,505,506,511,512,514,515,516,519,520,521,522,523,524,525,526,527,528,531,532,534,538,541,542,550,555,556,557,558,559,560,562,563,564,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,600,601,602,603,605,606,607,609,610,611,612,613,614,618,619,620,621,623,624,625,626,627,628,629,633,634,635,640,641,643,644,645,648,649,650,651,652,653,654,655,656,657,660,661,663,667,670,671,679,684,685,686,687,688,689,690,692,693,694,695,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,760,761,762,763,764,766,767,768,770,771,772,773,774,775,776,777,778,780,781,783,784,785,786,787,788,789,790,791,792,793,794,795,796,798,799,800,801,802,803,805,806,807,808,809,810,811,814,815,816,817,818,819,820,822,823,825,826,827,828,829,830,831,836,837,839,840,843,844,845,846,847,848,849,850,851,852,854,855,856,858,862,865,866,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,908,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1235,1237,1238,1240,1241,1243,1247,1248,1252,1253,1255,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1280,1281,1282,1283,1284,1285,1286,1288,1289,1290,1291,1293,1294],supports_inplac:983,suppos:1294,sure:43,svd:[348,608,769,1104],swap:[40,41,983,1068],swapax:[40,41,561,691,983,1294],symmetr:[1104,1112],syntax:[431,433,467,472,476,482,483,485],tab:1248,take:[43,983,1036],taken:[1199,1201,1202,1203,1205,1207],tan:[782,1116,1120],tangent:[1116,1120,1121,1122,1130,1131,1209,1216],tanh:[782,813,1116,1209],target:[40,41,909,925,928,929,930,931,932,933,934,935,938,939,940,941,954,1136,1248],target_dict:[40,41],task:[43,1132,1133,1134,1135],team:[43,1294],templat:1248,temporari:[983,1059,1070],tensor:[40,41,43,433,460,461,861,862,909,927,959,969,983,986,988,989,994,1037,1038,1041,1043,1046,1047,1048,1052,1054,1055,1062,1080,1136,1192,1193,1194,1217,1225,1227,1248,1265,1273,1275,1281,1282,1283,1284,1285,1286,1290,1291],tensorflow:[43,1104,1109,1217,1219,1221,1223,1248,1265,1267,1269,1271,1291,1294],term:[40,41,1217,1227,1248,1265,1275],termcolor:[40,41,42],termin:[40,41,42,1136],test:[43,842,847,864,865,866,959,974,975],test_array_api:43,tf_concat:1248,than:[40,41,838,839,854,856,857,858,909,953,983,986,996,997,1015,1034,1041,1063,1066,1081,1087,1136,1192,1196,1248,1291],thei:[40,41,43,1116,1121,1132,1133,1134,1192,1193,1248,1287,1288,1291],them:[1248,1294],themselv:[1180,1181],therefor:43,thi:[40,41,42,43,909,931,935,941,948,953,958,983,986,1017,1050,1052,1058,1081,1084,1086,1087,1088,1089,1090,1095,1104,1107,1110,1136,1180,1184,1189,1199,1201,1202,1203,1204,1205,1206,1207,1217,1226,1248,1277,1278,1281,1282,1283,1284,1285,1286,1290,1291,1294],thing:[43,1248],those:[40,41,43,983,997,1081,1095,1104,1111,1136],though:43,threshold:[983,1041,1043],through:[40,41],tickbox:43,tile:[289,561,691,983],time:[983,1069,1081,1084,1088,1132,1133,1134,1135,1136,1192,1193,1217,1227,1265,1276,1277,1278,1294],time_chronolog:[1236,1237,1242],time_infer:[1236,1237],timeout:[40,41,42,909,918,919,983,1050,1058,1136],timestep:[1217,1227,1265,1274],timing_fnam:[1236,1237],titl:1248,tmp_dir:983,tmp_dr:[983,1059],to_appli:[40,41],to_clon:[909,1136],to_dev:[40,41,120,283,431,554,683,909],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[909,1136],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1248],to_ivy_modul:[191,821,1248,1254],to_json:[40,41],to_kv_fn:[1217,1228],to_kv_v:[1217,1228],to_list:[40,41,433,691,983],to_multi_dev:[40,41],to_mut:[1180,1182,1189],to_n:[15,40,41,1248],to_nod:1136,to_numpi:[40,41,433,691,983,1248,1290],to_out_fn:[1217,1228],to_out_v:[1217,1228],to_q_fn:[1217,1228],to_q_v:[1217,1228],to_raw:[40,41],to_scalar:[433,691,983],todo:[43,1136],togeth:[40,41,1287,1288],tool:[1248,1291],top_mod:[1277,1278],topic:1294,torch:[43,907,908,1248,1290,1291,1294],torch_concat:1248,torchfcmodel:1290,total:[40,41,42,909,955,1136],total_mem_on_dev:909,total_mem_on_nod:1136,tpu:[909,956,1136],tpu_is_avail:[431,554,683,909,1136],tpye:[959,970],trace:[40,41,983,1034],track:[43,909,1136,1180,1189,1277,1278],track_submod_call_ord:[1277,1278],track_submod_ret:[1277,1278],trail:[1279,1280],train:[1081,1083,1084,1088,1248,1249],trainabl:[1081,1087,1248,1249,1254,1255,1277,1278,1287],trainer:1248,tran:1294,transform:[1217,1225,1226],transpos:[40,41,127,289,433,691,909,940,983,1136,1217,1219,1221,1223,1265,1267,1269,1271],travers:[15,18,19,40,41,1180,1189],treat:[40,41,907,908],tree_depth:1246,tree_height:1242,tri:[40,41],trigonometr:[842,845,1116,1117,1120,1128],trim_kei:[40,41],trust:[1081,1088,1281,1283],truth:[842,849,851,868,887,983,1012,1113,1114,1115],try_else_non:983,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[909,1136],tune_dev_alloc:909,tune_dev_split:909,tune_node_alloc:1136,tune_node_split:1136,tune_step:[909,1136],tupl:[15,16,17,18,19,40,41,43,388,389,390,476,477,480,835,836,837,854,856,857,858,864,865,866,907,908,983,1001,1017,1018,1061,1079,1136,1180,1181,1182,1183,1185,1186,1187,1188,1189,1190,1191,1192,1194,1199,1201,1202,1203,1204,1205,1206,1207],tutori:43,two:[40,41,983,986,991,1004,1040,1068,1104,1107,1110,1111],type:[15,18,40,41,42,43,59,393,394,431,432,835,836,837,839,840,842,843,844,847,849,852,854,856,857,858,864,865,866,868,887,893,909,921,922,923,924,936,937,941,953,959,963,964,965,969,970,971,972,973,974,975,982,983,984,986,990,996,1000,1002,1012,1015,1016,1018,1027,1034,1046,1047,1048,1053,1067,1077,1080,1081,1087,1092,1116,1124,1136,1242,1246,1248,1256,1258,1259,1261,1262,1264,1277,1278,1291],types_to_iteratively_nest:[40,41,42],uint8:[1097,1099,1103],uint8_img_to_float_img:1097,unchang:[15,16,17,18,19],uncom:43,underli:[842,844],underwai:43,unif:1136,unifi:[40,41,909,938,939,940,941,953,1136,1248],uniform:[40,41,1192,1193,1195,1196,1256,1258,1259,1262,1263],uniformli:[1192,1194,1196],unify_arrai:1136,unify_it:1136,unify_nest:1136,union:[15,18,19,40,41,43,388,389,390,391,393,394,476,477,480,835,836,837,838,839,840,842,843,844,845,846,847,848,849,850,851,852,854,856,857,858,861,862,864,865,866,868,887,893,907,908,909,927,932,933,934,935,953,954,959,963,964,965,969,970,971,972,973,974,975,982,983,984,985,986,988,989,990,991,992,994,996,997,998,999,1000,1001,1003,1004,1005,1006,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1024,1026,1027,1028,1035,1036,1037,1038,1040,1041,1042,1043,1046,1047,1048,1051,1052,1053,1054,1055,1060,1061,1062,1063,1066,1068,1069,1071,1072,1073,1074,1076,1077,1078,1079,1080,1136,1180,1181,1182,1188,1189],uniqu:[909,918,919,1132,1133,1134,1135,1136,1180,1184],unique_kwarg:1136,unit:[43,909,1116,1117,1119,1136,1209,1210,1211,1212],unitari:[1104,1111],unless:[983,1046,1048,1080],unlik:[909,1136],unnorm:[1192,1193],unpack:[983,1076],unrol:[1217,1227],unset:1291,unset_debug_mod:44,unset_default_devic:909,unset_default_dtyp:959,unset_default_float_dtyp:959,unset_default_int_dtyp:959,unset_framework:[59,1291],unset_with_grad:1081,unstack:[40,41,127,289,433,561,691,983],until:43,unus:[907,908],updat:[40,41,433,460,461,909,918,983,1032,1054,1055,1081,1083,1084,1086,1088,1089,1090,1132,1133,1134,1136,1180,1185,1186,1190,1191,1217,1227,1248,1249,1254,1255,1281,1282,1283,1284,1285,1286,1291,1294],update_backend:[40,41],update_config:[40,41],update_inference_tim:1242,upper:[40,41,1192,1196],upper_depth:[1277,1278],upstream:43,usabl:[1248,1294],usag:[909,953,1136],use:[40,41,42,43,485,909,918,919,944,956,983,1051,1064,1065,1104,1109,1136,1217,1228,1234,1235,1248,1279,1280,1291,1294],used:[40,41,43,485,909,918,948,951,952,958,959,970,983,1022,1023,1039,1048,1054,1055,1056,1057,1080,1081,1088,1089,1104,1107,1132,1133,1134,1135,1136,1180,1189,1265,1276,1281,1283,1284,1290,1291],used_dev:[909,918],used_mem_on_dev:909,used_mem_on_nod:1136,used_node_str:1136,used_node_strs_dict:1136,useful:[40,41,909,953,1136,1217,1226,1248,1291],user:[1248,1265,1276,1277,1278,1291,1294],uses:1248,using:[40,41,1081,1083,1084,1180,1183,1187,1199,1200,1217,1225,1229,1248,1265,1273,1290,1291,1294],util:[909,942,1136],utility_funct:[864,865,866],v_with_top_v_key_chain:[1277,1278],val:[40,41,433,451,452,453,868,903,983,1030,1031,1032,1056,1057,1246],valid:[864,865,866,959,964,983,1064,1065,1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272],valid_dtyp:959,valu:[40,41,433,842,848,849,851,854,856,861,862,868,887,909,921,952,953,983,984,986,988,989,997,998,999,1001,1002,1008,1012,1017,1018,1019,1020,1035,1037,1038,1041,1043,1050,1051,1052,1053,1054,1055,1056,1057,1058,1074,1077,1078,1079,1081,1085,1088,1097,1103,1104,1110,1111,1113,1114,1115,1116,1125,1126,1127,1132,1133,1134,1136,1180,1184,1185,1186,1190,1191,1192,1195,1196,1199,1201,1203,1217,1228,1229,1234,1235,1242,1265,1276,1279,1280,1281,1283],value_is_nan:983,vanilla:[1132,1134],var_shap:1256,variabl:[15,16,17,18,19,40,41,339,467,599,759,983,993,1030,1031,1032,1033,1034,1067,1081,1084,1085,1086,1087,1088,1089,1090,1092,1095,1132,1133,1134,1135,1217,1228,1234,1235,1254,1255,1256,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288],variable_data:[467,759,1081],varianc:[40,41,1199,1207,1294],varieti:1291,variou:[43,1248],vector:[40,41,476,481,854,856,983,999,1004,1104,1111,1112,1217,1226,1265,1275],vector_norm:[40,41,97,221,408,530,659,854],vector_to_skew_symmetric_matrix:[167,348,476,608,769,1104],verbos:1293,veri:[43,1248],verifi:43,version:43,via:[1180,1181,1188,1291],view:[1097,1102],vision:1248,visual:1291,volum:[1217,1222],vw_tm1:[1081,1084,1088],wai:[1291,1294],wait:[40,41,42,43],want:[1248,1291,1294],warn:[59,66,67,68,69,70],warp:[472,473,1097,1098],watch:1290,weight:[1081,1083,1084,1086,1088,1089,1090,1217,1226,1227,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1277,1278,1281,1283,1284],weight_initi:[1265,1266,1267,1268,1269,1270,1271,1272,1274,1275],weights_path:[1277,1278],well:[40,41,983,1026],were:[40,41,1136],what:[43,1248],when:[40,41,42,43,909,983,995,1065,1078,1104,1111,1136,1248,1277,1278,1291,1294],where:[40,41,43,289,433,691,842,848,864,865,866,868,893,983,986,994,997,1001,1014,1028,1035,1046,1079,1104,1111,1180,1181,1188,1192,1193],wherea:43,wherebi:[1180,1189],whether:[15,18,19,40,41,42,864,865,866,907,908,909,927,940,944,948,953,956,958,959,969,973,974,975,982,983,985,991,992,1005,1008,1013,1017,1024,1026,1029,1033,1034,1039,1060,1067,1076,1077,1081,1084,1085,1086,1087,1088,1089,1090,1092,1132,1133,1134,1135,1136,1180,1181,1182,1184,1188,1189,1192,1193,1209,1210,1217,1225,1248,1254,1255,1265,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286],which:[40,41,42,43,485,835,836,837,838,839,840,854,855,856,857,858,864,865,866,907,908,909,918,919,927,932,933,934,935,938,939,940,941,943,945,949,951,952,953,959,964,969,973,982,983,986,990,1000,1002,1004,1005,1006,1008,1018,1019,1020,1021,1027,1028,1036,1037,1038,1045,1046,1047,1048,1049,1051,1054,1055,1062,1066,1076,1078,1080,1081,1084,1085,1086,1088,1089,1090,1092,1094,1095,1097,1099,1104,1107,1116,1121,1136,1180,1184,1185,1186,1190,1191,1192,1193,1194,1195,1196,1199,1201,1202,1203,1204,1205,1206,1207,1209,1214,1217,1228,1229,1248,1254,1255,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1287,1288,1290,1291],whitespac:[40,41,42],whose:[43,842,843,857,858,868,893,983,990,995,1199,1200,1201,1202,1203,1205,1207],why:[1248,1249],width:[1097,1102],wiki:1294,wikipedia:1294,window:[1097,1102,1217,1218,1219,1220,1221,1222,1223,1224,1265,1266,1267,1268,1269,1270,1271,1272],wise:[40,41,43,842,844,845,849,851,868,887,893,983,996,997,1012,1015,1016,1041,1043,1053,1081,1084,1086,1088,1090,1113,1114,1115,1116,1117,1119,1120,1121,1124,1125,1126,1127,1128,1130,1209,1210,1211,1212,1213,1214,1215,1216],wish:1291,with_arg_label:[1236,1238,1242,1277,1278],with_array_cach:[1236,1237,1238,1242],with_bia:[1265,1275],with_cal:[983,1008],with_default_key_color:[40,41],with_edge_label:[1236,1238,1242,1277,1278],with_entries_as_list:[40,41],with_grad:[1081,1091,1277,1278],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1136,with_output_label:[1236,1238,1242,1277,1278],with_partial_v:[1277,1278],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,433,462,983,1062,1136],with_to_kv_fn:[1265,1276],with_to_out_fn:[1265,1276],with_to_q_fn:[1265,1276],within:[15,18,19,983,986,1104,1111,1192,1196],without:[40,41,43,983,1050,1052,1058,1180,1182,1291],wonder:1248,word:[15,16,17,983,986,1192,1196,1254,1255],work:[43,1290],worker:[909,918,919,1136],worker_class:[909,918,919,1136],worker_kwarg:1136,would:[43,861,862,1209,1214,1248,1291,1294],wrap:[15,40,41,42,43,431,433,467,472,476,482,483,485,983,995,1081,1095,1248],wrapper:43,write:[40,41,43,1248,1249,1294],written:[43,1248,1294],ws_new:[1081,1084,1086,1088,1089,1090],x1_i:[842,844,849,983,1012,1116,1124],x2_i:[842,844,849,983,1012,1116,1124],x_feat_dim:[1217,1228],x_i:[842,843,847,852],x_in:[1248,1290],x_inv:[1104,1106],x_max:[433,983,997],x_min:[433,983,997],x_sub:1136,xkk:1294,xkkm1:1294,xkm1km1:1294,xs0:1136,xs_t:1136,year:[1248,1294],yet:[1180,1189,1294],yield:[983,1078],you:[43,1248,1290,1291,1294],your:[1248,1249,1290,1291,1294],your_awesome_project:1291,yourself:[43,1248],yourslef:43,youtub:43,zero:[40,41,77,205,388,510,639,835,854,856,864,865,866,983,1001,1046,1048,1054,1055,1079,1080,1081,1083,1084,1088,1089,1217,1225,1248,1256,1265,1266,1267,1268,1269,1270,1271,1272,1273,1275,1281,1282,1283,1284],zero_pad:[289,433,561,691,983],zeros_lik:[127,289,433,561,691,983],zip:1136,zk_e:1294},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","pinv","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","qr","slogdet","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","det","inv","matrix_norm","pinv","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","slodget","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1008,"function":[77,80,85,96,100,102,103,104,106,107,205,208,213,220,224,226,227,228,230,231,388,391,396,407,411,413,414,415,417,418,510,513,518,529,533,535,536,537,539,540,639,642,647,658,662,664,665,666,668,669,835,838,842,853,857,859,860,861,863,864],Ones:1261,Using:1291,abs:[290,562,692,984],aco:[783,1117],acosh:[784,1118],activ:[189,375,496,631,813,1209,1251],adam:1282,adam_step:1083,adam_upd:1084,algebra:[97,167,221,348,408,476,530,608,659,769,854],all:[108,232,419,541,670,865],all_equ:985,all_nested_indic:1181,ani:[109,233,420,542,671,866],api:[0,43,75,111,203,235,386,422,508,544,637,673,833],arang:[128,291,434,563,693,986],arg_nam:987,argmax:[129,435,564,694,988],argmin:[130,436,565,695,989],args_to_ivi:16,args_to_n:17,argsort:[105,229,416,538,667,862],arithmet:[1,112,236,423,545,674],arrai:[0,3,43,75,110,111,113,131,203,234,235,237,244,292,386,421,422,424,437,508,543,544,546,566,637,672,673,675,696,833,868,990],array_equ:[293,697,991],arrays_equ:992,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[785,1119],asinh:[86,397,519,648,843],assert_supports_inplac:993,atan2:[787,1121],atan:[786,1120],atanh:[788,1122],attribut:[5,114,238,425,547,676],backend:[43,73],bilinear_resampl:[164,345,473,605,766,1098],binary_cross_entropi:1231,bitwis:[7,115,239,426,548,677],bitwise_and:[87,214,398,520,649,844],broadcast_to:[294,698,994],builder:51,builtin:[110,234,244,421,543,672,868],builtin_ab:[245,869],builtin_add:[246,870],builtin_and:[247,871],builtin_bool:[248,872],builtin_contain:[249,873],builtin_deepcopi:[250,874],builtin_dir:[251,875],builtin_eq:[252,876],builtin_float:[253,877],builtin_floordiv:[254,878],builtin_g:[255,879],builtin_getattr:[256,880],builtin_getattribut:[257,881],builtin_getitem:[258,882],builtin_gt:[259,883],builtin_int:[260,884],builtin_invert:[261,885],builtin_l:[262,886],builtin_lt:[263,550,679,887],builtin_mul:[264,888],builtin_n:[265,889],builtin_neg:[266,890],builtin_or:[267,891],builtin_po:[268,892],builtin_pow:[269,893],builtin_radd:[270,894],builtin_rand:[271,895],builtin_rfloordiv:[272,896],builtin_rmul:[273,897],builtin_ror:[274,898],builtin_rpow:[275,899],builtin_rsub:[276,900],builtin_rtruediv:[277,901],builtin_rxor:[278,902],builtin_setitem:[279,903],builtin_sub:[280,904],builtin_truediv:[281,905],builtin_xor:[282,906],cache_fn:995,cast:[132,295,438,567,699,963],ceil:[296,700,996],choleski:[770,1105],choose_random_framework:61,citat:1248,clear_framework_stack:62,clear_mem_on_dev:[685,925],clip:[297,701,997],clip_matrix_norm:998,clip_vector_norm:999,clone:1151,clone_arrai:1152,clone_it:1153,clone_nest:1154,clonedit:1138,cloneditem:1137,clonednest:1139,closest_valid_dtyp:964,code:1294,comparison:[9,116,240,427,549,678],compil:[298,439,702,907,908,1236],compile_graph:1237,concaten:[133,299,440,568,703,1000],constant:[76,204,387,509,638,834],constant_pad:[300,569,704,1001],contain:[40,41],container_typ:[705,1002],content:1248,contribut:43,conv1d:[195,378,500,825,1218,1266],conv1d_transpos:[196,379,501,826,1219],conv1dtranspos:1267,conv2d:[197,380,502,633,827,1220,1268],conv2d_transpos:[198,381,503,828,1221],conv2dtranspos:1269,conv3d:[199,382,504,634,829,1222,1270],conv3d_transpos:[200,383,505,830,1223],conv3dtranspos:1271,convers:15,convert:[191,821,1254],convert_dtyp:965,copy_arrai:[706,1003],copy_nest:1182,core:[119,243,430,553,682,867],cos:[88,399,521,650,845],cosh:[89,400,522,651,789,846,1123],cprint:1293,creat:43,creation:[77,205,388,510,639,835],cross:[301,707,1004],cross_entropi:1232,cumprod:[134,302,441,708,1005],cumsum:[709,1006],current_framework:63,current_framework_str:[710,1007],data:[80,84,208,212,391,395,513,517,642,646,838,841],debug_mod:45,debugg:44,default_devic:926,default_dtyp:966,default_float_dtyp:967,default_int_dtyp:968,default_nod:1155,depthwise_conv2d:[201,384,506,635,831,1224],depthwiseconv2d:1272,design:43,det:[349,477,609,771],dev:[122,285,556,686,927],dev_clon:928,dev_clone_arrai:929,dev_clone_it:930,dev_clone_nest:931,dev_dist:932,dev_dist_arrai:933,dev_dist_it:934,dev_dist_nest:935,dev_from_str:[123,286,557,687,936],dev_to_str:[124,287,558,688,937],dev_unifi:938,dev_unify_arrai:939,dev_unify_it:940,dev_unify_nest:941,dev_util:942,devclonedit:912,devcloneditem:911,devclonednest:913,devdistit:915,devdistitem:914,devdistnest:916,devic:[20,120,283,431,554,683,909],devmapp:918,devmappermultiproc:919,diagon:[98,222,409,531,660,855],distribute_nest:1156,divid:1124,document:1248,dropout:[1225,1273],dtype:[135,303,442,570,711,959,969],dtype_bit:[136,304,443,571,712,970],dtype_from_str:[137,305,444,572,713,971],dtype_to_str:[138,306,445,573,714,972],ecosystem:52,einops_rearrang:1009,einops_reduc:1010,einops_repeat:1011,einsum:[181,366,488,623,805,1200],elementwis:[85,213,396,518,647,842],equal:[574,715,1012],erf:[484,790,1125],execute_with_gradi:[161,340,468,600,760,1085],exist:1013,exp:[791,1126],expand_dim:[307,716,1014],finfo:[82,210,393,515,644,839],firstlayersiren:1258,flip:[101,225,412,534,663,858],float_img_to_uint8_img:1099,floor:[308,717,1015],floormod:[309,718,1016],fomaml_step:1133,fork:43,fourier_encod:1017,framework:59,full:[139,310,446,575,719,1018],func:72,gather:[140,311,447,576,720,1019],gather_nd:[141,312,448,577,721,1020],geglu:1252,gelu:[376,497,814,1210,1253],gener:[22,127,289,433,561,691,983],get_all_arrays_in_memori:1021,get_all_arrays_on_dev:943,get_framework:64,get_min_bas:1022,get_min_denomin:1023,get_num_dim:[722,1024],get_referrers_recurs:1025,global:1239,glorotuniform:1259,gpu_is_avail:[944,1157],gradient:[24,160,339,467,599,759,1081],gradient_descent_upd:1086,gradient_imag:[165,346,474,606,767,1100],graph:1242,gym:53,handler:59,has_nan:1026,helper:1244,ident:[142,313,449,578,723,1027],iinfo:[83,211,394,516,645,840],imag:[26,163,344,472,604,765,1097],index_nest:1183,indices_wher:[143,314,450,724,1028],initi:1256,inplac:[11,117,241,428,551,680],inplace_arrays_support:1029,inplace_decr:[144,315,451,579,725,1030],inplace_incr:[145,316,452,580,726,1031],inplace_upd:[146,317,453,581,727,1032],inplace_variables_support:1033,inv:[772,1106],invalid_dtyp:973,is_arrai:[147,318,454,582,728,1034],is_float_dtyp:974,is_int_dtyp:975,is_vari:[162,341,469,601,761,1087],isfinit:[90,215,401,523,652,847],isinf:[319,583,729,1035],isnan:[91,216,402,524,653,848],ivi:[43,50,51,52,53,54,55,56,57,58,832,1290,1291,1294],ivymodul:[192,822],jax:74,keep:43,lamb:1283,lamb_upd:1088,lar:1284,lars_upd:1089,layer:[194,377,499,632,824,1217,1265],layer_norm:1235,layernorm:1280,leaky_relu:[815,1211],less:[92,217,403,525,654,849],linalg:[28,1104],linear:[97,167,221,348,408,476,530,608,659,769,854,1226,1275],linear_resampl:[148,320,455,584,730,1036],linspac:[149,321,456,585,731,1037],log2:[93,404,526,655,850],log:[792,1127,1245],log_global_inference_abs_tim:1240,log_global_inference_rel_tim:1241,logic:[30,171,356,482,615,779,1113],logical_and:[357,780,1114],logical_not:[94,218,405,527,656,851],logical_or:[358,781,1115],logspac:[150,322,457,586,732,1038],loss:1230,lstm:1274,lstm_updat:1227,maml_step:1134,manipul:[100,224,411,533,662,857],map:1184,map_nest_at_index:1185,map_nest_at_indic:1186,match_kwarg:1039,math:[32,172,359,483,616,782,1116],matmul:[323,587,733,1040],matrix_norm:[168,350,478,610,773,1107],maximum:[734,1041],mech:54,memori:55,meshgrid:[324,735,1042],meta:[34,1132],method:[96,220,407,529,658,853],minimum:[736,1043],model:56,modul:[1277,1278,1290],multi:1136,multi_head_attent:1228,multi_index_nest:1187,multidevcontain:42,multidevit:922,multidevitem:921,multidevnest:923,multiheadattent:1276,multinodeit:1142,multinodeitem:1141,multinodenest:1143,multinomi:[174,361,486,618,798,1193],multiprocess:[737,1044],mxnet:202,nativ:1290,nest:1180,nested_indices_wher:1188,nested_map:1189,network:1290,next:1248,node:[1136,1158],node_dist:1159,node_dist_arrai:1160,node_dist_it:1161,node_str:1162,node_to_str:1163,node_util:1164,nodedistit:1145,nodedistitem:1144,nodedistnest:1146,nodemapp:1148,nodemappermultiproc:1149,norm:[1234,1279],num_arrays_in_memori:1045,num_arrays_on_dev:945,num_cpu_cor:946,num_gpu:[125,947,1165],numpi:385,nutshel:1248,one_hot:[151,458,588,738,1046],ones:[78,206,389,511,640,836,1047],ones_lik:[152,325,459,589,739,1048],oper:[1,3,7,9,11,13,43,112,113,115,116,117,118,236,237,239,240,241,242,423,424,426,427,428,429,545,546,548,549,551,552,674,675,677,678,680,681],optim:[1281,1285],optimizer_upd:1090,overview:1248,param:1246,percent_used_mem_on_dev:948,percent_used_mem_on_nod:1166,pinv:[351,774,1108],portabl:1294,print_all_arrays_in_memori:1049,print_all_arrays_on_dev:949,profil:[121,284,432,555,684,924,1150],pull:43,queue_timeout:1050,randint:[175,362,619,799,1194],random:[36,173,360,485,617,797,1192],random_crop:1101,random_norm:[176,363,620,800,1195],random_uniform:[177,364,621,801,1196],reduce_max:[182,367,489,624,806,1201],reduce_mean:[183,368,490,625,807,1202],reduce_min:[184,369,491,626,808,1203],reduce_prod:[185,370,492,627,809,1204],reduce_std:[371,1205],reduce_sum:[186,372,493,628,810,1206],reduce_var:[187,373,494,629,811,1207],reduct:[38,180,365,487,622,804,1199],reflect:[13,118,242,429,552,681],relu:[816,1212],repeat:[326,740,1051],reptile_step:1135,request:43,reshap:[741,1052],robot:57,round:[327,742,1053],run:1291,scaled_dot_product_attent:1229,scatter_flat:[153,328,460,590,743,1054],scatter_nd:[154,329,461,591,744,1055],search:[102,226,413,535,664,859],seed:[178,802,1197],sequenti:[1287,1288],set:[103,227,414,536,665,860],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:950,set_default_dtyp:976,set_default_float_dtyp:977,set_default_int_dtyp:978,set_default_nod:1167,set_exception_debug_mod:48,set_framework:65,set_min_bas:1056,set_min_denomin:1057,set_nest_at_index:1190,set_nest_at_indic:1191,set_queue_timeout:1058,set_split_factor:[951,1168],set_tmp_dir:1059,set_with_grad:1091,sgd:1286,shape:[745,1060],shape_to_tupl:1061,show_graph:1238,shuffl:[179,803,1198],sigmoid:[817,1213],signatur:[96,220,407,529,658,853],sin:[793,1128],sinh:[794,1129],siren:1262,slodget:1110,slogdet:[353,480,612,776],softmax:[190,498,818,1214],softplu:[819,1215],sort:[104,228,415,537,666,861],sparse_cross_entropi:1233,split:[155,330,462,592,746,1062],split_factor:[952,1169],split_func_cal:[953,1170],sqrt:[95,219,406,528,657,852],squeez:[156,331,463,593,747,1063],stable_divid:1064,stable_pow:1065,stack:[332,748,1066],stack_imag:[166,347,475,607,768,1102],standard:43,statist:[106,230,417,539,668,863],stop_gradi:[342,470,602,762,1092],str_to_nod:1171,submodul:43,supports_inplac:1067,svd:[354,613,777,1111],swapax:[594,749,1068],tan:[795,1130],tanh:[796,820,1131,1216],tensorflow:507,tile:[333,595,750,1069],tmp_dir:1070,to_dev:[126,288,559,689,954],to_ivi:18,to_ivy_modul:[193,823,1255],to_list:[751,1071],to_n:19,to_nod:1172,to_numpi:[752,1072],to_scalar:[753,1073],torch:636,total_mem_on_dev:955,total_mem_on_nod:1173,tpu_is_avail:[560,690,956,1174],train:1290,trainabl:1290,transpos:[157,334,464,754,1074],tree:1248,try_else_non:1075,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,208,212,391,395,513,517,642,646,838,841],uint8_img_to_float_img:1103,unifi:1175,unify_arrai:1176,unify_it:1177,unify_nest:1178,unset_debug_mod:49,unset_default_devic:957,unset_default_dtyp:979,unset_default_float_dtyp:980,unset_default_int_dtyp:981,unset_framework:71,unset_with_grad:1093,unstack:[158,335,465,596,755,1076],updat:43,used_mem_on_dev:958,used_mem_on_nod:1179,util:[107,231,418,540,669,864],valid_dtyp:982,value_is_nan:1077,variabl:[343,471,603,763,1094],variable_data:[764,1095],vector_norm:[99,223,410,532,661,856],vector_to_skew_symmetric_matrix:[170,355,481,614,778,1112],verbos:1292,vision:58,where:[336,756,1078,1248],why:1294,with_grad:1096,wrapper:72,write:1291,your:43,zero:[79,207,390,512,641,837,1264],zero_pad:[337,597,757,1079],zeros_lik:[159,338,466,598,758,1080]}})
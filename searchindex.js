Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/det","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/det","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/det","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/slogdet","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/det","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/det","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/slogdet","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/det","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/det","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/slogdet","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/slodget","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/det.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/det.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/det.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/slogdet.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/det.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/det.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/slogdet.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/det.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/det.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/slogdet.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/slodget.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[850,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[391,0,0,"-"],creation_functions:[392,0,0,"-"],data_type_functions:[396,0,0,"-"],data_types:[400,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[393,2,1,""],tril:[394,2,1,""],zeros:[395,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[396,1,1,""],finfo:[398,2,1,""],iinfo:[399,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[396,3,1,""],bits:[396,3,1,""],eps:[396,3,1,""],max:[396,3,1,""],min:[396,3,1,""],smallest_normal:[396,3,1,""]},"ivy.functional.backends.numpy.core":{device:[440,0,0,"-"],general:[442,0,0,"-"],gradients:[476,0,0,"-"],image:[481,0,0,"-"],linear_algebra:[485,0,0,"-"],logic:[491,0,0,"-"],math:[492,0,0,"-"],random:[494,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[441,1,1,""],clear_mem_on_dev:[440,2,1,""],dev:[440,2,1,""],dev_from_str:[440,2,1,""],dev_to_str:[440,2,1,""],gpu_is_available:[440,2,1,""],num_gpus:[440,2,1,""],to_dev:[440,2,1,""],tpu_is_available:[440,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[441,3,1,""],start:[441,3,1,""],stop:[441,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[442,2,1,""],arange:[443,2,1,""],argmax:[444,2,1,""],argmin:[445,2,1,""],array:[446,2,1,""],asarray:[442,2,1,""],astype:[442,2,1,""],cast:[447,2,1,""],clip:[442,2,1,""],compile:[448,2,1,""],concatenate:[449,2,1,""],constant_pad:[442,2,1,""],container_types:[442,2,1,""],copy_array:[442,2,1,""],cumprod:[450,2,1,""],current_framework_str:[442,2,1,""],dtype:[451,2,1,""],dtype_bits:[452,2,1,""],dtype_from_str:[453,2,1,""],dtype_to_str:[454,2,1,""],equal:[442,2,1,""],floor:[442,2,1,""],floormod:[442,2,1,""],full:[455,2,1,""],gather:[456,2,1,""],gather_nd:[457,2,1,""],get_num_dims:[442,2,1,""],identity:[458,2,1,""],indices_where:[459,2,1,""],inplace_arrays_supported:[442,2,1,""],inplace_decrement:[460,2,1,""],inplace_increment:[461,2,1,""],inplace_update:[462,2,1,""],inplace_variables_supported:[442,2,1,""],is_array:[463,2,1,""],linear_resample:[464,2,1,""],linspace:[465,2,1,""],logspace:[466,2,1,""],matmul:[442,2,1,""],meshgrid:[442,2,1,""],multiprocessing:[442,2,1,""],one_hot:[467,2,1,""],ones_like:[468,2,1,""],round:[442,2,1,""],scatter_flat:[469,2,1,""],scatter_nd:[470,2,1,""],shape:[442,2,1,""],split:[471,2,1,""],squeeze:[472,2,1,""],to_list:[442,2,1,""],to_numpy:[442,2,1,""],to_scalar:[442,2,1,""],transpose:[473,2,1,""],unstack:[474,2,1,""],where:[442,2,1,""],zero_pad:[442,2,1,""],zeros_like:[475,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[477,2,1,""],is_variable:[478,2,1,""],stop_gradient:[479,2,1,""],variable:[480,2,1,""],variable_data:[476,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[482,2,1,""],gradient_image:[483,2,1,""],stack_images:[484,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{det:[486,2,1,""],matrix_norm:[487,2,1,""],qr:[488,2,1,""],slogdet:[489,2,1,""],vector_to_skew_symmetric_matrix:[490,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[493,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[495,2,1,""],randint:[494,2,1,""],random_normal:[494,2,1,""],random_uniform:[494,2,1,""],seed:[494,2,1,""],shuffle:[494,2,1,""]},"ivy.functional.ivy":{array_api:[851,0,0,"-"],core:[889,0,0,"-"],nn:[1229,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[852,0,0,"-"],creation_functions:[853,0,0,"-"],data_type_functions:[857,0,0,"-"],data_types:[860,0,0,"-"],elementwise_functions:[861,0,0,"-"],function_and_method_signatures:[874,0,0,"-"],linear_algebra:[875,0,0,"-"],manipulation_functions:[879,0,0,"-"],searching_functions:[881,0,0,"-"],set_functions:[882,0,0,"-"],sorting_functions:[883,0,0,"-"],statistical_functions:[885,0,0,"-"],utility_functions:[886,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[852,4,1,""],nan:[852,4,1,""],pi:[852,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[854,2,1,""],tril:[855,2,1,""],zeros:[856,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[858,2,1,""],iinfo:[859,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[862,2,1,""],bitwise_and:[863,2,1,""],ceil:[864,2,1,""],cos:[865,2,1,""],cosh:[866,2,1,""],isfinite:[867,2,1,""],isnan:[868,2,1,""],less:[869,2,1,""],log1p:[870,2,1,""],log2:[871,2,1,""],logical_not:[872,2,1,""],sqrt:[873,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[876,2,1,""],slodget:[877,2,1,""],vector_norm:[878,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[880,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[884,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[887,2,1,""],any:[888,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[890,0,0,"-"],compilation:[929,0,0,"-"],device:[931,0,0,"-"],dtype:[981,0,0,"-"],general:[1005,0,0,"-"],gradients:[1102,0,0,"-"],image:[1118,0,0,"-"],linalg:[1125,0,0,"-"],logic:[1134,0,0,"-"],math:[1137,0,0,"-"],meta:[1153,0,0,"-"],multi_node:[1157,0,0,"-"],nest:[1201,0,0,"-"],random:[1213,0,0,"-"],reductions:[1220,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[891,2,1,""],builtin_add:[892,2,1,""],builtin_and:[893,2,1,""],builtin_bool:[894,2,1,""],builtin_contains:[895,2,1,""],builtin_deepcopy:[896,2,1,""],builtin_dir:[897,2,1,""],builtin_eq:[898,2,1,""],builtin_float:[899,2,1,""],builtin_floordiv:[900,2,1,""],builtin_ge:[901,2,1,""],builtin_getattr:[902,2,1,""],builtin_getattribute:[903,2,1,""],builtin_getitem:[904,2,1,""],builtin_gt:[905,2,1,""],builtin_int:[906,2,1,""],builtin_invert:[907,2,1,""],builtin_le:[908,2,1,""],builtin_lt:[909,2,1,""],builtin_mul:[910,2,1,""],builtin_ne:[911,2,1,""],builtin_neg:[912,2,1,""],builtin_or:[913,2,1,""],builtin_pos:[914,2,1,""],builtin_pow:[915,2,1,""],builtin_radd:[916,2,1,""],builtin_rand:[917,2,1,""],builtin_rfloordiv:[918,2,1,""],builtin_rmul:[919,2,1,""],builtin_ror:[920,2,1,""],builtin_rpow:[921,2,1,""],builtin_rsub:[922,2,1,""],builtin_rtruediv:[923,2,1,""],builtin_rxor:[924,2,1,""],builtin_setitem:[925,2,1,""],builtin_sub:[926,2,1,""],builtin_truediv:[927,2,1,""],builtin_xor:[928,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[930,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[931,1,1,""],DevClonedItem:[933,1,1,""],DevClonedIter:[934,1,1,""],DevClonedNest:[935,1,1,""],DevDistItem:[936,1,1,""],DevDistIter:[937,1,1,""],DevDistNest:[938,1,1,""],DevManager:[931,1,1,""],DevMapper:[940,1,1,""],DevMapperMultiProc:[941,1,1,""],MultiDev:[931,1,1,""],MultiDevItem:[943,1,1,""],MultiDevIter:[944,1,1,""],MultiDevNest:[945,1,1,""],Profiler:[946,1,1,""],clear_mem_on_dev:[947,2,1,""],default_device:[948,2,1,""],dev:[949,2,1,""],dev_clone:[950,2,1,""],dev_clone_array:[951,2,1,""],dev_clone_iter:[952,2,1,""],dev_clone_nest:[953,2,1,""],dev_dist:[954,2,1,""],dev_dist_array:[955,2,1,""],dev_dist_iter:[956,2,1,""],dev_dist_nest:[957,2,1,""],dev_from_str:[958,2,1,""],dev_to_str:[959,2,1,""],dev_unify:[960,2,1,""],dev_unify_array:[961,2,1,""],dev_unify_iter:[962,2,1,""],dev_unify_nest:[963,2,1,""],dev_util:[964,2,1,""],get_all_arrays_on_dev:[965,2,1,""],gpu_is_available:[966,2,1,""],num_arrays_on_dev:[967,2,1,""],num_cpu_cores:[968,2,1,""],num_gpus:[969,2,1,""],percent_used_mem_on_dev:[970,2,1,""],print_all_arrays_on_dev:[971,2,1,""],set_default_device:[972,2,1,""],set_split_factor:[973,2,1,""],split_factor:[974,2,1,""],split_func_call:[975,2,1,""],to_dev:[976,2,1,""],total_mem_on_dev:[977,2,1,""],tpu_is_available:[978,2,1,""],unset_default_device:[979,2,1,""],used_mem_on_dev:[980,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[931,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[931,3,1,""],da_tune_step:[931,3,1,""],dim_size:[931,3,1,""],ds_tune_step:[931,3,1,""],map:[931,3,1,""],repeated_config_check:[931,3,1,""],tune_step:[931,3,1,""],tuned:[931,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[940,3,1,""],map:[940,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[941,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[931,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[943,3,1,""],items:[943,3,1,""],keys:[943,3,1,""],shape:[943,3,1,""],values:[943,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[944,3,1,""],at_dev:[944,3,1,""],at_devs:[944,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[945,3,1,""],at_dev:[945,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[946,3,1,""],start:[946,3,1,""],stop:[946,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[981,1,1,""],DefaultFloatDtype:[981,1,1,""],DefaultIntDtype:[981,1,1,""],astype:[981,2,1,""],cast:[985,2,1,""],closest_valid_dtype:[986,2,1,""],convert_dtype:[987,2,1,""],default_dtype:[988,2,1,""],default_float_dtype:[989,2,1,""],default_int_dtype:[990,2,1,""],dtype:[991,2,1,""],dtype_bits:[992,2,1,""],dtype_from_str:[993,2,1,""],dtype_to_str:[994,2,1,""],invalid_dtype:[995,2,1,""],is_float_dtype:[996,2,1,""],is_int_dtype:[997,2,1,""],set_default_dtype:[998,2,1,""],set_default_float_dtype:[999,2,1,""],set_default_int_dtype:[1000,2,1,""],unset_default_dtype:[1001,2,1,""],unset_default_float_dtype:[1002,2,1,""],unset_default_int_dtype:[1003,2,1,""],valid_dtype:[1004,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[981,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[981,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[981,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1029,2,1,""],abs:[1006,2,1,""],all_equal:[1007,2,1,""],arange:[1008,2,1,""],arg_names:[1009,2,1,""],argmax:[1010,2,1,""],argmin:[1011,2,1,""],array:[1012,2,1,""],array_equal:[1013,2,1,""],arrays_equal:[1014,2,1,""],asarray:[1005,2,1,""],assert_supports_inplace:[1015,2,1,""],broadcast_to:[1016,2,1,""],cache_fn:[1017,2,1,""],clip:[1018,2,1,""],clip_matrix_norm:[1019,2,1,""],clip_vector_norm:[1020,2,1,""],concatenate:[1021,2,1,""],constant_pad:[1022,2,1,""],container_types:[1023,2,1,""],copy_array:[1024,2,1,""],cross:[1025,2,1,""],cumprod:[1026,2,1,""],cumsum:[1027,2,1,""],current_framework_str:[1028,2,1,""],einops_rearrange:[1030,2,1,""],einops_reduce:[1031,2,1,""],einops_repeat:[1032,2,1,""],equal:[1033,2,1,""],exists:[1034,2,1,""],expand_dims:[1035,2,1,""],floor:[1036,2,1,""],floormod:[1037,2,1,""],fourier_encode:[1038,2,1,""],full:[1039,2,1,""],gather:[1040,2,1,""],gather_nd:[1041,2,1,""],get_all_arrays_in_memory:[1042,2,1,""],get_min_base:[1043,2,1,""],get_min_denominator:[1044,2,1,""],get_num_dims:[1045,2,1,""],get_referrers_recursive:[1046,2,1,""],has_nans:[1047,2,1,""],identity:[1048,2,1,""],indices_where:[1049,2,1,""],inplace_arrays_supported:[1050,2,1,""],inplace_decrement:[1051,2,1,""],inplace_increment:[1052,2,1,""],inplace_update:[1053,2,1,""],inplace_variables_supported:[1054,2,1,""],is_array:[1055,2,1,""],isinf:[1056,2,1,""],linear_resample:[1057,2,1,""],linspace:[1058,2,1,""],logspace:[1059,2,1,""],match_kwargs:[1060,2,1,""],matmul:[1061,2,1,""],maximum:[1062,2,1,""],meshgrid:[1063,2,1,""],minimum:[1064,2,1,""],multiprocessing:[1065,2,1,""],num_arrays_in_memory:[1066,2,1,""],one_hot:[1067,2,1,""],ones:[1068,2,1,""],ones_like:[1069,2,1,""],print_all_arrays_in_memory:[1070,2,1,""],queue_timeout:[1071,2,1,""],repeat:[1072,2,1,""],reshape:[1073,2,1,""],round:[1074,2,1,""],scatter_flat:[1075,2,1,""],scatter_nd:[1076,2,1,""],set_min_base:[1077,2,1,""],set_min_denominator:[1078,2,1,""],set_queue_timeout:[1079,2,1,""],set_tmp_dir:[1080,2,1,""],shape:[1081,2,1,""],shape_to_tuple:[1082,2,1,""],split:[1083,2,1,""],squeeze:[1084,2,1,""],stable_divide:[1085,2,1,""],stable_pow:[1086,2,1,""],stack:[1087,2,1,""],supports_inplace:[1088,2,1,""],swapaxes:[1089,2,1,""],tile:[1090,2,1,""],tmp_dir:[1091,2,1,""],to_list:[1092,2,1,""],to_numpy:[1093,2,1,""],to_scalar:[1094,2,1,""],transpose:[1095,2,1,""],try_else_none:[1096,2,1,""],unstack:[1097,2,1,""],value_is_nan:[1098,2,1,""],where:[1099,2,1,""],zero_pad:[1100,2,1,""],zeros_like:[1101,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1102,1,1,""],adam_step:[1104,2,1,""],adam_update:[1105,2,1,""],execute_with_gradients:[1106,2,1,""],gradient_descent_update:[1107,2,1,""],is_variable:[1108,2,1,""],lamb_update:[1109,2,1,""],lars_update:[1110,2,1,""],optimizer_update:[1111,2,1,""],set_with_grads:[1112,2,1,""],stop_gradient:[1113,2,1,""],unset_with_grads:[1114,2,1,""],variable:[1115,2,1,""],variable_data:[1116,2,1,""],with_grads:[1117,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1102,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1119,2,1,""],float_img_to_uint8_img:[1120,2,1,""],gradient_image:[1121,2,1,""],random_crop:[1122,2,1,""],stack_images:[1123,2,1,""],uint8_img_to_float_img:[1124,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1126,2,1,""],inv:[1127,2,1,""],matrix_norm:[1128,2,1,""],pinv:[1129,2,1,""],qr:[1130,2,1,""],slodget:[1131,2,1,""],svd:[1132,2,1,""],vector_to_skew_symmetric_matrix:[1133,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1135,2,1,""],logical_or:[1136,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1138,2,1,""],acosh:[1139,2,1,""],asin:[1140,2,1,""],atan2:[1142,2,1,""],atan:[1141,2,1,""],atanh:[1143,2,1,""],cosh:[1144,2,1,""],divide:[1145,2,1,""],erf:[1146,2,1,""],exp:[1147,2,1,""],log:[1148,2,1,""],sin:[1149,2,1,""],sinh:[1150,2,1,""],tan:[1151,2,1,""],tanh:[1152,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1154,2,1,""],maml_step:[1155,2,1,""],reptile_step:[1156,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1157,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1202,2,1,""],copy_nest:[1203,2,1,""],index_nest:[1204,2,1,""],map:[1205,2,1,""],map_nest_at_index:[1206,2,1,""],map_nest_at_indices:[1207,2,1,""],multi_index_nest:[1208,2,1,""],nested_indices_where:[1209,2,1,""],nested_map:[1210,2,1,""],set_nest_at_index:[1211,2,1,""],set_nest_at_indices:[1212,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1214,2,1,""],randint:[1215,2,1,""],random_normal:[1216,2,1,""],random_uniform:[1217,2,1,""],seed:[1218,2,1,""],shuffle:[1219,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1221,2,1,""],reduce_max:[1222,2,1,""],reduce_mean:[1223,2,1,""],reduce_min:[1224,2,1,""],reduce_prod:[1225,2,1,""],reduce_std:[1226,2,1,""],reduce_sum:[1227,2,1,""],reduce_var:[1228,2,1,""]},"ivy.functional.ivy.nn":{activations:[1230,0,0,"-"],layers:[1238,0,0,"-"],losses:[1251,0,0,"-"],norms:[1255,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1231,2,1,""],leaky_relu:[1232,2,1,""],relu:[1233,2,1,""],sigmoid:[1234,2,1,""],softmax:[1235,2,1,""],softplus:[1236,2,1,""],tanh:[1237,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1239,2,1,""],conv1d_transpose:[1240,2,1,""],conv2d:[1241,2,1,""],conv2d_transpose:[1242,2,1,""],conv3d:[1243,2,1,""],conv3d_transpose:[1244,2,1,""],depthwise_conv2d:[1245,2,1,""],dropout:[1246,2,1,""],linear:[1247,2,1,""],lstm_update:[1248,2,1,""],multi_head_attention:[1249,2,1,""],scaled_dot_product_attention:[1250,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1252,2,1,""],cross_entropy:[1253,2,1,""],sparse_cross_entropy:[1254,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1256,2,1,""]},"ivy.stateful":{activations:[1260,0,0,"-"],converters:[1263,0,0,"-"],initializers:[1265,0,0,"-"],layers:[1274,0,0,"-"],module:[1286,0,0,"-"],norms:[1288,0,0,"-"],optimizers:[1290,0,0,"-"],sequential:[1296,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1261,1,1,""],GELU:[1262,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1261,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1262,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1264,2,1,""]},"ivy.stateful.initializers":{Constant:[1265,1,1,""],FirstLayerSiren:[1267,1,1,""],GlorotUniform:[1268,1,1,""],KaimingNormal:[1265,1,1,""],Ones:[1270,1,1,""],Siren:[1271,1,1,""],Uniform:[1265,1,1,""],Zeros:[1273,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1265,3,1,""],create_variables:[1265,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1267,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1268,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1265,3,1,""],create_variables:[1265,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1270,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1271,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1265,3,1,""],create_variables:[1265,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1273,3,1,""]},"ivy.stateful.layers":{Conv1D:[1275,1,1,""],Conv1DTranspose:[1276,1,1,""],Conv2D:[1277,1,1,""],Conv2DTranspose:[1278,1,1,""],Conv3D:[1279,1,1,""],Conv3DTranspose:[1280,1,1,""],DepthwiseConv2D:[1281,1,1,""],Dropout:[1282,1,1,""],LSTM:[1283,1,1,""],Linear:[1284,1,1,""],MultiHeadAttention:[1285,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1275,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1276,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1277,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1278,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1279,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1280,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1281,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1282,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1283,3,1,""],get_initial_state:[1283,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1284,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1285,3,1,""]},"ivy.stateful.module":{Module:[1287,1,1,""]},"ivy.stateful.module.Module":{__init__:[1287,3,1,""],build:[1287,3,1,""],build_mode:[1287,3,1,""],built:[1287,3,1,""],check_submod_rets:[1287,3,1,""],get_mod_key:[1287,3,1,""],mod_depth:[1287,3,1,""],mod_height:[1287,3,1,""],mod_with_top_mod_key_chain:[1287,3,1,""],save_weights:[1287,3,1,""],show_mod_in_top_mod:[1287,3,1,""],show_structure:[1287,3,1,""],show_v_in_top_v:[1287,3,1,""],sub_mods:[1287,3,1,""],track_submod_call_order:[1287,3,1,""],track_submod_rets:[1287,3,1,""],v_with_top_v_key_chains:[1287,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1289,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1289,3,1,""]},"ivy.stateful.optimizers":{Adam:[1291,1,1,""],LAMB:[1292,1,1,""],LARS:[1293,1,1,""],Optimizer:[1294,1,1,""],SGD:[1295,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1291,3,1,""],set_state:[1291,3,1,""],state:[1291,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1292,3,1,""],set_state:[1292,3,1,""],state:[1292,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1293,3,1,""],set_state:[1293,3,1,""],state:[1293,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1294,3,1,""],set_state:[1294,3,1,""],step:[1294,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1295,3,1,""],set_state:[1295,3,1,""],state:[1295,3,1,""]},"ivy.stateful.sequential":{Sequential:[1297,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1297,3,1,""]},"ivy.verbosity":{cprint:[1302,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1301,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1290,1291,1292],"02886":1257,"100":[1157,1257,1299],"141592653589793":852,"2021":1257,"2102":1257,"360":[1137,1149,1151],"718281828459045":852,"754":[852,857,858,861,873],"999":[1102,1104,1105,1109,1290,1291,1292],"abstract":[931,946,1257,1290,1294],"boolean":[40,41,861,863,872,931,966,978,981,995,1004,1005,1007,1013,1014,1047,1049,1050,1054,1055,1056,1088,1098,1102,1108,1134,1135,1136,1153,1154,1155,1157],"break":43,"case":[15,18,19,40,41,42,43,861,862,864,865,866,871,873,931,970,977,980,1005,1008,1073,1075,1076,1125,1128,1130,1157,1201,1204,1208,1257,1274,1285,1286,1287,1290,1294,1303],"catch":[1005,1029],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,396,440,441,857,859,931,933,934,935,936,937,938,940,941,943,944,945,946,958,959,981,1005,1009,1060,1102,1116,1157,1201,1203,1210,1251,1253,1254,1257,1260,1261,1262,1263,1264,1265,1267,1268,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299,1303],"default":[15,18,19,40,41,42,43,853,854,855,856,875,876,878,879,880,883,884,886,887,888,929,930,931,940,941,948,949,953,954,955,956,957,960,961,962,963,970,973,974,975,980,981,988,989,990,991,1005,1007,1008,1010,1011,1019,1020,1021,1022,1025,1026,1027,1038,1039,1040,1045,1047,1048,1057,1059,1060,1063,1065,1068,1071,1072,1075,1076,1079,1081,1083,1085,1086,1095,1097,1098,1102,1105,1107,1108,1109,1110,1111,1113,1117,1125,1128,1130,1153,1154,1155,1156,1157,1201,1202,1203,1205,1209,1210,1213,1214,1216,1217,1220,1222,1223,1224,1225,1226,1227,1228,1230,1231,1235,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1263,1264,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297],"final":[40,41,43,1005,1038,1058,1059,1157,1274,1285,1300],"float":[40,41,42,43,852,853,854,856,857,858,861,862,864,865,866,871,873,875,878,890,909,915,931,940,941,964,970,973,977,980,981,989,996,1005,1008,1019,1020,1022,1038,1039,1043,1044,1059,1077,1078,1079,1085,1086,1102,1104,1105,1107,1109,1110,1111,1118,1120,1124,1137,1145,1153,1154,1155,1156,1157,1213,1216,1217,1230,1232,1238,1246,1249,1250,1251,1252,1253,1254,1255,1256,1274,1282,1285,1288,1289,1290,1291,1292,1293,1294,1295],"function":[15,40,41,43,393,394,395,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,852,854,855,856,858,859,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,880,884,887,888,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,940,941,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1260,1261,1262,1290,1293,1294,1295,1299,1300,1303],"import":[43,1257,1300,1303],"int":[40,41,42,43,392,393,394,395,494,853,854,855,856,857,858,859,875,876,878,879,880,883,884,886,887,888,890,909,915,929,930,931,953,954,955,956,957,960,961,962,963,968,969,975,981,990,992,997,1005,1010,1011,1016,1021,1022,1026,1027,1030,1031,1032,1035,1038,1039,1040,1045,1048,1057,1058,1059,1067,1068,1072,1073,1075,1076,1081,1082,1083,1084,1087,1089,1090,1095,1097,1100,1102,1104,1105,1109,1118,1122,1123,1125,1128,1153,1154,1155,1156,1157,1201,1210,1213,1214,1215,1217,1218,1220,1222,1223,1224,1225,1226,1227,1228,1230,1235,1238,1239,1240,1241,1242,1243,1244,1245,1249,1251,1253,1254,1255,1256,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1288,1289],"long":[43,1238,1248],"new":[40,41,43,494,853,854,856,861,870,981,985,1005,1006,1016,1030,1031,1032,1035,1038,1039,1040,1041,1068,1073,1075,1076,1077,1078,1085,1086,1087,1102,1105,1107,1109,1110,1111,1118,1120,1122,1124,1137,1139,1143,1144,1150,1152,1157,1201,1211,1212,1213,1214,1255,1256,1257,1263,1264,1274,1284,1288,1289,1290,1291,1292,1293,1294,1295,1300,1303],"public":[1005,1023],"return":[15,16,17,18,19,40,41,42,43,494,853,854,855,856,861,862,863,864,865,866,867,868,869,871,872,873,875,876,877,878,883,884,886,887,888,890,909,915,929,930,931,940,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,966,967,969,970,974,975,976,977,978,980,981,985,986,987,988,989,990,991,992,993,994,995,996,997,1004,1005,1006,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1045,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1072,1073,1074,1075,1076,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1113,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1201,1202,1203,1205,1209,1210,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1263,1264,1274,1283,1284,1290,1294,1299,1300,1303],"short":[43,1238,1248,1257,1303],"static":[40,41,929,930],"super":1157,"true":[40,41,42,442,448,476,479,485,486,489,494,495,861,867,868,872,875,878,883,884,886,887,888,929,930,931,1005,1007,1015,1017,1034,1038,1047,1049,1098,1099,1102,1105,1107,1108,1109,1110,1111,1113,1125,1128,1153,1154,1155,1156,1157,1201,1202,1209,1213,1214,1220,1222,1223,1224,1225,1226,1227,1228,1230,1231,1238,1246,1251,1252,1253,1254,1274,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295],"try":[40,41,1005,1096,1157],"var":[40,41,1153,1154,1155,1303],"while":[40,41,42,861,872,1157],AND:[861,863,886,887,1134,1135],But:1303,For:[43,861,862,864,865,866,871,873,1005,1008,1018,1087,1102,1108,1116,1125,1130,1137,1138,1257,1263,1264,1300,1303],Its:[1137,1141],NOT:[861,872],Not:852,One:[40,41,43,1005,1031,1073,1213,1215,1303],Ones:[1257,1265],PRs:43,Such:[1005,1023],That:1300,The:[15,16,17,18,19,40,41,42,43,853,855,861,862,863,864,865,866,867,868,869,871,872,873,875,876,878,879,880,883,884,886,887,888,890,909,915,929,930,931,940,941,947,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,970,973,974,975,976,977,980,981,985,986,987,992,993,994,995,1004,1005,1008,1012,1013,1016,1017,1019,1020,1021,1022,1024,1025,1028,1029,1033,1038,1040,1041,1048,1051,1052,1053,1055,1057,1059,1061,1063,1065,1068,1069,1072,1073,1075,1076,1077,1078,1079,1082,1083,1084,1085,1086,1087,1090,1098,1101,1102,1104,1105,1107,1109,1110,1111,1113,1116,1118,1120,1122,1124,1125,1128,1130,1132,1137,1138,1140,1141,1145,1146,1147,1148,1149,1151,1153,1154,1155,1156,1157,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1257,1263,1264,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1300,1303],There:[43,1257,1300],These:[43,1257],Use:43,Used:[1201,1202,1209,1286,1287],Using:[1257,1258,1303],With:[40,41,1125,1128,1220,1222,1223,1224,1225,1226,1227,1228,1257,1299,1303],__array__:[1005,1012],__call__:[1274,1285,1286,1287],__del__:1157,__dict__:[1157,1300],__enter__:1157,__exit__:1157,__getitem__:1157,__getstate__:1157,__init__:[40,41,42,43,59,60,82,213,396,397,440,441,524,658,931,932,939,940,941,942,943,944,945,946,981,982,983,984,1102,1103,1157,1161,1168,1257,1260,1261,1262,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299,1303],__iter__:1157,__len__:1157,__next__:1157,__pow__:43,__repr__:1157,_assign_vari:1299,_axi:1157,_base:[1201,1202,1209],_compute_node_da_ratio:1157,_compute_node_strs_da:1157,_concat_unify_arrai:1157,_counter:1157,_cur_framework:[43,1157],_da_direct:1157,_da_directions_flip:1157,_da_step_tim:1157,_da_tim:1157,_da_tune_count:1157,_data:1157,_delta_da_dim_s:1157,_delta_sf:1157,_dict:1157,_dim_siz:1157,_first_da_tune_step:1157,_first_ns_tune_step:1157,_fn:1157,_forward:[1257,1299],_get_kalman_param:1303,_get_prior:1303,_get_some_model:1303,_handle_flat_arrays_in_out:43,_index:[1201,1202,1209],_input_queu:1157,_length:1157,_max_depth:1157,_max_node_dim_step_ratio:1157,_max_node_dim_step_s:1157,_max_split_factor_step_s:1157,_mean_unify_arrai:1157,_min_bas:[1005,1086,1255,1256,1288,1289],_min_denomin:[1005,1085],_min_node_dim_s:1157,_min_sf_tune_step:1157,_min_unit_node_tune_step:1157,_model:1303,_native_wrapp:43,_node_mapp:1157,_node_percent_mem:1157,_node_str:1157,_node_str_da_ratio:1157,_node_strs_da:1157,_node_strs_kei:1157,_node_strs_n:1157,_node_util:1157,_ns_step_tim:1157,_ns_time:1157,_ns_tune_count:1157,_num_nod:1157,_num_work:1157,_observed_config:1157,_output_queu:1157,_paramet:1299,_percent_mem_inc_per_sf:1157,_percent_mem_inc_per_unit_da_dim:1157,_percent_util_inc_per_unit_da_dim:1157,_ret_fn:1157,_safety_factor:1157,_save_dir:1157,_shift_da_split:1157,_shift_n:1157,_slice:1157,_step:[1290,1294],_sum_unify_arrai:1157,_timeout:1157,_tune:1157,_tune_da:1157,_tune_n:1157,_tune_step:1157,_unit_da_tune_count:1157,_unroll_step:1303,_with_node_mappig:1157,_worker:1157,_worker_class:1157,_worker_fn:1157,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,931,940,946,1157,1286,1287,1290,1294],abil:1257,abl:[40,41],about:[857,858,859],abov:[43,853,855,875,876,1213,1215],above_height:[40,41],abs:[296,442,575,710,875,878,1005,1157],absolut:[40,41,875,877,1005,1006,1125,1131],abstractmethod:1157,accept:[15,43,861,872,1257],access:[40,41,43,1300],accord:[40,41,857,858,1005,1022,1040,1075,1076,1095,1100],accordingli:[875,878,886,887,888],accur:[59,396,440,441,931,943,944,945,946,981,1102,1265,1267,1268,1270,1271,1273],aco:[800,1137],acosh:[800,1137],across:[40,41,931,940,941,950,951,953,954,955,956,957,963,973,974,1005,1010,1011,1013,1014,1157,1201,1205],act:43,activ:[1231,1232,1233,1234,1235,1236,1237,1257,1261,1262],actual:1300,adam:[1102,1104,1105,1109,1257,1290,1292,1299],adam_step:1102,adam_upd:1102,adapt:[1102,1110,1290,1293],add:[40,41,43,1157,1251,1252,1253,1254,1255,1256,1257,1288,1289,1300],added:[43,1005,1085,1086,1296,1297],adding:[43,1005,1016],addit:[40,41,43,1005,1030,1031,1032,1255,1256,1274,1284],addition:43,address:43,adher:43,adjac:[1005,1008],adopt:[43,1005,1023],affect:[1005,1008],affin:[1288,1289],after:[861,873,1005,1057,1102,1105,1106,1107,1109,1110,1111,1118,1119,1255,1256,1290,1291,1292,1293,1294,1295,1303],after_1:[1005,1022,1100],after_n:[1005,1022,1100],again:43,against:[40,41,1125,1128,1220,1222,1223,1224,1225,1226,1227,1228],agnost:[43,1257,1299,1300],aim:1303,algebra:1125,algorithm:[1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281,1303],align:[40,41,43,1005,1016],aliv:[931,965,967,971,1005,1042,1066,1070],all:[15,16,17,18,19,40,41,43,110,238,427,554,688,853,855,875,878,879,880,886,929,930,931,940,965,971,1005,1006,1007,1013,1014,1023,1042,1048,1070,1084,1125,1130,1153,1154,1155,1156,1157,1201,1202,1203,1209,1210,1213,1214,1217,1220,1222,1223,1224,1225,1226,1227,1228,1238,1248,1257,1300,1303],all_depth:[40,41],all_equ:1005,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1201,all_tru:[40,41],alloc:[43,853,855,931,1157],allow:[1005,1058,1059,1060,1286,1287],allow_dupl:[1005,1060],alon:[931,970,980,1157,1257],along:[40,41,43,494,875,878,879,880,883,884,886,887,888,931,954,955,956,957,960,961,962,963,975,1005,1021,1026,1027,1040,1057,1058,1059,1072,1083,1087,1090,1097,1125,1128,1153,1154,1155,1156,1157,1213,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228],alongsid:[1299,1300],alpha:[1230,1232],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,861,864,931,1157],also:[40,41,43,1005,1008,1102,1105,1153,1154,1155,1156,1201,1202,1203,1209,1210,1238,1247,1257,1274,1284,1299],altern:1299,alwai:[40,41,43,1102,1108,1113],among:[40,41],amount:[931,977,1157,1257],angl:[861,866,1137,1138,1142],ani:[15,16,17,18,19,40,41,43,110,238,427,554,688,886,929,930,931,933,936,940,941,943,952,953,956,957,962,1005,1007,1008,1012,1029,1030,1031,1032,1033,1034,1047,1055,1060,1085,1086,1102,1106,1157,1201,1202,1205,1209,1210,1211,1212,1213,1217,1257,1263,1264,1286,1287,1299,1300,1303],anoth:[40,41,43,981,987,1257],another_backend:43,anyth:[43,1303],anywai:43,apart:43,api:[1257,1258],appear:[43,1005,1035],append:[40,41,875,876,1157],appli:[15,18,19,40,41,1005,1030,1031,1032,1102,1109,1110,1125,1132,1134,1135,1136,1153,1154,1155,1201,1205,1208,1210,1230,1231,1232,1233,1234,1235,1236,1237,1238,1247,1249,1250,1255,1256,1257,1260,1261,1262,1288,1289],applic:[1201,1205,1210,1238,1249,1250,1257,1303],approxim:[43,861,862,865,866,870,871,890,915,1230,1231],arang:[130,296,442,494,575,710,1005,1058,1059],arbitrari:[40,41,931,960,961,963,1157],arc:[1137,1142],arcco:[1137,1138],arctan:[1137,1141],area:[861,862,1257],arg:[15,16,17,40,41,43,59,63,931,940,953,957,963,975,1005,1030,1031,1032,1076,1157,1263,1264,1286,1287],arg_nam:1005,arg_stateful_idx:[1286,1287],argmax:[130,442,575,710,1005],argmin:[130,442,575,710,1005],args_clon:1157,args_dist:1157,args_to_ivi:[15,1257],args_to_n:[15,1257],args_uni:1157,argsort:[107,235,424,551,685,883],argument:[15,16,17,18,19,40,41,42,43,59,63,929,930,931,940,941,953,957,963,1005,1008,1009,1017,1029,1060,1076,1137,1138,1157,1201,1205,1263,1264,1286,1287],aris:[1257,1303],arithmet:[43,1220,1223,1226,1228],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:494,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,130,296,442,485,486,489,494,575,710,853,854,855,856,857,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,883,884,886,887,888,909,915,931,949,950,951,954,955,956,957,960,961,962,963,965,967,971,975,976,981,985,991,996,997,1005,1006,1007,1008,1010,1011,1013,1014,1015,1016,1018,1019,1020,1021,1022,1024,1025,1026,1027,1030,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1042,1045,1047,1048,1049,1050,1051,1052,1053,1055,1056,1057,1058,1059,1061,1062,1063,1064,1066,1067,1068,1069,1070,1072,1073,1074,1075,1076,1081,1083,1084,1087,1088,1089,1090,1092,1093,1094,1095,1097,1098,1099,1100,1101,1102,1104,1105,1108,1109,1113,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1157,1201,1203,1210,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1274,1282,1283,1285,1290,1294,1299,1300],arrang:[1005,1030],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,392,393,394,395,396,398,399,852,853,854,855,856,857,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,883,884,886,887,888],array_api_methods_to_test:43,array_builtin:[43,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928],array_equ:[296,710,1005],array_lik:[494,1005,1012],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1005],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1257],arraywithgener:[22,1257],arraywithgradi:[24,1257],arraywithimag:[26,1257],arraywithlinalg:[28,1257],arraywithlog:[30,1257],arraywithmath:[32,1257],arraywithmeta:[34,1257],arraywithrandom:[36,1257],arraywithreduct:[38,1257],arriv:[40,41,42],articl:1257,arxiv:1257,as_arrai:[40,41,1005,1045,1081],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[440,442,451,931,949,981,988,989,990,991],as_tensor:442,as_vari:[40,41],as_zero:[40,41],asarrai:[442,1005],ascend:[883,884],asin:[800,1137],asinh:[86,401,528,662,861],aspect:[1118,1123],assert:[40,41,1005,1015,1157],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1005,associ:[43,1125,1133],assum:[861,865,1300,1303],astyp:[442,981],asynchron:[40,41,42],at_dev:[40,42,931,944,945],at_kei:[40,41],at_key_chain:[40,41],at_nod:1157,atan2:[800,1137],atan:[800,1137],atanh:[800,1137],attent:[43,1238,1249,1250,1274,1285],attribut:[0,6,40,41,857,858,859,1005,1069,1101],audienc:[1257,1300],author:1257,automat:43,avail:[40,41,43,931,966,968,969,978,1005,1031,1157],averag:[1102,1104,1105,1109,1153,1154,1155,1220,1223],average_across_step:[1153,1154,1155],avoid:[43,931,1157,1300],axes:[40,41,43,442,473,485,487,875,878,879,880,886,887,888,931,975,1005,1010,1011,1022,1035,1089,1095,1100,1125,1128,1157,1220,1222,1223,1224,1225,1226,1227,1228],axes_length:[40,41,1005,1030,1031,1032],axi:[40,41,442,444,445,449,450,456,464,465,466,471,472,474,875,876,878,879,880,883,884,886,887,888,931,933,936,943,954,955,956,957,960,961,962,963,975,1005,1010,1011,1021,1022,1025,1026,1027,1035,1040,1057,1058,1059,1072,1083,1084,1087,1089,1090,1097,1100,1157,1213,1219,1220,1222,1223,1224,1225,1226,1227,1228,1230,1235,1251,1253,1254],axis0:[40,41,1005,1089],axis1:[40,41,875,876,1005,1089],axis2:[875,876],back:[43,1286,1287,1290,1294],backend:[15,17,19,40,41,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,492,493,494,495,931,966,969,978,981,987,995,1004,1005,1050,1054,1102,1105,1107,1109,1110,1111,1116,1157,1257,1258,1263,1264,1290,1291,1292,1293,1294,1295,1299,1300,1303],backend_nam:43,background:[1257,1300],backprop:1303,backward:[886,887,888,1299],band:[1005,1038],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,396,440,441,442,466,861,870,871,890,915,931,933,934,935,936,937,938,940,941,943,944,945,946,981,1005,1043,1059,1077,1086,1102,1157,1220,1221,1257,1260,1261,1262,1265,1267,1268,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1303],basi:43,batch:[40,41,875,878,931,973,974,1005,1038,1048,1118,1122,1125,1132,1153,1154,1155,1156,1157,1238,1247,1255,1256,1288,1289],batch_shap:[442,458,1005,1048,1067,1118,1119,1120,1121,1122,1123,1124,1125,1133,1213,1214,1238,1248,1249,1250,1274,1283],batch_siz:[494,495,1157,1213,1214,1238,1239,1240,1241,1242,1243,1244,1245],bayesian:1303,becaus:[43,1005,1008],becom:[43,1005,1018,1137,1142,1303],been:[1005,1030,1031,1032,1213,1214],befor:[40,41,43,931,975,1153,1154,1155,1157,1201,1210,1220,1222,1223,1224,1225,1226,1227,1228,1238,1249,1250,1303],before_1:[1005,1022,1100],before_n:[1005,1022,1100],begin:[1201,1202,1209,1300],behaviour:[43,1303],behind:[1102,1105,1107,1109,1110,1111,1257],being:[40,41,43,1005,1008,1071,1079,1157],believ:43,belong:[40,41],below:[43,853,855,875,876,1257,1300,1303],below_depth:[40,41],benefit:1257,bernoul:[1238,1246,1274,1282],best:[43,1005,1060,1257],beta1:[1102,1104,1105,1109,1290,1291,1292],beta2:[1102,1104,1105,1109,1290,1291,1292],beta:[1255,1256],between:[40,41,42,857,858,1005,1008,1125,1130,1201,1205,1213,1215,1251,1253,1254,1290,1292],bia:[1238,1247,1248,1274,1275,1276,1277,1278,1279,1280,1281,1284],bias_initi:[1274,1275,1276,1277,1278,1279,1280,1281,1284],bilinear:[1118,1119],bilinear_resampl:[166,350,481,618,783,1118],bilinearli:[1118,1119],binari:[861,863,1251,1252],binary_cross_entropi:1251,bit:[396,857,858,859,981,992,1118,1120,1124,1257],bitwis:[861,863],bitwise_and:[86,217,401,528,662,861],bitwise_oper:[0,7,8],block:[1257,1300],bool:[15,18,19,40,41,42,43,485,486,489,861,867,868,869,872,875,878,883,884,886,887,888,890,909,929,930,931,949,962,966,970,975,978,980,981,991,1005,1007,1013,1014,1026,1029,1033,1034,1038,1045,1047,1055,1060,1081,1083,1097,1098,1099,1102,1105,1106,1107,1108,1109,1110,1111,1113,1125,1128,1153,1154,1155,1156,1157,1201,1202,1203,1205,1209,1210,1213,1214,1220,1222,1223,1224,1225,1226,1227,1228,1230,1231,1238,1246,1263,1264,1274,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295],both:[43,1005,1025],bottom:1257,boundari:[40,41,1213,1217],branch:[43,929,930],brittl:43,broadcast:[40,41,43,861,863,869,875,878,886,887,888,890,909,915,1005,1016,1033,1062,1063,1064,1072,1125,1128,1137,1142,1145,1220,1222,1223,1224,1225,1226,1227,1228],broadcast_to:[296,710,1005],build:[1157,1257,1274,1285,1286,1287],build_mod:[1274,1285,1286,1287],builder:[43,1257],built:[931,1005,1008,1157,1274,1285,1286,1287],builtin:43,builtin_ab:[251,890],builtin_add:[251,890],builtin_and:[251,890],builtin_bool:[251,890],builtin_contain:[251,890],builtin_deepcopi:[251,890],builtin_dir:[251,890],builtin_eq:[251,890],builtin_float:[251,890],builtin_floordiv:[251,890],builtin_g:[251,890],builtin_getattr:[251,890],builtin_getattribut:[251,890],builtin_getitem:[251,890],builtin_gt:[251,890],builtin_int:[251,890],builtin_invert:[251,890],builtin_l:[251,890],builtin_lt:[251,563,697,890],builtin_mul:[251,890],builtin_n:[251,890],builtin_neg:[251,890],builtin_or:[251,890],builtin_po:[251,890],builtin_pow:[43,251,890],builtin_radd:[251,890],builtin_rand:[251,890],builtin_rfloordiv:[251,890],builtin_rmul:[251,890],builtin_ror:[251,890],builtin_rpow:[251,890],builtin_rsub:[251,890],builtin_rtruediv:[251,890],builtin_rxor:[251,890],builtin_setitem:[251,890],builtin_some_op:43,builtin_sub:[251,890],builtin_truediv:[251,890],builtin_xor:[251,890],busi:43,bypass:1300,cach:[931,947,1005,1017],cache_fn:1005,calcul:[40,41,42,43,861,862,865,866,870,871,873,890,915,1137,1145],call:[43,931,975,1005,1071,1079,1096,1102,1106,1157,1201,1202,1205,1209,1274,1285,1286,1287,1290,1294,1300,1303],callabl:[40,41,929,930,931,940,941,975,1005,1017,1029,1031,1060,1096,1153,1154,1155,1156,1157,1201,1205,1206,1207,1209,1210,1238,1249],can:[43,931,973,974,975,1005,1073,1118,1120,1157,1257,1299,1300,1303],cancel_join_thread:1157,cannot:43,captur:1257,cast:[40,41,130,296,442,575,710,981,1005,1021,1118,1120,1124],catch_except:[1005,1029],categori:43,caus:43,ceil:[86,217,401,528,662,861,1005,1008],cell:[1238,1248,1274,1283],certain:[40,41,1005,1008,1058,1059],chain:[40,41,1153,1154,1155,1296,1297],chang:[43,931,1005,1073,1157,1201,1203,1210,1257,1299],channel:[1005,1038,1118,1120,1121,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284],check:[15,16,17,18,19,40,41,43,931,970,980,981,986,995,1004,1005,1015,1034,1047,1055,1088,1098,1102,1108,1157,1201,1202,1209,1257,1300],check_nest:[1201,1209],check_shap:[40,41],check_submod_ret:[1286,1287],check_typ:[40,41],choic:[1257,1300],choleski:[787,1125],choos:[861,872,1005,1099,1125,1130,1137,1142,1257],choose_random_framework:59,chosen:[40,41,1005,1008,1099],chunk:[931,973,974,975,1157],chunk_siz:[931,975,1157],circl:[1137,1138,1140],clark:1257,clear:[43,931,947,1157],clear_framework_stack:59,clear_mem_on_dev:[440,702,931],click:1257,clip:[40,41,296,442,710,1005,1019,1020,1062,1064,1257],clip_matrix_norm:1005,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1005],clipped_delta:1157,clone:[40,41,931,950,951,952,953,1157],clone_arrai:1157,clone_it:1157,clone_nest:1157,clonedit:1157,cloneditem:1157,clonednest:1157,close:[43,1118,1123,1137,1140,1157,1303],closest:[861,864,981,986],closest_valid_dtyp:981,code:[40,41,42,43,494,1257,1258,1299,1300],codebas:[931,973,974,1157,1257,1300,1303],codomain:[861,862,865,866,871,873],colab:1257,collect:[15,40,41,440,442,476,481,485,491,492,494,890,929,931,981,1005,1102,1118,1125,1134,1137,1157,1201,1213,1220,1230,1238,1251,1255,1260,1274,1288,1290],color:[40,41,42,1301,1302],column:[1005,1048],combin:[40,41,42,1118,1123,1257,1303],combined_batch_s:1157,come:1300,command:1257,comment:43,commit:1303,common:[40,41,43,1137,1142],common_key_chain:[40,41],commun:[43,1257,1300],communuti:43,compar:[40,41,883,884,1005,1007,1013,1014],comparison_oper:[0,9,10],compat:[43,861,863,869,875,878,886,887,888,890,909,915,1005,1033,1073,1137,1145,1257,1303],compil:[296,442,710,1286,1287,1290,1291,1292,1293,1294,1295],compile_on_next_step:[1286,1287,1290,1291,1292,1293,1294,1295],complet:[40,41,43,1125,1130,1157],complex:[1300,1303],compliant:[861,872],compon:[1005,1025],composit:43,comput:[40,41,861,863,869,872,875,877,878,890,909,931,975,1005,1019,1020,1026,1027,1033,1061,1102,1104,1105,1106,1107,1109,1110,1111,1113,1115,1118,1121,1125,1126,1127,1128,1129,1130,1131,1134,1135,1136,1137,1138,1140,1141,1142,1146,1147,1148,1149,1151,1201,1205,1220,1221,1222,1223,1224,1225,1226,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1247,1249,1251,1252,1253,1254],concat:[40,41,931,960,961,962,963,975,1005,1038,1157],concaten:[40,41,130,296,442,575,710,1005,1038,1157,1257],concatten:[40,41,931,960,961,962,963,975,1157],condit:[442,929,930,1005,1099,1201,1209],conditon:[1201,1209],config:[40,41,1157],config_list:1157,configur:[40,41],conflict:43,conform:43,conjunct:1300,connect:[1274,1284,1285],consid:[40,41,861,872,1125,1130,1299,1303],consist:[40,41,931,963,1157,1220,1221,1286,1287,1300],constant:[931,940,941,1005,1022,1157,1201,1205,1251,1252,1253,1254,1255,1256,1265,1266,1270,1273,1286,1287,1288,1289,1300],constant_kwarg:1157,constant_pad:[296,442,575,710,1005],constitu:[40,41],construct:[1005,1090,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299],constructor:[40,41,42,1005,1009,1296,1297],consum:[931,1157],cont_feat_dim:[1238,1249],contaienr:[40,41],contain:[15,18,19,42,43,853,854,855,856,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,878,886,887,888,890,909,915,931,950,954,975,981,985,1005,1006,1010,1011,1018,1019,1020,1023,1033,1047,1062,1064,1074,1085,1086,1102,1104,1105,1107,1109,1110,1111,1137,1145,1153,1154,1155,1156,1157,1213,1214,1220,1222,1223,1224,1226,1228,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[442,710,1005],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[442,1005,1065,1238,1249,1274,1285],context_dim:[1274,1285],contextmanag:[59,60],continu:[43,1157,1300],contract:[40,41,1220,1221],contribut:[1257,1258],contributor:[43,1257],control:1257,conv1d:[197,381,508,842,1238,1257,1274],conv1d_transpos:[197,381,508,842,1238],conv1dtranspos:[1257,1274],conv2d:[197,381,508,646,842,1238,1257,1274],conv2d_transpos:[197,381,508,842,1238],conv2dtranspos:[1257,1274],conv3d:[197,381,508,646,842,1238,1257,1274],conv3d_transpos:[197,381,508,842,1238],conv3dtranspos:[1257,1274],convent:[40,41,1220,1221],conver:[931,947,958,970,977,980,1157],convers:[16,17,18,19,40,41,1157,1257],convert:[15,16,17,18,19,40,41,43,931,958,959,981,987,993,994,1005,1082,1093,1094,1118,1120,1124,1125,1133,1157,1201,1203,1210,1257,1264],convert_dtyp:981,convolut:[1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281],cool:43,cooler:43,coordin:[1005,1063,1137,1138,1140,1142],copi:[40,41,43,494,1005,1024,1157,1201,1203],copy_arrai:[442,710,1005],copy_nest:1201,core:[440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,492,493,494,495,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,940,941,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1257],corner:43,correct:[43,1257,1300],correctli:[40,41,43,1125,1128,1137,1142,1220,1222,1223,1224,1225,1226,1227,1228],correspond:[40,41,43,890,915,1005,1021,1213,1214],cos:[86,401,528,662,861,1005,1038,1137,1138,1151,1300],cosh:[86,401,528,662,800,861,1137],cosin:[861,865,866,1137,1138,1139,1144],cost:[1102,1104,1105,1107,1109,1110,1111,1153,1154,1155,1156],cost_fn:[1153,1156],could:1303,count:[40,41,879,880,886,887,888,1157,1220,1225,1227],cours:43,cprint:1301,cpu:[40,41,43,931,968,970,976,977,980,1005,1008,1012,1040,1041,1048,1058,1059,1067,1068,1069,1075,1076,1101,1157,1213,1214,1215,1216,1217,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1296,1297,1299,1300],creat:[40,41,853,854,856,931,940,941,1005,1008,1012,1039,1040,1041,1048,1058,1059,1067,1068,1069,1075,1076,1092,1101,1102,1115,1157,1213,1214,1215,1216,1217,1257,1258,1263,1264,1265,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299,1303],create_if_abs:[40,41],create_vari:1265,creation:[40,41,42,43],creation_funct:[392,393,394,395,853,854,855,856],crop:[1118,1122],crop_siz:[1118,1122],cross:[296,710,1005,1251,1252,1253,1254],cross_entropi:1251,cuda:[40,41,931,940,959,976,1005,1008,1012,1040,1041,1048,1058,1059,1067,1068,1069,1075,1076,1101,1157,1213,1214,1215,1216,1217,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1296,1297],cumprod:[130,296,442,710,1005],cumsum:[710,1005],cumul:[1005,1026,1027],current:[40,41,42,43,931,940,964,965,967,971,981,987,995,1004,1005,1028,1042,1050,1054,1066,1070,1157,1201,1202,1209,1257,1303],current_framework:59,current_framework_str:[442,710,1005,1157],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1238,1239,1240,1241,1242,1243,1244],d_out:[1238,1239,1240,1241,1242,1243,1244],da_can_termin:1157,da_dim_s:[931,1157],da_direct:1157,da_tune_step:[931,1157],dai:1303,daniel:1257,data:[40,41,42,43,853,854,855,856,858,859,861,862,863,864,865,866,867,868,869,871,872,873,875,876,878,879,880,883,884,886,887,888,890,909,915,931,933,934,935,936,937,938,943,944,945,959,981,985,986,987,991,992,993,994,995,996,997,1004,1005,1008,1012,1033,1039,1048,1055,1068,1069,1073,1084,1088,1101,1102,1108,1116,1137,1145,1157,1238,1247,1257],data_format:[1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281],data_type_funct:[396,398,399,857,858,859],dataset:[40,41],datatyp:[40,41,981,986,996,997],dcdw:[1102,1104,1105,1107,1109,1110],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1102,1109,1110,1290,1292,1293],decay_lambda:[1102,1109,1110,1290,1292,1293],decid:[40,41,1303],decompos:[1125,1126,1130],decomposit:[1125,1126,1130,1132],decor:43,decrement:[1005,1051],dedic:[1102,1116,1263,1264],deep:[40,41,1257],deep_copi:[40,41],deeper:[931,953,957,963,1157,1201,1210,1257],deepli:[1201,1203],def:[43,60,82,213,397,524,658,932,939,942,982,983,984,1103,1157,1161,1168,1257,1266,1269,1272,1299,1300,1303],default_dev:43,default_devic:931,default_dtyp:[43,981],default_float_dtyp:981,default_int_dtyp:981,default_key_color:[40,41,42],default_nod:1157,default_rng:494,default_v:[1005,1029],defaultdevic:[931,932],defaultdtyp:[981,982],defaultfloatdtyp:[981,983],defaultintdtyp:[981,984],defer:43,defin:[43,1005,1025,1067,1069,1101,1213,1215],definit:43,degre:[1137,1149,1151],del:1157,delai:43,delet:43,delta:[1102,1104,1157],delta_dim_s:1157,delta_percent_mem:1157,delta_sf:1157,delta_util:1157,demo:1257,denomin:[1005,1037,1044,1078,1085,1086,1255,1256,1288,1289],denot:43,dens:[1274,1284],depend:[43,861,862,865,866,870,871,883,884,890,915,1005,1099,1125,1132,1257],depth:[40,41,442,467,931,953,957,963,1005,1046,1067,1157,1201,1210,1286,1287],depth_cutoff:[40,41],depthwis:[1238,1245,1274,1281],depthwise_conv2d:[197,381,508,646,842,1238],depthwiseconv2d:[1257,1274],deriv:[1102,1104,1105,1107,1109,1110,1111,1201,1203,1210,1257,1286,1290,1294,1296],descend:[883,884,1125,1132],descent:[1102,1107,1290,1295],describ:[40,41,1220,1221],descript:[875,878],design:[1257,1258],desir:[40,41,931,976,981,985,1005,1008,1012,1048,1049,1068,1069,1101,1118,1123,1157,1220,1222,1223,1224,1226,1228],desired_aspect_ratio:[481,484,1118,1123],desired_percent_increas:1157,det:[226,415,485,542,622,676,787],detail:1303,detect:[40,41,1201,1202,1209],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,861,862,863,865,866,867,868,871,873,875,876,877,878,886,887,888,890,915,931,966,968,969,978,981,985,986,992,995,996,997,1004,1005,1007,1008,1012,1013,1014,1047,1050,1054,1055,1088,1098,1102,1108,1125,1131,1137,1145,1153,1154,1155,1156,1157,1238,1249],dev:[40,41,42,43,123,290,440,442,443,446,456,457,458,465,466,467,468,469,470,475,494,495,568,702,931,934,935,937,938,940,941,944,945,947,948,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,967,970,971,972,973,974,975,976,977,980,1005,1008,1012,1040,1041,1048,1058,1059,1067,1068,1069,1075,1076,1101,1102,1117,1213,1214,1215,1216,1217,1263,1264,1265,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1296,1297],dev_clon:[40,41,931],dev_clone_arrai:931,dev_clone_it:931,dev_clone_nest:931,dev_dist:[40,41,931],dev_dist_arrai:931,dev_dist_it:931,dev_dist_nest:931,dev_from_str:[43,123,290,440,568,702,931],dev_mapp:931,dev_str:[40,41],dev_to_str:[123,290,440,568,702,931],dev_unifi:931,dev_unify_arrai:931,dev_unify_it:931,dev_unify_nest:931,dev_util:931,devclonedit:931,devcloneditem:931,devclonednest:931,devdistit:931,devdistitem:931,devdistnest:931,develop:[43,1257,1300,1303],deviat:[40,41,1213,1216,1220,1226,1255,1256,1288,1289],devic:[21,40,41,43,392,393,395,441,442,455,853,854,855,856,933,934,935,936,937,938,940,941,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,1005,1008,1012,1039,1040,1041,1048,1058,1059,1067,1068,1069,1075,1076,1101,1102,1117,1213,1214,1215,1216,1217,1257,1263,1264,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1296,1297],devmanag:[931,939],devmapp:[931,941],devmappermultiproc:931,diag:[1125,1132],diagon:[100,226,415,542,676,853,855,875,1005,1048],dict:[15,16,17,18,19,40,41,42,931,933,936,940,941,943,953,954,955,956,957,1005,1030,1031,1032,1060,1153,1154,1155,1157,1201,1203,1204,1205,1208,1210,1263,1264],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,857,858,931,950,951,954,955,1125,1130,1157,1238,1247,1257,1300,1303],differenti:[1257,1300],dilat:[1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281],dim:[40,41,43,1005,1067,1118,1119,1123,1125,1132,1157,1274,1285],dim_siz:[40,41,931,1157],dimens:[40,41,42,853,855,875,876,878,879,880,886,887,888,931,962,1005,1016,1021,1025,1030,1031,1032,1035,1038,1045,1057,1067,1072,1073,1083,1084,1087,1095,1097,1118,1122,1125,1128,1132,1153,1154,1155,1156,1157,1213,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1235,1238,1239,1240,1241,1242,1243,1244,1245,1248,1251,1253,1254,1274,1275,1276,1277,1278,1279,1280,1281,1284,1285],dimension:[40,41,494,875,878,886,887,888,1005,1083,1084,1125,1132],direct:1157,directli:[43,1201,1210,1300,1303],directori:[1005,1080,1091],discord:43,discret:[1251,1253],discuss:43,disk:[40,41,1118,1120],distanc:[1005,1008],distribut:[40,41,931,950,954,955,956,957,1157,1213,1214,1215,1216,1217,1238,1246,1274,1282,1286,1287],distribute_nest:1157,distributedarrai:[40,41],distrubt:[1251,1253],dive:[1257,1300],divid:[40,41,1005,1083,1085,1137],dividend:[1137,1145],divis:[1005,1037,1044,1078,1085,1086,1102,1104,1105,1109,1137,1145,1290,1291,1292],divisor:[1102,1104,1105,1109,1137,1145,1290,1291,1292],doc:1257,docstr:43,document:43,doe:[40,41,43,1005,1008,1083,1299],doesn:[1125,1130,1257],doing:43,domain:[861,862,865,866,871,873,1137,1138],don:[43,1257],done:43,door:1303,dot:[1125,1127,1238,1249,1250,1274,1285],down:1299,downscal:[1005,1019,1020],drag:[1257,1303],draw:[1213,1214,1216,1217],drawn:[1213,1214,1215,1216,1217],drop:[1257,1303],dropout:[1238,1257,1274,1285],dropout_r:[1274,1285],ds_tune_step:931,dtype:[40,41,43,130,296,392,393,395,396,398,399,442,443,446,447,455,458,468,475,575,710,853,854,856,857,858,859,985,986,987,988,989,990,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1008,1012,1039,1048,1067,1068,1069,1101],dtype_bit:[130,296,442,575,710,981],dtype_from_str:[43,130,296,442,575,710,981],dtype_in:[442,452,453,454,981,987,992,993,994,995,996,997,1004],dtype_to_str:[130,296,442,575,710,981],duplic:[40,41,43],dure:[40,41,43,929,930,1005,1096,1102,1104,1105,1109,1153,1154,1155,1156,1286,1287,1290,1291,1292,1294],dynam:[43,442,448,929,930],each:[40,41,42,43,861,862,863,864,865,866,867,868,869,870,871,872,873,890,909,915,931,940,941,950,951,952,953,954,955,956,962,974,975,1005,1006,1007,1022,1033,1072,1083,1087,1090,1100,1102,1105,1107,1109,1110,1111,1118,1121,1125,1132,1137,1140,1145,1147,1148,1157,1201,1205,1213,1214,1220,1221,1238,1239,1240,1241,1242,1243,1244,1245,1246,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1300],eager:1300,easi:1303,easili:1257,econom:1303,ecosystem:1257,edg:[1005,1018,1022,1100],effect:[1102,1111],effective_grad:[1102,1111],effici:1303,einop:[40,41,1005,1030,1031,1032],einops_rearrang:[40,41,1005],einops_reduc:[40,41,1005],einops_repeat:[40,41,1005],einstein:[40,41,1220,1221],einsum:[40,41,183,369,496,636,822,1220],either:[40,41,43,861,871,1005,1029,1060,1063,1065,1153,1154,1155,1156,1157,1274,1285,1286,1287,1300],eleg:1157,element:[40,41,43,494,853,855,861,862,863,864,865,866,867,868,869,870,871,872,873,879,880,886,887,888,890,909,915,931,952,956,962,981,985,1005,1006,1008,1010,1011,1013,1014,1018,1019,1020,1026,1027,1033,1036,1037,1048,1049,1062,1064,1072,1074,1083,1094,1099,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1157,1220,1221,1223,1225,1227,1230,1231,1232,1233,1234,1235,1236,1237,1238,1246,1274,1282],elementwis:[40,41],elementwise_affin:[1288,1289],elementwise_funct:[861,862,863,864,865,866,867,868,869,870,871,872,873],elemtn:[1213,1214],elif:1157,els:[43,1005,1015,1029,1034,1157],elsewher:[1005,1099],emphas:1257,empti:[40,41,886,887,888,1125,1130,1157],enabl:[40,41,42,43,1257],encapsul:[857,859],encod:[1005,1038,1118,1120],end:[1005,1008,1257,1300],engag:43,ensur:43,entir:[40,41,886,887,888,931,975,1157,1257,1274,1283],entri:[40,41,1005,1058,1059,1083,1084],entropi:[1251,1252,1253,1254],enumer:1157,environ:1257,eps:[396,857,858],epsilon:[1102,1104,1105,1109,1251,1252,1253,1254,1255,1256,1288,1289,1290,1291,1292],equal:[40,41,442,575,710,861,867,875,876,883,884,1005,1007,1013,1014,1022,1083,1100,1137,1149,1151,1213,1217],equality_matrix:[1005,1007],equat:[40,41,1220,1221],equival:[861,872,875,878,1005,1008,1137,1151],erf:[492,800,1137],error:[40,41,43,931,1005,1084,1137,1146,1157,1230,1231,1286,1287,1290,1294],essenti:43,etc:[40,41,43,931,976,1005,1008,1012,1040,1041,1048,1058,1059,1067,1068,1069,1075,1076,1101,1157,1213,1214,1215,1216,1217,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1296,1297,1303],euclidean:[875,878],euler:852,evalu:[40,41,861,870,871,886,887,888,1005,1063,1201,1202,1209],even:[43,1303],evenli:[40,41,1005,1008,1058,1059,1083],everi:[43,1005,1007,1303],exact:[40,41],exampl:[43,929,930,1005,1018,1087,1125,1130,1257,1299,1300,1303],example_input:[442,448,929,930],exc_tb:1157,exc_typ:1157,exc_val:1157,exce:[1005,1064],except:[40,41,44,47,886,887,888,1005,1008,1015,1021,1029,1096,1157],excess_s:1157,excit:[1257,1300],exclud:[59,61,1005,1008,1213,1217],exclus:[40,41,442,450,463,476,478,1005,1026,1055,1102,1108,1213,1215],execut:[43,1005,1096,1300],execute_with_gradi:[163,345,476,613,777,1102,1257,1299],exist:[40,41,1005,1029,1157,1257,1290,1294,1303],exp:[800,1137],expand:[40,41,1005,1035,1038],expand_dim:[40,41,296,710,1005,1157],expect:[1005,1009],explain:[43,1300],explicitli:[43,1274,1283,1285,1286,1287,1300],expon:[43,890,915,1005,1086],exponenti:[43,890,915,1137,1146,1147],expos:[1005,1012,1023],express:[861,865,1005,1063],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1102,1106],eye:[1125,1127],fabian:1257,fabio:1257,factor:[931,940,973,974,975,1102,1104,1105,1109,1110,1125,1132,1157,1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281,1290,1291,1292,1293],fail:43,falck:1257,fall:[1286,1287,1290,1294],fallback_to_non_compil:[1286,1287,1290,1294],fals:[15,18,19,40,41,42,59,66,67,68,69,70,440,442,450,451,463,471,474,476,477,478,485,487,861,867,868,872,875,878,883,884,886,887,888,931,949,962,970,975,980,981,988,989,990,991,1005,1007,1026,1029,1034,1038,1045,1055,1060,1081,1083,1097,1099,1102,1105,1106,1107,1108,1109,1110,1111,1125,1128,1153,1154,1155,1156,1157,1201,1202,1203,1205,1209,1210,1220,1222,1223,1224,1225,1226,1227,1228,1263,1264,1286,1287,1290,1291,1292,1293,1294,1295],fan_in:1265,fan_mod:1265,fan_out:1265,far:[1201,1202,1209,1299],faster:[929,930],favourit:[1257,1299],feasibl:1303,feat_dim:[1238,1249,1250],fed:[931,975,1157],feed:[931,975,1157],few:43,field:1303,file:[40,41,43,1005,1080,1091,1286,1287],filepath:[40,41],fill:[40,41,853,854,856,1005,1039,1068,1213,1215],fill_valu:[442,455,1005,1039],filter:[1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281,1303],filter_s:[1274,1275,1276],filter_shap:[1274,1277,1278,1279,1280,1281],find:[40,41,43,1303],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,212,213,396,397,523,524,657,658,857],finish:[1257,1303],finit:[861,867],first:[40,41,43,494,861,863,869,875,876,929,930,931,962,1005,1013,1021,1025,1033,1058,1059,1087,1089,1102,1106,1125,1132,1153,1154,1155,1156,1157,1201,1202,1209,1213,1219,1220,1225,1227,1274,1285,1286,1287,1290,1294,1300,1303],firstlayersiren:[1257,1265],firstli:[1300,1303],fist:[931,975,1157],fit:[40,41,440,442,476,481,485,491,492,494,1005,1072,1118,1123],fix:43,fkt:1303,flag:[40,41,43,1102,1108],flat:[40,41,43,1005,1072,1075],flat_list:[40,41],flatten:[40,41,875,878,1005,1038,1072,1220,1222,1223,1224,1226,1228],flatten_key_chain:[40,41,1286,1287],flexibl:[1257,1300],flip:[40,41,103,231,420,547,681,879],float32:[43,442,458,981,985,993,994,1005,1008,1012,1048,1068,1069,1101],float_dtyp:[981,989,999],float_img_to_uint8_img:1118,floor:[296,442,710,1005,1037,1157],floormod:[296,442,710,1005],fluid:1303,folder:[43,1257],follow:[40,41,43,857,859,875,878,931,975,1005,1051,1052,1053,1085,1086,1102,1105,1107,1109,1110,1111,1157,1201,1205,1210,1238,1249,1250,1257,1274,1284,1290,1294],followng:[857,858],fomaml_step:1153,forget:[1102,1104,1105,1109,1290,1291,1292],fork:[1005,1065,1257,1258],forkserv:[1005,1065,1157],form:[15,16,17,18,19,40,41,853,855,875,876,1005,1012,1102,1105,1107,1109,1110,1111,1201,1203,1210,1238],format:[40,41,43,931,949,981,985,987,991,1005,1008,1012,1048,1068,1069,1101,1157,1220,1221,1257,1299,1300],format_fn:[40,41],format_key_chain:[40,41],forward:[1286,1287,1290,1294,1299],found:[40,41,42],fourier:[1005,1038],fourier_encod:1005,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,419,421,425,428,429,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,483,484,486,487,488,489,490,493,495,497,498,499,500,501,502,503,506,507,509,510,511,512,513,514,515,520,521,522,524,525,526,529,530,531,532,533,534,535,536,537,538,539,540,543,544,545,546,548,552,555,556,564,569,570,571,572,573,574,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,614,615,616,617,619,620,621,623,624,625,626,627,628,632,633,634,635,637,638,639,640,641,642,643,647,648,649,654,655,656,658,659,660,663,664,665,666,667,668,669,670,671,672,673,674,677,678,679,680,682,686,689,690,698,703,704,705,706,707,708,709,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,778,779,780,781,782,784,785,786,788,789,790,791,792,793,794,795,796,798,799,801,802,803,804,805,806,807,808,809,810,811,812,813,814,816,817,818,819,820,821,823,824,825,826,827,828,829,832,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,854,855,856,858,859,862,863,864,865,866,867,868,869,870,871,872,873,876,877,878,880,884,887,888,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1256,1257,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1302,1303],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1157,framewrk:[1005,1065],free:43,freed:43,freeli:43,frequenc:[1005,1038],from:[40,41,42,43,861,873,875,876,879,880,886,887,888,931,940,941,975,981,987,1005,1029,1040,1041,1048,1073,1084,1092,1099,1102,1105,1109,1118,1122,1125,1130,1153,1154,1155,1156,1157,1201,1203,1210,1213,1214,1215,1216,1217,1220,1225,1227,1238,1246,1249,1257,1263,1264,1274,1282,1285,1290,1294,1299,1300],from_cal:[1286,1287],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,130,296,442,575,710,857,858,1005,1125,1130,1257],full_matric:[485,486,489,1125,1132],fulli:[43,1257,1274,1284,1285,1299],func:[40,41,442,448,476,477,929,930,931,975,1005,1017,1102,1106,1157],further:[43,1303],furthermor:1303,futur:1303,gain:1265,gamma:[1255,1256],gather:[40,41,130,296,442,575,710,1005,1041],gather_nd:[40,41,130,296,442,575,710,1005],gauss:[1137,1146],gaussian:[1230,1231],geglu:[1257,1260],gelu:[379,505,831,1230,1257,1260],gener:[23,40,41,43,440,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,494,929,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1108,1213,1215,1217,1218,1257,1290,1294],geometr:[1005,1038],get:[40,41,43,857,858,859,931,940,941,949,964,965,970,974,977,980,981,991,992,1005,1009,1042,1043,1044,1071,1157,1257,1274,1283,1303],get_all_arrays_in_memori:1005,get_all_arrays_on_dev:931,get_framework:59,get_initial_st:[1274,1283],get_min_bas:1005,get_min_denomin:1005,get_mod_kei:[1286,1287],get_num_dim:[442,710,1005],get_referrers_recurs:1005,getfullargspec:1157,gist:1257,give:[43,1005,1073,1300],given:[40,41,43,879,880,931,964,970,973,974,975,977,980,981,985,1005,1008,1012,1018,1026,1027,1041,1058,1059,1068,1069,1072,1075,1076,1083,1090,1095,1097,1101,1102,1104,1105,1107,1109,1110,1111,1125,1127,1133,1137,1138,1157,1201,1206,1207,1213,1216,1217,1219,1220,1223,1225,1226,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1263,1264,1303],global:[40,41,42,931,940,941,948,973,974,975,981,988,989,990,1005,1028,1043,1044,1071,1077,1078,1079,1085,1086,1102,1117,1157,1255,1256,1288,1289],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1257,1265,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284],good:43,googl:1257,got:[43,1257],gpu0:43,gpu2:43,gpu:[931,966,969,1157],gpu_is_avail:[440,931,1157],grad:[1257,1290,1294,1299],gradient:[25,40,41,477,478,479,480,931,975,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1121,1153,1154,1155,1156,1257,1290,1291,1292,1293,1294,1295,1299,1303],gradient_descent_upd:[1102,1153,1154,1155,1156],gradient_imag:[166,350,481,618,783,1118],gradienttrack:[1102,1103],graph:[1102,1105,1107,1109,1110,1111,1286,1287],greater:[40,41,1005,1008,1036,1084,1213,1217],green:[40,41,42,1301,1302],grid:[1005,1063],group:[1118,1123],guid:[43,1257,1258,1303],gym:1257,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1303,half:[1005,1008,1157,1213,1217],hand:1257,handl:[40,41,42,43,929,930,931,947,949,958,959,970,977,980,1102,1105,1107,1109,1110,1111,1157,1290,1291,1292,1293,1294,1295],happen:43,has:[40,41,43,875,877,1005,1087,1125,1130,1131,1137,1141],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1005],hasattr:1157,have:[40,41,43,853,854,855,856,857,858,861,862,863,864,865,866,867,868,869,871,872,873,875,876,878,879,880,883,884,886,887,888,890,909,915,1005,1021,1025,1030,1031,1032,1033,1039,1087,1102,1108,1116,1125,1132,1137,1145,1157,1257,1299,1300],haven:43,hdf5:[40,41,1286,1287],head:[1238,1249,1274,1285],head_dim:[1274,1285],height:[1118,1123],height_cutoff:[40,41],help:[43,59,396,440,441,931,943,944,945,946,981,1102,1257,1265,1267,1268,1270,1271,1273],here:[43,1257],hidden:[1238,1248,1274,1283],hierarch:[1005,1023],hierarchi:[40,41],high:[40,41,494,1213,1215,1217],higher:[1102,1105,1107,1109,1110,1111,1125,1132],highest:[1213,1215],highest_util:1157,highest_util_nod:1157,highli:1257,highlight:1303,hint:43,hkt:1303,hold:[981,985,1005,1008,1012,1075,1076],host:1257,hot:[1005,1067],hour:43,how:[1257,1274,1285,1286,1287,1300,1303],howev:[43,1300],http:1303,hyperbol:[861,862,866,1137,1139,1143,1144,1150,1152,1230,1237],hypothet:[43,1303],icon:1257,idea:1257,ident:[40,41,43,130,296,442,575,710,1005],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[852,857,858,861,873],if_exist:[40,41],ignor:[40,41,1290,1294],ignore_key_error:[40,41],ignore_miss:[1290,1294],ignore_non:[40,41],iii:43,iinfo:[81,212,396,523,657,857],imag:[27,482,483,484,1005,1057,1119,1120,1121,1122,1123,1124,1238,1239,1240,1241,1242,1244,1245,1257,1303],image_dim:[1118,1122],imkkhk:1303,immedi:[1257,1300,1303],implement:[43,861,862,865,866,870,871,883,884,890,915,1257,1300,1303],in_featur:[1238,1247],inadvert:43,includ:[40,41,43,875,878,886,887,888,1005,1008,1047,1085,1086,1098,1201,1202,1213,1217,1274,1284,1285,1288,1289,1299],include_deriv:[1201,1203,1210],include_empti:[40,41],include_inf:[40,41,1005,1047,1098],include_nest:[1201,1202],include_self:[40,41],inclus:[43,1213,1215],incom:[1238,1247],increas:[931,953,957,963,1005,1022,1035,1100,1157,1201,1210],increasingli:1303,increment:[1005,1052,1157],inde:1257,indent:[40,41,42],independ:[1213,1214],index:[40,41,442,494,883,884,1005,1010,1011,1040,1041,1063,1084,1087,1201,1204,1206,1207,1208,1211],index_nest:1201,indic:[40,41,442,456,457,467,469,470,875,878,883,884,1005,1010,1011,1040,1041,1049,1067,1075,1076,1201,1202,1204,1206,1207,1208,1209,1211,1212,1213,1214,1230,1235,1238,1239,1240,1241,1242,1243,1244,1245,1255,1256,1274,1275,1276,1277,1278,1279,1280,1281,1286,1287],indices_wher:[130,296,442,710,1005],indistinguish:[861,873],inevit:1303,inf:[40,41,875,878,1005,1047,1056,1098,1137,1141],infer:[929,930,1005,1045,1048,1073,1081,1118,1122,1125,1130,1300,1303],infin:[861,862,864,865,866,867,871,873,875,878,886,887,888,1005,1056],infinit:[861,873],inform:[857,858,859,1102,1113],init_c:[1238,1248],init_h:[1238,1248],init_on_first_step:[1290,1294],initi:[40,41,42,43,59,396,440,441,931,943,944,945,946,981,1102,1157,1238,1248,1257,1267,1268,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1290,1294],initialz:[1286,1287],inner:[1153,1154,1155,1156],inner_batch_fn:[1153,1154,1155],inner_batch_shap:[1238,1247],inner_cost_fn:[1153,1154,1155],inner_grad_step:[1153,1154,1155,1156],inner_learning_r:[1153,1154,1155,1156],inner_optimization_step:[1153,1154,1155,1156],inner_v:[1153,1154,1155],innermost:[853,855,875,876],inp:1157,inplac:[40,41,1005,1015,1050,1054,1088,1102,1105,1107,1109,1110,1111,1263,1264,1290,1291,1292,1293,1294,1295],inplace_arrays_support:[442,1005],inplace_decr:[130,296,442,575,710,1005],inplace_incr:[130,296,442,575,710,1005],inplace_oper:[0,11,12],inplace_upd:[40,41,130,296,442,575,710,1005,1263,1264],inplace_variables_support:[442,1005],input:[15,18,19,40,41,42,43,853,855,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,878,879,880,883,884,886,887,888,929,930,931,940,941,948,949,950,953,954,957,963,975,976,981,985,986,988,989,990,991,992,996,997,1005,1006,1007,1010,1011,1013,1014,1015,1016,1018,1019,1020,1021,1022,1024,1026,1027,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1045,1047,1048,1049,1051,1052,1053,1055,1056,1057,1061,1062,1063,1064,1072,1074,1081,1082,1084,1087,1088,1089,1090,1092,1093,1094,1095,1097,1098,1100,1102,1106,1108,1113,1117,1118,1119,1120,1121,1122,1124,1125,1128,1130,1132,1134,1135,1136,1137,1139,1141,1143,1144,1145,1149,1150,1151,1152,1153,1154,1155,1156,1157,1213,1214,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1255,1256,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1288,1289,1300],input_ax:[931,975,1157],input_channel:[1274,1275,1276,1277,1278,1279,1280,1283,1284],input_queu:1157,inputs_split:1157,insert:[1005,1035],insid:43,inspect:1157,inspir:1303,instal:1257,instanc:[15,16,17,18,19,40,41,43,494,890,909,915,931,940,1157,1263,1264,1296,1297],instead:[40,41,43,494,1220,1222,1223,1224,1225,1226,1227,1228,1303],int32:43,int64:[981,985,1005,1008,1012,1048,1068,1069,1101],int_dtyp:[981,990,1000],integ:[40,41,494,857,859,861,863,864,875,878,886,887,888,981,997,1005,1008,1036,1074,1083,1213,1215,1218],integr:1257,intend:43,inter:1257,interact:1257,interchang:[40,41,1005,1089],interest:1257,interfac:[1005,1012,1300],intermedi:[40,41],intern:[40,41,931,1102,1116,1157,1201,1202,1209,1210,1265,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1296,1297],interpol:[1005,1057],intersect:[1137,1138],interv:[40,41,886,887,888,1005,1008,1018,1058,1059,1137,1140,1213,1217],introduc:1303,inv:[787,1125,1303],invalid:[886,887,888],invalid_dtyp:981,invers:[861,862,1125,1127,1129,1137,1138,1139,1140,1141,1143,1303],invert:[1125,1127,1129],invest:1303,investig:43,invoc:[929,930],irrespect:1257,is_al:1157,is_arrai:[130,296,442,575,710,1005,1157],is_float_dtyp:981,is_int_dtyp:981,is_mean:1157,is_sum:1157,is_vari:[163,345,476,613,777,1102],isfinit:[86,217,401,528,662,861],isinf:[296,575,710,1005],isinst:1157,isnan:[86,217,401,528,662,861],isnumer:1157,issu:[1257,1258],issue_numb:43,item:[15,19,40,41,890,902,903,931,940,941,943,950,952,954,956,962,981,988,1005,1023,1046,1085,1086,1157,1201,1205,1206,1207,1210,1211,1212,1257,1286,1287,1299],iter:[15,16,17,18,19,40,41,42,929,930,931,934,935,937,938,940,941,944,945,952,954,955,956,957,962,975,1005,1007,1016,1021,1022,1048,1063,1068,1072,1073,1076,1081,1083,1087,1090,1095,1100,1157,1201,1202,1203,1205,1209,1210],iterbal:[931,952,956,962,1157],its:[494,931,975,1005,1048,1073,1089,1095,1157,1257],itself:[43,1201,1210],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,852,853,854,855,856,857,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,883,884,886,887,888,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,940,941,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1267,1268,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1301,1302],ivy_backend:[40,41],ivy_bay:1303,ivy_test:43,ivyfcmodel:1299,ivyh:[40,41,42],ivymodul:[194,839],jame:1257,jax:[43,1102,1108,1257,1303],jax_concat:1257,jnp:1257,join:[40,41,1005,1021,1087,1157],journal:1257,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1257,1274,1283,1303],kaimingnorm:[1265,1269],kalman:1303,kalman_filt:1303,kalman_filter_step:1303,kalman_filter_upd:1303,keep:[40,41,931,976,1005,1097,1157,1257,1258,1303],keep_inner_v:[1153,1154,1155],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1153,1154,1155],keepdim:[40,41,442,474,485,487,875,878,886,887,888,1005,1097,1125,1128,1220,1222,1223,1224,1225,1226,1227,1228],kei:[15,16,17,40,41,42,43,890,895,931,943,1005,1023,1153,1154,1155,1157,1201,1204,1208,1238,1249,1250,1257,1263,1264,1274,1285,1290,1294],kept:[40,41,42,1153,1154,1155],kera:1303,kernel:[1238,1248],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,931,940,941,953,957,963,1005,1009,1030,1031,1032,1060,1157,1201,1205,1286,1287],keyword_color_dict:[40,41,42],kind:[857,858,859,1303],kwarg:[15,16,17,40,41,42,59,63,931,940,953,957,963,1005,1060,1157,1263,1264,1286,1287],kwarg_stateful_idx:[1286,1287],kwargs_clon:1157,kwargs_dist:1157,kwargs_uni:1157,label:[43,1251,1252,1253,1254],lamb:[1102,1109,1257,1290],lamb_upd:1102,lambda:[1157,1290,1293,1295,1299],lar:[1102,1109,1110,1257,1290],larger:[857,858,1005,1018],largest:[40,41,857,858,859,1005,1010,1036],lars_upd:1102,last:[40,41,875,876,879,880,883,884,886,887,888,1005,1008,1025,1057,1083,1087,1125,1128,1132,1220,1225,1227,1230,1235,1238,1248,1274,1284],later:[40,41,1005,1017],latest:[1274,1283],layer:[1102,1105,1107,1109,1111,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1255,1256,1257,1265,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1296,1297,1303],layer_norm:1255,layernorm:[1257,1288],layerwis:[1102,1110,1290,1293],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1201,1202,1209],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1230,1231,1232],leaky_relu:[831,1230],learn:[1102,1105,1107,1109,1110,1111,1125,1130,1153,1154,1155,1156,1213,1219,1257,1290,1291,1292,1293,1294,1295,1300,1303],learnabl:[1255,1256,1288,1289],least:43,leav:[15,18,19,40,41,1201,1202,1203,1209,1210],left:[40,41,43,1125,1128,1220,1222,1223,1224,1225,1226,1227,1228,1257],leftmost:[40,41],len:1157,length:[40,41,42,1005,1008,1073,1084,1095],lenton2021ivi:1257,lenton:1257,less:[40,41,43,86,217,401,528,662,861,864,871,873,875,878,1157,1213,1217],less_util_node_str:1157,let:[1300,1303],level:1257,librari:[861,872,1257,1299,1303],lightweight:1257,like:[43,1102,1108,1213,1217,1257,1299,1300,1303],likewis:43,limit:[40,41,42,43,857,858,859,1005,1018,1019,1020],linalg:[29,1126,1127,1128,1129,1130,1131,1132,1133,1257],line:43,linear0:[1257,1299],linear1:1257,linear2:1299,linear:[1005,1038,1057,1125,1230,1231,1232,1233,1238,1246,1257,1274,1275,1276,1277,1278,1279,1280,1281,1299],linear_algebra:[485,486,487,488,489,490,875,876,877,878],linear_resampl:[130,296,442,575,710,1005],linearli:[1005,1038],link:[43,1257],linspac:[130,296,442,575,710,1005,1008],list:[15,18,19,40,41,392,393,395,853,854,856,879,880,886,887,888,931,940,941,950,951,953,954,955,957,960,961,975,1005,1008,1012,1014,1063,1082,1083,1092,1097,1153,1154,1155,1157,1201,1202,1203,1205,1209,1210,1238,1239,1240,1241,1242,1243,1244,1245,1257,1258,1263,1264,1274,1275,1276,1277,1278,1279,1280,1281],list_join:[40,41,42],list_stack:[40,41],liter:[875,878],littl:1300,load:[40,41],loaded_kwarg:1157,loader:1257,local:43,local_set:[1005,1046],locat:[43,1005,1056,1213,1214],log1p:[86,401,528,662,861],log2:[86,401,528,662,861],log:[800,861,870,875,877,1005,1059,1125,1131,1137,1157,1251,1252,1253,1254],logarithm:[861,870,871,875,877,1125,1131,1137,1148],logic:[31,861,872,886,887,888,1135,1136,1257],logical_and:[360,797,1134],logical_not:[86,217,401,528,662,861],logical_or:[360,797,1134],logit:[1251,1254],logspac:[130,296,442,575,710,1005],look:[43,1300,1303],loop:[1153,1154,1155,1156],loss:[1252,1253,1254,1257,1299],loss_fn:[1257,1299],lot:1300,low:[40,41,494,1213,1215,1217],lower:[40,41,43,853,855,1005,1062,1213,1217],lower_depth:[1286,1287],lowest:[15,18,19,40,41,1201,1210,1213,1215],lstm:[1238,1248,1257,1274],lstm_updat:[43,1238],machin:[857,858,859,1125,1130,1213,1219,1257,1300,1303],made:43,mai:[861,872,883,884,1005,1008,1029,1033,1257,1300,1303],main:[853,855,875,876,1005,1048,1257],mainli:1257,maintain:[43,883,884],make:[43,494,931,1157,1257,1300],maml:[1153,1154,1155],maml_step:1153,manag:[931,1157],manhattan:[875,878],mani:[40,41,43,1005,1083,1257],manipulation_funct:[879,880],manner:[15,18,19,40,41,43,1201,1210],manual:[1201,1202,1209,1303],map:[40,41,42,931,940,1005,1056,1157,1201,1206,1207,1210,1274,1285,1299],map_cont:[40,41],map_nest_at_index:1201,map_nest_at_indic:1201,map_sequ:[40,41],mapper:[931,940,941,1157],mark:43,mask:[1238,1249,1250],master:43,match:[40,41,1005,1060],match_kwarg:1005,math:[33,493,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1157,1257],mathbb:[1125,1133],mathbf:[1125,1133],mathemat:[852,875,878],matmul:[43,296,442,575,710,1005,1303],matplotlib:1300,matric:[853,855,875,876,1238,1247],matrix:[40,41,853,855,875,876,877,1005,1007,1019,1061,1125,1126,1127,1128,1129,1130,1131,1133,1238,1247,1274,1284],matrix_norm:[40,41,170,354,485,622,787,1125],matter:1257,max:[40,41,396,857,858,859,1005,1019,1020,1031,1062,1075,1076,1157,1220,1222,1290,1292],max_batch_s:[40,41],max_chunk_s:[931,975,1157],max_depth:[40,41,931,935,938,945,953,957,963,1005,1046,1157,1201,1210],max_dev_dim_step_ratio:931,max_freq:[1005,1038],max_length:[40,41],max_node_dim_step_ratio:1157,max_norm:[40,41,1005,1019,1020],max_split_factor_step_s:[931,1157],max_trust_ratio:[1102,1109,1290,1292],maxim:[1257,1300,1303],maximis:1257,maximum:[40,41,42,710,931,953,957,963,975,1005,1010,1018,1019,1020,1038,1102,1109,1157,1201,1210,1220,1222],mayb:[15,18,19],mdi:1157,mean:[40,41,494,931,960,961,962,963,975,1005,1031,1153,1154,1155,1156,1157,1201,1205,1213,1216,1220,1223,1226,1228,1265,1299,1303],measur:[1238,1249,1274,1285],mech:1257,mechan:[1257,1303],medic:1303,member:43,memori:[931,947,970,975,977,980,1157,1238,1248,1257],mention:43,merg:43,merge_with_upstream:43,meshgrid:[296,442,710,1005],messag:[1301,1302],meta:[35,1154,1155,1156,1257],method:[40,41,42,43,494,1005,1012,1023,1063,1075,1076,1102,1109,1110,1157,1201,1202,1209,1210,1257,1274,1285,1286,1287,1300],might:[1005,1029,1303],min:[40,41,396,857,858,859,875,878,1005,1031,1064,1075,1076,1085,1125,1130,1157,1220,1224],min_bas:[1005,1086],min_denomin:[1005,1085],min_dev_dim_s:931,min_node_dim_s:1157,min_sf_tune_step:[931,1157],min_unit_dev_tune_step:931,min_unit_node_tune_step:1157,mind:1257,mini:[1255,1256,1288,1289],minimum:[40,41,710,931,981,985,1005,1008,1011,1012,1018,1043,1044,1077,1078,1085,1086,1157,1220,1224],miss:[1290,1294],ml_framework:[1005,1008,1125,1130],mod:[1005,1037],mod_depth:[1286,1287],mod_height:[1286,1287],mod_with_top_mod_key_chain:[1286,1287],mode:[40,41,485,488,929,930,931,960,961,962,963,975,1125,1130,1132,1157,1300],model:[1257,1299],modul:[40,41,42,59,1005,1065,1157,1257,1258,1260,1261,1262,1263,1264,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1288,1289,1296,1297,1303],moment:[1102,1104,1105,1109,1290,1291,1292],more:[43,879,880,1005,1087,1157,1257,1300,1303],more_util_node_str:1157,most:[40,41,43,1125,1130,1257,1303],move:[40,41,43,931,976,1157],much:[43,1257,1303],multi:[494,1005,1065,1238,1249,1274,1285],multi_head_attent:1238,multi_index_nest:1201,multi_map:[40,41],multi_nod:1157,multidev:[931,942,943,944,963],multidevcontain:[40,41],multidevic:[931,940],multidevit:[931,934,937,940,941,945],multidevitem:[931,933,936],multidevnest:[931,935,938],multiheadattent:[1257,1274],multinod:[1157,1161],multinodecontain:1157,multinodeit:1157,multinodeitem:1157,multinodenest:1157,multinomi:[176,364,494,631,815,1213],multipl:[40,41,886,887,888,1005,1060,1083,1125,1127,1220,1222,1223,1224,1225,1226,1228,1255,1256,1274,1284,1300],multipli:[40,41,1005,1026,1220,1225],multiprocess:[40,41,42,442,710,931,940,1005,1157],must:[40,41,42,43,853,854,855,856,861,862,863,864,865,866,867,869,871,872,873,875,876,878,879,880,883,884,886,887,888,890,909,915,931,960,961,962,963,975,1005,1008,1021,1023,1025,1033,1062,1064,1076,1087,1137,1142,1145,1157,1213,1218,1290,1294],mutabl:[1201,1203,1210],mutlidevic:[931,940],mutlinod:1157,mw_tm1:[1102,1105,1109],mx_concat:1257,mxn:[853,855,875,876],mxnet:[43,1257,1303],my_func:43,mymodel:1257,name:[43,929,930,1299],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1300],nan:[40,41,43,852,861,862,864,865,866,867,868,871,873,886,887,888,1005,1047,1098],nativ:[15,17,18,19,40,41,43,931,947,949,958,959,970,977,980,981,986,993,994,1157,1257,1258,1263,1264],native_modul:[1263,1264],native_module_class:[1263,1264],nativearrai:[15,18,19,43,485,486,489,853,855,857,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,875,878,879,880,883,884,886,887,888,890,909,915,931,949,975,976,981,985,991,996,997,1005,1006,1007,1008,1010,1011,1012,1013,1014,1016,1018,1019,1020,1021,1022,1024,1025,1026,1027,1030,1031,1032,1033,1035,1036,1037,1038,1040,1041,1045,1047,1048,1049,1056,1057,1058,1059,1061,1062,1063,1064,1067,1068,1069,1072,1073,1074,1075,1076,1081,1083,1084,1087,1089,1090,1092,1093,1094,1095,1097,1098,1099,1100,1101,1157,1201,1203,1210],natur:[861,870,875,877,1125,1131,1137,1148,1303],ncdhw:[1238,1243,1244,1274,1279,1280],nchw:[1238,1241,1242,1245,1274,1277,1278,1281],ncw:[1238,1239,1240,1274,1275,1276],ndarrai:[43,392,393,394,395,396,398,399,494,1005,1093],ndhwc:[1238,1243,1244,1274,1279,1280],nearest:[1005,1074],need:[43,1005,1019,1020,1238,1240,1242,1244,1257,1274,1276,1278,1280,1303],neg:[40,41,861,867,875,878,879,880,886,887,888,1220,1225,1227,1230,1232],negative_slop:1265,neither:1157,nest:[15,16,17,18,19,40,41,42,931,953,957,963,1005,1012,1092,1153,1154,1155,1157,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1286,1287,1290,1291,1292,1293,1294,1295],nested_indices_wher:1201,nested_map:[1157,1201],network:[1238,1247,1257,1258,1260,1274,1286,1287,1303],neural:[1238,1257,1260,1274,1299],never:43,new_node_percent_mem:1157,new_node_util:1157,new_node_utils_kei:1157,new_std:[1255,1256,1288,1289],newli:[43,929,930,1005,1016,1017],newlin:[40,41,42],newshap:[1005,1016,1073],next:[857,858,1157,1286,1287,1290,1291,1292,1293,1294,1295],nhwc:[1238,1241,1242,1245,1274,1277,1278,1281],node:[40,41,1201,1202,1209],node_clon:1157,node_dist:1157,node_dist_arrai:1157,node_dist_it:1157,node_in:1157,node_mapp:1157,node_str:1157,node_to_str:1157,node_util:1157,nodedistit:1157,nodedistitem:1157,nodedistnest:1157,nodemanag:[1157,1168],nodemapp:1157,nodemappermultiproc:1157,noinspect:[43,932,982,983,984,1103,1157],non:[40,41,861,872,875,878,886,887,888,929,930,981,995,1286,1287,1290,1294,1300],none:[40,41,42,43,59,61,64,392,393,395,440,442,443,446,448,455,456,457,458,465,466,467,468,469,470,471,472,473,475,485,487,494,495,853,854,856,857,858,859,875,878,879,880,886,887,888,929,930,931,940,941,947,948,973,974,975,976,981,988,989,990,1005,1008,1012,1028,1029,1034,1039,1040,1041,1046,1048,1050,1051,1052,1053,1054,1058,1059,1065,1067,1068,1069,1072,1075,1076,1077,1078,1083,1084,1085,1086,1095,1096,1101,1102,1105,1107,1109,1110,1111,1117,1118,1122,1125,1128,1130,1153,1154,1155,1156,1157,1201,1202,1205,1209,1210,1213,1214,1215,1216,1217,1220,1222,1223,1224,1225,1226,1227,1228,1238,1240,1242,1244,1247,1248,1249,1250,1255,1256,1263,1264,1265,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297],norm:[40,41,875,878,1005,1019,1020,1125,1128,1256,1257,1289,1290,1292],normal:[1213,1216,1255,1256,1288,1289],normalized_idx:[1255,1256],normalized_shap:[1288,1289],notat:[40,41,1220,1221],note:[43,1125,1130],noth:[40,41,1300],notimplementederror:1157,now:[40,41,43,931,976,1005,1006,1157,1257,1274,1285,1286,1287,1299,1300,1303],np_concat:1257,np_finfo:396,ns_tune_step:1157,num:[442,465,466,1005,1058,1059],num_arrai:[40,41],num_arrays_in_memori:1005,num_arrays_on_dev:931,num_band:[1005,1038],num_channel:[1274,1281],num_chunk:1157,num_chunks_floor:1157,num_class:[1213,1214],num_cpu_cor:931,num_gpu:[123,440,931,1157],num_head:[1238,1249,1274,1285],num_kei:[1238,1249,1250],num_lay:[1274,1283],num_or_size_split:[40,41,442,471,1005,1083],num_output:1157,num_queri:[1238,1249,1250],num_sampl:[442,464,494,495,1005,1057,1118,1119,1213,1214],num_task:[1153,1154,1155,1156],number:[40,41,42,852,857,858,859,861,864,886,887,888,929,930,931,967,968,969,981,992,996,997,1005,1008,1018,1022,1035,1038,1045,1048,1057,1058,1059,1062,1066,1072,1083,1090,1094,1098,1100,1125,1132,1153,1154,1155,1156,1157,1213,1214,1218,1220,1222,1223,1224,1226,1228,1238,1249,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1300,1303],numer:[43,861,864,867,868,869,872,890,909,915,1005,1043,1044,1077,1078,1085,1086,1137,1145,1265],numhead:[1238,1249],numpi:[40,41,43,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,1005,1093,1125,1130,1132,1220,1221,1257,1299,1300,1303],nwc:[1238,1239,1240,1274,1275,1276],obj:[40,41],object:[40,41,42,59,396,857,858,931,981,985,1005,1008,1012,1102,1201,1204,1206,1207,1208,1211,1212,1213,1219,1265,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1286,1287],object_in:[442,446,1005,1012],observ:1157,obvious:43,occupi:[857,858,859,1005,1075,1076],off:[875,876,1005,1008],offer:1257,offset:[875,876,1255,1256],often:1300,old:[40,41],on_init:[1274,1285,1286,1287],onc:[43,931,975,1157,1213,1214,1257],one:[40,41,43,875,878,879,880,931,960,961,962,963,975,981,987,1005,1048,1060,1067,1075,1076,1084,1087,1125,1128,1157,1220,1221,1222,1223,1224,1225,1226,1227,1228,1257,1300,1303],one_hot:[130,442,575,710,1005],onearrai:[1005,1035],ones:[40,41,77,208,392,519,653,853,1005,1048,1067,1069,1257],ones_lik:[130,296,442,575,710,1005],ongo:43,onli:[40,41,43,494,861,872,879,880,931,1125,1130,1157,1201,1202,1203,1209,1290,1291,1292,1293,1294,1295,1299,1300],onlin:[43,1257],onto:[931,960,961,976,1157,1201,1205,1210],oom:[931,1157],open:[1005,1008,1213,1217,1257,1303],opencv:1300,oper:[40,41,1005,1015,1030,1031,1032,1058,1059,1088,1102,1105,1107,1109,1110,1111,1134,1135,1136,1238,1239,1240,1241,1242,1243,1244,1245,1247,1257,1258],operand:[40,41,861,862,864,865,866,871,873,1220,1221],oppos:[1005,1038],optim:[931,1102,1105,1107,1109,1110,1111,1153,1154,1155,1156,1157,1257,1291,1292,1293,1295,1299,1303],optimizer_upd:1102,option:[15,18,19,40,41,42,43,392,393,395,853,854,856,875,878,879,880,886,887,888,929,930,931,940,941,949,953,954,955,956,957,960,961,962,963,970,973,974,975,976,980,981,986,991,995,1004,1005,1007,1008,1010,1011,1012,1019,1020,1021,1026,1028,1029,1038,1039,1040,1041,1045,1047,1048,1055,1057,1058,1059,1060,1063,1065,1067,1068,1069,1072,1075,1076,1079,1081,1083,1084,1085,1086,1087,1095,1097,1098,1101,1102,1105,1107,1108,1109,1110,1111,1113,1118,1122,1125,1128,1130,1153,1154,1155,1156,1157,1201,1202,1203,1205,1209,1210,1213,1214,1220,1222,1223,1224,1225,1226,1227,1228,1230,1231,1235,1238,1246,1247,1249,1250,1251,1252,1253,1254,1255,1256,1263,1264,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1300],ord:[875,878,1125,1132],order:[40,41,42,43,875,878,879,880,883,884,1102,1105,1107,1109,1110,1111,1125,1128,1153,1154,1155,1296,1297],ordered_node_util_kei:1157,org:1303,organ:43,origin:[40,41,42,1005,1069,1073,1101,1125,1128],other:[40,41,43,890,892,893,898,900,901,905,907,908,909,910,911,913,915,916,917,918,919,920,922,923,924,926,927,928,929,930,1005,1007,1008,1048,1102,1106,1213,1217,1257,1299,1300,1303],other_i:[43,890,909,915],otherwis:[15,16,17,18,19,40,41,861,867,868,875,878,886,887,888,931,948,981,988,989,990,1005,1015,1095,1096,1099,1102,1108,1113,1117,1153,1154,1155,1157,1220,1222,1223,1224,1226,1228],our:[43,1257,1303],out:[43,494,853,854,855,856,857,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,878,879,880,883,884,886,887,888,890,909,1005,1008,1137,1141,1238,1246,1248,1257,1274,1282],out_feat_dim:[1238,1249],out_featur:[1238,1246,1247],out_i:[861,867,868],outdat:1303,outer:[1153,1154,1155,1156],outer_batch_fn:[1153,1154,1155],outer_batch_shap:[1238,1247],outer_cost_fn:[1153,1154,1155],outer_v:[1153,1154,1155],outlin:1300,output:[40,41,43,853,854,856,879,880,931,940,941,975,1005,1008,1017,1039,1048,1072,1090,1102,1106,1137,1142,1157,1213,1215,1216,1217,1238,1240,1242,1244,1246,1248,1249,1250,1257,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285],output_ax:[931,975,1157],output_axi:1157,output_channel:[1274,1275,1276,1277,1278,1279,1280,1283,1284],output_queu:1157,output_shap:[1238,1240,1242,1244,1274,1276,1278,1280],outsid:[1005,1018],over:[40,41,875,878,886,887,888,1125,1128,1213,1217,1220,1222,1223,1224,1226,1228,1255,1256,1288,1289],overal:1300,overflow:[1005,1008],overhead:1300,overrid:[1005,1067,1069,1101],overriden:[1290,1294],overwrit:[40,41,931,975,1157],overwrite_at_key_chain:[40,41],own:[1257,1300,1303],packag:[43,1300],pad:[1005,1022,1038,1100,1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281],pad_width:[442,1005,1022,1100],page:1257,pair:[1238,1250],parallel:[931,940,941,1157],parallelis:[931,940,941,1157],param:[40,41,42,442,456,457,931,975,1005,1006,1040,1041,1067,1068,1157,1286,1287,1299],paramet:[15,16,17,18,19,40,41,42,43,875,876,877,890,909,915,929,930,931,940,941,947,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,970,973,974,975,976,977,980,981,985,986,987,991,992,993,994,995,996,997,1004,1005,1007,1008,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1024,1025,1026,1027,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1045,1047,1048,1049,1051,1052,1053,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1068,1069,1072,1073,1074,1075,1076,1077,1078,1079,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1113,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1263,1264,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299],parameter:[1213,1216,1217],pardo:1257,pars:[1005,1023],part:[853,855,1102,1105,1107,1109,1110,1111,1137,1141,1257,1286,1287,1300],partial:[40,41,43,1286,1287],particl:1303,particular:[43,1303],pass:[40,41,42,43,931,940,975,981,986,1005,1017,1102,1116,1153,1154,1155,1157,1263,1264,1286,1287,1290,1294,1296,1297],pattern:[40,41,1005,1030,1031,1032],peopl:43,per:[931,1157,1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281],percent_used_mem_on_dev:931,percent_used_mem_on_nod:1157,percentag:[931,970,1157],perf_count:1157,perform:[40,41,43,886,887,888,931,1005,1010,1011,1026,1030,1031,1032,1051,1052,1053,1057,1058,1059,1102,1105,1107,1109,1110,1111,1118,1119,1153,1154,1155,1156,1157,1201,1206,1207,1220,1222,1223,1224,1225,1226,1227,1228,1230,1235,1238,1246,1248],period:43,permissable_step:1157,permit:43,permut:[494,1005,1089,1095],perpendicular:[1005,1025],person:[43,1257],physci:1303,pickl:[40,41,1157],pickle_filepath:[40,41],pinv:[354,787,1125],pip:1257,pipelin:1299,pkk:1303,pkkm1:1303,pkm1km1:1303,place:[40,41,43,853,854,856,931,976,1005,1035,1039,1051,1052,1053,1157,1290,1291,1292,1293,1294,1295],placehold:[43,1201,1210],pleas:[43,494,1125,1130],point:[43,852,853,854,856,857,858,861,862,864,865,866,871,873,875,878,981,996,1005,1008,1137,1145],popul:[40,41,1213,1214],popular:1303,population_s:[494,495,1213,1214],portabl:[1257,1258],posit:[15,16,17,857,858,861,867,886,887,888,931,953,957,963,1005,1006,1008,1035,1038,1157,1213,1218,1263,1264],possibi:[40,41],possibl:[43,1005,1060,1092,1118,1123,1303],post:[1255,1256],post_shap:[40,41],power:[43,890,915,921,1005,1043,1077,1086,1265],practic:1257,pre:[931,1157,1257],pre_shap:[40,41],precis:[857,858,861,873],pred:[1251,1252,1253,1254],predict:[1251,1252,1253,1254,1303],preprint:1257,present:[40,41],preserv:[40,41,42,879,880,1102,1113],preserve_typ:[40,41,476,479,1102,1113],press:1257,prevent:[43,1102,1104,1105,1109,1157,1290,1291,1292],prevet:43,previou:[1102,1105,1109],previous:[1005,1017],prime:1257,print:[40,41,42,931,971,1005,1070,1257,1299],print_all_arrays_in_memori:1005,print_all_arrays_on_dev:931,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1290,1294],prob:[494,495,1213,1214,1238,1246,1274,1282],probabl:[1213,1214,1238,1246,1274,1282],problem:[43,1303],process:[43,931,940,941,970,980,1005,1065,1157],process_specif:[931,970,980,1157],prod:[40,41,1005,1031],produc:[931,940,941,1157],product:[40,41,1005,1025,1026,1061,1220,1221,1238,1249,1250,1274,1285],profil:[123,290,440,568,702,931,1157],progress:43,project:[1257,1299,1300,1303],promot:[43,861,862,863,865,866,871,873,875,878,890,915,1137,1145],prompt:1257,properli:43,properti:[40,41,396,931,943,1157,1286,1287,1290,1291,1292,1293,1295],provid:[40,41,43,879,880,886,887,888,929,930,931,948,981,988,989,990,995,1004,1005,1029,1067,1069,1076,1101,1102,1105,1107,1109,1110,1111,1117,1157,1257,1274,1283,1290,1291,1292,1293,1294,1295,1300],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1125,1129],pull:[1257,1258],pure:[40,41,1257,1303],purpos:[43,1303],put:1157,pybroadexcept:1157,pyprotectedmemb:1157,pyshadowingbuiltin:43,pyshadowingnam:[932,982,983,984,1103,1157],python:[40,41,931,970,980,1005,1008,1157,1257],pytorch:[1102,1105,1107,1109,1110,1111,1125,1130,1257,1290,1291,1292,1293,1294,1295,1299,1300,1303],pyunresolvedrefer:1157,quadrant:[1137,1142],qualiti:43,queri:[40,41,890,904,925,931,964,974,1157,1238,1249,1250,1274,1285],query_dim:[1274,1285],query_kei:[40,41],queue:[40,41,42,931,940,941,1005,1071,1079,1157],queue_class:[931,940,941,1157],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1005,1157],quick:[494,1257],quickli:[43,1299],radian:[861,865,1137,1138,1140,1142,1149,1151],rai:[1137,1138],rais:[40,41,43,886,887,888,890,915,1005,1015,1043,1077,1084,1086,1096,1157,1286,1287,1290,1294],ram:[931,970,977,980,1157],randint:[176,364,494,631,815,1213],random:[37,40,41,495,1214,1215,1216,1217,1218,1219,1257],random_crop:1118,random_norm:[176,364,494,631,815,1213],random_uniform:[176,364,494,631,815,1213],randomli:[494,1118,1122,1238,1246,1274,1282],rang:[494,1005,1008,1058,1059,1137,1142,1157,1257,1299,1303],rank:[875,878,886,887,888,1005,1022,1097,1100],rate:[1102,1105,1107,1109,1110,1111,1153,1154,1155,1156,1274,1285,1290,1291,1292,1293,1294,1295],rather:[40,41,43,931,975,1005,1008,1055,1102,1108,1157],ratio:[931,1102,1109,1118,1123,1157,1290,1292],raw:[40,41,1125,1130],raw_delta:1157,reach:[43,931,953,957,963,1157,1201,1210],read:[40,41],readi:[1157,1299],real:[1137,1138,1141],realiti:1300,rearrang:[40,41,1005,1030,1032],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1153,1155],receiv:[43,931,940,941,1005,1009,1060,1157,1274,1284],receivess:[931,1157],receivng:[1153,1156],recev:[1153,1154,1155],recognit:1303,recommend:[861,872,1257],rectifi:[1230,1232,1233],recurr:[1238,1248],recurrent_bia:[1238,1248],recurrent_kernel:[1238,1248],recurs:[40,41,1201,1202,1203,1209,1210],redefin:43,reduc:[40,41,886,887,888,931,975,1005,1031,1125,1130,1157,1220,1222,1223,1224,1225,1226,1227,1228],reduce_max:[40,41,183,369,496,636,822,1220],reduce_mean:[40,41,183,369,496,636,822,1220,1257,1299],reduce_min:[40,41,183,369,496,636,822,1220],reduce_prod:[40,41,183,369,496,636,822,1220],reduce_std:[40,41,369,1220],reduce_sum:[40,41,183,369,496,636,822,1157,1220],reduce_var:[40,41,183,369,496,636,822,1220],reduct:[39,40,41,442,469,470,886,887,888,1005,1031,1075,1076,1221,1222,1223,1224,1225,1226,1227,1228,1257],refactor:43,refer:[43,861,870,886,887,888,1102,1104,1105,1125,1133,1274,1284,1303],reflect:43,reflected_oper:[0,13,14],regard:[931,1157],regardless:[40,41,929,930],register_paramet:1299,reimplement:1303,rel:[875,876,879,880,883,884,1102,1105,1107,1109,1110,1111],rel_slice_obj:1157,relat:43,relev:[1290,1291,1292,1293,1294,1295],relu:[831,1230,1231,1232,1257,1299],remain:[43,1005,1073,1201,1205],remaind:[40,41,1005,1037,1083],remov:[40,41,43,875,876,1005,1084,1153,1154,1155],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,879,880],rep:[1005,1090],repeat:[40,41,43,296,710,1005,1032,1090,1157,1300],repeated_config_check:[931,1157],repeatedli:[1201,1208],repetit:[40,41,1005,1072,1090],replac:[40,41,43,494,495,1005,1018,1075,1076,1213,1214],repo:[43,1257],repositori:43,repres:[43,861,862,866,981,987,992,1238,1247],represent:[40,41,42,43,852,857,858,859,861,863,931,958,959,981,987,993,994,1005,1082,1092,1157],reptil:[1153,1156],reptile_step:1153,request:[1257,1258],requir:[43,861,873,929,930,981,985,1005,1008,1012,1263,1264],resampl:[1005,1057],reserv:43,reshap:[40,41,43,494,710,1005],reshape_lik:[40,41],respect:[861,863,869,890,909,1005,1033,1102,1104,1105,1106,1107,1109,1110,1111,1125,1130,1137,1145,1153,1154,1155,1156],respond:43,respons:[43,1157],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,878,886,887,888,890,909,915,931,940,1005,1008,1033,1075,1076,1087,1125,1128,1134,1135,1136,1137,1145,1157,1220,1222,1223,1224,1225,1226,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1257],ret:1157,ret_dict:1157,ret_fn:[931,940,941,1157],retain:[1102,1106],retain_grad:[476,477,1102,1106],retreiv:1157,retrn:[1005,1082],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1153,1154,1155,1156],return_sequ:[1274,1283],return_st:[1274,1283],rev:[1005,1029],revers:[40,41,879,880,1005,1029,1095],review:43,right:[40,41,43],rk_e:1303,robot:1257,ronald:1257,root:[43,861,873],round:[296,442,710,861,864,873,1005,1008,1157],row:[1005,1048,1213,1214],rule:[43,890,915,1005,1008,1137,1145],run:[43,931,940,1102,1104,1105,1109,1153,1154,1155,1156,1157,1257,1258,1274,1285,1286,1287],safe:[931,940,1157],safety_factor:[931,1157],same:[15,16,17,40,41,43,853,855,861,864,875,876,879,880,883,884,931,940,941,975,976,981,985,1005,1006,1021,1036,1037,1040,1041,1067,1069,1074,1075,1076,1087,1101,1102,1108,1113,1125,1132,1137,1141,1153,1154,1155,1157,1220,1221,1238,1239,1240,1241,1242,1243,1244,1245,1257,1274,1275,1276,1277,1278,1279,1280,1281,1299,1303],same_arrai:[40,41],sampl:[1005,1057,1118,1119,1213,1214,1216,1217,1238,1246,1257,1274,1282],satisfi:[1005,1012,1125,1127,1133],save:[40,41,1005,1080,1091,1118,1120,1286,1287],save_dir:[440,441,931,946,1157],save_weight:[1286,1287],scalar:[875,878,1005,1018,1067,1094,1098],scale:[931,973,974,1102,1110,1157,1238,1246,1249,1250,1255,1256,1274,1282,1285,1290,1293],scaled_dot_product_attent:1238,scatter:[1005,1067,1075,1076],scatter_flat:[130,296,442,575,710,1005],scatter_nd:[130,296,442,575,710,1005],scene:[1102,1105,1107,1109,1110,1111],schemat:1257,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,861,863,869,875,876,931,962,1005,1013,1025,1033,1071,1079,1089,1102,1104,1105,1109,1153,1155,1157,1290,1291,1292],secondli:1303,sector:[861,862],see:[43,59,396,440,441,494,861,863,869,875,878,886,887,888,890,909,915,931,943,944,945,946,981,1005,1008,1058,1059,1102,1137,1145,1257,1265,1267,1268,1270,1271,1273],seed:[40,41,176,494,815,1213],seed_valu:[40,41,494,1213,1218],seem:1257,seen_set:[1005,1046],select:[1005,1012,1084,1300,1303],self:[40,41,43,59,396,440,441,890,909,915,931,943,944,945,946,981,1102,1157,1257,1265,1267,1268,1270,1271,1273,1290,1294,1299,1303],self_i:[890,909],sent:1157,seper:[43,1005,1038],seq:[40,41,42,1220,1221,1286,1287],sequenc:[15,16,17,40,41,42,43,494,929,930,931,940,941,950,951,952,953,954,955,956,957,960,961,975,981,985,1005,1008,1012,1014,1016,1021,1022,1048,1060,1063,1068,1072,1073,1076,1083,1087,1090,1095,1100,1102,1106,1118,1122,1123,1125,1128,1157,1201,1212,1213,1215,1217,1220,1222,1223,1224,1225,1226,1227,1228,1238,1239,1240,1241,1242,1243,1244,1245,1255,1256,1263,1264,1274,1275,1276,1277,1278,1279,1280,1281,1283,1286,1287,1288,1289,1290,1294,1296,1297],sequenti:1257,seri:43,set:[15,18,19,40,41,883,884,931,960,961,973,974,975,1005,1007,1028,1048,1077,1078,1079,1080,1102,1105,1107,1108,1109,1110,1111,1125,1128,1157,1201,1202,1209,1211,1212,1213,1214,1218,1220,1222,1223,1224,1225,1226,1227,1228,1257,1274,1283,1290,1291,1292,1293,1294,1295,1300,1303],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:931,set_default_dtyp:981,set_default_float_dtyp:981,set_default_int_dtyp:981,set_default_nod:1157,set_exception_debug_mod:44,set_framework:[40,41,43,59,1157,1257,1299,1300,1303],set_ivy_backend:[40,41],set_min_bas:1005,set_min_denomin:1005,set_nest_at_index:1201,set_nest_at_indic:1201,set_queue_timeout:1005,set_split_factor:[931,1157],set_stat:[1290,1291,1292,1293,1294,1295],set_tmp_dir:1005,set_with_grad:1102,setter:1157,sever:1303,sgd:[1257,1290],shape0:1157,shape:[40,41,43,392,393,395,442,455,470,494,710,853,854,855,856,875,876,879,880,883,884,931,943,981,985,1005,1006,1016,1021,1022,1035,1036,1037,1039,1041,1045,1048,1067,1068,1069,1072,1073,1074,1075,1076,1082,1084,1087,1100,1101,1118,1122,1125,1127,1130,1137,1141,1142,1157,1213,1215,1216,1217,1220,1221,1238,1240,1242,1244,1274,1276,1277,1278,1279,1280,1281,1288,1289],shape_slic:[40,41],shape_to_tupl:1005,share:[40,41,1257,1300],shift:1157,should:[40,41,42,43,494,853,855,861,862,863,864,865,866,867,868,869,871,872,873,875,876,878,890,909,915,929,930,931,1005,1016,1017,1023,1067,1073,1102,1105,1107,1109,1110,1111,1137,1145,1157,1220,1221,1257],show:[40,41,1257,1303],show_mod_in_top_mod:[1286,1287],show_structur:[1286,1287],show_sub_contain:[40,41],show_v:[1286,1287],show_v_in_top_v:[1286,1287],shown:[40,41],shp:1157,shuffl:[40,41,176,494,815,1213],shuffle_h5_fil:[40,41],side:43,sigmoid:[831,1230,1257,1299],sign:[875,877,1125,1131],signatur:[43,59,396,440,441,442,476,481,485,491,492,494,931,943,944,945,946,981,1102,1265,1267,1268,1270,1271,1273],signific:1303,similar:[43,1238,1249,1274,1285],similarli:[1125,1130],simpl:[43,1005,1034,1257,1300,1303],simpler:43,simplest:1300,simpli:[40,41,43,1257,1300,1303],simultan:1257,sin:[800,1005,1038,1137,1151,1300],sinco:1300,sine:[861,862,1137,1140,1149,1150],singl:[40,41,929,930,931,940,941,960,961,962,963,1005,1084,1094,1098,1118,1123,1157,1213,1216,1217,1220,1222,1223,1224,1225,1226,1227,1228,1257,1300,1303],singleton:[875,878,886,887,888],singular:[1125,1132],sinh:[800,1137],siren:[1257,1265],situat:43,size:[40,41,42,442,469,875,876,886,887,888,931,954,955,956,957,973,974,975,1005,1008,1016,1058,1059,1075,1083,1118,1122,1125,1128,1132,1157,1213,1214,1216,1217,1220,1222,1223,1224,1225,1226,1227,1228,1274,1275,1276],size_ordered_arrai:[40,41],skew:[1125,1133],skinv:1303,skip:[40,41],slice:[40,41,1005,1040,1041,1157,1201,1208],slice_kei:[40,41],slice_obj:[40,41,1157],slice_via_kei:[40,41],slide:[1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281],slodget:[875,1125],slogdet:[226,415,485,542,622,676,787,875,877,1125,1131],slope:[1230,1232],small:[1251,1252,1253,1254,1255,1256,1257,1288,1289,1300],smaller:[1005,1018],smallest:[40,41,857,858,859,861,864,1005,1011],smallest_norm:[396,857,858],softmax:[192,505,831,1230,1238,1249,1250],softplu:[831,1230],solut:43,solv:1303,some:[40,41,43,1005,1008,1102,1104,1105,1107,1109,1110,1111,1116,1238,1246,1257,1274,1282,1300,1303],some_backend:43,some_namespac:43,someth:[43,1303],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,884,1125,1132,1157],sort_by_kei:[40,41],sorting_funct:[883,884],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,492,493,494,495,853,854,855,856,857,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,883,884,886,887,888,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,933,934,935,936,937,938,940,941,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1260,1261,1262,1263,1264,1265,1267,1268,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1301,1302,1303],space:[1005,1008,1038,1058,1059],spars:[1251,1254],sparse_cross_entropi:1251,spawn:[1005,1065],special:[43,861,862,864,865,866,871,873],specif:[40,41,43,861,872,931,973,1005,1023,1030,1031,1032,1065,1153,1154,1155,1156,1157,1213,1219,1257,1286,1287,1299,1300],specifc:[1213,1214],specifi:[40,41,43,853,854,855,856,875,876,878,879,880,883,884,886,887,888,931,950,951,952,953,954,955,956,957,960,961,965,967,971,974,975,976,981,985,987,1005,1008,1010,1011,1012,1018,1021,1022,1039,1040,1041,1047,1058,1059,1087,1097,1100,1125,1128,1157,1201,1206,1207,1211,1212,1220,1221,1222,1223,1224,1225,1226,1227,1228],sphinx:43,split:[40,41,130,296,442,575,710,931,940,954,955,956,957,973,974,975,1005,1060,1157],split_arg:1157,split_factor:[931,940,1157],split_func_cal:[931,1157],split_siz:1157,spread:[931,963,1157],sqrt:[86,217,401,528,662,861,875,878],squar:[861,873,875,877,1005,1048,1125,1127,1131],squeez:[130,296,442,575,710,1005],stabil:[883,884,1005,1085,1086],stabl:[883,884,1005,1043,1044,1077,1078,1085,1086],stable_divid:1005,stable_pow:1005,stack:[40,41,296,710,853,855,875,876,1005,1118,1123,1201,1202,1209,1274,1283],stack_imag:[166,350,481,618,783,1118],stacked_dim_s:1157,stage:43,standard:[40,41,857,858,1213,1216,1220,1226,1255,1256,1257,1258,1288,1289],start:[40,41,43,440,441,442,443,465,466,494,931,946,1005,1008,1058,1059,1157,1257,1300],starting_index:[40,41],starting_split_factor:[931,1157],state:[1157,1238,1248,1257,1260,1261,1262,1263,1264,1265,1267,1268,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299],statement:1300,static_argnam:[442,448,929,930],static_argnum:[442,448,929,930],std:[494,1213,1216],step:[40,41,442,443,931,1005,1008,1058,1059,1102,1104,1105,1107,1109,1110,1111,1153,1154,1155,1156,1157,1257,1290,1291,1292,1293,1294,1295,1299,1303],stephen:1257,stick:1257,still:[40,41,43],stochast:[1290,1295],stop:[40,41,440,441,442,443,465,466,931,946,975,1005,1008,1058,1059,1102,1105,1107,1109,1110,1111,1113,1153,1154,1155,1156,1157,1290,1291,1292,1293,1294,1295],stop_gradi:[40,41,345,476,613,777,931,975,1102,1105,1107,1109,1110,1111,1153,1154,1155,1156,1157,1290,1291,1292,1293,1294,1295],stopiter:1157,store:[40,41,1005,1038,1083,1102,1116,1286,1287],store_var:[1286,1287],str:[15,16,17,40,41,42,43,392,393,395,396,398,399,857,858,859,929,930,931,940,941,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,975,981,986,987,992,993,994,995,996,997,1004,1005,1012,1028,1030,1031,1032,1063,1065,1068,1075,1076,1125,1128,1130,1153,1154,1155,1156,1157,1201,1205,1220,1221,1263,1264,1274,1285,1286,1287],str_to_nod:1157,straight:1300,strength:[1257,1303],stride:[1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281],string:[40,41,43,931,947,949,958,959,964,970,976,977,980,981,985,991,993,994,995,1004,1005,1008,1012,1028,1048,1068,1069,1101,1157,1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281,1286,1287],structur:[40,41,42,43,1005,1023],structural_diff:[40,41],style:43,sub:[40,41,43,875,876,931,954,955,960,961,962,963,1005,1083,1153,1154,1155,1156,1157],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1157,sub_mod:[1286,1287],sub_modul:[1296,1297],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1257,1258,1288,1289,1296,1297],subsequ:43,subset:43,substr:[40,41],suffici:[1125,1130],suggest:1257,suitabl:[1118,1123],sum:[40,41,442,469,470,875,878,931,960,961,962,963,975,1005,1027,1031,1075,1076,1157,1220,1221,1227],summat:[40,41,1220,1221],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,419,421,425,428,429,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,483,484,486,487,488,489,490,493,495,497,498,499,500,501,502,503,506,507,509,510,511,512,513,514,515,520,521,522,524,525,526,529,530,531,532,533,534,535,536,537,538,539,540,543,544,545,546,548,552,555,556,564,569,570,571,572,573,574,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,614,615,616,617,619,620,621,623,624,625,626,627,628,632,633,634,635,637,638,639,640,641,642,643,647,648,649,654,655,656,658,659,660,663,664,665,666,667,668,669,670,671,672,673,674,677,678,679,680,682,686,689,690,698,703,704,705,706,707,708,709,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,778,779,780,781,782,784,785,786,788,789,790,791,792,793,794,795,796,798,799,801,802,803,804,805,806,807,808,809,810,811,812,813,814,816,817,818,819,820,821,823,824,825,826,827,828,829,832,833,834,835,836,837,838,840,841,843,844,845,846,847,848,849,854,855,856,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,875,876,877,878,880,884,887,888,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1156,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1252,1253,1254,1256,1257,1261,1262,1264,1266,1267,1268,1269,1270,1271,1272,1273,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1302,1303],supports_inplac:1005,suppos:1303,sure:43,svd:[354,622,787,1125],swap:[40,41,1005,1089],swapax:[40,41,575,710,1005,1303],symmetr:[1125,1133],syntax:[440,442,476,481,485,491,492,494],tab:1257,take:[43,1005,1057],taken:[43,875,876,1220,1222,1223,1224,1226,1228],tan:[800,1137,1141],tangent:[1137,1141,1142,1143,1151,1152,1230,1237],tanh:[800,831,1137,1230],target:[40,41,931,947,950,951,952,953,954,955,956,957,960,961,962,963,976,1157,1257],target_dict:[40,41],task:[43,1153,1154,1155,1156],team:[43,1303],templat:1257,temporari:[1005,1080,1091],tensor:[40,41,43,442,469,470,931,949,981,991,1005,1008,1010,1011,1016,1058,1059,1062,1064,1067,1068,1069,1073,1075,1076,1083,1101,1157,1213,1214,1215,1238,1246,1248,1257,1274,1282,1284,1290,1291,1292,1293,1294,1295,1299,1300],tensorflow:[43,1125,1130,1238,1240,1242,1244,1257,1274,1276,1278,1280,1300,1303],term:[40,41,43,1238,1248,1257,1274,1284],termcolor:[40,41,42],termin:[40,41,42,1157],test:[43,861,867,868,886,887,888,981,996,997],test_array_api:43,tf_concat:1257,than:[40,41,43,857,858,861,864,871,873,875,878,879,880,931,975,1005,1008,1018,1036,1055,1062,1084,1087,1102,1108,1157,1213,1217,1257,1300],thei:[40,41,43,1137,1142,1153,1154,1155,1213,1214,1257,1296,1297,1300],them:[1257,1303],themselv:[1201,1202],therefor:43,thi:[40,41,42,43,861,872,875,877,931,953,957,963,970,975,980,1005,1008,1038,1071,1073,1079,1102,1105,1107,1108,1109,1110,1111,1116,1125,1128,1131,1157,1201,1205,1210,1220,1222,1223,1224,1225,1226,1227,1228,1238,1247,1257,1286,1287,1290,1291,1292,1293,1294,1295,1299,1300,1303],thing:[43,1257],those:[40,41,43,1005,1018,1102,1116,1125,1132,1157],though:43,thought:43,threshold:[1005,1062,1064],through:[40,41,43],tick:43,tickbox:43,tile:[296,575,710,1005],time:[43,1005,1090,1102,1105,1109,1153,1154,1155,1156,1157,1213,1214,1238,1248,1274,1285,1286,1287,1303],timeout:[40,41,42,931,940,941,1005,1071,1079,1157],timestep:[1238,1248,1274,1283],titl:[43,1257],tmp_dir:1005,tmp_dr:[1005,1080],to_appli:[40,41],to_clon:[931,1157],to_dev:[40,41,123,290,440,568,702,931],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[931,1157],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1257],to_ivy_modul:[194,839,1257,1263],to_json:[40,41],to_kv_fn:[1238,1249],to_kv_v:[1238,1249],to_list:[40,41,442,710,1005],to_multi_dev:[40,41],to_mut:[1201,1203,1210],to_n:[15,40,41,1257],to_nod:1157,to_numpi:[40,41,442,710,1005,1257,1299],to_out_fn:[1238,1249],to_out_v:[1238,1249],to_q_fn:[1238,1249],to_q_v:[1238,1249],to_raw:[40,41],to_scalar:[442,710,1005],todo:[1157,1257,1258],togeth:[40,41,1296,1297],tool:[1257,1300],top_mod:[1286,1287],topic:1303,torch:[43,929,930,1257,1299,1300,1303],torch_concat:1257,torchfcmodel:1299,total:[40,41,42,931,977,1157],total_mem_on_dev:931,total_mem_on_nod:1157,tpu:[931,978,1157],tpu_is_avail:[440,568,702,931,1157],tpye:[981,992],trace:[40,41,1005,1055],track:[43,931,1157,1201,1210,1286,1287],track_submod_call_ord:[1286,1287],track_submod_ret:[1286,1287],trail:[1288,1289],train:[1102,1104,1105,1109,1257,1258],trainabl:[1102,1108,1257,1258,1263,1264,1286,1287,1296],trainer:1257,tran:1303,transform:[1238,1246,1247],transpos:[40,41,130,296,442,710,931,962,1005,1157,1238,1240,1242,1244,1274,1276,1278,1280],travers:[15,18,19,40,41,1201,1210],treat:[40,41,929,930],tri:[40,41],triangular:[853,855],trigonometr:[1137,1138,1141,1149],tril:[77,208,392,519,653,853],trim_kei:[40,41],trust:[1102,1109,1290,1292],truth:[861,869,890,909,1005,1033,1134,1135,1136],try_else_non:1005,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[931,1157],tune_dev_alloc:931,tune_dev_split:931,tune_node_alloc:1157,tune_node_split:1157,tune_step:[931,1157],tupl:[15,16,17,18,19,40,41,43,392,393,395,485,486,489,853,854,856,875,878,879,880,886,887,888,929,930,1005,1022,1038,1039,1082,1100,1157,1201,1202,1203,1204,1206,1207,1208,1209,1210,1211,1212,1213,1215,1220,1222,1223,1224,1225,1226,1227,1228],tutori:43,two:[40,41,853,855,875,876,877,1005,1008,1013,1025,1061,1089,1125,1128,1131,1132],type:[15,18,40,41,42,43,59,398,399,440,441,853,854,855,856,858,859,861,862,863,864,865,866,867,868,869,871,872,873,875,876,878,879,880,883,884,886,887,888,890,909,915,931,943,944,945,946,958,959,963,975,981,985,986,987,991,992,993,994,995,996,997,1004,1005,1006,1008,1012,1021,1023,1033,1036,1037,1039,1048,1055,1067,1068,1069,1074,1088,1098,1101,1102,1108,1113,1137,1145,1157,1257,1265,1267,1268,1270,1271,1273,1286,1287,1300],types_to_iteratively_nest:[40,41,42],uint8:[1118,1120,1124],uint8_img_to_float_img:1118,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[861,863],underwai:43,unecessari:43,unfairli:43,unif:1157,unifi:[40,41,931,960,961,962,963,975,1157,1257],uniform:[40,41,1213,1214,1216,1217,1265,1267,1268,1271,1272],uniformli:[1213,1215,1217],unify_arrai:1157,unify_it:1157,unify_nest:1157,union:[15,18,19,40,41,43,392,393,395,396,398,399,485,486,489,853,854,855,856,857,858,859,861,862,863,864,865,866,867,868,869,870,871,872,873,875,878,879,880,883,884,886,887,888,890,909,915,929,930,931,949,954,955,956,957,975,976,981,985,986,987,991,992,993,994,995,996,997,1004,1005,1006,1007,1008,1010,1011,1012,1013,1014,1016,1018,1019,1020,1021,1022,1024,1025,1026,1027,1030,1031,1032,1033,1035,1036,1037,1038,1039,1040,1041,1045,1047,1048,1049,1056,1057,1058,1059,1061,1062,1063,1064,1067,1068,1069,1072,1073,1074,1075,1076,1081,1082,1083,1084,1087,1089,1090,1092,1093,1094,1095,1097,1098,1099,1100,1101,1157,1201,1202,1203,1209,1210],uniqu:[931,940,941,1153,1154,1155,1156,1157,1201,1205],unique_kwarg:1157,unit:[43,931,1137,1138,1140,1157,1230,1231,1232,1233],unitari:[1125,1132],unless:[1005,1067,1069,1101],unlik:[931,1157],unnorm:[1213,1214],unpack:[1005,1097],unrol:[1238,1248],unset:1300,unset_debug_mod:44,unset_default_devic:931,unset_default_dtyp:981,unset_default_float_dtyp:981,unset_default_int_dtyp:981,unset_framework:[59,1300],unset_with_grad:1102,unstack:[40,41,130,296,442,575,710,1005],until:43,unus:[929,930],updat:[40,41,442,469,470,931,940,1005,1053,1075,1076,1102,1104,1105,1107,1109,1110,1111,1153,1154,1155,1157,1201,1206,1207,1211,1212,1238,1248,1257,1258,1263,1264,1290,1291,1292,1293,1294,1295,1300,1303],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1213,1217],upper_depth:[1286,1287],upstream:43,usabl:[1257,1303],usag:[931,975,1157],use:[40,41,42,43,494,931,940,941,966,978,1005,1072,1085,1086,1125,1130,1157,1238,1249,1255,1256,1257,1288,1289,1300,1303],used:[40,41,43,494,875,876,931,940,970,973,974,980,981,992,1005,1043,1044,1060,1069,1075,1076,1077,1078,1101,1102,1109,1110,1125,1128,1153,1154,1155,1156,1157,1201,1210,1274,1285,1290,1292,1293,1299,1300],used_dev:[931,940],used_mem_on_dev:931,used_mem_on_nod:1157,used_node_str:1157,used_node_strs_dict:1157,useful:[40,41,931,975,1157,1238,1247,1257,1300],user:[1257,1274,1285,1286,1287,1300,1303],uses:1257,using:[40,41,43,1102,1104,1105,1201,1204,1208,1220,1221,1238,1246,1250,1257,1274,1282,1299,1300,1303],util:[931,964,1157],utility_funct:[886,887,888],v_with_top_v_key_chain:[1286,1287],val:[40,41,442,460,461,462,890,925,1005,1051,1052,1053,1077,1078],valid:[886,887,888,981,986,1005,1085,1086,1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281],valid_dtyp:981,valu:[40,41,442,861,864,869,875,877,878,883,884,890,909,931,943,974,975,1005,1006,1008,1010,1011,1018,1019,1020,1022,1023,1029,1033,1038,1039,1040,1041,1056,1058,1059,1062,1064,1071,1072,1073,1074,1075,1076,1077,1078,1079,1095,1098,1099,1100,1102,1106,1109,1118,1124,1125,1131,1132,1134,1135,1136,1137,1146,1147,1148,1153,1154,1155,1157,1201,1205,1206,1207,1211,1212,1213,1216,1217,1220,1222,1224,1238,1249,1250,1255,1256,1274,1285,1288,1289,1290,1292],value_is_nan:1005,vanilla:[1153,1155],var_shap:1265,variabl:[15,16,17,18,19,40,41,345,476,613,777,1005,1015,1051,1052,1053,1054,1055,1088,1102,1105,1106,1107,1108,1109,1110,1111,1113,1116,1153,1154,1155,1156,1238,1249,1255,1256,1263,1264,1265,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297],variable_data:[476,777,1102],varianc:[40,41,1220,1228,1303],varieti:1300,variou:[43,1257],vector:[40,41,485,490,875,878,1005,1020,1025,1125,1132,1133,1238,1247,1274,1284],vector_norm:[40,41,100,226,415,542,676,875],vector_to_skew_symmetric_matrix:[170,354,485,622,787,1125],verbos:1302,veri:[43,1257],verifi:43,version:43,via:[1201,1202,1209,1300],view:[1118,1123],vision:1257,visual:1300,volum:[1238,1243],vw_tm1:[1102,1105,1109],wai:[1300,1303],wait:[40,41,42,43],want:[43,1257,1300,1303],warn:[59,66,67,68,69,70],warp:[481,482,1118,1119],watch:1299,websit:43,weight:[1102,1104,1105,1107,1109,1110,1111,1238,1247,1248,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1286,1287,1290,1292,1293],weight_initi:[1274,1275,1276,1277,1278,1279,1280,1281,1283,1284],weights_path:[1286,1287],well:[40,41,1005,1047],were:[40,41,1157],what:[43,1257],when:[40,41,42,43,931,1005,1017,1086,1099,1125,1132,1157,1257,1286,1287,1300,1303],where:[40,41,43,296,442,710,861,870,886,887,888,890,915,1005,1008,1016,1018,1022,1035,1049,1056,1067,1100,1125,1132,1201,1202,1209,1213,1214],wherea:43,wherebi:[1201,1210],whether:[15,18,19,40,41,42,861,868,886,887,888,929,930,931,949,962,966,970,975,978,980,981,991,995,996,997,1004,1005,1007,1013,1014,1026,1029,1034,1038,1045,1047,1050,1054,1055,1060,1081,1088,1097,1098,1102,1105,1106,1107,1108,1109,1110,1111,1113,1153,1154,1155,1156,1157,1201,1202,1203,1205,1209,1210,1213,1214,1230,1231,1238,1246,1257,1263,1264,1274,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295],which:[40,41,42,43,494,853,854,855,856,857,858,859,875,876,878,879,880,883,884,886,887,888,929,930,931,940,941,949,954,955,956,957,960,961,962,963,965,967,971,973,974,975,981,986,991,995,1004,1005,1008,1012,1021,1023,1025,1026,1027,1029,1039,1040,1041,1042,1048,1049,1057,1058,1059,1066,1067,1068,1069,1070,1072,1075,1076,1083,1087,1097,1099,1101,1102,1105,1106,1107,1109,1110,1111,1113,1115,1116,1118,1120,1125,1128,1137,1142,1157,1201,1205,1206,1207,1211,1212,1213,1214,1215,1216,1217,1220,1222,1223,1224,1225,1226,1227,1228,1230,1235,1238,1249,1250,1257,1263,1264,1274,1275,1276,1277,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1294,1296,1297,1299,1300],whilst:43,whitespac:[40,41,42],who:43,whose:[43,853,855,861,862,865,866,875,876,879,880,890,915,1005,1012,1017,1220,1221,1222,1223,1224,1226,1228],why:[1257,1258],width:[1118,1123],wiki:1303,wikipedia:1303,window:[1118,1123,1238,1239,1240,1241,1242,1243,1244,1245,1274,1275,1276,1277,1278,1279,1280,1281],wise:[40,41,43,861,863,869,872,890,909,915,1005,1018,1033,1036,1037,1062,1064,1074,1102,1105,1107,1109,1111,1134,1135,1136,1137,1138,1140,1141,1142,1145,1146,1147,1148,1149,1151,1230,1231,1232,1233,1234,1235,1236,1237],wish:1300,with_bia:[1274,1284],with_cal:[1005,1029],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1102,1112],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1157,with_partial_v:[1286,1287],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,442,471,1005,1083,1157],with_to_kv_fn:[1274,1285],with_to_out_fn:[1274,1285],with_to_q_fn:[1274,1285],within:[15,18,19,43,1005,1008,1125,1132,1213,1217],without:[40,41,43,1005,1071,1073,1079,1201,1203,1300],wonder:1257,word:[15,16,17,1005,1008,1213,1217,1263,1264],work:[43,1299],worker:[931,940,941,1157],worker_class:[931,940,941,1157],worker_kwarg:1157,would:[43,1230,1235,1257,1300,1303],wrap:[15,40,41,42,43,440,442,476,481,485,491,492,494,1005,1017,1102,1116,1257],wrapper:43,write:[40,41,43,1257,1258,1303],written:[43,1257,1303],ws_new:[1102,1105,1107,1109,1110,1111],x1_i:[861,863,869,1005,1033,1137,1145],x2_i:[861,863,869,1005,1033,1137,1145],x_feat_dim:[1238,1249],x_i:[861,862,864,865,866,867,868,871,872,873],x_in:[1257,1299],x_inv:[1125,1127],x_max:[442,1005,1018],x_min:[442,1005,1018],x_sub:1157,xkk:1303,xkkm1:1303,xkm1km1:1303,xs0:1157,xs_t:1157,year:[1257,1303],yet:[1201,1210,1303],yield:[1005,1099],you:[43,1257,1299,1300,1303],your:[1257,1258,1299,1300,1303],your_awesome_project:1300,yourself:[43,1257],yourslef:43,youtub:43,zero:[40,41,77,208,392,519,653,853,855,861,872,875,878,886,887,888,1005,1022,1067,1069,1075,1076,1100,1101,1102,1104,1105,1109,1110,1238,1246,1257,1265,1274,1275,1276,1277,1278,1279,1280,1281,1282,1284,1290,1291,1292,1293],zero_pad:[296,442,575,710,1005],zeros_lik:[130,296,442,575,710,1005],zip:1157,zk_e:1303},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","qr","slogdet","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","det","inv","matrix_norm","pinv","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","slodget","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","slodget","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1029,"function":[77,81,86,99,103,105,106,107,109,110,208,212,217,225,231,233,234,235,237,238,392,396,401,414,420,422,423,424,426,427,519,523,528,541,547,549,550,551,553,554,653,657,662,675,681,683,684,685,687,688,853,857,861,874,879,881,882,883,885,886],Ones:1270,Using:1300,abs:[297,576,711,1006],aco:[801,1138],acosh:[802,1139],activ:[192,379,505,645,831,1230,1260],adam:1291,adam_step:1104,adam_upd:1105,algebra:[100,170,226,354,415,485,542,622,676,787,875],all:[111,239,428,555,689,887],all_equ:1007,all_nested_indic:1202,ani:[112,240,429,556,690,888],api:[0,43,75,114,206,242,390,431,517,558,651,692,851],arang:[131,298,443,577,712,1008],arg_nam:1009,argmax:[132,444,578,713,1010],argmin:[133,445,579,714,1011],args_to_ivi:16,args_to_n:17,argsort:[108,236,425,552,686,884],arithmet:[1,115,243,432,559,693],arrai:[0,3,43,75,113,114,116,134,206,241,242,244,251,299,390,430,431,433,446,517,557,558,560,580,651,691,692,694,715,851,890,1012],array_equ:[300,716,1013],arrays_equ:1014,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[803,1140],asinh:[87,402,529,663,862],assert_supports_inplac:1015,atan2:[805,1142],atan:[804,1141],atanh:[806,1143],attribut:[5,117,245,434,561,695],backend:[43,73],bilinear_resampl:[167,351,482,619,784,1119],binary_cross_entropi:1252,bitwis:[7,118,246,435,562,696],bitwise_and:[88,218,403,530,664,863],broadcast_to:[301,717,1016],builder:51,builtin:[113,241,251,430,557,691,890],builtin_ab:[252,891],builtin_add:[253,892],builtin_and:[254,893],builtin_bool:[255,894],builtin_contain:[256,895],builtin_deepcopi:[257,896],builtin_dir:[258,897],builtin_eq:[259,898],builtin_float:[260,899],builtin_floordiv:[261,900],builtin_g:[262,901],builtin_getattr:[263,902],builtin_getattribut:[264,903],builtin_getitem:[265,904],builtin_gt:[266,905],builtin_int:[267,906],builtin_invert:[268,907],builtin_l:[269,908],builtin_lt:[270,564,698,909],builtin_mul:[271,910],builtin_n:[272,911],builtin_neg:[273,912],builtin_or:[274,913],builtin_po:[275,914],builtin_pow:[276,915],builtin_radd:[277,916],builtin_rand:[278,917],builtin_rfloordiv:[279,918],builtin_rmul:[280,919],builtin_ror:[281,920],builtin_rpow:[282,921],builtin_rsub:[283,922],builtin_rtruediv:[284,923],builtin_rxor:[285,924],builtin_setitem:[286,925],builtin_sub:[287,926],builtin_truediv:[288,927],builtin_xor:[289,928],cache_fn:1017,cast:[135,302,447,581,718,985],ceil:[89,219,404,531,665,864],choleski:[788,1126],choose_random_framework:61,citat:1257,clear_framework_stack:62,clear_mem_on_dev:[704,947],clip:[303,719,1018],clip_matrix_norm:1019,clip_vector_norm:1020,clone:1172,clone_arrai:1173,clone_it:1174,clone_nest:1175,clonedit:1159,cloneditem:1158,clonednest:1160,closest_valid_dtyp:986,code:1303,comparison:[9,119,247,436,563,697],compil:[304,448,720,929,930],concaten:[136,305,449,582,721,1021],constant:[76,207,391,518,652,852],constant_pad:[306,583,722,1022],contain:[40,41],container_typ:[723,1023],content:1257,contribut:43,conv1d:[198,382,509,843,1239,1275],conv1d_transpos:[199,383,510,844,1240],conv1dtranspos:1276,conv2d:[200,384,511,647,845,1241,1277],conv2d_transpos:[201,385,512,846,1242],conv2dtranspos:1278,conv3d:[202,386,513,648,847,1243,1279],conv3d_transpos:[203,387,514,848,1244],conv3dtranspos:1280,convers:15,convert:[194,839,1263],convert_dtyp:987,copy_arrai:[724,1024],copy_nest:1203,core:[122,250,439,567,701,889],cos:[90,405,532,666,865],cosh:[91,406,533,667,807,866,1144],cprint:1302,creat:43,creation:[77,208,392,519,653,853],cross:[307,725,1025],cross_entropi:1253,cumprod:[137,308,450,726,1026],cumsum:[727,1027],current_framework:63,current_framework_str:[728,1028],data:[81,85,212,216,396,400,523,527,657,661,857,860],debug_mod:45,debugg:44,default_devic:948,default_dtyp:988,default_float_dtyp:989,default_int_dtyp:990,default_nod:1176,depthwise_conv2d:[204,388,515,649,849,1245],depthwiseconv2d:1281,design:43,det:[227,416,486,543,623,677,789],dev:[125,292,570,705,949],dev_clon:950,dev_clone_arrai:951,dev_clone_it:952,dev_clone_nest:953,dev_dist:954,dev_dist_arrai:955,dev_dist_it:956,dev_dist_nest:957,dev_from_str:[126,293,571,706,958],dev_to_str:[127,294,572,707,959],dev_unifi:960,dev_unify_arrai:961,dev_unify_it:962,dev_unify_nest:963,dev_util:964,devclonedit:934,devcloneditem:933,devclonednest:935,devdistit:937,devdistitem:936,devdistnest:938,devic:[20,123,290,440,568,702,931],devmapp:940,devmappermultiproc:941,diagon:[101,228,417,544,678,876],distribute_nest:1177,divid:1145,document:1257,dropout:[1246,1282],dtype:[138,309,451,584,729,981,991],dtype_bit:[139,310,452,585,730,992],dtype_from_str:[140,311,453,586,731,993],dtype_to_str:[141,312,454,587,732,994],ecosystem:52,einops_rearrang:1030,einops_reduc:1031,einops_repeat:1032,einsum:[184,370,497,637,823,1221],elementwis:[86,217,401,528,662,861],equal:[588,733,1033],erf:[493,808,1146],execute_with_gradi:[164,346,477,614,778,1106],exist:1034,exp:[809,1147],expand_dim:[313,734,1035],finfo:[83,214,398,525,659,858],firstlayersiren:1267,flip:[104,232,421,548,682,880],float_img_to_uint8_img:1120,floor:[314,735,1036],floormod:[315,736,1037],fomaml_step:1154,fork:43,fourier_encod:1038,framework:59,full:[142,316,455,589,737,1039],func:72,gather:[143,317,456,590,738,1040],gather_nd:[144,318,457,591,739,1041],geglu:1261,gelu:[380,506,832,1231,1262],gener:[22,130,296,442,575,710,1005],get_all_arrays_in_memori:1042,get_all_arrays_on_dev:965,get_framework:64,get_min_bas:1043,get_min_denomin:1044,get_num_dim:[740,1045],get_referrers_recurs:1046,glorotuniform:1268,gpu_is_avail:[966,1178],gradient:[24,163,345,476,613,777,1102],gradient_descent_upd:1107,gradient_imag:[168,352,483,620,785,1121],gym:53,handler:59,has_nan:1047,ident:[145,319,458,592,741,1048],iinfo:[84,215,399,526,660,859],imag:[26,166,350,481,618,783,1118],index_nest:1204,indices_wher:[146,320,459,742,1049],initi:1265,inplac:[11,120,248,437,565,699],inplace_arrays_support:1050,inplace_decr:[147,321,460,593,743,1051],inplace_incr:[148,322,461,594,744,1052],inplace_upd:[149,323,462,595,745,1053],inplace_variables_support:1054,inv:[790,1127],invalid_dtyp:995,is_arrai:[150,324,463,596,746,1055],is_float_dtyp:996,is_int_dtyp:997,is_vari:[165,347,478,615,779,1108],isfinit:[92,220,407,534,668,867],isinf:[325,597,747,1056],isnan:[93,221,408,535,669,868],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,850,1299,1300,1303],ivymodul:[195,840],jax:74,keep:43,lamb:1292,lamb_upd:1109,lar:1293,lars_upd:1110,layer:[197,381,508,646,842,1238,1274],layer_norm:1256,layernorm:1289,leaky_relu:[833,1232],less:[94,222,409,536,670,869],linalg:[28,1125],linear:[100,170,226,354,415,485,542,622,676,787,875,1247,1284],linear_resampl:[151,326,464,598,748,1057],linspac:[152,327,465,599,749,1058],list:43,log1p:[95,410,537,671,870],log2:[96,411,538,672,871],log:[810,1148],logic:[30,174,360,491,629,797,1134],logical_and:[361,798,1135],logical_not:[97,223,412,539,673,872],logical_or:[362,799,1136],logspac:[153,328,466,600,750,1059],loss:1251,lstm:1283,lstm_updat:1248,maml_step:1155,manipul:[103,231,420,547,681,879],map:1205,map_nest_at_index:1206,map_nest_at_indic:1207,match_kwarg:1060,math:[32,175,363,492,630,800,1137],matmul:[329,601,751,1061],matrix_norm:[171,355,487,624,791,1128],maximum:[752,1062],mech:54,memori:55,meshgrid:[330,753,1063],meta:[34,1153],method:[99,225,414,541,675,874],minimum:[754,1064],model:56,modul:[1286,1287,1299],multi:1157,multi_head_attent:1249,multi_index_nest:1208,multidevcontain:42,multidevit:944,multidevitem:943,multidevnest:945,multiheadattent:1285,multinodeit:1163,multinodeitem:1162,multinodenest:1164,multinomi:[177,365,495,632,816,1214],multiprocess:[755,1065],mxnet:205,nativ:1299,nest:1201,nested_indices_wher:1209,nested_map:1210,network:1299,next:1257,node:[1157,1179],node_dist:1180,node_dist_arrai:1181,node_dist_it:1182,node_str:1183,node_to_str:1184,node_util:1185,nodedistit:1166,nodedistitem:1165,nodedistnest:1167,nodemapp:1169,nodemappermultiproc:1170,norm:[1255,1288],num_arrays_in_memori:1066,num_arrays_on_dev:967,num_cpu_cor:968,num_gpu:[128,969,1186],numpi:389,nutshel:1257,one_hot:[154,467,602,756,1067],ones:[78,209,393,520,654,854,1068],ones_lik:[155,331,468,603,757,1069],oper:[1,3,7,9,11,13,43,115,116,118,119,120,121,243,244,246,247,248,249,432,433,435,436,437,438,559,560,562,563,565,566,693,694,696,697,699,700],optim:[1290,1294],optimizer_upd:1111,overview:1257,percent_used_mem_on_dev:970,percent_used_mem_on_nod:1187,pinv:[356,792,1129],portabl:1303,print_all_arrays_in_memori:1070,print_all_arrays_on_dev:971,profil:[124,291,441,569,703,946,1171],pull:43,queue_timeout:1071,randint:[178,366,633,817,1215],random:[36,176,364,494,631,815,1213],random_crop:1122,random_norm:[179,367,634,818,1216],random_uniform:[180,368,635,819,1217],reduce_max:[185,371,498,638,824,1222],reduce_mean:[186,372,499,639,825,1223],reduce_min:[187,373,500,640,826,1224],reduce_prod:[188,374,501,641,827,1225],reduce_std:[375,1226],reduce_sum:[189,376,502,642,828,1227],reduce_var:[190,377,503,643,829,1228],reduct:[38,183,369,496,636,822,1220],reflect:[13,121,249,438,566,700],relu:[834,1233],repeat:[332,758,1072],reptile_step:1156,request:43,reshap:[759,1073],robot:57,round:[333,760,1074],run:1300,scaled_dot_product_attent:1250,scatter_flat:[156,334,469,604,761,1075],scatter_nd:[157,335,470,605,762,1076],search:[105,233,422,549,683,881],seed:[181,820,1218],sequenti:[1296,1297],set:[106,234,423,550,684,882],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:972,set_default_dtyp:998,set_default_float_dtyp:999,set_default_int_dtyp:1000,set_default_nod:1188,set_exception_debug_mod:48,set_framework:65,set_min_bas:1077,set_min_denomin:1078,set_nest_at_index:1211,set_nest_at_indic:1212,set_queue_timeout:1079,set_split_factor:[973,1189],set_tmp_dir:1080,set_with_grad:1112,sgd:1295,shape:[763,1081],shape_to_tupl:1082,shuffl:[182,821,1219],sigmoid:[835,1234],signatur:[99,225,414,541,675,874],sin:[811,1149],sinh:[812,1150],siren:1271,slodget:[877,1131],slogdet:[229,418,489,545,626,679,794],softmax:[193,507,836,1235],softplu:[837,1236],sort:[107,235,424,551,685,883],sparse_cross_entropi:1254,split:[158,336,471,606,764,1083],split_factor:[974,1190],split_func_cal:[975,1191],sqrt:[98,224,413,540,674,873],squeez:[159,337,472,607,765,1084],stable_divid:1085,stable_pow:1086,stack:[338,766,1087],stack_imag:[169,353,484,621,786,1123],standard:43,statist:[109,237,426,553,687,885],stop_gradi:[348,479,616,780,1113],str_to_nod:1192,submodul:43,supports_inplac:1088,svd:[358,627,795,1132],swapax:[608,767,1089],tan:[813,1151],tanh:[814,838,1152,1237],tensorflow:516,tile:[339,609,768,1090],tmp_dir:1091,to_dev:[129,295,573,708,976],to_ivi:18,to_ivy_modul:[196,841,1264],to_list:[769,1092],to_n:19,to_nod:1193,to_numpi:[770,1093],to_scalar:[771,1094],todo:43,torch:650,total_mem_on_dev:977,total_mem_on_nod:1194,tpu_is_avail:[574,709,978,1195],train:1299,trainabl:1299,transpos:[160,340,473,772,1095],tree:1257,tril:[79,210,394,521,655,855],try_else_non:1096,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,212,216,396,400,523,527,657,661,857,860],uint8_img_to_float_img:1124,unifi:1196,unify_arrai:1197,unify_it:1198,unify_nest:1199,unset_debug_mod:49,unset_default_devic:979,unset_default_dtyp:1001,unset_default_float_dtyp:1002,unset_default_int_dtyp:1003,unset_framework:71,unset_with_grad:1114,unstack:[161,341,474,610,773,1097],updat:43,used_mem_on_dev:980,used_mem_on_nod:1200,util:[110,238,427,554,688,886],valid_dtyp:1004,value_is_nan:1098,variabl:[349,480,617,781,1115],variable_data:[782,1116],vector_norm:[102,230,419,546,680,878],vector_to_skew_symmetric_matrix:[173,359,490,628,796,1133],verbos:1301,vision:58,where:[342,774,1099,1257],why:1303,with_grad:1117,wrapper:72,write:1300,your:43,zero:[80,211,395,522,656,856,1273],zero_pad:[343,611,775,1100],zeros_lik:[162,344,475,612,776,1101]}})
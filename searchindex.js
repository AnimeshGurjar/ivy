Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/det","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/slogdet","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/det","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/slogdet","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/det","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/slogdet","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/det","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/slogdet","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/slodget","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/det.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/slogdet.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/det.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/slogdet.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/det.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/slogdet.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/det.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/slogdet.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/slodget.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[835,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[388,0,0,"-"],creation_functions:[389,0,0,"-"],data_type_functions:[392,0,0,"-"],data_types:[396,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[390,2,1,""],zeros:[391,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[392,1,1,""],finfo:[394,2,1,""],iinfo:[395,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[392,3,1,""],bits:[392,3,1,""],eps:[392,3,1,""],max:[392,3,1,""],min:[392,3,1,""],smallest_normal:[392,3,1,""]},"ivy.functional.backends.numpy.core":{device:[433,0,0,"-"],general:[435,0,0,"-"],gradients:[469,0,0,"-"],image:[474,0,0,"-"],linear_algebra:[478,0,0,"-"],logic:[484,0,0,"-"],math:[485,0,0,"-"],random:[487,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[434,1,1,""],clear_mem_on_dev:[433,2,1,""],dev:[433,2,1,""],dev_from_str:[433,2,1,""],dev_to_str:[433,2,1,""],gpu_is_available:[433,2,1,""],num_gpus:[433,2,1,""],to_dev:[433,2,1,""],tpu_is_available:[433,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[434,3,1,""],start:[434,3,1,""],stop:[434,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[435,2,1,""],arange:[436,2,1,""],argmax:[437,2,1,""],argmin:[438,2,1,""],array:[439,2,1,""],asarray:[435,2,1,""],astype:[435,2,1,""],cast:[440,2,1,""],clip:[435,2,1,""],compile:[441,2,1,""],concatenate:[442,2,1,""],constant_pad:[435,2,1,""],container_types:[435,2,1,""],copy_array:[435,2,1,""],cumprod:[443,2,1,""],current_framework_str:[435,2,1,""],dtype:[444,2,1,""],dtype_bits:[445,2,1,""],dtype_from_str:[446,2,1,""],dtype_to_str:[447,2,1,""],equal:[435,2,1,""],floor:[435,2,1,""],floormod:[435,2,1,""],full:[448,2,1,""],gather:[449,2,1,""],gather_nd:[450,2,1,""],get_num_dims:[435,2,1,""],identity:[451,2,1,""],indices_where:[452,2,1,""],inplace_arrays_supported:[435,2,1,""],inplace_decrement:[453,2,1,""],inplace_increment:[454,2,1,""],inplace_update:[455,2,1,""],inplace_variables_supported:[435,2,1,""],is_array:[456,2,1,""],linear_resample:[457,2,1,""],linspace:[458,2,1,""],logspace:[459,2,1,""],matmul:[435,2,1,""],meshgrid:[435,2,1,""],multiprocessing:[435,2,1,""],one_hot:[460,2,1,""],ones_like:[461,2,1,""],round:[435,2,1,""],scatter_flat:[462,2,1,""],scatter_nd:[463,2,1,""],shape:[435,2,1,""],split:[464,2,1,""],squeeze:[465,2,1,""],to_list:[435,2,1,""],to_numpy:[435,2,1,""],to_scalar:[435,2,1,""],transpose:[466,2,1,""],unstack:[467,2,1,""],where:[435,2,1,""],zero_pad:[435,2,1,""],zeros_like:[468,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[470,2,1,""],is_variable:[471,2,1,""],stop_gradient:[472,2,1,""],variable:[473,2,1,""],variable_data:[469,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[475,2,1,""],gradient_image:[476,2,1,""],stack_images:[477,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{det:[479,2,1,""],matrix_norm:[480,2,1,""],qr:[481,2,1,""],slogdet:[482,2,1,""],vector_to_skew_symmetric_matrix:[483,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[486,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[488,2,1,""],randint:[487,2,1,""],random_normal:[487,2,1,""],random_uniform:[487,2,1,""],seed:[487,2,1,""],shuffle:[487,2,1,""]},"ivy.functional.ivy":{array_api:[836,0,0,"-"],core:[871,0,0,"-"],nn:[1211,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[837,0,0,"-"],creation_functions:[838,0,0,"-"],data_type_functions:[841,0,0,"-"],data_types:[844,0,0,"-"],elementwise_functions:[845,0,0,"-"],function_and_method_signatures:[857,0,0,"-"],linear_algebra:[858,0,0,"-"],manipulation_functions:[861,0,0,"-"],searching_functions:[863,0,0,"-"],set_functions:[864,0,0,"-"],sorting_functions:[865,0,0,"-"],statistical_functions:[867,0,0,"-"],utility_functions:[868,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[837,4,1,""],nan:[837,4,1,""],pi:[837,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[839,2,1,""],zeros:[840,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[842,2,1,""],iinfo:[843,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[846,2,1,""],bitwise_and:[847,2,1,""],ceil:[848,2,1,""],cos:[849,2,1,""],cosh:[850,2,1,""],isfinite:[851,2,1,""],isnan:[852,2,1,""],less:[853,2,1,""],log2:[854,2,1,""],logical_not:[855,2,1,""],sqrt:[856,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[859,2,1,""],vector_norm:[860,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[862,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[866,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[869,2,1,""],any:[870,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[872,0,0,"-"],compilation:[911,0,0,"-"],device:[913,0,0,"-"],dtype:[963,0,0,"-"],general:[987,0,0,"-"],gradients:[1084,0,0,"-"],image:[1100,0,0,"-"],linalg:[1107,0,0,"-"],logic:[1116,0,0,"-"],math:[1119,0,0,"-"],meta:[1135,0,0,"-"],multi_node:[1139,0,0,"-"],nest:[1183,0,0,"-"],random:[1195,0,0,"-"],reductions:[1202,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[873,2,1,""],builtin_add:[874,2,1,""],builtin_and:[875,2,1,""],builtin_bool:[876,2,1,""],builtin_contains:[877,2,1,""],builtin_deepcopy:[878,2,1,""],builtin_dir:[879,2,1,""],builtin_eq:[880,2,1,""],builtin_float:[881,2,1,""],builtin_floordiv:[882,2,1,""],builtin_ge:[883,2,1,""],builtin_getattr:[884,2,1,""],builtin_getattribute:[885,2,1,""],builtin_getitem:[886,2,1,""],builtin_gt:[887,2,1,""],builtin_int:[888,2,1,""],builtin_invert:[889,2,1,""],builtin_le:[890,2,1,""],builtin_lt:[891,2,1,""],builtin_mul:[892,2,1,""],builtin_ne:[893,2,1,""],builtin_neg:[894,2,1,""],builtin_or:[895,2,1,""],builtin_pos:[896,2,1,""],builtin_pow:[897,2,1,""],builtin_radd:[898,2,1,""],builtin_rand:[899,2,1,""],builtin_rfloordiv:[900,2,1,""],builtin_rmul:[901,2,1,""],builtin_ror:[902,2,1,""],builtin_rpow:[903,2,1,""],builtin_rsub:[904,2,1,""],builtin_rtruediv:[905,2,1,""],builtin_rxor:[906,2,1,""],builtin_setitem:[907,2,1,""],builtin_sub:[908,2,1,""],builtin_truediv:[909,2,1,""],builtin_xor:[910,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[912,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[913,1,1,""],DevClonedItem:[915,1,1,""],DevClonedIter:[916,1,1,""],DevClonedNest:[917,1,1,""],DevDistItem:[918,1,1,""],DevDistIter:[919,1,1,""],DevDistNest:[920,1,1,""],DevManager:[913,1,1,""],DevMapper:[922,1,1,""],DevMapperMultiProc:[923,1,1,""],MultiDev:[913,1,1,""],MultiDevItem:[925,1,1,""],MultiDevIter:[926,1,1,""],MultiDevNest:[927,1,1,""],Profiler:[928,1,1,""],clear_mem_on_dev:[929,2,1,""],default_device:[930,2,1,""],dev:[931,2,1,""],dev_clone:[932,2,1,""],dev_clone_array:[933,2,1,""],dev_clone_iter:[934,2,1,""],dev_clone_nest:[935,2,1,""],dev_dist:[936,2,1,""],dev_dist_array:[937,2,1,""],dev_dist_iter:[938,2,1,""],dev_dist_nest:[939,2,1,""],dev_from_str:[940,2,1,""],dev_to_str:[941,2,1,""],dev_unify:[942,2,1,""],dev_unify_array:[943,2,1,""],dev_unify_iter:[944,2,1,""],dev_unify_nest:[945,2,1,""],dev_util:[946,2,1,""],get_all_arrays_on_dev:[947,2,1,""],gpu_is_available:[948,2,1,""],num_arrays_on_dev:[949,2,1,""],num_cpu_cores:[950,2,1,""],num_gpus:[951,2,1,""],percent_used_mem_on_dev:[952,2,1,""],print_all_arrays_on_dev:[953,2,1,""],set_default_device:[954,2,1,""],set_split_factor:[955,2,1,""],split_factor:[956,2,1,""],split_func_call:[957,2,1,""],to_dev:[958,2,1,""],total_mem_on_dev:[959,2,1,""],tpu_is_available:[960,2,1,""],unset_default_device:[961,2,1,""],used_mem_on_dev:[962,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[913,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[913,3,1,""],da_tune_step:[913,3,1,""],dim_size:[913,3,1,""],ds_tune_step:[913,3,1,""],map:[913,3,1,""],repeated_config_check:[913,3,1,""],tune_step:[913,3,1,""],tuned:[913,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[922,3,1,""],map:[922,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[923,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[913,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[925,3,1,""],items:[925,3,1,""],keys:[925,3,1,""],shape:[925,3,1,""],values:[925,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[926,3,1,""],at_dev:[926,3,1,""],at_devs:[926,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[927,3,1,""],at_dev:[927,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[928,3,1,""],start:[928,3,1,""],stop:[928,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[963,1,1,""],DefaultFloatDtype:[963,1,1,""],DefaultIntDtype:[963,1,1,""],astype:[963,2,1,""],cast:[967,2,1,""],closest_valid_dtype:[968,2,1,""],convert_dtype:[969,2,1,""],default_dtype:[970,2,1,""],default_float_dtype:[971,2,1,""],default_int_dtype:[972,2,1,""],dtype:[973,2,1,""],dtype_bits:[974,2,1,""],dtype_from_str:[975,2,1,""],dtype_to_str:[976,2,1,""],invalid_dtype:[977,2,1,""],is_float_dtype:[978,2,1,""],is_int_dtype:[979,2,1,""],set_default_dtype:[980,2,1,""],set_default_float_dtype:[981,2,1,""],set_default_int_dtype:[982,2,1,""],unset_default_dtype:[983,2,1,""],unset_default_float_dtype:[984,2,1,""],unset_default_int_dtype:[985,2,1,""],valid_dtype:[986,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[963,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[963,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[963,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1011,2,1,""],abs:[988,2,1,""],all_equal:[989,2,1,""],arange:[990,2,1,""],arg_names:[991,2,1,""],argmax:[992,2,1,""],argmin:[993,2,1,""],array:[994,2,1,""],array_equal:[995,2,1,""],arrays_equal:[996,2,1,""],asarray:[987,2,1,""],assert_supports_inplace:[997,2,1,""],broadcast_to:[998,2,1,""],cache_fn:[999,2,1,""],clip:[1000,2,1,""],clip_matrix_norm:[1001,2,1,""],clip_vector_norm:[1002,2,1,""],concatenate:[1003,2,1,""],constant_pad:[1004,2,1,""],container_types:[1005,2,1,""],copy_array:[1006,2,1,""],cross:[1007,2,1,""],cumprod:[1008,2,1,""],cumsum:[1009,2,1,""],current_framework_str:[1010,2,1,""],einops_rearrange:[1012,2,1,""],einops_reduce:[1013,2,1,""],einops_repeat:[1014,2,1,""],equal:[1015,2,1,""],exists:[1016,2,1,""],expand_dims:[1017,2,1,""],floor:[1018,2,1,""],floormod:[1019,2,1,""],fourier_encode:[1020,2,1,""],full:[1021,2,1,""],gather:[1022,2,1,""],gather_nd:[1023,2,1,""],get_all_arrays_in_memory:[1024,2,1,""],get_min_base:[1025,2,1,""],get_min_denominator:[1026,2,1,""],get_num_dims:[1027,2,1,""],get_referrers_recursive:[1028,2,1,""],has_nans:[1029,2,1,""],identity:[1030,2,1,""],indices_where:[1031,2,1,""],inplace_arrays_supported:[1032,2,1,""],inplace_decrement:[1033,2,1,""],inplace_increment:[1034,2,1,""],inplace_update:[1035,2,1,""],inplace_variables_supported:[1036,2,1,""],is_array:[1037,2,1,""],isinf:[1038,2,1,""],linear_resample:[1039,2,1,""],linspace:[1040,2,1,""],logspace:[1041,2,1,""],match_kwargs:[1042,2,1,""],matmul:[1043,2,1,""],maximum:[1044,2,1,""],meshgrid:[1045,2,1,""],minimum:[1046,2,1,""],multiprocessing:[1047,2,1,""],num_arrays_in_memory:[1048,2,1,""],one_hot:[1049,2,1,""],ones:[1050,2,1,""],ones_like:[1051,2,1,""],print_all_arrays_in_memory:[1052,2,1,""],queue_timeout:[1053,2,1,""],repeat:[1054,2,1,""],reshape:[1055,2,1,""],round:[1056,2,1,""],scatter_flat:[1057,2,1,""],scatter_nd:[1058,2,1,""],set_min_base:[1059,2,1,""],set_min_denominator:[1060,2,1,""],set_queue_timeout:[1061,2,1,""],set_tmp_dir:[1062,2,1,""],shape:[1063,2,1,""],shape_to_tuple:[1064,2,1,""],split:[1065,2,1,""],squeeze:[1066,2,1,""],stable_divide:[1067,2,1,""],stable_pow:[1068,2,1,""],stack:[1069,2,1,""],supports_inplace:[1070,2,1,""],swapaxes:[1071,2,1,""],tile:[1072,2,1,""],tmp_dir:[1073,2,1,""],to_list:[1074,2,1,""],to_numpy:[1075,2,1,""],to_scalar:[1076,2,1,""],transpose:[1077,2,1,""],try_else_none:[1078,2,1,""],unstack:[1079,2,1,""],value_is_nan:[1080,2,1,""],where:[1081,2,1,""],zero_pad:[1082,2,1,""],zeros_like:[1083,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1084,1,1,""],adam_step:[1086,2,1,""],adam_update:[1087,2,1,""],execute_with_gradients:[1088,2,1,""],gradient_descent_update:[1089,2,1,""],is_variable:[1090,2,1,""],lamb_update:[1091,2,1,""],lars_update:[1092,2,1,""],optimizer_update:[1093,2,1,""],set_with_grads:[1094,2,1,""],stop_gradient:[1095,2,1,""],unset_with_grads:[1096,2,1,""],variable:[1097,2,1,""],variable_data:[1098,2,1,""],with_grads:[1099,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1084,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1101,2,1,""],float_img_to_uint8_img:[1102,2,1,""],gradient_image:[1103,2,1,""],random_crop:[1104,2,1,""],stack_images:[1105,2,1,""],uint8_img_to_float_img:[1106,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1108,2,1,""],inv:[1109,2,1,""],matrix_norm:[1110,2,1,""],pinv:[1111,2,1,""],qr:[1112,2,1,""],slodget:[1113,2,1,""],svd:[1114,2,1,""],vector_to_skew_symmetric_matrix:[1115,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1117,2,1,""],logical_or:[1118,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1120,2,1,""],acosh:[1121,2,1,""],asin:[1122,2,1,""],atan2:[1124,2,1,""],atan:[1123,2,1,""],atanh:[1125,2,1,""],cosh:[1126,2,1,""],divide:[1127,2,1,""],erf:[1128,2,1,""],exp:[1129,2,1,""],log:[1130,2,1,""],sin:[1131,2,1,""],sinh:[1132,2,1,""],tan:[1133,2,1,""],tanh:[1134,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1136,2,1,""],maml_step:[1137,2,1,""],reptile_step:[1138,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1139,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1184,2,1,""],copy_nest:[1185,2,1,""],index_nest:[1186,2,1,""],map:[1187,2,1,""],map_nest_at_index:[1188,2,1,""],map_nest_at_indices:[1189,2,1,""],multi_index_nest:[1190,2,1,""],nested_indices_where:[1191,2,1,""],nested_map:[1192,2,1,""],set_nest_at_index:[1193,2,1,""],set_nest_at_indices:[1194,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1196,2,1,""],randint:[1197,2,1,""],random_normal:[1198,2,1,""],random_uniform:[1199,2,1,""],seed:[1200,2,1,""],shuffle:[1201,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1203,2,1,""],reduce_max:[1204,2,1,""],reduce_mean:[1205,2,1,""],reduce_min:[1206,2,1,""],reduce_prod:[1207,2,1,""],reduce_std:[1208,2,1,""],reduce_sum:[1209,2,1,""],reduce_var:[1210,2,1,""]},"ivy.functional.ivy.nn":{activations:[1212,0,0,"-"],layers:[1220,0,0,"-"],losses:[1233,0,0,"-"],norms:[1237,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1213,2,1,""],leaky_relu:[1214,2,1,""],relu:[1215,2,1,""],sigmoid:[1216,2,1,""],softmax:[1217,2,1,""],softplus:[1218,2,1,""],tanh:[1219,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1221,2,1,""],conv1d_transpose:[1222,2,1,""],conv2d:[1223,2,1,""],conv2d_transpose:[1224,2,1,""],conv3d:[1225,2,1,""],conv3d_transpose:[1226,2,1,""],depthwise_conv2d:[1227,2,1,""],dropout:[1228,2,1,""],linear:[1229,2,1,""],lstm_update:[1230,2,1,""],multi_head_attention:[1231,2,1,""],scaled_dot_product_attention:[1232,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1234,2,1,""],cross_entropy:[1235,2,1,""],sparse_cross_entropy:[1236,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1238,2,1,""]},"ivy.graph_compiler":{compiler:[1239,0,0,"-"],globals:[1242,0,0,"-"],graph:[1245,0,0,"-"],helpers:[1247,0,0,"-"],op_logging:[1248,0,0,"-"],param:[1249,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1240,2,1,""],show_graph:[1241,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1243,2,1,""],log_global_inference_rel_times:[1244,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1245,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1245,3,1,""],add_fn_to_dict:[1245,3,1,""],add_param:[1245,3,1,""],compiled:[1245,3,1,""],connect:[1245,3,1,""],debug_info:[1245,3,1,""],get_param:[1245,3,1,""],get_param_recursive:[1245,3,1,""],include_generators:[1245,3,1,""],increment_param_count:[1245,3,1,""],log_all_ops:[1245,3,1,""],params_all_empty:[1245,3,1,""],save_debug_info:[1245,3,1,""],set_param:[1245,3,1,""],show:[1245,3,1,""],show_debug_info:[1245,3,1,""],update_inference_times:[1245,3,1,""],with_array_caching:[1245,3,1,""]},"ivy.graph_compiler.param":{Param:[1249,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1249,3,1,""],count:[1249,3,1,""],depth:[1249,3,1,""],get:[1249,3,1,""],is_var:[1249,3,1,""],ptype:[1249,3,1,""],set:[1249,3,1,""],set_count:[1249,3,1,""],shape:[1249,3,1,""]},"ivy.stateful":{activations:[1254,0,0,"-"],converters:[1257,0,0,"-"],initializers:[1259,0,0,"-"],layers:[1268,0,0,"-"],module:[1280,0,0,"-"],norms:[1282,0,0,"-"],optimizers:[1284,0,0,"-"],sequential:[1290,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1255,1,1,""],GELU:[1256,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1255,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1256,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1258,2,1,""]},"ivy.stateful.initializers":{Constant:[1259,1,1,""],FirstLayerSiren:[1261,1,1,""],GlorotUniform:[1262,1,1,""],KaimingNormal:[1259,1,1,""],Ones:[1264,1,1,""],Siren:[1265,1,1,""],Uniform:[1259,1,1,""],Zeros:[1267,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1259,3,1,""],create_variables:[1259,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1261,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1262,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1259,3,1,""],create_variables:[1259,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1264,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1265,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1259,3,1,""],create_variables:[1259,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1267,3,1,""]},"ivy.stateful.layers":{Conv1D:[1269,1,1,""],Conv1DTranspose:[1270,1,1,""],Conv2D:[1271,1,1,""],Conv2DTranspose:[1272,1,1,""],Conv3D:[1273,1,1,""],Conv3DTranspose:[1274,1,1,""],DepthwiseConv2D:[1275,1,1,""],Dropout:[1276,1,1,""],LSTM:[1277,1,1,""],Linear:[1278,1,1,""],MultiHeadAttention:[1279,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1269,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1270,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1271,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1272,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1273,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1274,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1275,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1276,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1277,3,1,""],get_initial_state:[1277,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1278,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1279,3,1,""]},"ivy.stateful.module":{Module:[1281,1,1,""]},"ivy.stateful.module.Module":{__init__:[1281,3,1,""],build:[1281,3,1,""],build_mode:[1281,3,1,""],built:[1281,3,1,""],check_submod_rets:[1281,3,1,""],compile_graph:[1281,3,1,""],compile_on_next_step:[1281,3,1,""],get_mod_key:[1281,3,1,""],mod_depth:[1281,3,1,""],mod_height:[1281,3,1,""],mod_with_top_mod_key_chain:[1281,3,1,""],save_weights:[1281,3,1,""],show_graph:[1281,3,1,""],show_mod_in_top_mod:[1281,3,1,""],show_structure:[1281,3,1,""],show_v_in_top_v:[1281,3,1,""],sub_mods:[1281,3,1,""],track_submod_call_order:[1281,3,1,""],track_submod_rets:[1281,3,1,""],v_with_top_v_key_chains:[1281,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1283,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1283,3,1,""]},"ivy.stateful.optimizers":{Adam:[1285,1,1,""],LAMB:[1286,1,1,""],LARS:[1287,1,1,""],Optimizer:[1288,1,1,""],SGD:[1289,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1285,3,1,""],set_state:[1285,3,1,""],state:[1285,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1286,3,1,""],set_state:[1286,3,1,""],state:[1286,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1287,3,1,""],set_state:[1287,3,1,""],state:[1287,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1288,3,1,""],compile_graph:[1288,3,1,""],compile_on_next_step:[1288,3,1,""],set_state:[1288,3,1,""],show_graph:[1288,3,1,""],step:[1288,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1289,3,1,""],set_state:[1289,3,1,""],state:[1289,3,1,""]},"ivy.stateful.sequential":{Sequential:[1291,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1291,3,1,""]},"ivy.verbosity":{cprint:[1296,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1295,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1284,1285,1286],"02886":1251,"100":[1139,1251,1293],"141592653589793":837,"2021":1251,"2102":1251,"360":[845,849,1119,1131,1133],"718281828459045":837,"754":[837,841,842,845,856],"999":[1084,1086,1087,1091,1284,1285,1286],"abstract":[913,928,1251,1284,1288],"boolean":[40,41,845,847,852,855,913,948,960,963,977,986,987,989,995,996,1029,1031,1032,1036,1037,1038,1070,1080,1084,1090,1116,1117,1118,1135,1136,1137,1139],"break":43,"case":[15,18,19,40,41,42,43,845,846,913,952,959,962,987,990,1055,1057,1058,1107,1110,1112,1139,1183,1186,1190,1251,1268,1279,1280,1281,1284,1288,1297],"catch":[987,1011],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,392,433,434,841,843,913,915,916,917,918,919,920,922,923,925,926,927,928,940,941,963,987,991,1042,1084,1098,1139,1183,1185,1192,1233,1235,1236,1245,1249,1251,1254,1255,1256,1257,1258,1259,1261,1262,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1297],"default":[15,18,19,40,41,42,43,838,839,840,858,859,860,861,862,865,866,868,869,870,911,912,913,922,923,930,931,935,936,937,938,939,942,943,944,945,952,955,956,957,962,963,970,971,972,973,987,989,990,992,993,1001,1002,1003,1004,1007,1008,1009,1020,1021,1022,1027,1029,1030,1039,1041,1042,1045,1047,1050,1053,1054,1057,1058,1061,1063,1065,1067,1068,1077,1079,1080,1084,1087,1089,1090,1091,1092,1093,1095,1099,1107,1110,1112,1135,1136,1137,1138,1139,1183,1184,1185,1187,1191,1192,1195,1196,1198,1199,1202,1204,1205,1206,1207,1208,1209,1210,1212,1213,1217,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1257,1258,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291],"final":[40,41,43,987,1020,1040,1041,1139,1268,1279,1294],"float":[40,41,42,43,837,838,839,840,841,842,845,846,856,858,860,872,891,897,913,922,923,946,952,955,959,962,963,971,978,987,990,1001,1002,1004,1020,1021,1025,1026,1041,1059,1060,1061,1067,1068,1084,1086,1087,1089,1091,1092,1093,1100,1102,1106,1119,1127,1135,1136,1137,1138,1139,1195,1198,1199,1212,1214,1220,1228,1231,1232,1233,1234,1235,1236,1237,1238,1268,1276,1279,1282,1283,1284,1285,1286,1287,1288,1289],"function":[15,40,41,43,390,391,394,395,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,837,839,840,842,843,846,847,848,849,850,851,852,853,854,855,856,858,859,860,862,866,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,915,916,917,918,919,920,922,923,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1251,1254,1255,1256,1284,1287,1288,1289,1293,1294,1297],"import":[43,1251,1294,1297],"int":[40,41,42,43,389,390,391,487,838,839,840,841,842,843,858,859,860,861,862,865,866,868,869,870,872,891,897,911,912,913,935,936,937,938,939,942,943,944,945,950,951,957,963,972,974,979,987,992,993,998,1003,1004,1008,1009,1012,1013,1014,1017,1020,1021,1022,1027,1030,1039,1040,1041,1049,1050,1054,1055,1057,1058,1063,1064,1065,1066,1069,1071,1072,1077,1079,1082,1084,1086,1087,1091,1100,1104,1105,1107,1110,1135,1136,1137,1138,1139,1183,1192,1195,1196,1197,1199,1200,1202,1204,1205,1206,1207,1208,1209,1210,1212,1217,1220,1221,1222,1223,1224,1225,1226,1227,1231,1233,1235,1236,1237,1238,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1282,1283],"long":[1220,1230],"new":[40,41,43,487,838,839,840,845,850,854,963,967,987,988,998,1012,1013,1014,1017,1020,1021,1022,1023,1050,1055,1057,1058,1059,1060,1067,1068,1069,1084,1087,1089,1091,1092,1093,1100,1102,1104,1106,1119,1121,1125,1126,1132,1134,1139,1183,1193,1194,1195,1196,1237,1238,1251,1257,1258,1268,1278,1282,1283,1284,1285,1286,1287,1288,1289,1294,1297],"public":[987,1005],"return":[15,16,17,18,19,40,41,42,43,487,838,839,840,841,842,843,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,861,862,865,866,868,869,870,872,891,897,911,912,913,922,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,948,949,951,952,956,957,958,959,960,962,963,967,968,969,970,971,972,973,974,975,976,977,978,979,986,987,988,989,990,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1027,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1054,1055,1056,1057,1058,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1095,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1183,1184,1185,1187,1191,1192,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1251,1257,1258,1268,1277,1278,1284,1288,1293,1294,1297],"short":[1220,1230,1251,1297],"static":[40,41,911,912],"super":1139,"true":[40,41,42,435,441,469,472,478,479,482,487,488,845,851,858,860,865,866,868,869,870,911,912,913,987,989,997,999,1016,1020,1029,1031,1080,1081,1084,1087,1089,1090,1091,1092,1093,1095,1107,1110,1135,1136,1137,1138,1139,1183,1184,1191,1195,1196,1202,1204,1205,1206,1207,1208,1209,1210,1212,1213,1220,1228,1233,1234,1235,1236,1239,1240,1241,1245,1268,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289],"try":[40,41,987,1078,1139],"var":[40,41,1135,1136,1137,1297],"while":[40,41,42,1139],AND:[845,847,868,869,1116,1117],But:1297,For:[43,845,846,987,990,1000,1069,1084,1090,1098,1107,1112,1119,1120,1251,1257,1258,1294,1297],Its:[1119,1123],NOT:[845,855],Not:837,One:[40,41,43,987,1013,1055,1195,1197,1297],Ones:[1251,1259],PRs:43,Such:[987,1005],That:1294,The:[15,16,17,18,19,40,41,42,43,845,846,847,849,851,853,856,858,860,861,862,865,866,868,869,870,872,891,897,911,912,913,922,923,929,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,952,955,956,957,958,959,962,963,967,968,969,974,975,976,977,986,987,990,994,995,998,999,1001,1002,1003,1004,1006,1007,1010,1011,1015,1020,1022,1023,1030,1033,1034,1035,1037,1039,1041,1043,1045,1047,1050,1051,1054,1055,1057,1058,1059,1060,1061,1064,1065,1066,1067,1068,1069,1072,1080,1083,1084,1086,1087,1089,1091,1092,1093,1095,1098,1100,1102,1104,1106,1107,1110,1112,1114,1119,1120,1122,1123,1127,1128,1129,1130,1131,1133,1135,1136,1137,1138,1139,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1198,1199,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1251,1257,1258,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1294,1297],There:[43,1251,1294],These:[43,1251],Use:43,Used:[1183,1184,1191,1280,1281],Using:[1251,1252,1297],With:[40,41,1107,1110,1202,1204,1205,1206,1207,1208,1209,1210,1251,1293,1297],__array__:[987,994],__call__:[1268,1279,1280,1281],__del__:1139,__dict__:[1139,1294],__enter__:1139,__exit__:1139,__getitem__:1139,__getstate__:1139,__init__:[40,41,42,43,59,60,81,210,392,393,433,434,516,646,913,914,921,922,923,924,925,926,927,928,963,964,965,966,1084,1085,1139,1143,1150,1245,1246,1249,1250,1251,1254,1255,1256,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1297],__iter__:1139,__len__:1139,__next__:1139,__pow__:43,__repr__:1139,_assign_vari:1293,_axi:1139,_base:[1183,1184,1191],_compute_node_da_ratio:1139,_compute_node_strs_da:1139,_concat_unify_arrai:1139,_counter:1139,_cur_framework:[43,1139],_da_direct:1139,_da_directions_flip:1139,_da_step_tim:1139,_da_tim:1139,_da_tune_count:1139,_data:1139,_delta_da_dim_s:1139,_delta_sf:1139,_dict:1139,_dim_siz:1139,_first_da_tune_step:1139,_first_ns_tune_step:1139,_fn:1139,_forward:[1251,1293],_get_kalman_param:1297,_get_prior:1297,_get_some_model:1297,_handle_flat_arrays_in_out:43,_index:[1183,1184,1191],_input_queu:1139,_length:1139,_max_depth:1139,_max_node_dim_step_ratio:1139,_max_node_dim_step_s:1139,_max_split_factor_step_s:1139,_mean_unify_arrai:1139,_min_bas:[987,1068,1237,1238,1282,1283],_min_denomin:[987,1067],_min_node_dim_s:1139,_min_sf_tune_step:1139,_min_unit_node_tune_step:1139,_model:1297,_native_wrapp:43,_node_mapp:1139,_node_percent_mem:1139,_node_str:1139,_node_str_da_ratio:1139,_node_strs_da:1139,_node_strs_kei:1139,_node_strs_n:1139,_node_util:1139,_ns_step_tim:1139,_ns_time:1139,_ns_tune_count:1139,_num_nod:1139,_num_work:1139,_observed_config:1139,_output_queu:1139,_paramet:1293,_percent_mem_inc_per_sf:1139,_percent_mem_inc_per_unit_da_dim:1139,_percent_util_inc_per_unit_da_dim:1139,_ret_fn:1139,_safety_factor:1139,_save_dir:1139,_shift_da_split:1139,_shift_n:1139,_slice:1139,_step:[1284,1288],_sum_unify_arrai:1139,_timeout:1139,_tune:1139,_tune_da:1139,_tune_n:1139,_tune_step:1139,_unit_da_tune_count:1139,_unroll_step:1297,_with_node_mappig:1139,_worker:1139,_worker_class:1139,_worker_fn:1139,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,913,922,928,1139,1280,1281,1284,1288],abil:1251,abl:[40,41],about:[841,842,843],abov:[43,1195,1197],above_height:[40,41],abs:[291,435,564,695,858,860,987,1139],absolut:[40,41,987,988,1107,1113],abstractmethod:1139,accept:[15,43,1251],access:[40,41,43,1294],accord:[40,41,841,842,987,1004,1022,1057,1058,1077,1082],accordingli:[858,860,868,869,870],accur:[59,392,433,434,913,925,926,927,928,963,1084,1245,1249,1259,1261,1262,1264,1265,1267],aco:[785,1119],acosh:[785,1119],across:[40,41,913,922,923,932,933,935,936,937,938,939,945,955,956,987,992,993,995,996,1139,1183,1187],activ:[1213,1214,1215,1216,1217,1218,1219,1251,1255,1256],actual:1294,adam:[1084,1086,1087,1091,1251,1284,1286,1293],adam_step:1084,adam_upd:1084,adapt:[1084,1092,1284,1287],add:[40,41,43,1139,1233,1234,1235,1236,1237,1238,1251,1282,1283,1294],add_fn_to_dict:1245,add_param:1245,added:[43,987,1067,1068,1290,1291],adding:[987,998],addit:[40,41,43,987,1012,1013,1014,1237,1238,1268,1278],address:43,adher:43,adjac:[987,990],adopt:[43,987,1005],affect:[987,990],affin:[1282,1283],after:[845,856,987,1039,1084,1087,1088,1089,1091,1092,1093,1100,1101,1237,1238,1284,1285,1286,1287,1288,1289,1297],after_1:[987,1004,1082],after_n:[987,1004,1082],again:43,against:[40,41,1107,1110,1202,1204,1205,1206,1207,1208,1209,1210],agnost:[43,1251,1293,1294],aim:1297,algebra:1107,algorithm:[1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275,1297],align:[40,41,43,987,998],aliv:[913,947,949,953,987,1024,1048,1052],all:[15,16,17,18,19,40,41,43,108,233,420,543,673,858,860,861,862,868,911,912,913,922,947,953,987,988,989,995,996,1005,1024,1030,1052,1066,1107,1112,1135,1136,1137,1138,1139,1183,1184,1185,1191,1192,1195,1196,1199,1202,1204,1205,1206,1207,1208,1209,1210,1220,1230,1251,1294,1297],all_depth:[40,41],all_equ:987,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1183,all_tru:[40,41],alloc:[913,1139],allow:[987,1040,1041,1042,1280,1281],allow_dupl:[987,1042],alon:[913,952,962,1139,1251],along:[40,41,43,487,858,859,860,861,862,865,866,868,869,870,913,936,937,938,939,942,943,944,945,957,987,1003,1008,1009,1022,1039,1040,1041,1054,1065,1069,1072,1079,1107,1110,1135,1136,1137,1138,1139,1195,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210],alongsid:[1293,1294],alpha:[1212,1214],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,913,1139],also:[40,41,43,987,990,1084,1087,1135,1136,1137,1138,1183,1184,1185,1191,1192,1220,1229,1251,1268,1278,1293],altern:1293,alwai:[40,41,43,1084,1090,1095],among:[40,41],amount:[913,959,1139,1251],angl:[1119,1120,1124],ani:[15,16,17,18,19,40,41,43,108,233,420,543,673,868,911,912,913,915,918,922,923,925,934,935,938,939,944,987,989,990,994,1011,1012,1013,1014,1015,1016,1029,1037,1042,1067,1068,1084,1088,1139,1183,1184,1187,1191,1192,1193,1194,1195,1199,1251,1257,1258,1280,1281,1293,1294,1297],anoth:[40,41,43,963,969,1251],another_backend:43,anyth:[43,1297],anywai:43,apart:43,api:[1251,1252],appear:[43,987,1017],append:[40,41,1139],appli:[15,18,19,40,41,845,855,987,1012,1013,1014,1084,1091,1092,1107,1114,1116,1117,1118,1135,1136,1137,1183,1187,1190,1192,1212,1213,1214,1215,1216,1217,1218,1219,1220,1229,1231,1232,1237,1238,1251,1254,1255,1256,1282,1283],applic:[1183,1187,1192,1220,1231,1232,1251,1297],approxim:[43,845,846,854,872,897,1212,1213],arang:[128,291,435,487,564,695,987,1040,1041],arbitrari:[40,41,913,942,943,945,1139],arc:[1119,1124],arcco:[1119,1120],arctan:[1119,1123],area:[845,846,1251],arg:[15,16,17,40,41,43,59,63,913,922,935,939,945,957,987,1012,1013,1014,1058,1139,1239,1240,1241,1245,1257,1258,1280,1281],arg_nam:987,arg_stateful_idx:[1239,1240,1241,1245,1280,1281],argmax:[128,435,564,695,987],argmin:[128,435,564,695,987],args_clon:1139,args_dist:1139,args_to_ivi:[15,1251],args_to_n:[15,1251],args_uni:1139,argsort:[105,230,417,540,670,865],argument:[15,16,17,18,19,40,41,42,43,59,63,911,912,913,922,923,935,939,945,987,990,991,999,1011,1042,1058,1119,1120,1139,1183,1187,1257,1258,1280,1281],aris:[1251,1297],arithmet:[43,1202,1205,1208,1210],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:487,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,128,291,435,478,479,482,487,564,695,838,839,840,841,842,843,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,861,862,865,866,868,869,870,891,897,913,931,932,933,936,937,938,939,942,943,944,945,947,949,953,957,958,963,967,973,978,979,987,988,989,990,992,993,995,996,997,998,1000,1001,1002,1003,1004,1006,1007,1008,1009,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1027,1029,1030,1031,1032,1033,1034,1035,1037,1038,1039,1040,1041,1043,1044,1045,1046,1048,1049,1050,1051,1052,1054,1055,1056,1057,1058,1063,1065,1066,1069,1070,1071,1072,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1086,1087,1090,1091,1095,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1139,1183,1185,1192,1195,1196,1197,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1251,1252,1268,1276,1277,1279,1284,1288,1293,1294],arrang:[987,1012],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,389,390,391,392,394,395,837,838,839,840,841,842,843,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,861,862,865,866,868,869,870],array_api_methods_to_test:43,array_builtin:[43,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910],array_equ:[291,695,987],array_lik:[487,987,994],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,987],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1251],arraywithgener:[22,1251],arraywithgradi:[24,1251],arraywithimag:[26,1251],arraywithlinalg:[28,1251],arraywithlog:[30,1251],arraywithmath:[32,1251],arraywithmeta:[34,1251],arraywithrandom:[36,1251],arraywithreduct:[38,1251],arriv:[40,41,42],articl:1251,arxiv:1251,as_arrai:[40,41,987,1027,1063],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[433,435,444,913,931,963,970,971,972,973],as_tensor:435,as_vari:[40,41],as_zero:[40,41],asarrai:[435,987],asin:[785,1119],asinh:[85,397,520,650,845],aspect:[1100,1105],assert:[40,41,987,997,1139],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:987,associ:[43,1107,1115],assum:[1294,1297],astyp:[435,963],asynchron:[40,41,42],at_dev:[40,42,913,926,927],at_kei:[40,41],at_key_chain:[40,41],at_nod:1139,atan2:[785,1119],atan:[785,1119],atanh:[785,1119],attent:[43,1220,1231,1232,1268,1279],attribut:[0,6,40,41,841,842,843,987,1051,1083],audienc:[1251,1294],author:1251,avail:[40,41,43,913,948,950,951,960,987,1013,1139],averag:[1084,1086,1087,1091,1135,1136,1137,1202,1205],average_across_step:[1135,1136,1137],avoid:[913,1139,1294],axes:[40,41,43,435,466,478,480,858,860,861,862,868,869,870,913,957,987,992,993,1004,1017,1071,1077,1082,1107,1110,1139,1202,1204,1205,1206,1207,1208,1209,1210],axes_length:[40,41,987,1012,1013,1014],axi:[40,41,435,437,438,442,443,449,457,458,459,464,465,467,858,859,860,861,862,865,866,868,869,870,913,915,918,925,936,937,938,939,942,943,944,945,957,987,992,993,1003,1004,1007,1008,1009,1017,1022,1039,1040,1041,1054,1065,1066,1069,1071,1072,1079,1082,1139,1195,1201,1202,1204,1205,1206,1207,1208,1209,1210,1212,1217,1233,1235,1236],axis0:[40,41,987,1071],axis1:[40,41,858,859,987,1071],axis2:[858,859],back:[43,1280,1281,1284,1288],backend:[15,17,19,40,41,389,390,391,392,394,395,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,485,486,487,488,913,948,951,960,963,969,977,986,987,1032,1036,1084,1087,1089,1091,1092,1093,1098,1139,1251,1252,1257,1258,1284,1285,1286,1287,1288,1289,1293,1294,1297],backend_nam:43,background:[1251,1294],backprop:1297,backward:[868,869,870,1293],band:[987,1020],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,392,433,434,435,459,845,854,872,897,913,915,916,917,918,919,920,922,923,925,926,927,928,963,987,1025,1041,1059,1068,1084,1139,1202,1203,1245,1249,1251,1254,1255,1256,1259,1261,1262,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1297],batch:[40,41,858,860,913,955,956,987,1020,1030,1100,1104,1107,1114,1135,1136,1137,1138,1139,1220,1229,1237,1238,1282,1283],batch_shap:[435,451,987,1030,1049,1100,1101,1102,1103,1104,1105,1106,1107,1115,1195,1196,1220,1230,1231,1232,1268,1277],batch_siz:[487,488,1139,1195,1196,1220,1221,1222,1223,1224,1225,1226,1227],bayesian:1297,becaus:[43,987,990],becom:[987,1000,1119,1124,1297],been:[987,1012,1013,1014,1195,1196],befor:[40,41,43,913,957,1135,1136,1137,1139,1183,1192,1202,1204,1205,1206,1207,1208,1209,1210,1220,1231,1232,1297],before_1:[987,1004,1082],before_n:[987,1004,1082],begin:[1183,1184,1191,1294],behaviour:[43,1297],behind:[1084,1087,1089,1091,1092,1093,1251],being:[40,41,43,987,990,1053,1061,1139],belong:[40,41],below:[43,1251,1294,1297],below_depth:[40,41],benefit:1251,bernoul:[1220,1228,1268,1276],best:[43,987,1042,1251],beta1:[1084,1086,1087,1091,1284,1285,1286],beta2:[1084,1086,1087,1091,1284,1285,1286],beta:[1237,1238],between:[40,41,42,841,842,987,990,1107,1112,1183,1187,1195,1197,1233,1235,1236,1284,1286],bia:[1220,1229,1230,1268,1269,1270,1271,1272,1273,1274,1275,1278],bias_initi:[1268,1269,1270,1271,1272,1273,1274,1275,1278],bilinear:[1100,1101],bilinear_resampl:[164,345,474,607,768,1100],bilinearli:[1100,1101],binari:[845,847,1233,1234],binary_cross_entropi:1233,bit:[392,841,842,843,963,974,1100,1102,1106,1251],bitwis:[845,847],bitwise_and:[85,214,397,520,650,845],bitwise_oper:[0,7,8],block:[1251,1294],bool:[15,18,19,40,41,42,43,478,479,482,845,851,853,858,860,865,866,868,869,870,872,891,911,912,913,931,944,948,952,957,960,962,963,973,987,989,995,996,1008,1011,1015,1016,1020,1027,1029,1037,1042,1063,1065,1079,1080,1081,1084,1087,1088,1089,1090,1091,1092,1093,1095,1107,1110,1135,1136,1137,1138,1139,1183,1184,1185,1187,1191,1192,1195,1196,1202,1204,1205,1206,1207,1208,1209,1210,1212,1213,1220,1228,1257,1258,1268,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289],both:[43,987,1007],bottom:1251,boundari:[40,41,1195,1199],branch:[43,911,912],brittl:43,broadcast:[40,41,43,845,847,858,860,868,869,870,872,891,897,987,998,1015,1044,1045,1046,1054,1107,1110,1119,1124,1127,1202,1204,1205,1206,1207,1208,1209,1210],broadcast_to:[291,695,987],build:[1139,1251,1268,1279,1280,1281],build_mod:[1268,1279,1280,1281],builder:1251,built:[913,987,990,1139,1268,1279,1280,1281],builtin:43,builtin_ab:[246,872],builtin_add:[246,872],builtin_and:[246,872],builtin_bool:[246,872],builtin_contain:[246,872],builtin_deepcopi:[246,872],builtin_dir:[246,872],builtin_eq:[246,872],builtin_float:[246,872],builtin_floordiv:[246,872],builtin_g:[246,872],builtin_getattr:[246,872],builtin_getattribut:[246,872],builtin_getitem:[246,872],builtin_gt:[246,872],builtin_int:[246,872],builtin_invert:[246,872],builtin_l:[246,872],builtin_lt:[246,552,682,872],builtin_mul:[246,872],builtin_n:[246,872],builtin_neg:[246,872],builtin_or:[246,872],builtin_po:[246,872],builtin_pow:[43,246,872],builtin_radd:[246,872],builtin_rand:[246,872],builtin_rfloordiv:[246,872],builtin_rmul:[246,872],builtin_ror:[246,872],builtin_rpow:[246,872],builtin_rsub:[246,872],builtin_rtruediv:[246,872],builtin_rxor:[246,872],builtin_setitem:[246,872],builtin_some_op:43,builtin_sub:[246,872],builtin_truediv:[246,872],builtin_xor:[246,872],bypass:1294,cach:[913,929,987,999],cache_fn:987,calcul:[40,41,42,43,845,846,854,856,872,897,1119,1127],call:[43,913,957,987,1053,1061,1078,1084,1088,1139,1183,1184,1187,1191,1268,1279,1280,1281,1284,1288,1294,1297],callabl:[40,41,911,912,913,922,923,957,987,999,1011,1013,1042,1078,1135,1136,1137,1138,1139,1183,1187,1188,1189,1191,1192,1220,1231],can:[43,913,955,956,957,987,1055,1100,1102,1139,1251,1293,1294,1297],cancel_join_thread:1139,cannot:43,captur:1251,cast:[40,41,128,291,435,564,695,963,987,1003,1100,1102,1106],catch_except:[987,1011],categori:43,caus:43,ceil:[85,214,397,520,650,845,987,990],cell:[1220,1230,1268,1277],certain:[40,41,987,990,1040,1041],chain:[40,41,1135,1136,1137,1290,1291],chang:[43,913,987,1055,1139,1183,1185,1192,1251,1293],channel:[987,1020,1100,1102,1103,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278],check:[15,16,17,18,19,40,41,43,913,952,962,963,968,977,986,987,997,1016,1029,1037,1070,1080,1084,1090,1139,1183,1184,1191,1251,1294],check_nest:[1183,1191],check_shap:[40,41],check_submod_ret:[1280,1281],check_typ:[40,41],choic:[1251,1294],choleski:[772,1107],choos:[987,1081,1107,1112,1119,1124,1251],choose_random_framework:59,chosen:[40,41,987,990,1081],chunk:[913,955,956,957,1139],chunk_siz:[913,957,1139],circl:[1119,1120,1122],clark:1251,clear:[913,929,1139],clear_framework_stack:59,clear_mem_on_dev:[433,687,913],click:1251,clip:[40,41,291,435,695,987,1001,1002,1044,1046,1251],clip_matrix_norm:987,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,987],clipped_delta:1139,clone:[40,41,913,932,933,934,935,1139],clone_arrai:1139,clone_it:1139,clone_nest:1139,clonedit:1139,cloneditem:1139,clonednest:1139,close:[43,1100,1105,1119,1122,1139,1297],closest:[963,968],closest_valid_dtyp:963,code:[40,41,42,43,487,1251,1252,1293,1294],codebas:[913,955,956,1139,1251,1294,1297],codomain:[845,846,856],colab:1251,collect:[15,40,41,433,435,469,474,478,484,485,487,872,911,913,963,987,1084,1100,1107,1116,1119,1139,1183,1195,1202,1212,1220,1233,1237,1254,1268,1282,1284],color:[40,41,42,1295,1296],column:[987,1030],combin:[40,41,42,1100,1105,1251,1297],combined_batch_s:1139,come:1294,command:1251,comment:43,commit:1297,common:[40,41,43,1119,1124],common_key_chain:[40,41],commun:[43,1251,1294],compar:[40,41,987,989,995,996],comparison_oper:[0,9,10],compat:[43,845,847,858,860,868,869,870,872,891,897,987,1015,1055,1119,1127,1251,1297],compil:[291,435,695,1240,1241,1245,1251,1280,1281,1284,1285,1286,1287,1288,1289],compile_graph:[1239,1251,1280,1281,1284,1288],compile_on_next_step:[1280,1281,1284,1285,1286,1287,1288,1289],complet:[40,41,1107,1112,1139],complex:[1294,1297],compon:[987,1007],composit:43,comput:[40,41,845,847,849,853,855,858,860,872,891,913,957,987,1001,1002,1008,1009,1015,1043,1084,1086,1087,1088,1089,1091,1092,1093,1095,1097,1100,1103,1107,1108,1109,1110,1111,1112,1113,1116,1117,1118,1119,1120,1122,1123,1124,1128,1129,1130,1131,1133,1183,1187,1202,1203,1204,1205,1206,1207,1208,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1229,1231,1233,1234,1235,1236],concat:[40,41,913,942,943,944,945,957,987,1020,1139],concaten:[40,41,128,291,435,564,695,987,1020,1139,1251],concatten:[40,41,913,942,943,944,945,957,1139],condit:[435,911,912,987,1081,1183,1191],conditon:[1183,1191],config:[40,41,1139],config_list:1139,configur:[40,41],conflict:43,conform:43,conjunct:1294,connect:[1245,1268,1278,1279],consid:[40,41,1107,1112,1293,1297],consist:[40,41,913,945,1139,1202,1203,1280,1281,1294],constant:[913,922,923,987,1004,1139,1183,1187,1233,1234,1235,1236,1237,1238,1259,1260,1264,1267,1280,1281,1282,1283,1294],constant_kwarg:1139,constant_pad:[291,435,564,695,987],constitu:[40,41],construct:[987,1072,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293],constructor:[40,41,42,987,991,1290,1291],consum:[913,1139],cont_feat_dim:[1220,1231],contaienr:[40,41],contain:[15,18,19,42,43,838,839,840,845,846,847,851,853,854,856,858,860,865,866,868,869,870,872,891,897,913,932,936,957,963,967,987,988,992,993,1000,1001,1002,1005,1015,1029,1044,1046,1056,1067,1068,1084,1086,1087,1089,1091,1092,1093,1119,1127,1135,1136,1137,1138,1139,1195,1196,1202,1204,1205,1206,1208,1210,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[435,695,987],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[435,987,1047,1220,1231,1268,1279],context_dim:[1268,1279],contextmanag:[59,60],continu:[43,1139,1294],contract:[40,41,1202,1203],contribut:[1251,1252],contributor:[43,1251],control:1251,conv1d:[195,378,501,827,1220,1251,1268],conv1d_transpos:[195,378,501,827,1220],conv1dtranspos:[1251,1268],conv2d:[195,378,501,635,827,1220,1251,1268],conv2d_transpos:[195,378,501,827,1220],conv2dtranspos:[1251,1268],conv3d:[195,378,501,635,827,1220,1251,1268],conv3d_transpos:[195,378,501,827,1220],conv3dtranspos:[1251,1268],convent:[40,41,1202,1203],conver:[913,929,940,952,959,962,1139],convers:[16,17,18,19,40,41,1139,1251],convert:[15,16,17,18,19,40,41,43,913,940,941,963,969,975,976,987,1064,1075,1076,1100,1102,1106,1107,1115,1139,1183,1185,1192,1251,1258],convert_dtyp:963,convolut:[1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275],cool:43,cooler:43,coordin:[987,1045,1119,1120,1122,1124],copi:[40,41,43,487,987,1006,1139,1183,1185],copy_arrai:[435,695,987],copy_nest:1183,core:[433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,485,486,487,488,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,915,916,917,918,919,920,922,923,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1251],corner:43,correct:[43,1251,1294],correctli:[40,41,43,1107,1110,1119,1124,1202,1204,1205,1206,1207,1208,1209,1210],correspond:[40,41,43,872,897,987,1003,1195,1196],cos:[85,397,520,650,845,987,1020,1119,1120,1133,1294],cosh:[85,397,520,650,785,845,1119],cosin:[845,849,850,1119,1120,1121,1126],cost:[1084,1086,1087,1089,1091,1092,1093,1135,1136,1137,1138],cost_fn:[1135,1138],could:1297,count:[40,41,861,862,868,869,870,1139,1202,1207,1209,1249],cprint:1295,cpu:[40,41,43,913,950,952,958,959,962,987,990,994,1022,1023,1030,1040,1041,1049,1050,1051,1057,1058,1083,1139,1195,1196,1197,1198,1199,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1290,1291,1293,1294],creat:[40,41,838,839,840,913,922,923,987,990,994,1021,1022,1023,1030,1040,1041,1049,1050,1051,1057,1058,1074,1083,1084,1097,1139,1195,1196,1197,1198,1199,1251,1252,1257,1258,1259,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293,1297],create_if_abs:[40,41],create_vari:1259,creation:[40,41,42,43],creation_funct:[389,390,391,838,839,840],crop:[1100,1104],crop_siz:[1100,1104],cross:[291,695,987,1233,1234,1235,1236],cross_entropi:1233,cuda:[40,41,913,922,941,958,987,990,994,1022,1023,1030,1040,1041,1049,1050,1051,1057,1058,1083,1139,1195,1196,1197,1198,1199,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1290,1291],cumprod:[128,291,435,695,987],cumsum:[695,987],cumul:[987,1008,1009],current:[40,41,42,43,913,922,946,947,949,953,963,969,977,986,987,1010,1024,1032,1036,1048,1052,1139,1183,1184,1191,1251,1297],current_framework:59,current_framework_str:[435,695,987,1139],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1245,d_in:[1220,1221,1222,1223,1224,1225,1226],d_out:[1220,1221,1222,1223,1224,1225,1226],da_can_termin:1139,da_dim_s:[913,1139],da_direct:1139,da_tune_step:[913,1139],dai:1297,daniel:1251,data:[40,41,42,43,838,839,840,842,843,845,846,847,851,853,856,858,860,861,862,868,869,870,872,891,897,913,915,916,917,918,919,920,925,926,927,941,963,967,968,969,973,974,975,976,977,978,979,986,987,990,994,1015,1021,1030,1037,1050,1051,1055,1066,1070,1083,1084,1090,1098,1119,1127,1139,1220,1229,1251],data_format:[1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275],data_type_funct:[392,394,395,841,842,843],dataset:[40,41],datatyp:[40,41,963,968,978,979],dcdw:[1084,1086,1087,1089,1091,1092],debug_info:1245,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1084,1091,1092,1284,1286,1287],decay_lambda:[1084,1091,1092,1284,1286,1287],decid:[40,41,1297],decompos:[1107,1108,1112],decomposit:[1107,1108,1112,1114],decor:43,decrement:[987,1033],dedic:[1084,1098,1257,1258],deep:[40,41,1251],deep_copi:[40,41],deeper:[913,935,939,945,1139,1183,1192,1251],deepli:[1183,1185],def:[43,60,81,210,393,516,646,914,921,924,964,965,966,1085,1139,1143,1150,1246,1250,1251,1260,1263,1266,1293,1294,1297],default_dev:43,default_devic:913,default_dtyp:[43,963],default_float_dtyp:963,default_int_dtyp:963,default_key_color:[40,41,42],default_nod:1139,default_rng:487,default_v:[987,1011],defaultdevic:[913,914],defaultdtyp:[963,964],defaultfloatdtyp:[963,965],defaultintdtyp:[963,966],defer:43,defin:[43,987,1007,1049,1051,1083,1195,1197],degre:[845,849,1119,1131,1133],del:1139,delta:[1084,1086,1139,1245],delta_dim_s:1139,delta_percent_mem:1139,delta_sf:1139,delta_util:1139,demo:1251,denomin:[987,1019,1026,1060,1067,1068,1237,1238,1282,1283],denot:43,dens:[1268,1278],depend:[43,845,846,854,872,897,987,1081,1107,1114,1251],depth:[40,41,435,460,913,935,939,945,987,1028,1049,1139,1183,1192,1245,1249,1280,1281],depth_cutoff:[40,41],depthwis:[1220,1227,1268,1275],depthwise_conv2d:[195,378,501,635,827,1220],depthwiseconv2d:[1251,1268],deriv:[1084,1086,1087,1089,1091,1092,1093,1183,1185,1192,1251,1280,1284,1288,1290],descend:[865,866,1107,1114],descent:[1084,1089,1284,1289],describ:[40,41,1202,1203],descript:[858,860],design:[1251,1252],desir:[40,41,913,958,963,967,987,990,994,1030,1031,1050,1051,1083,1100,1105,1139,1202,1204,1205,1206,1208,1210],desired_aspect_ratio:[474,477,1100,1105],desired_percent_increas:1139,det:[349,478,611,772],detail:1297,detect:[40,41,1183,1184,1191],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,845,846,847,851,856,858,860,868,869,870,872,897,913,948,950,951,960,963,967,968,974,977,978,979,986,987,989,990,994,995,996,1029,1032,1036,1037,1070,1080,1084,1090,1107,1113,1119,1127,1135,1136,1137,1138,1139,1220,1231],dev:[40,41,42,43,121,285,433,435,436,439,449,450,451,458,459,460,461,462,463,468,487,488,557,687,913,916,917,919,920,922,923,926,927,929,930,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,949,952,953,954,955,956,957,958,959,962,987,990,994,1022,1023,1030,1040,1041,1049,1050,1051,1057,1058,1083,1084,1099,1195,1196,1197,1198,1199,1257,1258,1259,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1290,1291],dev_clon:[40,41,913],dev_clone_arrai:913,dev_clone_it:913,dev_clone_nest:913,dev_dist:[40,41,913],dev_dist_arrai:913,dev_dist_it:913,dev_dist_nest:913,dev_from_str:[43,121,285,433,557,687,913],dev_mapp:913,dev_str:[40,41],dev_to_str:[121,285,433,557,687,913],dev_unifi:913,dev_unify_arrai:913,dev_unify_it:913,dev_unify_nest:913,dev_util:913,devclonedit:913,devcloneditem:913,devclonednest:913,devdistit:913,devdistitem:913,devdistnest:913,develop:[43,1251,1294,1297],deviat:[40,41,1195,1198,1202,1208,1237,1238,1282,1283],devic:[21,40,41,43,389,390,391,434,435,448,838,839,840,915,916,917,918,919,920,922,923,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,987,990,994,1021,1022,1023,1030,1040,1041,1049,1050,1051,1057,1058,1083,1084,1099,1195,1196,1197,1198,1199,1251,1257,1258,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1290,1291],devmanag:[913,921],devmapp:[913,923],devmappermultiproc:913,diag:[1107,1114],diagon:[98,223,410,533,663,858,987,1030],dict:[15,16,17,18,19,40,41,42,913,915,918,922,923,925,935,936,937,938,939,987,1012,1013,1014,1042,1135,1136,1137,1139,1183,1185,1186,1187,1190,1192,1257,1258],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,841,842,913,932,933,936,937,1107,1112,1139,1220,1229,1251,1294,1297],differenti:[1251,1294],dilat:[1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275],dim:[40,41,43,987,1049,1100,1101,1105,1107,1114,1139,1268,1279],dim_siz:[40,41,913,1139],dimens:[40,41,42,858,859,860,861,862,868,869,870,913,944,987,998,1003,1007,1012,1013,1014,1017,1020,1027,1039,1049,1054,1055,1065,1066,1069,1077,1079,1100,1104,1107,1110,1114,1135,1136,1137,1138,1139,1195,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1217,1220,1221,1222,1223,1224,1225,1226,1227,1230,1233,1235,1236,1268,1269,1270,1271,1272,1273,1274,1275,1278,1279],dimension:[40,41,487,858,860,868,869,870,987,1065,1066,1107,1114],direct:1139,directli:[43,1183,1192,1294,1297],directori:[987,1062,1073],discret:[1233,1235],disk:[40,41,1100,1102],distanc:[987,990],distribut:[40,41,913,932,936,937,938,939,1139,1195,1196,1197,1198,1199,1220,1228,1268,1276,1280,1281],distribute_nest:1139,distributedarrai:[40,41],distrubt:[1233,1235],dive:[1251,1294],divid:[40,41,987,1065,1067,1119],dividend:[1119,1127],divis:[987,1019,1026,1060,1067,1068,1084,1086,1087,1091,1119,1127,1284,1285,1286],divisor:[1084,1086,1087,1091,1119,1127,1284,1285,1286],doc:1251,docstr:43,doe:[40,41,43,987,990,1065,1293],doesn:[1107,1112,1251],doing:43,domain:[845,846,856,1119,1120],don:1251,done:43,door:1297,dot:[1107,1109,1220,1231,1232,1268,1279],down:1293,downscal:[987,1001,1002],drag:[1251,1297],draw:[1195,1196,1198,1199],drawn:[1195,1196,1197,1198,1199],drop:[1251,1297],dropout:[1220,1251,1268,1279],dropout_r:[1268,1279],ds_tune_step:913,dtype:[40,41,43,128,291,389,390,391,392,394,395,435,436,439,440,448,451,461,468,564,695,838,839,840,841,842,843,967,968,969,970,971,972,974,975,976,977,978,979,980,981,982,983,984,985,986,987,990,994,1021,1030,1049,1050,1051,1083],dtype_bit:[128,291,435,564,695,963],dtype_from_str:[43,128,291,435,564,695,963],dtype_in:[435,445,446,447,963,969,974,975,976,977,978,979,986],dtype_to_str:[128,291,435,564,695,963],duplic:[40,41],dure:[40,41,43,911,912,987,1078,1084,1086,1087,1091,1135,1136,1137,1138,1280,1281,1284,1285,1286,1288],dynam:[435,441,911,912],each:[40,41,42,43,845,846,847,851,853,854,856,865,866,872,891,897,913,922,923,932,933,934,935,936,937,938,944,956,957,987,988,989,1004,1015,1054,1065,1069,1072,1082,1084,1087,1089,1091,1092,1093,1100,1103,1107,1114,1119,1122,1127,1129,1130,1139,1183,1187,1195,1196,1202,1203,1220,1221,1222,1223,1224,1225,1226,1227,1228,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1279,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1294],eager:1294,easi:1297,easili:1251,econom:1297,ecosystem:1251,edg:[987,1000,1004,1082],effect:[1084,1093],effective_grad:[1084,1093],effici:1297,einop:[40,41,987,1012,1013,1014],einops_rearrang:[40,41,987],einops_reduc:[40,41,987],einops_repeat:[40,41,987],einstein:[40,41,1202,1203],einsum:[40,41,181,366,489,625,807,1202],either:[40,41,43,987,1011,1042,1045,1047,1135,1136,1137,1138,1139,1268,1279,1280,1281,1294],eleg:1139,element:[40,41,43,487,845,846,847,848,849,850,851,853,854,855,856,861,862,865,866,868,869,870,872,891,897,913,934,938,944,963,967,987,988,990,992,993,995,996,1000,1001,1002,1008,1009,1015,1018,1019,1030,1031,1044,1046,1054,1056,1065,1076,1081,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1139,1202,1203,1205,1207,1209,1212,1213,1214,1215,1216,1217,1218,1219,1220,1228,1268,1276],elementwis:[40,41],elementwise_affin:[1282,1283],elementwise_funct:[845,846,847,848,849,850,851,852,853,854,855,856],elemtn:[1195,1196],elif:1139,els:[987,997,1011,1016,1139],elsewher:[987,1081],emphas:1251,empti:[40,41,1107,1112,1139],enabl:[40,41,42,43,1251],encapsul:[841,843],encod:[987,1020,1100,1102],end:[987,990,1251,1294],ensur:43,entir:[40,41,868,869,870,913,957,1139,1251,1268,1277],entri:[40,41,987,1040,1041,1065,1066],entropi:[1233,1234,1235,1236],enumer:1139,environ:1251,eps:[392,841,842],epsilon:[1084,1086,1087,1091,1233,1234,1235,1236,1237,1238,1282,1283,1284,1285,1286],equal:[40,41,435,564,695,845,849,851,987,989,995,996,1004,1065,1082,1119,1131,1133,1195,1199],equality_matrix:[987,989],equat:[40,41,1202,1203],equival:[858,860,987,990,1119,1133],erf:[485,785,1119],error:[40,41,43,913,987,1066,1119,1128,1139,1212,1213,1280,1281,1284,1288],essenti:43,etc:[40,41,43,913,958,987,990,994,1022,1023,1030,1040,1041,1049,1050,1051,1057,1058,1083,1139,1195,1196,1197,1198,1199,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1290,1291,1297],euclidean:[858,860],euler:837,evalu:[40,41,845,854,868,869,870,987,1045,1183,1184,1191],even:[43,1297],evenli:[40,41,987,990,1040,1041,1065],everi:[987,989,1297],exact:[40,41],exampl:[43,911,912,987,1000,1069,1107,1112,1251,1293,1294,1297],example_input:[435,441,911,912],exc_tb:1139,exc_typ:1139,exc_val:1139,exce:[987,1046],except:[40,41,44,47,868,869,870,987,990,997,1003,1011,1078,1139],excess_s:1139,excit:[1251,1294],exclud:[59,61,987,990,1195,1199],exclus:[40,41,435,443,456,469,471,987,1008,1037,1084,1090,1195,1197],execut:[43,987,1078,1294],execute_with_gradi:[161,340,469,602,762,1084,1251,1293],exist:[40,41,987,1011,1139,1251,1284,1288,1297],exp:[785,1119],expand:[40,41,987,1017,1020],expand_dim:[40,41,291,695,987,1139],expect:[987,991],explain:[43,1294],explicitli:[43,1268,1277,1279,1280,1281,1294],expon:[43,872,897,987,1068],exponenti:[43,872,897,1119,1128,1129],expos:[987,994,1005],express:[987,1045],exsit:[40,41],extend:43,extra:[40,41,42,1084,1088],extract:[858,859],eye:[1107,1109],fabian:1251,fabio:1251,factor:[913,922,955,956,957,1084,1086,1087,1091,1092,1107,1114,1139,1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275,1284,1285,1286,1287],fail:43,falck:1251,fall:[1280,1281,1284,1288],fallback_to_non_compil:[1280,1281,1284,1288],fals:[15,18,19,40,41,42,59,66,67,68,69,70,433,435,443,444,456,464,467,469,470,471,478,480,845,851,858,860,865,866,868,869,870,913,931,944,952,957,962,963,970,971,972,973,987,989,1008,1011,1016,1020,1027,1037,1042,1063,1065,1079,1081,1084,1087,1088,1089,1090,1091,1092,1093,1107,1110,1135,1136,1137,1138,1139,1183,1184,1185,1187,1191,1192,1202,1204,1205,1206,1207,1208,1209,1210,1239,1240,1241,1245,1249,1257,1258,1280,1281,1284,1285,1286,1287,1288,1289],fan_in:1259,fan_mod:1259,fan_out:1259,far:[1183,1184,1191,1293],faster:[911,912],favourit:[1251,1293],feasibl:1297,feat_dim:[1220,1231,1232],fed:[913,957,1139],feed:[913,957,1139],few:43,field:1297,file:[40,41,43,987,1062,1073,1280,1281],filepath:[40,41],fill:[40,41,838,839,840,987,1021,1050,1195,1197],fill_valu:[435,448,987,1021],filter:[1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275,1297],filter_s:[1268,1269,1270],filter_shap:[1268,1271,1272,1273,1274,1275],find:[40,41,1297],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[80,81,209,210,392,393,515,516,645,646,841],finish:[1251,1297],finit:[845,851],first:[40,41,43,487,845,847,911,912,913,944,987,995,1003,1007,1015,1040,1041,1069,1071,1084,1088,1107,1114,1135,1136,1137,1138,1139,1183,1184,1191,1195,1201,1202,1207,1209,1268,1279,1280,1281,1284,1288,1294,1297],firstlayersiren:[1251,1259],firstli:[1294,1297],fist:[913,957,1139],fit:[40,41,433,435,469,474,478,484,485,487,987,1054,1100,1105],fix:43,fkt:1297,flag:[40,41,43,1084,1090],flat:[40,41,43,987,1054,1057],flat_list:[40,41],flatten:[40,41,858,860,987,1020,1054,1202,1204,1205,1206,1208,1210],flatten_key_chain:[40,41,1280,1281],flexibl:[1251,1294],flip:[40,41,101,226,413,536,666,861],float32:[43,435,451,963,967,975,976,987,990,994,1030,1050,1051,1083],float_dtyp:[963,971,981],float_img_to_uint8_img:1100,floor:[291,435,695,987,1019,1139],floormod:[291,435,695,987],fluid:1297,fname:[1239,1241,1245,1280,1281],folder:[43,1251],follow:[40,41,43,841,843,858,860,913,957,987,1033,1034,1035,1067,1068,1084,1087,1089,1091,1092,1093,1139,1183,1187,1192,1220,1231,1232,1251,1268,1278,1284,1288],followng:[841,842],fomaml_step:1135,forget:[1084,1086,1087,1091,1284,1285,1286],fork:[987,1047,1251,1252],forkserv:[987,1047,1139],form:[15,16,17,18,19,40,41,987,994,1084,1087,1089,1091,1092,1093,1183,1185,1192,1220],format:[40,41,43,913,931,963,967,969,973,987,990,994,1030,1050,1051,1083,1139,1202,1203,1251,1293,1294],format_fn:[40,41],format_key_chain:[40,41],forward:[1280,1281,1284,1288,1293],found:[40,41,42],fourier:[987,1020],fourier_encod:987,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,96,99,100,102,106,109,110,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,175,176,177,178,179,180,182,183,184,185,186,187,188,191,193,194,196,197,198,199,200,201,202,207,208,210,211,212,215,216,217,218,219,220,221,224,225,227,231,234,235,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,346,347,348,350,351,352,353,354,355,356,358,359,362,363,364,365,367,368,369,370,371,372,373,374,377,379,380,381,382,383,384,385,390,391,393,394,395,398,399,400,401,402,403,404,405,406,407,408,411,412,414,418,421,422,434,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,475,476,477,479,480,481,482,483,486,488,490,491,492,493,494,495,496,499,500,502,503,504,505,506,507,508,513,514,516,517,518,521,522,523,524,525,526,527,528,529,530,531,534,535,537,541,544,545,553,558,559,560,561,562,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,603,604,605,606,608,609,610,612,613,614,615,616,617,621,622,623,624,626,627,628,629,630,631,632,636,637,638,643,644,646,647,648,651,652,653,654,655,656,657,658,659,660,661,664,665,667,671,674,675,683,688,689,690,691,692,693,694,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,763,764,765,766,767,769,770,771,773,774,775,776,777,778,779,780,781,783,784,786,787,788,789,790,791,792,793,794,795,796,797,798,799,801,802,803,804,805,806,808,809,810,811,812,813,814,817,818,819,820,821,822,823,825,826,828,829,830,831,832,833,834,839,840,842,843,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,862,866,869,870,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1213,1214,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1235,1236,1238,1240,1241,1243,1244,1246,1250,1251,1255,1256,1257,1258,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284,1285,1286,1287,1288,1289,1291,1292,1293,1294,1296,1297],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1139,framewrk:[987,1047],freeli:43,frequenc:[987,1020],from:[40,41,42,43,845,853,856,858,859,861,862,868,869,870,913,922,923,957,963,969,987,1011,1022,1023,1030,1055,1066,1074,1081,1084,1087,1091,1100,1104,1107,1112,1135,1136,1137,1138,1139,1183,1185,1192,1195,1196,1197,1198,1199,1202,1207,1209,1220,1228,1231,1251,1257,1258,1268,1276,1279,1284,1288,1293,1294],from_cal:[1280,1281],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[128,291,435,564,695,841,842,987,1107,1112,1251],full_matric:[478,479,482,1107,1114],fulli:[43,1251,1268,1278,1279,1293],func:[40,41,435,441,469,470,911,912,913,957,987,999,1084,1088,1139],further:[43,1297],furthermor:1297,futur:1297,gain:1259,gamma:[1237,1238],gather:[40,41,128,291,435,564,695,987,1023],gather_nd:[40,41,128,291,435,564,695,987],gauss:[1119,1128],gaussian:[1212,1213],geglu:[1251,1254],gelu:[376,498,816,1212,1251,1254],gener:[23,40,41,43,433,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,487,911,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1090,1195,1197,1199,1200,1251,1284,1288],geometr:[987,1020],get:[40,41,43,841,842,843,913,922,923,931,946,947,952,956,959,962,963,973,974,987,991,1024,1025,1026,1053,1139,1249,1251,1268,1277,1297],get_all_arrays_in_memori:987,get_all_arrays_on_dev:913,get_framework:59,get_initial_st:[1268,1277],get_min_bas:987,get_min_denomin:987,get_mod_kei:[1280,1281],get_num_dim:[435,695,987],get_param:1245,get_param_recurs:1245,get_referrers_recurs:987,getfullargspec:1139,gist:1251,give:[43,865,866,987,1055,1294],given:[40,41,43,838,839,840,861,862,865,866,913,946,952,955,956,957,959,962,963,967,987,990,994,1000,1008,1009,1023,1040,1041,1050,1051,1054,1057,1058,1065,1072,1077,1079,1083,1084,1086,1087,1089,1091,1092,1093,1107,1109,1115,1119,1120,1139,1183,1188,1189,1195,1198,1199,1201,1202,1205,1207,1208,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1257,1258,1297],global:[40,41,42,913,922,923,930,955,956,957,963,970,971,972,987,1010,1025,1026,1053,1059,1060,1061,1067,1068,1084,1099,1139,1237,1238,1243,1244,1251,1282,1283],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1251,1259,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278],googl:1251,got:[43,1251],gpu0:43,gpu2:43,gpu:[913,948,951,1139],gpu_is_avail:[433,913,1139],grad:[1251,1284,1288,1293],gradient:[25,40,41,470,471,472,473,913,957,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1103,1135,1136,1137,1138,1251,1284,1285,1286,1287,1288,1289,1293,1297],gradient_descent_upd:[1084,1135,1136,1137,1138],gradient_imag:[164,345,474,607,768,1100],gradienttrack:[1084,1085],graph:[1084,1087,1089,1091,1092,1093,1239,1240,1241,1246,1251,1280,1281],graph_compil:[1239,1240,1241,1242,1243,1244,1245,1249],greater:[40,41,987,990,1018,1066,1195,1199],green:[40,41,42,1295,1296],grid:[987,1045],group:[1100,1105],guid:[1251,1252,1297],gym:1251,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1297,half:[987,990,1139,1195,1199],hand:1251,handl:[40,41,42,43,911,912,913,929,931,940,941,952,959,962,1084,1087,1089,1091,1092,1093,1139,1284,1285,1286,1287,1288,1289],has:[40,41,43,987,1069,1107,1112,1113,1119,1123],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,987],hasattr:1139,have:[40,41,43,841,842,845,846,847,851,853,856,858,860,861,862,868,869,870,872,891,897,987,1003,1007,1012,1013,1014,1015,1021,1069,1084,1090,1098,1107,1114,1119,1127,1139,1251,1293,1294],haven:43,hdf5:[40,41,1280,1281],head:[1220,1231,1268,1279],head_dim:[1268,1279],height:[1100,1105],height_cutoff:[40,41],help:[59,392,433,434,913,925,926,927,928,963,1084,1245,1249,1251,1259,1261,1262,1264,1265,1267],helper:1251,here:[43,1251],hidden:[1220,1230,1268,1277],hierarch:[987,1005],hierarchi:[40,41],high:[40,41,487,1195,1197,1199],higher:[1084,1087,1089,1091,1092,1093,1107,1114],highest:[1195,1197],highest_util:1139,highest_util_nod:1139,highli:1251,highlight:1297,highlight_subgraph:[1239,1241,1245],hint:43,hkt:1297,hold:[963,967,987,990,994,1057,1058],host:1251,hot:[987,1049],how:[1251,1268,1279,1280,1281,1294,1297],howev:[43,1294],http:1297,hyperbol:[845,846,850,1119,1121,1125,1126,1132,1134,1212,1219],hypothet:1297,icon:1251,idea:1251,ident:[40,41,43,128,291,435,564,695,987],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[837,841,842,845,856],if_exist:[40,41],ignor:[40,41,1284,1288],ignore_key_error:[40,41],ignore_miss:[1284,1288],ignore_non:[40,41],iinfo:[80,209,392,515,645,841],imag:[27,475,476,477,987,1039,1101,1102,1103,1104,1105,1106,1220,1221,1222,1223,1224,1226,1227,1251,1297],image_dim:[1100,1104],imkkhk:1297,immedi:[1251,1294,1297],implement:[43,845,846,854,872,897,1251,1294,1297],in_featur:[1220,1229],inadvert:43,includ:[40,41,43,858,860,868,869,870,987,990,1029,1067,1068,1080,1183,1184,1195,1199,1268,1278,1279,1282,1283,1293],include_deriv:[1183,1185,1192],include_empti:[40,41],include_gener:[1239,1240,1241,1245,1280,1281],include_inf:[40,41,987,1029,1080],include_nest:[1183,1184],include_self:[40,41],inclus:[43,1195,1197],incom:[1220,1229],increas:[913,935,939,945,987,1004,1017,1082,1139,1183,1192],increasingli:1297,increment:[987,1034,1139],increment_param_count:1245,inde:1251,indent:[40,41,42],independ:[1195,1196],index:[40,41,435,487,987,992,993,1022,1023,1045,1066,1069,1183,1186,1188,1189,1190,1193],index_nest:1183,indic:[40,41,435,449,450,460,462,463,858,860,865,866,987,992,993,1022,1023,1031,1049,1057,1058,1183,1184,1186,1188,1189,1190,1191,1193,1194,1195,1196,1212,1217,1220,1221,1222,1223,1224,1225,1226,1227,1237,1238,1268,1269,1270,1271,1272,1273,1274,1275,1280,1281],indices_wher:[128,291,435,695,987],indistinguish:[845,856],inevit:1297,inf:[40,41,858,860,987,1029,1038,1080,1119,1123],infer:[845,853,858,859,911,912,987,1027,1030,1055,1063,1100,1104,1107,1112,1294,1297],infin:[845,846,851,856,858,860,987,1038],infinit:[845,856],inform:[841,842,843,1084,1095],init_c:[1220,1230],init_h:[1220,1230],init_on_first_step:[1284,1288],initi:[40,41,42,59,392,433,434,913,925,926,927,928,963,1084,1139,1220,1230,1245,1249,1251,1261,1262,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1284,1288],initialz:[1280,1281],inner:[1135,1136,1137,1138],inner_batch_fn:[1135,1136,1137],inner_batch_shap:[1220,1229],inner_cost_fn:[1135,1136,1137],inner_grad_step:[1135,1136,1137,1138],inner_learning_r:[1135,1136,1137,1138],inner_optimization_step:[1135,1136,1137,1138],inner_v:[1135,1136,1137],inp:1139,inplac:[40,41,987,997,1032,1036,1070,1084,1087,1089,1091,1092,1093,1257,1258,1284,1285,1286,1287,1288,1289],inplace_arrays_support:[435,987],inplace_decr:[128,291,435,564,695,987],inplace_incr:[128,291,435,564,695,987],inplace_oper:[0,11,12],inplace_upd:[40,41,128,291,435,564,695,987,1257,1258],inplace_variables_support:[435,987],input:[15,18,19,40,41,42,43,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,861,862,865,866,868,869,870,911,912,913,922,923,930,931,932,935,936,939,945,957,958,963,967,968,970,971,972,973,974,978,979,987,988,989,992,993,995,996,997,998,1000,1001,1002,1003,1004,1006,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1027,1029,1030,1031,1033,1034,1035,1037,1038,1039,1043,1044,1045,1046,1054,1056,1063,1064,1066,1069,1070,1071,1072,1074,1075,1076,1077,1079,1080,1082,1084,1088,1090,1095,1099,1100,1101,1102,1103,1104,1106,1107,1110,1112,1114,1116,1117,1118,1119,1121,1123,1125,1126,1127,1131,1132,1133,1134,1135,1136,1137,1138,1139,1195,1196,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1237,1238,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1282,1283,1294],input_ax:[913,957,1139],input_channel:[1268,1269,1270,1271,1272,1273,1274,1277,1278],input_queu:1139,inputs_split:1139,insert:[987,1017],insid:43,inspect:1139,inspir:1297,instal:1251,instanc:[15,16,17,18,19,40,41,43,487,872,891,897,913,922,1139,1257,1258,1290,1291],instead:[40,41,487,1202,1204,1205,1206,1207,1208,1209,1210,1297],int32:43,int64:[963,967,987,990,994,1030,1050,1051,1083],int_dtyp:[963,972,982],integ:[40,41,487,841,843,845,847,848,858,860,868,869,870,963,979,987,990,1018,1056,1065,1195,1197,1200],integr:1251,intend:43,inter:1251,interact:1251,interchang:[40,41,987,1071],interest:1251,interfac:[987,994,1294],intermedi:[40,41],intern:[40,41,913,1084,1098,1139,1183,1184,1191,1192,1259,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1290,1291],interpol:[987,1039],intersect:[1119,1120],interv:[40,41,868,869,870,987,990,1000,1040,1041,1119,1122,1195,1199],introduc:1297,inv:[772,1107,1297],invalid:[868,869,870],invalid_dtyp:963,invers:[845,846,1107,1109,1111,1119,1120,1121,1122,1123,1125,1297],invert:[1107,1109,1111],invest:1297,invoc:[911,912],irrespect:1251,is_al:1139,is_arrai:[128,291,435,564,695,987,1139],is_float_dtyp:963,is_int_dtyp:963,is_mean:1139,is_sum:1139,is_var:[1245,1249],is_vari:[161,340,469,602,762,1084],isfinit:[85,214,397,520,650,845],isinf:[291,564,695,987],isinst:1139,isnan:[85,214,397,520,650,845],isnumer:1139,issu:43,item:[15,19,40,41,872,884,885,913,922,923,925,932,934,936,938,944,963,970,987,1005,1028,1067,1068,1139,1183,1187,1188,1189,1192,1193,1194,1251,1280,1281,1293],iter:[15,16,17,18,19,40,41,42,911,912,913,916,917,919,920,922,923,926,927,934,936,937,938,939,944,957,987,989,998,1003,1004,1030,1045,1050,1054,1055,1058,1063,1065,1069,1072,1077,1082,1139,1183,1184,1185,1187,1191,1192],iterbal:[913,934,938,944,1139],its:[487,865,866,913,957,987,1030,1055,1071,1077,1139,1251],itself:[43,1183,1192],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,389,390,391,392,394,395,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,837,838,839,840,841,842,843,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,861,862,865,866,868,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,915,916,917,918,919,920,922,923,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1249,1251,1252,1254,1255,1256,1257,1258,1259,1261,1262,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1295,1296],ivy_backend:[40,41],ivy_bay:1297,ivy_test:43,ivyfcmodel:1293,ivyh:[40,41,42],ivymodul:[192,824],jame:1251,jax:[43,1084,1090,1251,1297],jax_concat:1251,jnp:1251,join:[40,41,987,1003,1069,1139],journal:1251,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1251,1268,1277,1297],kaimingnorm:[1259,1263],kalman:1297,kalman_filt:1297,kalman_filter_step:1297,kalman_filter_upd:1297,keep:[40,41,913,958,987,1079,1139,1251,1252,1297],keep_inner_v:[1135,1136,1137],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1135,1136,1137],keepdim:[40,41,435,467,478,480,858,860,868,869,870,987,1079,1107,1110,1202,1204,1205,1206,1207,1208,1209,1210],kei:[15,16,17,40,41,42,43,872,877,913,925,987,1005,1135,1136,1137,1139,1183,1186,1190,1220,1231,1232,1251,1257,1258,1268,1279,1284,1288],kept:[40,41,42,1135,1136,1137],kera:1297,kernel:[1220,1230],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,913,922,923,935,939,945,987,991,1012,1013,1014,1042,1139,1183,1187,1280,1281],keyword_color_dict:[40,41,42],kind:[841,842,843,1297],kwarg:[15,16,17,40,41,42,59,63,913,922,935,939,945,987,1042,1139,1239,1240,1241,1245,1257,1258,1280,1281],kwarg_stateful_idx:[1239,1240,1241,1245,1280,1281],kwargs_clon:1139,kwargs_dist:1139,kwargs_uni:1139,label:[43,1233,1234,1235,1236],lamb:[1084,1091,1251,1284],lamb_upd:1084,lambda:[1139,1284,1287,1289,1293],lar:[1084,1091,1092,1251,1284],larger:[841,842,987,1000],largest:[40,41,841,842,843,987,992,1018],lars_upd:1084,last:[40,41,861,862,868,869,870,987,990,1007,1039,1065,1069,1107,1110,1114,1202,1207,1209,1212,1217,1220,1230,1268,1278],later:[40,41,987,999],latest:[1268,1277],layer:[1084,1087,1089,1091,1093,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1237,1238,1251,1259,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1290,1291,1297],layer_norm:1237,layernorm:[1251,1282],layerwis:[1084,1092,1284,1287],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1183,1184,1191],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1212,1213,1214],leaky_relu:[816,1212],learn:[845,853,858,859,1084,1087,1089,1091,1092,1093,1107,1112,1135,1136,1137,1138,1195,1201,1251,1284,1285,1286,1287,1288,1289,1294,1297],learnabl:[1237,1238,1282,1283],least:43,leav:[15,18,19,40,41,1183,1184,1185,1191,1192],left:[40,41,43,1107,1110,1202,1204,1205,1206,1207,1208,1209,1210,1251],leftmost:[40,41],len:1139,length:[40,41,42,987,990,1055,1066,1077],lenton2021ivi:1251,lenton:1251,less:[40,41,43,85,214,397,520,650,845,848,858,860,1139,1195,1199],less_util_node_str:1139,let:[1294,1297],level:1251,librari:[1251,1293,1297],lightweight:1251,like:[43,1084,1090,1195,1199,1251,1293,1294,1297],limit:[40,41,42,841,842,843,987,1000,1001,1002],linalg:[29,1108,1109,1110,1111,1112,1113,1114,1115,1251],line:43,linear0:[1251,1293],linear1:1251,linear2:1293,linear:[987,1020,1039,1107,1212,1213,1214,1215,1220,1228,1251,1268,1269,1270,1271,1272,1273,1274,1275,1293],linear_algebra:[478,479,480,481,482,483,858,859,860],linear_resampl:[128,291,435,564,695,987],linearli:[987,1020],link:[43,1251],linspac:[128,291,435,564,695,987,990],list:[15,18,19,40,41,43,389,390,391,838,839,840,861,862,868,869,870,913,922,923,932,933,935,936,937,939,942,943,957,987,990,994,996,1045,1064,1065,1074,1079,1135,1136,1137,1139,1183,1184,1185,1187,1191,1192,1220,1221,1222,1223,1224,1225,1226,1227,1251,1257,1258,1268,1269,1270,1271,1272,1273,1274,1275],list_join:[40,41,42],list_stack:[40,41],liter:[858,860],littl:1294,load:[40,41],loaded_kwarg:1139,loader:1251,local:43,local_set:[987,1028],locat:[43,845,852,987,1038,1195,1196],log2:[85,397,520,650,845],log:[785,987,1041,1107,1113,1119,1139,1233,1234,1235,1236,1251],log_all_op:1245,log_global_inference_abs_tim:[1242,1251],log_global_inference_rel_tim:[1242,1251],logarithm:[845,854,1107,1113,1119,1130],logic:[31,845,855,868,869,870,1117,1118,1251],logical_and:[357,782,1116],logical_not:[85,214,397,520,650,845],logical_or:[357,782,1116],logit:[1233,1236],logspac:[128,291,435,564,695,987],look:[43,1294,1297],loop:[1135,1136,1137,1138],loss:[1234,1235,1236,1251,1293],loss_fn:[1251,1293],lot:1294,low:[40,41,487,1195,1197,1199],lower:[40,41,43,987,1044,1195,1199],lower_depth:[1280,1281],lowest:[15,18,19,40,41,1183,1192,1195,1197],lstm:[1220,1230,1251,1268],lstm_updat:[43,1220],machin:[841,842,843,845,853,858,859,1107,1112,1195,1201,1251,1294,1297],made:43,mai:[987,990,1011,1015,1251,1294,1297],main:[987,1030,1251],mainli:1251,maintain:43,make:[43,487,913,1139,1251,1294],maml:[1135,1136,1137],maml_step:1135,manag:[913,1139],manhattan:[858,860],mani:[40,41,43,987,1065,1251],manipulation_funct:[861,862],manner:[15,18,19,40,41,43,1183,1192],manual:[1183,1184,1191,1297],map:[40,41,42,845,852,913,922,987,1038,1139,1183,1188,1189,1192,1268,1279,1293],map_cont:[40,41],map_nest_at_index:1183,map_nest_at_indic:1183,map_sequ:[40,41],mapper:[913,922,923,1139],mask:[1220,1231,1232],master:43,match:[40,41,987,1042],match_kwarg:987,math:[33,486,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1139,1251],mathbb:[1107,1115],mathbf:[1107,1115],mathemat:[837,858,860],matmul:[43,291,435,564,695,987,1297],matplotlib:1294,matric:[1220,1229],matrix:[40,41,858,859,987,989,1001,1043,1107,1108,1109,1110,1111,1112,1113,1115,1220,1229,1268,1278],matrix_norm:[40,41,168,349,478,611,772,1107],matter:1251,max:[40,41,392,841,842,843,987,1001,1002,1013,1044,1057,1058,1139,1202,1204,1284,1286],max_batch_s:[40,41],max_chunk_s:[913,957,1139],max_depth:[40,41,913,917,920,927,935,939,945,987,1028,1139,1183,1192],max_dev_dim_step_ratio:913,max_freq:[987,1020],max_length:[40,41],max_node_dim_step_ratio:1139,max_norm:[40,41,987,1001,1002],max_split_factor_step_s:[913,1139],max_trust_ratio:[1084,1091,1284,1286],maxim:[1251,1294,1297],maximis:1251,maximum:[40,41,42,695,913,935,939,945,957,987,992,1000,1001,1002,1020,1084,1091,1139,1183,1192,1202,1204],mayb:[15,18,19],mdi:1139,mean:[40,41,487,913,942,943,944,945,957,987,1013,1135,1136,1137,1138,1139,1183,1187,1195,1198,1202,1205,1208,1210,1259,1293,1297],measur:[1220,1231,1268,1279],mech:1251,mechan:[1251,1297],medic:1297,member:43,memori:[913,929,952,957,959,962,1139,1220,1230,1251],merg:43,merge_with_upstream:43,meshgrid:[291,435,695,987],messag:[1295,1296],meta:[35,1136,1137,1138,1251],method:[40,41,42,43,487,987,994,1005,1045,1057,1058,1084,1091,1092,1139,1183,1184,1191,1192,1251,1268,1279,1280,1281,1294],might:[987,1011,1297],min:[40,41,392,841,842,843,858,860,987,1013,1046,1057,1058,1067,1107,1112,1139,1202,1206],min_bas:[987,1068],min_denomin:[987,1067],min_dev_dim_s:913,min_node_dim_s:1139,min_sf_tune_step:[913,1139],min_unit_dev_tune_step:913,min_unit_node_tune_step:1139,mind:1251,mini:[1237,1238,1282,1283],minimum:[40,41,695,913,963,967,987,990,993,994,1000,1025,1026,1059,1060,1067,1068,1139,1202,1206],miss:[1284,1288],ml_framework:[987,990,1107,1112],mod:[987,1019],mod_depth:[1280,1281],mod_height:[1280,1281],mod_with_top_mod_key_chain:[1280,1281],mode:[40,41,478,481,911,912,913,942,943,944,945,957,1107,1112,1114,1139,1294],model:[1251,1293],modul:[40,41,42,59,987,1047,1139,1251,1252,1254,1255,1256,1257,1258,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1282,1283,1290,1291,1297],moment:[1084,1086,1087,1091,1284,1285,1286],more:[43,861,862,987,1069,1139,1251,1294,1297],more_util_node_str:1139,most:[40,41,43,1107,1112,1251,1297],move:[40,41,43,913,958,1139],much:[43,1251,1297],multi:[487,987,1047,1220,1231,1268,1279],multi_head_attent:1220,multi_index_nest:1183,multi_map:[40,41],multi_nod:1139,multidev:[913,924,925,926,945],multidevcontain:[40,41],multidevic:[913,922],multidevit:[913,916,919,922,923,927],multidevitem:[913,915,918],multidevnest:[913,917,920],multiheadattent:[1251,1268],multinod:[1139,1143],multinodecontain:1139,multinodeit:1139,multinodeitem:1139,multinodenest:1139,multinomi:[174,361,487,620,800,1195],multipl:[40,41,868,869,870,987,1042,1065,1107,1109,1202,1204,1205,1206,1207,1208,1210,1237,1238,1268,1278,1294],multipli:[40,41,987,1008,1202,1207],multiprocess:[40,41,42,435,695,913,922,987,1139],must:[40,41,42,43,838,839,840,845,846,847,851,853,856,858,860,861,862,868,869,870,872,891,897,913,942,943,944,945,957,987,990,1003,1005,1007,1015,1044,1046,1058,1069,1119,1124,1127,1139,1195,1200,1284,1288],mutabl:[1183,1185,1192],mutlidevic:[913,922],mutlinod:1139,mw_tm1:[1084,1087,1091],mx_concat:1251,mxnet:[43,1251,1297],my_func:43,mymodel:1251,name:[911,912,1239,1240,1241,1245,1293],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1294],nan:[40,41,837,845,846,851,852,987,1029,1080],nativ:[15,17,18,19,40,41,43,913,929,931,940,941,952,959,962,963,968,975,976,1139,1251,1252,1257,1258],native_modul:[1257,1258],native_module_class:[1257,1258],nativearrai:[15,18,19,43,478,479,482,841,842,843,845,846,847,848,849,850,851,852,853,854,855,856,858,860,861,862,865,866,868,869,870,872,891,897,913,931,957,958,963,967,973,978,979,987,988,989,990,992,993,994,995,996,998,1000,1001,1002,1003,1004,1006,1007,1008,1009,1012,1013,1014,1015,1017,1018,1019,1020,1022,1023,1027,1029,1030,1031,1038,1039,1040,1041,1043,1044,1045,1046,1049,1050,1051,1054,1055,1056,1057,1058,1063,1065,1066,1069,1071,1072,1074,1075,1076,1077,1079,1080,1081,1082,1083,1139,1183,1185,1192],natur:[1107,1113,1119,1130,1297],ncdhw:[1220,1225,1226,1268,1273,1274],nchw:[1220,1223,1224,1227,1268,1271,1272,1275],ncw:[1220,1221,1222,1268,1269,1270],ndarrai:[43,389,390,391,392,394,395,487,987,1075],ndhwc:[1220,1225,1226,1268,1273,1274],nearest:[987,1056],need:[43,987,1001,1002,1220,1222,1224,1226,1251,1268,1270,1272,1274,1297],neg:[40,41,845,851,858,860,861,862,868,869,870,1202,1207,1209,1212,1214],negative_slop:1259,neither:1139,nest:[15,16,17,18,19,40,41,42,913,935,939,945,987,994,1074,1135,1136,1137,1139,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1280,1281,1284,1285,1286,1287,1288,1289],nested_indices_wher:1183,nested_map:[1139,1183],network:[1220,1229,1251,1252,1254,1268,1280,1281,1297],neural:[1220,1251,1254,1268,1293],new_node_percent_mem:1139,new_node_util:1139,new_node_utils_kei:1139,new_std:[1237,1238,1282,1283],newli:[43,911,912,987,998,999],newlin:[40,41,42],newshap:[987,998,1055],next:[841,842,1139,1280,1281,1284,1285,1286,1287,1288,1289],nhwc:[1220,1223,1224,1227,1268,1271,1272,1275],node:[40,41,1183,1184,1191],node_clon:1139,node_dist:1139,node_dist_arrai:1139,node_dist_it:1139,node_in:1139,node_mapp:1139,node_str:1139,node_to_str:1139,node_util:1139,nodedistit:1139,nodedistitem:1139,nodedistnest:1139,nodemanag:[1139,1150],nodemapp:1139,nodemappermultiproc:1139,noinspect:[43,914,964,965,966,1085,1139,1246],non:[40,41,858,860,868,869,870,911,912,963,977,1280,1281,1284,1288,1294],none:[40,41,42,43,59,61,64,389,390,391,433,435,436,439,441,448,449,450,451,458,459,460,461,462,463,464,465,466,468,478,480,487,488,838,839,840,841,842,843,845,853,858,859,860,861,862,868,869,870,911,912,913,922,923,929,930,955,956,957,958,963,970,971,972,987,990,994,1010,1011,1016,1021,1022,1023,1028,1030,1032,1033,1034,1035,1036,1040,1041,1047,1049,1050,1051,1054,1057,1058,1059,1060,1065,1066,1067,1068,1077,1078,1083,1084,1087,1089,1091,1092,1093,1099,1100,1104,1107,1110,1112,1135,1136,1137,1138,1139,1183,1184,1187,1191,1192,1195,1196,1197,1198,1199,1202,1204,1205,1206,1207,1208,1209,1210,1220,1222,1224,1226,1229,1230,1231,1232,1237,1238,1239,1240,1241,1245,1249,1257,1258,1259,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291],norm:[40,41,858,860,987,1001,1002,1107,1110,1238,1251,1283,1284,1286],normal:[1195,1198,1237,1238,1282,1283],normalized_idx:[1237,1238],normalized_shap:[1282,1283],notat:[40,41,1202,1203],note:[43,1107,1112],noth:[40,41,1294],notimplementederror:1139,now:[40,41,913,958,987,988,1139,1251,1268,1279,1280,1281,1293,1294,1297],np_concat:1251,np_finfo:392,ns_tune_step:1139,num:[435,458,459,987,1040,1041],num_arrai:[40,41],num_arrays_in_memori:987,num_arrays_on_dev:913,num_band:[987,1020],num_channel:[1268,1275],num_chunk:1139,num_chunks_floor:1139,num_class:[1195,1196],num_cpu_cor:913,num_gpu:[121,433,913,1139],num_head:[1220,1231,1268,1279],num_kei:[1220,1231,1232],num_lay:[1268,1277],num_or_size_split:[40,41,435,464,987,1065],num_output:1139,num_queri:[1220,1231,1232],num_sampl:[435,457,487,488,987,1039,1100,1101,1195,1196],num_task:[1135,1136,1137,1138],number:[40,41,42,837,841,842,843,845,852,868,869,870,911,912,913,949,950,951,963,974,978,979,987,990,1000,1004,1017,1020,1027,1030,1039,1040,1041,1044,1048,1054,1065,1072,1076,1080,1082,1107,1114,1135,1136,1137,1138,1139,1195,1196,1200,1202,1204,1205,1206,1208,1210,1220,1231,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1294,1297],numer:[43,845,851,872,891,897,987,1025,1026,1059,1060,1067,1068,1119,1127,1259],numhead:[1220,1231],numpi:[40,41,43,389,390,391,392,394,395,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,987,1075,1107,1112,1114,1202,1203,1251,1293,1294,1297],nwc:[1220,1221,1222,1268,1269,1270],obj:[40,41],object:[40,41,42,59,392,841,842,843,913,963,967,987,990,994,1084,1183,1186,1188,1189,1190,1193,1194,1195,1201,1245,1249,1259,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1280,1281],object_in:[435,439,987,994],observ:1139,occupi:[841,842,843,987,1057,1058],off:[987,990],offer:1251,offset:[858,859,1237,1238],often:1294,old:[40,41],on_init:[1268,1279,1280,1281],onc:[43,913,957,1139,1195,1196,1251],one:[40,41,43,858,860,861,862,913,942,943,944,945,957,963,969,987,1030,1042,1049,1057,1058,1066,1069,1107,1110,1139,1202,1203,1204,1205,1206,1207,1208,1209,1210,1251,1294,1297],one_hot:[128,435,564,695,987],onearrai:[987,1017],ones:[40,41,77,206,389,512,642,838,987,1030,1049,1051,1251],ones_lik:[128,291,435,564,695,987],ongo:43,onli:[40,41,43,487,861,862,913,1107,1112,1139,1183,1184,1185,1191,1284,1285,1286,1287,1288,1289,1293,1294],onlin:1251,onto:[913,942,943,958,1139,1183,1187,1192],oom:[913,1139],open:[987,990,1195,1199,1251,1297],opencv:1294,oper:[40,41,845,855,987,997,1012,1013,1014,1040,1041,1070,1084,1087,1089,1091,1092,1093,1116,1117,1118,1220,1221,1222,1223,1224,1225,1226,1227,1229,1251,1252],operand:[40,41,845,846,1202,1203],oppos:[987,1020],optim:[913,1084,1087,1089,1091,1092,1093,1135,1136,1137,1138,1139,1251,1285,1286,1287,1289,1293,1297],optimizer_upd:1084,option:[15,18,19,40,41,42,43,389,390,391,838,839,840,858,860,861,862,868,869,870,911,912,913,922,923,931,935,936,937,938,939,942,943,944,945,952,955,956,957,958,962,963,968,973,977,986,987,989,990,992,993,994,1001,1002,1003,1008,1010,1011,1020,1021,1022,1023,1027,1029,1030,1037,1039,1040,1041,1042,1045,1047,1049,1050,1051,1054,1057,1058,1061,1063,1065,1066,1067,1068,1069,1077,1079,1080,1083,1084,1087,1089,1090,1091,1092,1093,1095,1100,1104,1107,1110,1112,1135,1136,1137,1138,1139,1183,1184,1185,1187,1191,1192,1195,1196,1202,1204,1205,1206,1207,1208,1209,1210,1212,1213,1217,1220,1228,1229,1231,1232,1233,1234,1235,1236,1237,1238,1257,1258,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1294],ord:[858,860,1107,1114],order:[40,41,42,43,858,860,861,862,865,866,1084,1087,1089,1091,1092,1093,1107,1110,1135,1136,1137,1290,1291],ordered_node_util_kei:1139,org:1297,organ:43,origin:[40,41,42,987,1051,1055,1083,1107,1110],other:[40,41,43,872,874,875,880,882,883,887,889,890,891,892,893,895,897,898,899,900,901,902,904,905,906,908,909,910,911,912,987,989,990,1030,1084,1088,1195,1199,1251,1293,1294,1297],other_i:[43,872,891,897],otherwis:[15,16,17,18,19,40,41,845,851,858,860,868,869,870,913,930,963,970,971,972,987,997,1077,1078,1081,1084,1090,1095,1099,1135,1136,1137,1139,1202,1204,1205,1206,1208,1210],our:[43,1251,1297],out:[43,487,872,891,987,990,1119,1123,1220,1228,1230,1251,1268,1276],out_feat_dim:[1220,1231],out_featur:[1220,1228,1229],out_i:[845,851],outdat:1297,outer:[1135,1136,1137,1138],outer_batch_fn:[1135,1136,1137],outer_batch_shap:[1220,1229],outer_cost_fn:[1135,1136,1137],outer_v:[1135,1136,1137],outlin:1294,output:[40,41,43,838,839,840,861,862,913,922,923,957,987,990,999,1021,1030,1054,1072,1084,1088,1119,1124,1139,1195,1197,1198,1199,1220,1222,1224,1226,1228,1230,1231,1232,1251,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279],output_ax:[913,957,1139],output_axi:1139,output_channel:[1268,1269,1270,1271,1272,1273,1274,1277,1278],output_connected_onli:[1239,1241,1245,1280,1281],output_queu:1139,output_shap:[1220,1222,1224,1226,1268,1270,1272,1274],outsid:[987,1000],over:[40,41,858,860,868,869,870,1107,1110,1195,1199,1202,1204,1205,1206,1208,1210,1237,1238,1282,1283],overal:1294,overflow:[987,990],overhead:1294,overrid:[987,1049,1051,1083],overriden:[1284,1288],overwrit:[40,41,913,957,1139],overwrite_at_key_chain:[40,41],own:[1251,1294,1297],packag:[43,1294],pad:[987,1004,1020,1082,1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275],pad_width:[435,987,1004,1082],page:1251,pair:[1220,1232],parallel:[913,922,923,1139],parallelis:[913,922,923,1139],param:[40,41,42,43,435,449,450,845,856,913,957,987,988,1022,1023,1049,1050,1139,1250,1251,1280,1281,1293],paramet:[15,16,17,18,19,40,41,42,838,839,840,841,842,843,845,846,847,848,849,850,851,852,853,854,855,858,859,860,861,862,865,866,868,869,870,872,891,897,911,912,913,922,923,929,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,952,955,956,957,958,959,962,963,967,968,969,973,974,975,976,977,978,979,986,987,989,990,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1027,1029,1030,1031,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1050,1051,1054,1055,1056,1057,1058,1059,1060,1061,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1095,1097,1098,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1257,1258,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293],parameter:[1195,1198,1199],params_all_empti:1245,pardo:1251,pars:[987,1005],part:[1084,1087,1089,1091,1092,1093,1119,1123,1251,1280,1281,1294],partial:[40,41,1280,1281],particl:1297,particular:[43,1297],pass:[40,41,42,43,913,922,957,963,968,987,999,1084,1098,1135,1136,1137,1139,1257,1258,1280,1281,1284,1288,1290,1291],pattern:[40,41,987,1012,1013,1014],per:[913,1139,1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275],percent_used_mem_on_dev:913,percent_used_mem_on_nod:1139,percentag:[913,952,1139],perf_count:1139,perform:[40,41,43,865,866,868,869,870,913,987,992,993,1008,1012,1013,1014,1033,1034,1035,1039,1040,1041,1084,1087,1089,1091,1092,1093,1100,1101,1135,1136,1137,1138,1139,1183,1188,1189,1202,1204,1205,1206,1207,1208,1209,1210,1212,1217,1220,1228,1230],permissable_step:1139,permit:43,permut:[487,987,1071,1077],perpendicular:[987,1007],person:1251,physci:1297,pickl:[40,41,1139],pickle_filepath:[40,41],pid:1245,pinv:[349,772,1107],pip:1251,pipelin:1293,pkk:1297,pkkm1:1297,pkm1km1:1297,place:[40,41,43,838,839,840,913,958,987,1017,1021,1033,1034,1035,1139,1284,1285,1286,1287,1288,1289],placehold:[1183,1192],pleas:[487,1107,1112],point:[43,837,838,839,840,841,842,845,846,856,858,860,963,978,987,990,1119,1127],popul:[40,41,1195,1196],popular:1297,population_s:[487,488,1195,1196],portabl:[1251,1252],posit:[15,16,17,841,842,845,851,913,935,939,945,987,988,990,1017,1020,1139,1195,1200,1257,1258],possibi:[40,41],possibl:[43,987,1042,1074,1100,1105,1297],post:[1237,1238],post_shap:[40,41],power:[43,872,897,903,987,1025,1059,1068,1259],practic:1251,pre:[913,1139,1251],pre_shap:[40,41],precis:[841,842,845,856],pred:[1233,1234,1235,1236],predict:[1233,1234,1235,1236,1297],preprint:1251,present:[40,41],preserv:[40,41,42,861,862,1084,1095],preserve_typ:[40,41,469,472,1084,1095],press:1251,prevent:[43,1084,1086,1087,1091,1139,1284,1285,1286],previou:[1084,1087,1091],previous:[987,999],prime:1251,print:[40,41,42,913,953,987,1052,1251,1293],print_all_arrays_in_memori:987,print_all_arrays_on_dev:913,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1284,1288],prob:[487,488,1195,1196,1220,1228,1268,1276],probabl:[1195,1196,1220,1228,1268,1276],problem:[43,1297],process:[43,913,922,923,952,962,987,1047,1139],process_specif:[913,952,962,1139],prod:[40,41,987,1013],produc:[913,922,923,1139],product:[40,41,987,1007,1008,1043,1202,1203,1220,1231,1232,1268,1279],profil:[121,285,433,557,687,913,1139],project:[1251,1293,1294,1297],promot:[43,845,846,847,856,858,860,872,897,1119,1127],prompt:1251,properli:43,properti:[40,41,392,913,925,1139,1245,1249,1280,1281,1284,1285,1286,1287,1289],provid:[40,41,43,861,862,868,869,870,911,912,913,930,963,970,971,972,977,986,987,1011,1049,1051,1058,1083,1084,1087,1089,1091,1092,1093,1099,1139,1251,1268,1277,1284,1285,1286,1287,1288,1289,1294],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1107,1111],ptype:[1245,1249],pull:[1251,1252],pure:[40,41,1251,1297],purpos:1297,put:1139,pybroadexcept:1139,pyprotectedmemb:[1139,1246],pyshadowingbuiltin:43,pyshadowingnam:[914,964,965,966,1085,1139],python:[40,41,913,952,962,987,990,1139,1251],pytorch:[1084,1087,1089,1091,1092,1093,1107,1112,1251,1284,1285,1286,1287,1288,1289,1293,1294,1297],pyunresolvedrefer:1139,quadrant:[1119,1124],queri:[40,41,872,886,907,913,946,956,1139,1220,1231,1232,1268,1279],query_dim:[1268,1279],query_kei:[40,41],queue:[40,41,42,913,922,923,987,1053,1061,1139],queue_class:[913,922,923,1139],queue_load_s:[40,41,42],queue_timeout:[40,41,42,987,1139],quick:[487,1251],quickli:[43,1293],radian:[845,849,1119,1120,1122,1124,1131,1133],rai:[1119,1120],rais:[40,41,43,868,869,870,872,897,987,997,1025,1059,1066,1068,1078,1139,1280,1281,1284,1288],ram:[913,952,959,962,1139],randint:[174,361,487,620,800,1195],random:[37,40,41,488,1196,1197,1198,1199,1200,1201,1251],random_crop:1100,random_norm:[174,361,487,620,800,1195],random_uniform:[174,361,487,620,800,1195],randomli:[487,1100,1104,1220,1228,1268,1276],randomness_factor:[1239,1241,1245,1280,1281],rang:[487,987,990,1040,1041,1119,1124,1139,1251,1293,1297],rank:[858,860,868,869,870,987,1004,1079,1082],rate:[1084,1087,1089,1091,1092,1093,1135,1136,1137,1138,1268,1279,1284,1285,1286,1287,1288,1289],rather:[40,41,43,913,957,987,990,1037,1084,1090,1139],ratio:[913,1084,1091,1100,1105,1139,1284,1286],raw:[40,41,1107,1112],raw_delta:1139,reach:[913,935,939,945,1139,1183,1192],read:[40,41],readi:[1139,1293],real:[1119,1120,1123],realiti:1294,rearrang:[40,41,987,1012,1014],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1135,1137],receiv:[43,913,922,923,987,991,1042,1139,1268,1278],receivess:[913,1139],receiving_fn:1245,receivng:[1135,1138],recev:[1135,1136,1137],recognit:1297,recommend:1251,rectifi:[1212,1214,1215],recurr:[1220,1230],recurrent_bia:[1220,1230],recurrent_kernel:[1220,1230],recurs:[40,41,1183,1184,1185,1191,1192],redefin:43,reduc:[40,41,868,869,870,913,957,987,1013,1107,1112,1139,1202,1204,1205,1206,1207,1208,1209,1210],reduce_max:[40,41,181,366,489,625,807,1202],reduce_mean:[40,41,181,366,489,625,807,1202,1251,1293],reduce_min:[40,41,181,366,489,625,807,1202],reduce_prod:[40,41,181,366,489,625,807,1202],reduce_std:[40,41,366,1202],reduce_sum:[40,41,181,366,489,625,807,1139,1202],reduce_var:[40,41,181,366,489,625,807,1202],reduct:[39,40,41,435,462,463,868,869,870,987,1013,1057,1058,1203,1204,1205,1206,1207,1208,1209,1210,1251],refactor:43,refer:[43,868,869,870,1084,1086,1087,1107,1115,1268,1278,1297],reflected_oper:[0,13,14],regard:[913,1139],regardless:[40,41,911,912],register_paramet:1293,reimplement:1297,rel:[861,862,1084,1087,1089,1091,1092,1093],rel_slice_obj:1139,relev:[1284,1285,1286,1287,1288,1289],relu:[816,1212,1213,1214,1251,1293],remain:[43,987,1055,1183,1187],remaind:[40,41,987,1019,1065],remov:[40,41,43,987,1066,1135,1136,1137],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,861,862],rep:[987,1072],repeat:[40,41,43,291,695,987,1014,1072,1139,1294],repeated_config_check:[913,1139],repeatedli:[1183,1190],repetit:[40,41,987,1054,1072],replac:[40,41,43,487,488,987,1000,1057,1058,1195,1196],repo:[43,1251],repositori:43,repres:[43,845,846,963,969,974,1220,1229],represent:[40,41,42,43,837,841,842,843,845,847,913,940,941,963,969,975,976,987,1064,1074,1139],reptil:[1135,1138],reptile_step:1135,request:[1251,1252],requir:[43,845,856,911,912,963,967,987,990,994,1257,1258],resampl:[987,1039],reserv:43,reshap:[40,41,43,487,695,987],reshape_lik:[40,41],respect:[845,847,853,872,891,987,1015,1084,1086,1087,1088,1089,1091,1092,1093,1107,1112,1119,1127,1135,1136,1137,1138],respond:43,respons:1139,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,845,846,847,851,853,855,856,858,860,868,869,870,872,891,897,913,922,987,990,1015,1057,1058,1069,1107,1110,1116,1117,1118,1119,1127,1139,1202,1204,1205,1206,1207,1208,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1251],ret:1139,ret_dict:1139,ret_fn:[913,922,923,1139],retain:[1084,1088],retain_grad:[469,470,1084,1088],retreiv:1139,retrn:[987,1064],return_cont:[40,41],return_dict:[40,41],return_graph:[1239,1240,1241],return_inner_v:[1135,1136,1137,1138],return_sequ:[1268,1277],return_st:[1268,1277],rev:[987,1011],revers:[40,41,861,862,987,1011,1077],review:43,right:[40,41,43],rk_e:1297,robot:1251,ronald:1251,root:[43,845,856],round:[291,435,695,845,856,987,990,1139],row:[987,1030,1195,1196],rule:[43,845,847,856,872,897,987,990,1119,1127],run:[43,913,922,1084,1086,1087,1091,1135,1136,1137,1138,1139,1251,1252,1268,1279,1280,1281],safe:[913,922,1139],safety_factor:[913,1139],same:[15,16,17,40,41,43,845,848,861,862,913,922,923,957,958,963,967,987,988,1003,1018,1019,1022,1023,1049,1051,1056,1057,1058,1069,1083,1084,1090,1095,1107,1114,1119,1123,1135,1136,1137,1139,1202,1203,1220,1221,1222,1223,1224,1225,1226,1227,1251,1268,1269,1270,1271,1272,1273,1274,1275,1293,1297],same_arrai:[40,41],sampl:[987,1039,1100,1101,1195,1196,1198,1199,1220,1228,1251,1268,1276],satisfi:[987,994,1107,1109,1115],save:[40,41,987,1062,1073,1100,1102,1280,1281],save_debug_info:1245,save_dir:[433,434,913,928,1139],save_to_disk:[1239,1241,1245,1280,1281],save_weight:[1280,1281],scalar:[858,860,987,1000,1049,1076,1080],scale:[913,955,956,1084,1092,1139,1220,1228,1231,1232,1237,1238,1268,1276,1279,1284,1287],scaled_dot_product_attent:1220,scatter:[987,1049,1057,1058],scatter_flat:[128,291,435,564,695,987],scatter_nd:[128,291,435,564,695,987],scene:[1084,1087,1089,1091,1092,1093],schemat:1251,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,845,847,913,944,987,995,1007,1015,1053,1061,1071,1084,1086,1087,1091,1135,1137,1139,1284,1285,1286],secondli:1297,sector:[845,846],see:[43,59,392,433,434,487,845,847,858,860,868,869,870,872,891,897,913,925,926,927,928,963,987,990,1040,1041,1084,1119,1127,1245,1249,1251,1259,1261,1262,1264,1265,1267],seed:[40,41,174,487,800,1195],seed_valu:[40,41,487,1195,1200],seem:1251,seen_set:[987,1028],select:[987,994,1066,1294,1297],self:[40,41,43,59,392,433,434,872,891,897,913,925,926,927,928,963,1084,1139,1245,1249,1251,1259,1261,1262,1264,1265,1267,1284,1288,1293,1297],self_i:[872,891],sent:1139,seper:[43,987,1020],seq:[40,41,42,1202,1203,1280,1281],sequenc:[15,16,17,40,41,42,43,487,911,912,913,922,923,932,933,934,935,936,937,938,939,942,943,957,963,967,987,990,994,996,998,1003,1004,1030,1042,1045,1050,1054,1055,1058,1065,1069,1072,1077,1082,1084,1088,1100,1104,1105,1107,1110,1139,1183,1194,1195,1197,1199,1202,1204,1205,1206,1207,1208,1209,1210,1220,1221,1222,1223,1224,1225,1226,1227,1237,1238,1257,1258,1268,1269,1270,1271,1272,1273,1274,1275,1277,1280,1281,1282,1283,1284,1288,1290,1291],sequenti:1251,seri:43,set:[15,18,19,40,41,913,942,943,955,956,957,987,989,1010,1030,1059,1060,1061,1062,1084,1087,1089,1090,1091,1092,1093,1107,1110,1139,1183,1184,1191,1193,1194,1195,1196,1200,1202,1204,1205,1206,1207,1208,1209,1210,1249,1251,1268,1277,1284,1285,1286,1287,1288,1289,1294,1297],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1249,set_debug_mod:44,set_default_devic:913,set_default_dtyp:963,set_default_float_dtyp:963,set_default_int_dtyp:963,set_default_nod:1139,set_exception_debug_mod:44,set_framework:[40,41,43,59,1139,1251,1293,1294,1297],set_ivy_backend:[40,41],set_min_bas:987,set_min_denomin:987,set_nest_at_index:1183,set_nest_at_indic:1183,set_param:1245,set_queue_timeout:987,set_split_factor:[913,1139],set_stat:[1284,1285,1286,1287,1288,1289],set_tmp_dir:987,set_with_grad:1084,setter:1139,sever:1297,sgd:[1251,1284],shape0:1139,shape:[40,41,43,389,390,391,435,448,463,487,695,838,839,840,845,848,861,862,913,925,963,967,987,988,998,1003,1004,1017,1018,1019,1021,1023,1027,1030,1049,1050,1051,1054,1055,1056,1057,1058,1064,1066,1069,1082,1083,1100,1104,1107,1109,1112,1119,1123,1124,1139,1195,1197,1198,1199,1202,1203,1220,1222,1224,1226,1245,1249,1268,1270,1271,1272,1273,1274,1275,1282,1283],shape_slic:[40,41],shape_to_tupl:987,share:[40,41,1251,1294],shift:1139,should:[40,41,42,43,487,845,846,847,851,856,858,860,872,891,897,911,912,913,987,998,999,1005,1049,1055,1084,1087,1089,1091,1092,1093,1119,1127,1139,1202,1203,1251],show:[40,41,1245,1251,1297],show_debug_info:1245,show_graph:[1239,1251,1280,1281,1284,1288],show_mod_in_top_mod:[1280,1281],show_structur:[1280,1281],show_sub_contain:[40,41],show_v:[1280,1281],show_v_in_top_v:[1280,1281],shown:[40,41],shp:1139,shuffl:[40,41,174,487,800,1195],shuffle_h5_fil:[40,41],sigmoid:[816,1212,1251,1293],sign:[1107,1113],signatur:[43,59,392,433,434,435,469,474,478,484,485,487,913,925,926,927,928,963,1084,1245,1249,1259,1261,1262,1264,1265,1267],signific:1297,similar:[43,1220,1231,1268,1279],similarli:[1107,1112],simpl:[43,987,1016,1251,1294,1297],simpler:43,simplest:1294,simpli:[40,41,43,1251,1294,1297],simultan:1251,sin:[785,987,1020,1119,1133,1294],sinco:1294,sine:[845,846,1119,1122,1131,1132],singl:[40,41,911,912,913,922,923,942,943,944,945,987,1066,1076,1080,1100,1105,1139,1195,1198,1199,1202,1204,1205,1206,1207,1208,1209,1210,1251,1294,1297],singleton:[858,860,868,869,870],singular:[1107,1114],sinh:[785,1119],siren:[1251,1259],size:[40,41,42,435,462,913,936,937,938,939,955,956,957,987,990,998,1040,1041,1057,1065,1100,1104,1107,1110,1114,1139,1195,1196,1198,1199,1202,1204,1205,1206,1207,1208,1209,1210,1268,1269,1270],size_ordered_arrai:[40,41],skew:[1107,1115],skinv:1297,skip:[40,41],slice:[40,41,865,866,987,1022,1023,1139,1183,1190],slice_kei:[40,41],slice_obj:[40,41,1139],slice_via_kei:[40,41],slide:[1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275],slodget:1107,slogdet:[349,478,611,772,1107,1113],slope:[1212,1214],small:[1233,1234,1235,1236,1237,1238,1251,1282,1283,1294],smaller:[987,1000],smallest:[40,41,841,842,843,845,848,987,993],smallest_norm:[392,841,842],softmax:[190,498,816,1212,1220,1231,1232],softplu:[816,1212],solv:1297,some:[40,41,43,987,990,1084,1086,1087,1089,1091,1092,1093,1098,1220,1228,1251,1268,1276,1294,1297],some_backend:43,some_namespac:43,someth:[43,1297],something_cool:43,somewher:[40,41],soon:43,sort:[40,41,42,866,1107,1114,1139],sort_by_kei:[40,41],sorting_funct:[865,866],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,389,390,391,392,394,395,433,434,435,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,485,486,487,488,838,839,840,841,842,843,845,846,847,848,849,850,851,852,853,854,855,856,858,859,860,861,862,865,866,868,869,870,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,915,916,917,918,919,920,922,923,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1249,1254,1255,1256,1257,1258,1259,1261,1262,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1295,1296,1297],space:[987,990,1020,1040,1041],spars:[1233,1236],sparse_cross_entropi:1233,spawn:[987,1047],special:[845,846],specif:[40,41,43,913,955,987,1005,1012,1013,1014,1047,1135,1136,1137,1138,1139,1195,1201,1251,1280,1281,1293,1294],specifc:[1195,1196],specifi:[40,41,43,858,859,860,861,862,868,869,870,913,932,933,934,935,936,937,938,939,942,943,947,949,953,956,957,958,963,967,969,987,990,992,993,994,1000,1003,1004,1021,1022,1023,1029,1040,1041,1069,1079,1082,1107,1110,1139,1183,1188,1189,1193,1194,1202,1203,1204,1205,1206,1207,1208,1209,1210],split:[40,41,128,291,435,564,695,913,922,936,937,938,939,955,956,957,987,1042,1139],split_arg:1139,split_factor:[913,922,1139],split_func_cal:[913,1139],split_siz:1139,spread:[913,945,1139],sqrt:[85,214,397,520,650,845,858,860],squar:[845,856,987,1030,1107,1109,1113],squeez:[128,291,435,564,695,987],stabil:[865,866,987,1067,1068],stabl:[865,866,987,1025,1026,1059,1060,1067,1068],stable_divid:987,stable_pow:987,stack:[40,41,291,695,987,1100,1105,1183,1184,1191,1268,1277],stack_imag:[164,345,474,607,768,1100],stacked_dim_s:1139,stage:43,standard:[40,41,841,842,1195,1198,1202,1208,1237,1238,1251,1252,1282,1283],start:[40,41,43,433,434,435,436,458,459,487,913,928,987,990,1040,1041,1139,1251,1294],starting_index:[40,41],starting_split_factor:[913,1139],state:[1139,1220,1230,1239,1240,1241,1245,1251,1254,1255,1256,1257,1258,1259,1261,1262,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1293],statement:1294,static_argnam:[435,441,911,912],static_argnum:[435,441,911,912],std:[487,1195,1198],step:[40,41,435,436,913,987,990,1040,1041,1084,1086,1087,1089,1091,1092,1093,1135,1136,1137,1138,1139,1251,1284,1285,1286,1287,1288,1289,1293,1297],stephen:1251,stick:1251,still:[40,41,43],stochast:[1284,1289],stop:[40,41,433,434,435,436,458,459,913,928,957,987,990,1040,1041,1084,1087,1089,1091,1092,1093,1095,1135,1136,1137,1138,1139,1284,1285,1286,1287,1288,1289],stop_gradi:[40,41,340,469,602,762,913,957,1084,1087,1089,1091,1092,1093,1135,1136,1137,1138,1139,1284,1285,1286,1287,1288,1289],stopiter:1139,store:[40,41,987,1020,1065,1084,1098,1280,1281],store_var:[1280,1281],str:[15,16,17,40,41,42,43,389,390,391,392,394,395,841,842,843,911,912,913,922,923,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,957,963,968,969,974,975,976,977,978,979,986,987,994,1010,1012,1013,1014,1045,1047,1050,1057,1058,1107,1110,1112,1135,1136,1137,1138,1139,1183,1187,1202,1203,1257,1258,1268,1279,1280,1281],str_to_nod:1139,straight:1294,strength:[1251,1297],stride:[1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275],string:[40,41,43,913,929,931,940,941,946,952,958,959,962,963,967,973,975,976,977,986,987,990,994,1010,1030,1050,1051,1083,1139,1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275,1280,1281],structur:[40,41,42,43,987,1005],structural_diff:[40,41],sub:[40,41,913,936,937,942,943,944,945,987,1065,1135,1136,1137,1138,1139],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1139,sub_mod:[1280,1281],sub_modul:[1290,1291],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1251,1252,1282,1283,1290,1291],subsequ:43,subset:43,substr:[40,41],suffici:[1107,1112],suggest:1251,suitabl:[1100,1105],sum:[40,41,435,462,463,858,860,913,942,943,944,945,957,987,1009,1013,1057,1058,1139,1202,1203,1209],summat:[40,41,1202,1203],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,81,82,83,86,87,88,89,90,91,92,93,94,95,96,99,100,102,106,109,110,122,123,124,125,126,127,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,162,163,165,166,167,169,170,171,175,176,177,178,179,180,182,183,184,185,186,187,188,191,193,194,196,197,198,199,200,201,202,207,208,210,211,212,215,216,217,218,219,220,221,224,225,227,231,234,235,247,248,249,250,251,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,286,287,288,289,290,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,341,342,343,344,346,347,348,350,351,352,353,354,355,356,358,359,362,363,364,365,367,368,369,370,371,372,373,374,377,379,380,381,382,383,384,385,390,391,393,394,395,398,399,400,401,402,403,404,405,406,407,408,411,412,414,418,421,422,434,436,437,438,439,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,470,471,472,473,475,476,477,479,480,481,482,483,486,488,490,491,492,493,494,495,496,499,500,502,503,504,505,506,507,508,513,514,516,517,518,521,522,523,524,525,526,527,528,529,530,531,534,535,537,541,544,545,553,558,559,560,561,562,563,565,566,567,568,569,570,571,572,573,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,603,604,605,606,608,609,610,612,613,614,615,616,617,621,622,623,624,626,627,628,629,630,631,632,636,637,638,643,644,646,647,648,651,652,653,654,655,656,657,658,659,660,661,664,665,667,671,674,675,683,688,689,690,691,692,693,694,696,697,698,699,700,701,702,703,704,705,706,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,763,764,765,766,767,769,770,771,773,774,775,776,777,778,779,780,781,783,784,786,787,788,789,790,791,792,793,794,795,796,797,798,799,801,802,803,804,805,806,808,809,810,811,812,813,814,817,818,819,820,821,822,823,825,826,828,829,830,831,832,833,834,839,840,842,843,846,847,848,849,850,851,852,853,854,855,856,858,859,860,862,866,869,870,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,912,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1235,1236,1238,1240,1241,1243,1244,1246,1250,1251,1255,1256,1258,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1283,1284,1285,1286,1287,1288,1289,1291,1292,1293,1294,1296,1297],supports_inplac:987,suppos:1297,sure:43,svd:[349,611,772,1107],swap:[40,41,987,1071],swapax:[40,41,564,695,987,1297],symmetr:[1107,1115],syntax:[433,435,469,474,478,484,485,487],tab:1251,take:[43,987,1039],taken:[43,1202,1204,1205,1206,1208,1210],tan:[785,1119,1123],tangent:[1119,1123,1124,1125,1133,1134,1212,1219],tanh:[785,816,1119,1212],target:[40,41,913,929,932,933,934,935,936,937,938,939,942,943,944,945,958,1139,1251],target_dict:[40,41],task:[43,1135,1136,1137,1138],team:[43,1297],templat:1251,temporari:[987,1062,1073],tensor:[40,41,43,435,462,463,865,866,913,931,963,973,987,990,992,993,998,1040,1041,1044,1046,1049,1050,1051,1055,1057,1058,1065,1083,1139,1195,1196,1197,1220,1228,1230,1251,1268,1276,1278,1284,1285,1286,1287,1288,1289,1293,1294],tensorflow:[43,1107,1112,1220,1222,1224,1226,1251,1268,1270,1272,1274,1294,1297],term:[40,41,1220,1230,1251,1268,1278],termcolor:[40,41,42],termin:[40,41,42,1139],test:[43,845,851,868,869,870,963,978,979],test_array_api:43,tf_concat:1251,than:[40,41,43,841,842,845,848,858,860,861,862,913,957,987,990,1000,1018,1037,1044,1066,1069,1084,1090,1139,1195,1199,1251,1294],thei:[40,41,43,1119,1124,1135,1136,1137,1195,1196,1251,1290,1291,1294],them:[1251,1297],themselv:[1183,1184],therefor:43,thi:[40,41,42,43,913,935,939,945,952,957,962,987,990,1020,1053,1055,1061,1084,1087,1089,1090,1091,1092,1093,1098,1107,1110,1113,1139,1183,1187,1192,1202,1204,1205,1206,1207,1208,1209,1210,1220,1229,1251,1280,1281,1284,1285,1286,1287,1288,1289,1293,1294,1297],thing:[43,1251],those:[40,41,43,987,1000,1084,1098,1107,1114,1139],though:43,threshold:[987,1044,1046],through:[40,41],tickbox:43,tile:[291,564,695,987],time:[987,1072,1084,1087,1091,1135,1136,1137,1138,1139,1195,1196,1220,1230,1268,1279,1280,1281,1297],time_chronolog:[1239,1240,1245],time_infer:[1239,1240],timeout:[40,41,42,913,922,923,987,1053,1061,1139],timestep:[1220,1230,1268,1277],timing_fnam:[1239,1240],titl:1251,tmp_dir:987,tmp_dr:[987,1062],to_appli:[40,41],to_clon:[913,1139],to_dev:[40,41,121,285,433,557,687,913],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[913,1139],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1251],to_ivy_modul:[192,824,1251,1257],to_json:[40,41],to_kv_fn:[1220,1231],to_kv_v:[1220,1231],to_list:[40,41,435,695,987],to_multi_dev:[40,41],to_mut:[1183,1185,1192],to_n:[15,40,41,1251],to_nod:1139,to_numpi:[40,41,435,695,987,1251,1293],to_out_fn:[1220,1231],to_out_v:[1220,1231],to_q_fn:[1220,1231],to_q_v:[1220,1231],to_raw:[40,41],to_scalar:[435,695,987],todo:[43,1139],togeth:[40,41,1290,1291],tool:[1251,1294],top_mod:[1280,1281],topic:1297,torch:[43,911,912,1251,1293,1294,1297],torch_concat:1251,torchfcmodel:1293,total:[40,41,42,913,959,1139],total_mem_on_dev:913,total_mem_on_nod:1139,tpu:[913,960,1139],tpu_is_avail:[433,557,687,913,1139],tpye:[963,974],trace:[40,41,987,1037],track:[43,913,1139,1183,1192,1280,1281],track_submod_call_ord:[1280,1281],track_submod_ret:[1280,1281],trail:[1282,1283],train:[1084,1086,1087,1091,1251,1252],trainabl:[1084,1090,1251,1252,1257,1258,1280,1281,1290],trainer:1251,tran:1297,transform:[1220,1228,1229],transpos:[40,41,128,291,435,695,913,944,987,1139,1220,1222,1224,1226,1268,1270,1272,1274],travers:[15,18,19,40,41,1183,1192],treat:[40,41,911,912],tree_depth:1249,tree_height:1245,tri:[40,41],trigonometr:[845,849,1119,1120,1123,1131],trim_kei:[40,41],trust:[1084,1091,1284,1286],truth:[845,853,855,872,891,987,1015,1116,1117,1118],try_else_non:987,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[913,1139],tune_dev_alloc:913,tune_dev_split:913,tune_node_alloc:1139,tune_node_split:1139,tune_step:[913,1139],tupl:[15,16,17,18,19,40,41,43,389,390,391,478,479,482,838,839,840,858,860,861,862,868,869,870,911,912,987,1004,1020,1021,1064,1082,1139,1183,1184,1185,1186,1188,1189,1190,1191,1192,1193,1194,1195,1197,1202,1204,1205,1206,1207,1208,1209,1210],tutori:43,two:[40,41,987,990,995,1007,1043,1071,1107,1110,1113,1114],type:[15,18,40,41,42,43,59,394,395,433,434,838,839,840,842,843,845,846,847,848,851,853,856,858,860,861,862,868,869,870,872,891,897,913,925,926,927,928,940,941,945,957,963,967,968,969,973,974,975,976,977,978,979,986,987,988,990,994,1003,1005,1015,1018,1019,1021,1030,1037,1049,1050,1051,1056,1070,1080,1083,1084,1090,1095,1119,1127,1139,1245,1249,1251,1259,1261,1262,1264,1265,1267,1280,1281,1294],types_to_iteratively_nest:[40,41,42],uint8:[1100,1102,1106],uint8_img_to_float_img:1100,unchang:[15,16,17,18,19],uncom:43,underli:[845,847],underwai:43,unif:1139,unifi:[40,41,913,942,943,944,945,957,1139,1251],uniform:[40,41,1195,1196,1198,1199,1259,1261,1262,1265,1266],uniformli:[1195,1197,1199],unify_arrai:1139,unify_it:1139,unify_nest:1139,union:[15,18,19,40,41,43,389,390,391,392,394,395,478,479,482,838,839,840,841,842,843,845,846,847,848,849,850,851,852,853,854,855,856,858,860,861,862,865,866,868,869,870,872,891,897,911,912,913,931,936,937,938,939,957,958,963,967,968,969,973,974,975,976,977,978,979,986,987,988,989,990,992,993,994,995,996,998,1000,1001,1002,1003,1004,1006,1007,1008,1009,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1027,1029,1030,1031,1038,1039,1040,1041,1043,1044,1045,1046,1049,1050,1051,1054,1055,1056,1057,1058,1063,1064,1065,1066,1069,1071,1072,1074,1075,1076,1077,1079,1080,1081,1082,1083,1139,1183,1184,1185,1191,1192],uniqu:[913,922,923,1135,1136,1137,1138,1139,1183,1187],unique_kwarg:1139,unit:[43,913,1119,1120,1122,1139,1212,1213,1214,1215],unitari:[1107,1114],unless:[987,1049,1051,1083],unlik:[913,1139],unnorm:[1195,1196],unpack:[987,1079],unrol:[1220,1230],unset:1294,unset_debug_mod:44,unset_default_devic:913,unset_default_dtyp:963,unset_default_float_dtyp:963,unset_default_int_dtyp:963,unset_framework:[59,1294],unset_with_grad:1084,unstack:[40,41,128,291,435,564,695,987],until:43,unus:[911,912],updat:[40,41,435,462,463,913,922,987,1035,1057,1058,1084,1086,1087,1089,1091,1092,1093,1135,1136,1137,1139,1183,1188,1189,1193,1194,1220,1230,1251,1252,1257,1258,1284,1285,1286,1287,1288,1289,1294,1297],update_backend:[40,41],update_config:[40,41],update_inference_tim:1245,upper:[40,41,1195,1199],upper_depth:[1280,1281],upstream:43,usabl:[1251,1297],usag:[913,957,1139],use:[40,41,42,43,487,913,922,923,948,960,987,1054,1067,1068,1107,1112,1139,1220,1231,1237,1238,1251,1282,1283,1294,1297],used:[40,41,43,487,913,922,952,955,956,962,963,974,987,1025,1026,1042,1051,1057,1058,1059,1060,1083,1084,1091,1092,1107,1110,1135,1136,1137,1138,1139,1183,1192,1268,1279,1284,1286,1287,1293,1294],used_dev:[913,922],used_mem_on_dev:913,used_mem_on_nod:1139,used_node_str:1139,used_node_strs_dict:1139,useful:[40,41,913,957,1139,1220,1229,1251,1294],user:[1251,1268,1279,1280,1281,1294,1297],uses:1251,using:[40,41,1084,1086,1087,1183,1186,1190,1202,1203,1220,1228,1232,1251,1268,1276,1293,1294,1297],util:[913,946,1139],utility_funct:[868,869,870],v_with_top_v_key_chain:[1280,1281],val:[40,41,435,453,454,455,872,907,987,1033,1034,1035,1059,1060,1249],valid:[868,869,870,963,968,987,1067,1068,1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275],valid_dtyp:963,valu:[40,41,435,845,852,853,855,858,860,865,866,872,891,913,925,956,957,987,988,990,992,993,1000,1001,1002,1004,1005,1011,1015,1020,1021,1022,1023,1038,1040,1041,1044,1046,1053,1054,1055,1056,1057,1058,1059,1060,1061,1077,1080,1081,1082,1084,1088,1091,1100,1106,1107,1113,1114,1116,1117,1118,1119,1128,1129,1130,1135,1136,1137,1139,1183,1187,1188,1189,1193,1194,1195,1198,1199,1202,1204,1206,1220,1231,1232,1237,1238,1245,1268,1279,1282,1283,1284,1286],value_is_nan:987,vanilla:[1135,1137],var_shap:1259,variabl:[15,16,17,18,19,40,41,340,469,602,762,987,997,1033,1034,1035,1036,1037,1070,1084,1087,1088,1089,1090,1091,1092,1093,1095,1098,1135,1136,1137,1138,1220,1231,1237,1238,1257,1258,1259,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291],variable_data:[469,762,1084],varianc:[40,41,1202,1210,1297],varieti:1294,variou:[43,1251],vector:[40,41,478,483,858,860,987,1002,1007,1107,1114,1115,1220,1229,1268,1278],vector_norm:[40,41,98,223,410,533,663,858],vector_to_skew_symmetric_matrix:[168,349,478,611,772,1107],verbos:1296,veri:[43,1251],verifi:43,version:43,via:[1183,1184,1191,1294],view:[1100,1105],vision:1251,visual:1294,volum:[1220,1225],vw_tm1:[1084,1087,1091],wai:[1294,1297],wait:[40,41,42,43],want:[1251,1294,1297],warn:[59,66,67,68,69,70],warp:[474,475,1100,1101],watch:1293,websit:43,weight:[1084,1086,1087,1089,1091,1092,1093,1220,1229,1230,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1280,1281,1284,1286,1287],weight_initi:[1268,1269,1270,1271,1272,1273,1274,1275,1277,1278],weights_path:[1280,1281],well:[40,41,987,1029],were:[40,41,1139],what:[43,1251],when:[40,41,42,43,913,987,999,1068,1081,1107,1114,1139,1251,1280,1281,1294,1297],where:[40,41,43,291,435,695,845,852,868,869,870,872,897,987,990,998,1000,1004,1017,1031,1038,1049,1082,1107,1114,1183,1184,1191,1195,1196],wherea:43,wherebi:[1183,1192],whether:[15,18,19,40,41,42,868,869,870,911,912,913,931,944,948,952,957,960,962,963,973,977,978,979,986,987,989,995,996,1008,1011,1016,1020,1027,1029,1032,1036,1037,1042,1063,1070,1079,1080,1084,1087,1088,1089,1090,1091,1092,1093,1095,1135,1136,1137,1138,1139,1183,1184,1185,1187,1191,1192,1195,1196,1212,1213,1220,1228,1251,1257,1258,1268,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289],which:[40,41,42,43,487,838,839,840,841,842,843,858,859,860,861,862,868,869,870,911,912,913,922,923,931,936,937,938,939,942,943,944,945,947,949,953,955,956,957,963,968,973,977,986,987,990,994,1003,1005,1007,1008,1009,1011,1021,1022,1023,1024,1030,1031,1039,1040,1041,1048,1049,1050,1051,1052,1054,1057,1058,1065,1069,1079,1081,1083,1084,1087,1088,1089,1091,1092,1093,1095,1097,1098,1100,1102,1107,1110,1119,1124,1139,1183,1187,1188,1189,1193,1194,1195,1196,1197,1198,1199,1202,1204,1205,1206,1207,1208,1209,1210,1212,1217,1220,1231,1232,1251,1257,1258,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1288,1290,1291,1293,1294],whitespac:[40,41,42],whose:[43,845,846,861,862,872,897,987,994,999,1202,1203,1204,1205,1206,1208,1210],why:[1251,1252],width:[1100,1105],wiki:1297,wikipedia:1297,window:[1100,1105,1220,1221,1222,1223,1224,1225,1226,1227,1268,1269,1270,1271,1272,1273,1274,1275],wise:[40,41,43,845,847,848,849,853,855,872,891,897,987,1000,1015,1018,1019,1044,1046,1056,1084,1087,1089,1091,1093,1116,1117,1118,1119,1120,1122,1123,1124,1127,1128,1129,1130,1131,1133,1212,1213,1214,1215,1216,1217,1218,1219],wish:1294,with_arg_label:[1239,1241,1245,1280,1281],with_array_cach:[1239,1240,1241,1245],with_bia:[1268,1278],with_cal:[987,1011],with_default_key_color:[40,41],with_edge_label:[1239,1241,1245,1280,1281],with_entries_as_list:[40,41],with_grad:[1084,1094,1280,1281],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1139,with_output_label:[1239,1241,1245,1280,1281],with_partial_v:[1280,1281],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,435,464,987,1065,1139],with_to_kv_fn:[1268,1279],with_to_out_fn:[1268,1279],with_to_q_fn:[1268,1279],within:[15,18,19,987,990,1107,1114,1195,1199],without:[40,41,43,987,1053,1055,1061,1183,1185,1294],wonder:1251,word:[15,16,17,987,990,1195,1199,1257,1258],work:[43,1293],worker:[913,922,923,1139],worker_class:[913,922,923,1139],worker_kwarg:1139,would:[43,865,866,1212,1217,1251,1294,1297],wrap:[15,40,41,42,43,433,435,469,474,478,484,485,487,987,999,1084,1098,1251],wrapper:43,write:[40,41,43,1251,1252,1297],written:[43,1251,1297],ws_new:[1084,1087,1089,1091,1092,1093],x1_i:[845,847,853,987,1015,1119,1127],x2_i:[845,847,853,987,1015,1119,1127],x_feat_dim:[1220,1231],x_i:[845,846,851,856],x_in:[1251,1293],x_inv:[1107,1109],x_max:[435,987,1000],x_min:[435,987,1000],x_sub:1139,xkk:1297,xkkm1:1297,xkm1km1:1297,xs0:1139,xs_t:1139,year:[1251,1297],yet:[1183,1192,1297],yield:[987,1081],you:[43,1251,1293,1294,1297],your:[1251,1252,1293,1294,1297],your_awesome_project:1294,yourself:[43,1251],yourslef:43,youtub:43,zero:[40,41,77,206,389,512,642,838,858,860,868,869,870,987,1004,1049,1051,1057,1058,1082,1083,1084,1086,1087,1091,1092,1220,1228,1251,1259,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1284,1285,1286,1287],zero_pad:[291,435,564,695,987],zeros_lik:[128,291,435,564,695,987],zip:1139,zk_e:1297},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","pinv","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","qr","slogdet","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","det","inv","matrix_norm","pinv","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","slodget","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1011,"function":[77,80,85,97,101,103,104,105,107,108,206,209,214,222,226,228,229,230,232,233,389,392,397,409,413,415,416,417,419,420,512,515,520,532,536,538,539,540,542,543,642,645,650,662,666,668,669,670,672,673,838,841,845,857,861,863,864,865,867,868],Ones:1264,Using:1294,abs:[292,565,696,988],aco:[786,1120],acosh:[787,1121],activ:[190,376,498,634,816,1212,1254],adam:1285,adam_step:1086,adam_upd:1087,algebra:[98,168,223,349,410,478,533,611,663,772,858],all:[109,234,421,544,674,869],all_equ:989,all_nested_indic:1184,ani:[110,235,422,545,675,870],api:[0,43,75,112,204,237,387,424,510,547,640,677,836],arang:[129,293,436,566,697,990],arg_nam:991,argmax:[130,437,567,698,992],argmin:[131,438,568,699,993],args_to_ivi:16,args_to_n:17,argsort:[106,231,418,541,671,866],arithmet:[1,113,238,425,548,678],arrai:[0,3,43,75,111,112,114,132,204,236,237,239,246,294,387,423,424,426,439,510,546,547,549,569,640,676,677,679,700,836,872,994],array_equ:[295,701,995],arrays_equ:996,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[788,1122],asinh:[86,398,521,651,846],assert_supports_inplac:997,atan2:[790,1124],atan:[789,1123],atanh:[791,1125],attribut:[5,115,240,427,550,680],backend:[43,73],bilinear_resampl:[165,346,475,608,769,1101],binary_cross_entropi:1234,bitwis:[7,116,241,428,551,681],bitwise_and:[87,215,399,522,652,847],broadcast_to:[296,702,998],builder:51,builtin:[111,236,246,423,546,676,872],builtin_ab:[247,873],builtin_add:[248,874],builtin_and:[249,875],builtin_bool:[250,876],builtin_contain:[251,877],builtin_deepcopi:[252,878],builtin_dir:[253,879],builtin_eq:[254,880],builtin_float:[255,881],builtin_floordiv:[256,882],builtin_g:[257,883],builtin_getattr:[258,884],builtin_getattribut:[259,885],builtin_getitem:[260,886],builtin_gt:[261,887],builtin_int:[262,888],builtin_invert:[263,889],builtin_l:[264,890],builtin_lt:[265,553,683,891],builtin_mul:[266,892],builtin_n:[267,893],builtin_neg:[268,894],builtin_or:[269,895],builtin_po:[270,896],builtin_pow:[271,897],builtin_radd:[272,898],builtin_rand:[273,899],builtin_rfloordiv:[274,900],builtin_rmul:[275,901],builtin_ror:[276,902],builtin_rpow:[277,903],builtin_rsub:[278,904],builtin_rtruediv:[279,905],builtin_rxor:[280,906],builtin_setitem:[281,907],builtin_sub:[282,908],builtin_truediv:[283,909],builtin_xor:[284,910],cache_fn:999,cast:[133,297,440,570,703,967],ceil:[88,216,400,523,653,848],choleski:[773,1108],choose_random_framework:61,citat:1251,clear_framework_stack:62,clear_mem_on_dev:[689,929],clip:[298,704,1000],clip_matrix_norm:1001,clip_vector_norm:1002,clone:1154,clone_arrai:1155,clone_it:1156,clone_nest:1157,clonedit:1141,cloneditem:1140,clonednest:1142,closest_valid_dtyp:968,code:1297,comparison:[9,117,242,429,552,682],compil:[299,441,705,911,912,1239],compile_graph:1240,concaten:[134,300,442,571,706,1003],constant:[76,205,388,511,641,837],constant_pad:[301,572,707,1004],contain:[40,41],container_typ:[708,1005],content:1251,contribut:43,conv1d:[196,379,502,828,1221,1269],conv1d_transpos:[197,380,503,829,1222],conv1dtranspos:1270,conv2d:[198,381,504,636,830,1223,1271],conv2d_transpos:[199,382,505,831,1224],conv2dtranspos:1272,conv3d:[200,383,506,637,832,1225,1273],conv3d_transpos:[201,384,507,833,1226],conv3dtranspos:1274,convers:15,convert:[192,824,1257],convert_dtyp:969,copy_arrai:[709,1006],copy_nest:1185,core:[120,245,432,556,686,871],cos:[89,401,524,654,849],cosh:[90,402,525,655,792,850,1126],cprint:1296,creat:43,creation:[77,206,389,512,642,838],cross:[302,710,1007],cross_entropi:1235,cumprod:[135,303,443,711,1008],cumsum:[712,1009],current_framework:63,current_framework_str:[713,1010],data:[80,84,209,213,392,396,515,519,645,649,841,844],debug_mod:45,debugg:44,default_devic:930,default_dtyp:970,default_float_dtyp:971,default_int_dtyp:972,default_nod:1158,depthwise_conv2d:[202,385,508,638,834,1227],depthwiseconv2d:1275,design:43,det:[350,479,612,774],dev:[123,287,559,690,931],dev_clon:932,dev_clone_arrai:933,dev_clone_it:934,dev_clone_nest:935,dev_dist:936,dev_dist_arrai:937,dev_dist_it:938,dev_dist_nest:939,dev_from_str:[124,288,560,691,940],dev_to_str:[125,289,561,692,941],dev_unifi:942,dev_unify_arrai:943,dev_unify_it:944,dev_unify_nest:945,dev_util:946,devclonedit:916,devcloneditem:915,devclonednest:917,devdistit:919,devdistitem:918,devdistnest:920,devic:[20,121,285,433,557,687,913],devmapp:922,devmappermultiproc:923,diagon:[99,224,411,534,664,859],distribute_nest:1159,divid:1127,document:1251,dropout:[1228,1276],dtype:[136,304,444,573,714,963,973],dtype_bit:[137,305,445,574,715,974],dtype_from_str:[138,306,446,575,716,975],dtype_to_str:[139,307,447,576,717,976],ecosystem:52,einops_rearrang:1012,einops_reduc:1013,einops_repeat:1014,einsum:[182,367,490,626,808,1203],elementwis:[85,214,397,520,650,845],equal:[577,718,1015],erf:[486,793,1128],execute_with_gradi:[162,341,470,603,763,1088],exist:1016,exp:[794,1129],expand_dim:[308,719,1017],finfo:[82,211,394,517,647,842],firstlayersiren:1261,flip:[102,227,414,537,667,862],float_img_to_uint8_img:1102,floor:[309,720,1018],floormod:[310,721,1019],fomaml_step:1136,fork:43,fourier_encod:1020,framework:59,full:[140,311,448,578,722,1021],func:72,gather:[141,312,449,579,723,1022],gather_nd:[142,313,450,580,724,1023],geglu:1255,gelu:[377,499,817,1213,1256],gener:[22,128,291,435,564,695,987],get_all_arrays_in_memori:1024,get_all_arrays_on_dev:947,get_framework:64,get_min_bas:1025,get_min_denomin:1026,get_num_dim:[725,1027],get_referrers_recurs:1028,global:1242,glorotuniform:1262,gpu_is_avail:[948,1160],gradient:[24,161,340,469,602,762,1084],gradient_descent_upd:1089,gradient_imag:[166,347,476,609,770,1103],graph:1245,gym:53,handler:59,has_nan:1029,helper:1247,ident:[143,314,451,581,726,1030],iinfo:[83,212,395,518,648,843],imag:[26,164,345,474,607,768,1100],index_nest:1186,indices_wher:[144,315,452,727,1031],initi:1259,inplac:[11,118,243,430,554,684],inplace_arrays_support:1032,inplace_decr:[145,316,453,582,728,1033],inplace_incr:[146,317,454,583,729,1034],inplace_upd:[147,318,455,584,730,1035],inplace_variables_support:1036,inv:[775,1109],invalid_dtyp:977,is_arrai:[148,319,456,585,731,1037],is_float_dtyp:978,is_int_dtyp:979,is_vari:[163,342,471,604,764,1090],isfinit:[91,217,403,526,656,851],isinf:[320,586,732,1038],isnan:[92,218,404,527,657,852],ivi:[43,50,51,52,53,54,55,56,57,58,835,1293,1294,1297],ivymodul:[193,825],jax:74,keep:43,lamb:1286,lamb_upd:1091,lar:1287,lars_upd:1092,layer:[195,378,501,635,827,1220,1268],layer_norm:1238,layernorm:1283,leaky_relu:[818,1214],less:[93,219,405,528,658,853],linalg:[28,1107],linear:[98,168,223,349,410,478,533,611,663,772,858,1229,1278],linear_resampl:[149,321,457,587,733,1039],linspac:[150,322,458,588,734,1040],log2:[94,406,529,659,854],log:[795,1130,1248],log_global_inference_abs_tim:1243,log_global_inference_rel_tim:1244,logic:[30,172,357,484,618,782,1116],logical_and:[358,783,1117],logical_not:[95,220,407,530,660,855],logical_or:[359,784,1118],logspac:[151,323,459,589,735,1041],loss:1233,lstm:1277,lstm_updat:1230,maml_step:1137,manipul:[101,226,413,536,666,861],map:1187,map_nest_at_index:1188,map_nest_at_indic:1189,match_kwarg:1042,math:[32,173,360,485,619,785,1119],matmul:[324,590,736,1043],matrix_norm:[169,351,480,613,776,1110],maximum:[737,1044],mech:54,memori:55,meshgrid:[325,738,1045],meta:[34,1135],method:[97,222,409,532,662,857],minimum:[739,1046],model:56,modul:[1280,1281,1293],multi:1139,multi_head_attent:1231,multi_index_nest:1190,multidevcontain:42,multidevit:926,multidevitem:925,multidevnest:927,multiheadattent:1279,multinodeit:1145,multinodeitem:1144,multinodenest:1146,multinomi:[175,362,488,621,801,1196],multiprocess:[740,1047],mxnet:203,nativ:1293,nest:1183,nested_indices_wher:1191,nested_map:1192,network:1293,next:1251,node:[1139,1161],node_dist:1162,node_dist_arrai:1163,node_dist_it:1164,node_str:1165,node_to_str:1166,node_util:1167,nodedistit:1148,nodedistitem:1147,nodedistnest:1149,nodemapp:1151,nodemappermultiproc:1152,norm:[1237,1282],num_arrays_in_memori:1048,num_arrays_on_dev:949,num_cpu_cor:950,num_gpu:[126,951,1168],numpi:386,nutshel:1251,one_hot:[152,460,591,741,1049],ones:[78,207,390,513,643,839,1050],ones_lik:[153,326,461,592,742,1051],oper:[1,3,7,9,11,13,43,113,114,116,117,118,119,238,239,241,242,243,244,425,426,428,429,430,431,548,549,551,552,554,555,678,679,681,682,684,685],optim:[1284,1288],optimizer_upd:1093,overview:1251,param:1249,percent_used_mem_on_dev:952,percent_used_mem_on_nod:1169,pinv:[352,777,1111],portabl:1297,print_all_arrays_in_memori:1052,print_all_arrays_on_dev:953,profil:[122,286,434,558,688,928,1153],pull:43,queue_timeout:1053,randint:[176,363,622,802,1197],random:[36,174,361,487,620,800,1195],random_crop:1104,random_norm:[177,364,623,803,1198],random_uniform:[178,365,624,804,1199],reduce_max:[183,368,491,627,809,1204],reduce_mean:[184,369,492,628,810,1205],reduce_min:[185,370,493,629,811,1206],reduce_prod:[186,371,494,630,812,1207],reduce_std:[372,1208],reduce_sum:[187,373,495,631,813,1209],reduce_var:[188,374,496,632,814,1210],reduct:[38,181,366,489,625,807,1202],reflect:[13,119,244,431,555,685],relu:[819,1215],repeat:[327,743,1054],reptile_step:1138,request:43,reshap:[744,1055],robot:57,round:[328,745,1056],run:1294,scaled_dot_product_attent:1232,scatter_flat:[154,329,462,593,746,1057],scatter_nd:[155,330,463,594,747,1058],search:[103,228,415,538,668,863],seed:[179,805,1200],sequenti:[1290,1291],set:[104,229,416,539,669,864],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:954,set_default_dtyp:980,set_default_float_dtyp:981,set_default_int_dtyp:982,set_default_nod:1170,set_exception_debug_mod:48,set_framework:65,set_min_bas:1059,set_min_denomin:1060,set_nest_at_index:1193,set_nest_at_indic:1194,set_queue_timeout:1061,set_split_factor:[955,1171],set_tmp_dir:1062,set_with_grad:1094,sgd:1289,shape:[748,1063],shape_to_tupl:1064,show_graph:1241,shuffl:[180,806,1201],sigmoid:[820,1216],signatur:[97,222,409,532,662,857],sin:[796,1131],sinh:[797,1132],siren:1265,slodget:1113,slogdet:[354,482,615,779],softmax:[191,500,821,1217],softplu:[822,1218],sort:[105,230,417,540,670,865],sparse_cross_entropi:1236,split:[156,331,464,595,749,1065],split_factor:[956,1172],split_func_cal:[957,1173],sqrt:[96,221,408,531,661,856],squeez:[157,332,465,596,750,1066],stable_divid:1067,stable_pow:1068,stack:[333,751,1069],stack_imag:[167,348,477,610,771,1105],standard:43,statist:[107,232,419,542,672,867],stop_gradi:[343,472,605,765,1095],str_to_nod:1174,submodul:43,supports_inplac:1070,svd:[355,616,780,1114],swapax:[597,752,1071],tan:[798,1133],tanh:[799,823,1134,1219],tensorflow:509,tile:[334,598,753,1072],tmp_dir:1073,to_dev:[127,290,562,693,958],to_ivi:18,to_ivy_modul:[194,826,1258],to_list:[754,1074],to_n:19,to_nod:1175,to_numpi:[755,1075],to_scalar:[756,1076],torch:639,total_mem_on_dev:959,total_mem_on_nod:1176,tpu_is_avail:[563,694,960,1177],train:1293,trainabl:1293,transpos:[158,335,466,757,1077],tree:1251,try_else_non:1078,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[80,84,209,213,392,396,515,519,645,649,841,844],uint8_img_to_float_img:1106,unifi:1178,unify_arrai:1179,unify_it:1180,unify_nest:1181,unset_debug_mod:49,unset_default_devic:961,unset_default_dtyp:983,unset_default_float_dtyp:984,unset_default_int_dtyp:985,unset_framework:71,unset_with_grad:1096,unstack:[159,336,467,599,758,1079],updat:43,used_mem_on_dev:962,used_mem_on_nod:1182,util:[108,233,420,543,673,868],valid_dtyp:986,value_is_nan:1080,variabl:[344,473,606,766,1097],variable_data:[767,1098],vector_norm:[100,225,412,535,665,860],vector_to_skew_symmetric_matrix:[171,356,483,617,781,1115],verbos:1295,vision:58,where:[337,759,1081,1251],why:1297,with_grad:1099,wrapper:72,write:1294,your:43,zero:[79,208,391,514,644,840,1267],zero_pad:[338,600,760,1082],zeros_lik:[160,339,468,601,761,1083]}})
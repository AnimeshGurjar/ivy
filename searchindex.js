Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/det","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/det","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/slogdet","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/det","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/det","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/slogdet","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/det","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/det","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/slogdet","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/det","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/det","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/slogdet","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/slodget","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/det.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/det.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/slogdet.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/det.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/det.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/slogdet.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/det.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/det.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/slogdet.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/det.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/det.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/slogdet.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/slodget.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[852,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[393,0,0,"-"],creation_functions:[394,0,0,"-"],data_type_functions:[398,0,0,"-"],data_types:[402,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[395,2,1,""],tril:[396,2,1,""],zeros:[397,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[398,1,1,""],finfo:[400,2,1,""],iinfo:[401,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[398,3,1,""],bits:[398,3,1,""],eps:[398,3,1,""],max:[398,3,1,""],min:[398,3,1,""],smallest_normal:[398,3,1,""]},"ivy.functional.backends.numpy.core":{device:[442,0,0,"-"],general:[444,0,0,"-"],gradients:[478,0,0,"-"],image:[483,0,0,"-"],linear_algebra:[487,0,0,"-"],logic:[493,0,0,"-"],math:[494,0,0,"-"],random:[496,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[443,1,1,""],clear_mem_on_dev:[442,2,1,""],dev:[442,2,1,""],dev_from_str:[442,2,1,""],dev_to_str:[442,2,1,""],gpu_is_available:[442,2,1,""],num_gpus:[442,2,1,""],to_dev:[442,2,1,""],tpu_is_available:[442,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[443,3,1,""],start:[443,3,1,""],stop:[443,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[444,2,1,""],arange:[445,2,1,""],argmax:[446,2,1,""],argmin:[447,2,1,""],array:[448,2,1,""],asarray:[444,2,1,""],astype:[444,2,1,""],cast:[449,2,1,""],clip:[444,2,1,""],compile:[450,2,1,""],concatenate:[451,2,1,""],constant_pad:[444,2,1,""],container_types:[444,2,1,""],copy_array:[444,2,1,""],cumprod:[452,2,1,""],current_framework_str:[444,2,1,""],dtype:[453,2,1,""],dtype_bits:[454,2,1,""],dtype_from_str:[455,2,1,""],dtype_to_str:[456,2,1,""],equal:[444,2,1,""],floor:[444,2,1,""],floormod:[444,2,1,""],full:[457,2,1,""],gather:[458,2,1,""],gather_nd:[459,2,1,""],get_num_dims:[444,2,1,""],identity:[460,2,1,""],indices_where:[461,2,1,""],inplace_arrays_supported:[444,2,1,""],inplace_decrement:[462,2,1,""],inplace_increment:[463,2,1,""],inplace_update:[464,2,1,""],inplace_variables_supported:[444,2,1,""],is_array:[465,2,1,""],linear_resample:[466,2,1,""],linspace:[467,2,1,""],logspace:[468,2,1,""],matmul:[444,2,1,""],meshgrid:[444,2,1,""],multiprocessing:[444,2,1,""],one_hot:[469,2,1,""],ones_like:[470,2,1,""],round:[444,2,1,""],scatter_flat:[471,2,1,""],scatter_nd:[472,2,1,""],shape:[444,2,1,""],split:[473,2,1,""],squeeze:[474,2,1,""],to_list:[444,2,1,""],to_numpy:[444,2,1,""],to_scalar:[444,2,1,""],transpose:[475,2,1,""],unstack:[476,2,1,""],where:[444,2,1,""],zero_pad:[444,2,1,""],zeros_like:[477,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[479,2,1,""],is_variable:[480,2,1,""],stop_gradient:[481,2,1,""],variable:[482,2,1,""],variable_data:[478,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[484,2,1,""],gradient_image:[485,2,1,""],stack_images:[486,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{det:[488,2,1,""],matrix_norm:[489,2,1,""],qr:[490,2,1,""],slogdet:[491,2,1,""],vector_to_skew_symmetric_matrix:[492,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[495,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[497,2,1,""],randint:[496,2,1,""],random_normal:[496,2,1,""],random_uniform:[496,2,1,""],seed:[496,2,1,""],shuffle:[496,2,1,""]},"ivy.functional.ivy":{array_api:[853,0,0,"-"],core:[891,0,0,"-"],nn:[1231,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[854,0,0,"-"],creation_functions:[855,0,0,"-"],data_type_functions:[859,0,0,"-"],data_types:[862,0,0,"-"],elementwise_functions:[863,0,0,"-"],function_and_method_signatures:[876,0,0,"-"],linear_algebra:[877,0,0,"-"],manipulation_functions:[881,0,0,"-"],searching_functions:[883,0,0,"-"],set_functions:[884,0,0,"-"],sorting_functions:[885,0,0,"-"],statistical_functions:[887,0,0,"-"],utility_functions:[888,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[854,4,1,""],nan:[854,4,1,""],pi:[854,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[856,2,1,""],tril:[857,2,1,""],zeros:[858,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[860,2,1,""],iinfo:[861,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[864,2,1,""],bitwise_and:[865,2,1,""],ceil:[866,2,1,""],cos:[867,2,1,""],cosh:[868,2,1,""],isfinite:[869,2,1,""],isnan:[870,2,1,""],less:[871,2,1,""],log1p:[872,2,1,""],log2:[873,2,1,""],logical_not:[874,2,1,""],sqrt:[875,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[878,2,1,""],slodget:[879,2,1,""],vector_norm:[880,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[882,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[886,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[889,2,1,""],any:[890,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[892,0,0,"-"],compilation:[931,0,0,"-"],device:[933,0,0,"-"],dtype:[983,0,0,"-"],general:[1007,0,0,"-"],gradients:[1104,0,0,"-"],image:[1120,0,0,"-"],linalg:[1127,0,0,"-"],logic:[1136,0,0,"-"],math:[1139,0,0,"-"],meta:[1155,0,0,"-"],multi_node:[1159,0,0,"-"],nest:[1203,0,0,"-"],random:[1215,0,0,"-"],reductions:[1222,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[893,2,1,""],builtin_add:[894,2,1,""],builtin_and:[895,2,1,""],builtin_bool:[896,2,1,""],builtin_contains:[897,2,1,""],builtin_deepcopy:[898,2,1,""],builtin_dir:[899,2,1,""],builtin_eq:[900,2,1,""],builtin_float:[901,2,1,""],builtin_floordiv:[902,2,1,""],builtin_ge:[903,2,1,""],builtin_getattr:[904,2,1,""],builtin_getattribute:[905,2,1,""],builtin_getitem:[906,2,1,""],builtin_gt:[907,2,1,""],builtin_int:[908,2,1,""],builtin_invert:[909,2,1,""],builtin_le:[910,2,1,""],builtin_lt:[911,2,1,""],builtin_mul:[912,2,1,""],builtin_ne:[913,2,1,""],builtin_neg:[914,2,1,""],builtin_or:[915,2,1,""],builtin_pos:[916,2,1,""],builtin_pow:[917,2,1,""],builtin_radd:[918,2,1,""],builtin_rand:[919,2,1,""],builtin_rfloordiv:[920,2,1,""],builtin_rmul:[921,2,1,""],builtin_ror:[922,2,1,""],builtin_rpow:[923,2,1,""],builtin_rsub:[924,2,1,""],builtin_rtruediv:[925,2,1,""],builtin_rxor:[926,2,1,""],builtin_setitem:[927,2,1,""],builtin_sub:[928,2,1,""],builtin_truediv:[929,2,1,""],builtin_xor:[930,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[932,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[933,1,1,""],DevClonedItem:[935,1,1,""],DevClonedIter:[936,1,1,""],DevClonedNest:[937,1,1,""],DevDistItem:[938,1,1,""],DevDistIter:[939,1,1,""],DevDistNest:[940,1,1,""],DevManager:[933,1,1,""],DevMapper:[942,1,1,""],DevMapperMultiProc:[943,1,1,""],MultiDev:[933,1,1,""],MultiDevItem:[945,1,1,""],MultiDevIter:[946,1,1,""],MultiDevNest:[947,1,1,""],Profiler:[948,1,1,""],clear_mem_on_dev:[949,2,1,""],default_device:[950,2,1,""],dev:[951,2,1,""],dev_clone:[952,2,1,""],dev_clone_array:[953,2,1,""],dev_clone_iter:[954,2,1,""],dev_clone_nest:[955,2,1,""],dev_dist:[956,2,1,""],dev_dist_array:[957,2,1,""],dev_dist_iter:[958,2,1,""],dev_dist_nest:[959,2,1,""],dev_from_str:[960,2,1,""],dev_to_str:[961,2,1,""],dev_unify:[962,2,1,""],dev_unify_array:[963,2,1,""],dev_unify_iter:[964,2,1,""],dev_unify_nest:[965,2,1,""],dev_util:[966,2,1,""],get_all_arrays_on_dev:[967,2,1,""],gpu_is_available:[968,2,1,""],num_arrays_on_dev:[969,2,1,""],num_cpu_cores:[970,2,1,""],num_gpus:[971,2,1,""],percent_used_mem_on_dev:[972,2,1,""],print_all_arrays_on_dev:[973,2,1,""],set_default_device:[974,2,1,""],set_split_factor:[975,2,1,""],split_factor:[976,2,1,""],split_func_call:[977,2,1,""],to_dev:[978,2,1,""],total_mem_on_dev:[979,2,1,""],tpu_is_available:[980,2,1,""],unset_default_device:[981,2,1,""],used_mem_on_dev:[982,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[933,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[933,3,1,""],da_tune_step:[933,3,1,""],dim_size:[933,3,1,""],ds_tune_step:[933,3,1,""],map:[933,3,1,""],repeated_config_check:[933,3,1,""],tune_step:[933,3,1,""],tuned:[933,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[942,3,1,""],map:[942,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[943,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[933,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[945,3,1,""],items:[945,3,1,""],keys:[945,3,1,""],shape:[945,3,1,""],values:[945,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[946,3,1,""],at_dev:[946,3,1,""],at_devs:[946,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[947,3,1,""],at_dev:[947,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[948,3,1,""],start:[948,3,1,""],stop:[948,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[983,1,1,""],DefaultFloatDtype:[983,1,1,""],DefaultIntDtype:[983,1,1,""],astype:[983,2,1,""],cast:[987,2,1,""],closest_valid_dtype:[988,2,1,""],convert_dtype:[989,2,1,""],default_dtype:[990,2,1,""],default_float_dtype:[991,2,1,""],default_int_dtype:[992,2,1,""],dtype:[993,2,1,""],dtype_bits:[994,2,1,""],dtype_from_str:[995,2,1,""],dtype_to_str:[996,2,1,""],invalid_dtype:[997,2,1,""],is_float_dtype:[998,2,1,""],is_int_dtype:[999,2,1,""],set_default_dtype:[1000,2,1,""],set_default_float_dtype:[1001,2,1,""],set_default_int_dtype:[1002,2,1,""],unset_default_dtype:[1003,2,1,""],unset_default_float_dtype:[1004,2,1,""],unset_default_int_dtype:[1005,2,1,""],valid_dtype:[1006,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[983,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[983,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[983,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1031,2,1,""],abs:[1008,2,1,""],all_equal:[1009,2,1,""],arange:[1010,2,1,""],arg_names:[1011,2,1,""],argmax:[1012,2,1,""],argmin:[1013,2,1,""],array:[1014,2,1,""],array_equal:[1015,2,1,""],arrays_equal:[1016,2,1,""],asarray:[1007,2,1,""],assert_supports_inplace:[1017,2,1,""],broadcast_to:[1018,2,1,""],cache_fn:[1019,2,1,""],clip:[1020,2,1,""],clip_matrix_norm:[1021,2,1,""],clip_vector_norm:[1022,2,1,""],concatenate:[1023,2,1,""],constant_pad:[1024,2,1,""],container_types:[1025,2,1,""],copy_array:[1026,2,1,""],cross:[1027,2,1,""],cumprod:[1028,2,1,""],cumsum:[1029,2,1,""],current_framework_str:[1030,2,1,""],einops_rearrange:[1032,2,1,""],einops_reduce:[1033,2,1,""],einops_repeat:[1034,2,1,""],equal:[1035,2,1,""],exists:[1036,2,1,""],expand_dims:[1037,2,1,""],floor:[1038,2,1,""],floormod:[1039,2,1,""],fourier_encode:[1040,2,1,""],full:[1041,2,1,""],gather:[1042,2,1,""],gather_nd:[1043,2,1,""],get_all_arrays_in_memory:[1044,2,1,""],get_min_base:[1045,2,1,""],get_min_denominator:[1046,2,1,""],get_num_dims:[1047,2,1,""],get_referrers_recursive:[1048,2,1,""],has_nans:[1049,2,1,""],identity:[1050,2,1,""],indices_where:[1051,2,1,""],inplace_arrays_supported:[1052,2,1,""],inplace_decrement:[1053,2,1,""],inplace_increment:[1054,2,1,""],inplace_update:[1055,2,1,""],inplace_variables_supported:[1056,2,1,""],is_array:[1057,2,1,""],isinf:[1058,2,1,""],linear_resample:[1059,2,1,""],linspace:[1060,2,1,""],logspace:[1061,2,1,""],match_kwargs:[1062,2,1,""],matmul:[1063,2,1,""],maximum:[1064,2,1,""],meshgrid:[1065,2,1,""],minimum:[1066,2,1,""],multiprocessing:[1067,2,1,""],num_arrays_in_memory:[1068,2,1,""],one_hot:[1069,2,1,""],ones:[1070,2,1,""],ones_like:[1071,2,1,""],print_all_arrays_in_memory:[1072,2,1,""],queue_timeout:[1073,2,1,""],repeat:[1074,2,1,""],reshape:[1075,2,1,""],round:[1076,2,1,""],scatter_flat:[1077,2,1,""],scatter_nd:[1078,2,1,""],set_min_base:[1079,2,1,""],set_min_denominator:[1080,2,1,""],set_queue_timeout:[1081,2,1,""],set_tmp_dir:[1082,2,1,""],shape:[1083,2,1,""],shape_to_tuple:[1084,2,1,""],split:[1085,2,1,""],squeeze:[1086,2,1,""],stable_divide:[1087,2,1,""],stable_pow:[1088,2,1,""],stack:[1089,2,1,""],supports_inplace:[1090,2,1,""],swapaxes:[1091,2,1,""],tile:[1092,2,1,""],tmp_dir:[1093,2,1,""],to_list:[1094,2,1,""],to_numpy:[1095,2,1,""],to_scalar:[1096,2,1,""],transpose:[1097,2,1,""],try_else_none:[1098,2,1,""],unstack:[1099,2,1,""],value_is_nan:[1100,2,1,""],where:[1101,2,1,""],zero_pad:[1102,2,1,""],zeros_like:[1103,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1104,1,1,""],adam_step:[1106,2,1,""],adam_update:[1107,2,1,""],execute_with_gradients:[1108,2,1,""],gradient_descent_update:[1109,2,1,""],is_variable:[1110,2,1,""],lamb_update:[1111,2,1,""],lars_update:[1112,2,1,""],optimizer_update:[1113,2,1,""],set_with_grads:[1114,2,1,""],stop_gradient:[1115,2,1,""],unset_with_grads:[1116,2,1,""],variable:[1117,2,1,""],variable_data:[1118,2,1,""],with_grads:[1119,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1104,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1121,2,1,""],float_img_to_uint8_img:[1122,2,1,""],gradient_image:[1123,2,1,""],random_crop:[1124,2,1,""],stack_images:[1125,2,1,""],uint8_img_to_float_img:[1126,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1128,2,1,""],inv:[1129,2,1,""],matrix_norm:[1130,2,1,""],pinv:[1131,2,1,""],qr:[1132,2,1,""],slodget:[1133,2,1,""],svd:[1134,2,1,""],vector_to_skew_symmetric_matrix:[1135,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1137,2,1,""],logical_or:[1138,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1140,2,1,""],acosh:[1141,2,1,""],asin:[1142,2,1,""],atan2:[1144,2,1,""],atan:[1143,2,1,""],atanh:[1145,2,1,""],cosh:[1146,2,1,""],divide:[1147,2,1,""],erf:[1148,2,1,""],exp:[1149,2,1,""],log:[1150,2,1,""],sin:[1151,2,1,""],sinh:[1152,2,1,""],tan:[1153,2,1,""],tanh:[1154,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1156,2,1,""],maml_step:[1157,2,1,""],reptile_step:[1158,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1159,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1204,2,1,""],copy_nest:[1205,2,1,""],index_nest:[1206,2,1,""],map:[1207,2,1,""],map_nest_at_index:[1208,2,1,""],map_nest_at_indices:[1209,2,1,""],multi_index_nest:[1210,2,1,""],nested_indices_where:[1211,2,1,""],nested_map:[1212,2,1,""],set_nest_at_index:[1213,2,1,""],set_nest_at_indices:[1214,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1216,2,1,""],randint:[1217,2,1,""],random_normal:[1218,2,1,""],random_uniform:[1219,2,1,""],seed:[1220,2,1,""],shuffle:[1221,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1223,2,1,""],reduce_max:[1224,2,1,""],reduce_mean:[1225,2,1,""],reduce_min:[1226,2,1,""],reduce_prod:[1227,2,1,""],reduce_std:[1228,2,1,""],reduce_sum:[1229,2,1,""],reduce_var:[1230,2,1,""]},"ivy.functional.ivy.nn":{activations:[1232,0,0,"-"],layers:[1240,0,0,"-"],losses:[1253,0,0,"-"],norms:[1257,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1233,2,1,""],leaky_relu:[1234,2,1,""],relu:[1235,2,1,""],sigmoid:[1236,2,1,""],softmax:[1237,2,1,""],softplus:[1238,2,1,""],tanh:[1239,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1241,2,1,""],conv1d_transpose:[1242,2,1,""],conv2d:[1243,2,1,""],conv2d_transpose:[1244,2,1,""],conv3d:[1245,2,1,""],conv3d_transpose:[1246,2,1,""],depthwise_conv2d:[1247,2,1,""],dropout:[1248,2,1,""],linear:[1249,2,1,""],lstm_update:[1250,2,1,""],multi_head_attention:[1251,2,1,""],scaled_dot_product_attention:[1252,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1254,2,1,""],cross_entropy:[1255,2,1,""],sparse_cross_entropy:[1256,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1258,2,1,""]},"ivy.stateful":{activations:[1262,0,0,"-"],converters:[1265,0,0,"-"],initializers:[1267,0,0,"-"],layers:[1276,0,0,"-"],module:[1288,0,0,"-"],norms:[1290,0,0,"-"],optimizers:[1292,0,0,"-"],sequential:[1298,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1263,1,1,""],GELU:[1264,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1263,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1264,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1266,2,1,""]},"ivy.stateful.initializers":{Constant:[1267,1,1,""],FirstLayerSiren:[1269,1,1,""],GlorotUniform:[1270,1,1,""],KaimingNormal:[1267,1,1,""],Ones:[1272,1,1,""],Siren:[1273,1,1,""],Uniform:[1267,1,1,""],Zeros:[1275,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1267,3,1,""],create_variables:[1267,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1269,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1270,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1267,3,1,""],create_variables:[1267,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1272,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1273,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1267,3,1,""],create_variables:[1267,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1275,3,1,""]},"ivy.stateful.layers":{Conv1D:[1277,1,1,""],Conv1DTranspose:[1278,1,1,""],Conv2D:[1279,1,1,""],Conv2DTranspose:[1280,1,1,""],Conv3D:[1281,1,1,""],Conv3DTranspose:[1282,1,1,""],DepthwiseConv2D:[1283,1,1,""],Dropout:[1284,1,1,""],LSTM:[1285,1,1,""],Linear:[1286,1,1,""],MultiHeadAttention:[1287,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1277,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1278,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1279,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1280,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1281,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1282,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1283,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1284,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1285,3,1,""],get_initial_state:[1285,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1286,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1287,3,1,""]},"ivy.stateful.module":{Module:[1289,1,1,""]},"ivy.stateful.module.Module":{__init__:[1289,3,1,""],build:[1289,3,1,""],build_mode:[1289,3,1,""],built:[1289,3,1,""],check_submod_rets:[1289,3,1,""],get_mod_key:[1289,3,1,""],mod_depth:[1289,3,1,""],mod_height:[1289,3,1,""],mod_with_top_mod_key_chain:[1289,3,1,""],save_weights:[1289,3,1,""],show_mod_in_top_mod:[1289,3,1,""],show_structure:[1289,3,1,""],show_v_in_top_v:[1289,3,1,""],sub_mods:[1289,3,1,""],track_submod_call_order:[1289,3,1,""],track_submod_rets:[1289,3,1,""],v_with_top_v_key_chains:[1289,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1291,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1291,3,1,""]},"ivy.stateful.optimizers":{Adam:[1293,1,1,""],LAMB:[1294,1,1,""],LARS:[1295,1,1,""],Optimizer:[1296,1,1,""],SGD:[1297,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1293,3,1,""],set_state:[1293,3,1,""],state:[1293,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1294,3,1,""],set_state:[1294,3,1,""],state:[1294,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1295,3,1,""],set_state:[1295,3,1,""],state:[1295,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1296,3,1,""],set_state:[1296,3,1,""],step:[1296,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1297,3,1,""],set_state:[1297,3,1,""],state:[1297,3,1,""]},"ivy.stateful.sequential":{Sequential:[1299,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1299,3,1,""]},"ivy.verbosity":{cprint:[1304,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1303,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1292,1293,1294],"02886":1259,"100":[1159,1259,1301],"141592653589793":854,"2021":1259,"2102":1259,"360":[1139,1151,1153],"718281828459045":854,"754":[854,859,860,863,875],"999":[1104,1106,1107,1111,1292,1293,1294],"abstract":[933,948,1259,1292,1296],"boolean":[40,41,863,865,874,933,968,980,983,997,1006,1007,1009,1015,1016,1049,1051,1052,1056,1057,1058,1090,1100,1104,1110,1136,1137,1138,1155,1156,1157,1159],"break":43,"case":[15,18,19,40,41,42,43,863,864,866,867,868,873,875,933,972,979,982,1007,1010,1075,1077,1078,1127,1130,1132,1159,1203,1206,1210,1259,1276,1287,1288,1289,1292,1296,1305],"catch":[1007,1031],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,398,442,443,859,861,933,935,936,937,938,939,940,942,943,945,946,947,948,960,961,983,1007,1011,1062,1104,1118,1159,1203,1205,1212,1253,1255,1256,1259,1262,1263,1264,1265,1266,1267,1269,1270,1272,1273,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1305],"default":[15,18,19,40,41,42,43,855,856,857,858,877,878,880,881,882,885,886,888,889,890,931,932,933,942,943,950,951,955,956,957,958,959,962,963,964,965,972,975,976,977,982,983,990,991,992,993,1007,1009,1010,1012,1013,1021,1022,1023,1024,1027,1028,1029,1040,1041,1042,1047,1049,1050,1059,1061,1062,1065,1067,1070,1073,1074,1077,1078,1081,1083,1085,1087,1088,1097,1099,1100,1104,1107,1109,1110,1111,1112,1113,1115,1119,1127,1130,1132,1155,1156,1157,1158,1159,1203,1204,1205,1207,1211,1212,1215,1216,1218,1219,1222,1224,1225,1226,1227,1228,1229,1230,1232,1233,1237,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1265,1266,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299],"final":[40,41,43,1007,1040,1060,1061,1159,1276,1287,1302],"float":[40,41,42,43,854,855,856,858,859,860,863,864,866,867,868,873,875,877,880,892,911,917,933,942,943,966,972,975,979,982,983,991,998,1007,1010,1021,1022,1024,1040,1041,1045,1046,1061,1079,1080,1081,1087,1088,1104,1106,1107,1109,1111,1112,1113,1120,1122,1126,1139,1147,1155,1156,1157,1158,1159,1215,1218,1219,1232,1234,1240,1248,1251,1252,1253,1254,1255,1256,1257,1258,1276,1284,1287,1290,1291,1292,1293,1294,1295,1296,1297],"function":[15,40,41,43,395,396,397,400,401,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,854,856,857,858,860,861,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,882,886,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,935,936,937,938,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1262,1263,1264,1292,1295,1296,1297,1301,1302,1305],"import":[43,1259,1302,1305],"int":[40,41,42,43,394,395,396,397,496,855,856,857,858,859,860,861,877,878,880,881,882,885,886,888,889,890,892,911,917,931,932,933,955,956,957,958,959,962,963,964,965,970,971,977,983,992,994,999,1007,1012,1013,1018,1023,1024,1028,1029,1032,1033,1034,1037,1040,1041,1042,1047,1050,1059,1060,1061,1069,1070,1074,1075,1077,1078,1083,1084,1085,1086,1089,1091,1092,1097,1099,1102,1104,1106,1107,1111,1120,1124,1125,1127,1130,1155,1156,1157,1158,1159,1203,1212,1215,1216,1217,1219,1220,1222,1224,1225,1226,1227,1228,1229,1230,1232,1237,1240,1241,1242,1243,1244,1245,1246,1247,1251,1253,1255,1256,1257,1258,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1290,1291],"long":[43,1240,1250],"new":[40,41,43,496,855,856,858,863,872,983,987,1007,1008,1018,1032,1033,1034,1037,1040,1041,1042,1043,1070,1075,1077,1078,1079,1080,1087,1088,1089,1104,1107,1109,1111,1112,1113,1120,1122,1124,1126,1139,1141,1145,1146,1152,1154,1159,1203,1213,1214,1215,1216,1257,1258,1259,1265,1266,1276,1286,1290,1291,1292,1293,1294,1295,1296,1297,1302,1305],"public":[1007,1025],"return":[15,16,17,18,19,40,41,42,43,496,855,856,857,858,863,864,865,866,867,868,869,870,871,873,874,875,877,878,879,880,885,886,888,889,890,892,911,917,931,932,933,942,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,968,969,971,972,976,977,978,979,980,982,983,987,988,989,990,991,992,993,994,995,996,997,998,999,1006,1007,1008,1009,1010,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1074,1075,1076,1077,1078,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1106,1107,1108,1109,1110,1111,1112,1113,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1203,1204,1205,1207,1211,1212,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1265,1266,1276,1285,1286,1292,1296,1301,1302,1305],"short":[43,1240,1250,1259,1305],"static":[40,41,931,932],"super":1159,"true":[40,41,42,444,450,478,481,487,488,491,496,497,863,869,870,874,877,880,885,886,888,889,890,931,932,933,1007,1009,1017,1019,1036,1040,1049,1051,1100,1101,1104,1107,1109,1110,1111,1112,1113,1115,1127,1130,1155,1156,1157,1158,1159,1203,1204,1211,1215,1216,1222,1224,1225,1226,1227,1228,1229,1230,1232,1233,1240,1248,1253,1254,1255,1256,1276,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297],"try":[40,41,1007,1098,1159],"var":[40,41,1155,1156,1157,1305],"while":[40,41,42,863,874,1159],AND:[863,865,888,889,1136,1137],But:1305,For:[43,863,864,866,867,868,873,875,1007,1010,1020,1089,1104,1110,1118,1127,1132,1139,1140,1259,1265,1266,1302,1305],Its:[1139,1143],NOT:[863,874],Not:854,One:[40,41,43,1007,1033,1075,1215,1217,1305],Ones:[1259,1267],PRs:43,Such:[1007,1025],That:1302,The:[15,16,17,18,19,40,41,42,43,855,857,863,864,865,866,867,868,869,870,871,873,874,875,877,878,880,881,882,885,886,888,889,890,892,911,917,931,932,933,942,943,949,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,972,975,976,977,978,979,982,983,987,988,989,994,995,996,997,1006,1007,1010,1014,1015,1018,1019,1021,1022,1023,1024,1026,1027,1030,1031,1035,1040,1042,1043,1050,1053,1054,1055,1057,1059,1061,1063,1065,1067,1070,1071,1074,1075,1077,1078,1079,1080,1081,1084,1085,1086,1087,1088,1089,1092,1100,1103,1104,1106,1107,1109,1111,1112,1113,1115,1118,1120,1122,1124,1126,1127,1130,1132,1134,1139,1140,1142,1143,1147,1148,1149,1150,1151,1153,1155,1156,1157,1158,1159,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1218,1219,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1259,1265,1266,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1287,1288,1289,1290,1291,1292,1294,1295,1296,1302,1305],There:[43,1259,1302],These:[43,1259],Use:43,Used:[1203,1204,1211,1288,1289],Using:[1259,1260,1305],With:[40,41,1127,1130,1222,1224,1225,1226,1227,1228,1229,1230,1259,1301,1305],__array__:[1007,1014],__call__:[1276,1287,1288,1289],__del__:1159,__dict__:[1159,1302],__enter__:1159,__exit__:1159,__getitem__:1159,__getstate__:1159,__init__:[40,41,42,43,59,60,82,213,398,399,442,443,526,660,933,934,941,942,943,944,945,946,947,948,983,984,985,986,1104,1105,1159,1163,1170,1259,1262,1263,1264,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1305],__iter__:1159,__len__:1159,__next__:1159,__pow__:43,__repr__:1159,_assign_vari:1301,_axi:1159,_base:[1203,1204,1211],_compute_node_da_ratio:1159,_compute_node_strs_da:1159,_concat_unify_arrai:1159,_counter:1159,_cur_framework:[43,1159],_da_direct:1159,_da_directions_flip:1159,_da_step_tim:1159,_da_tim:1159,_da_tune_count:1159,_data:1159,_delta_da_dim_s:1159,_delta_sf:1159,_dict:1159,_dim_siz:1159,_first_da_tune_step:1159,_first_ns_tune_step:1159,_fn:1159,_forward:[1259,1301],_get_kalman_param:1305,_get_prior:1305,_get_some_model:1305,_handle_flat_arrays_in_out:43,_index:[1203,1204,1211],_input_queu:1159,_length:1159,_max_depth:1159,_max_node_dim_step_ratio:1159,_max_node_dim_step_s:1159,_max_split_factor_step_s:1159,_mean_unify_arrai:1159,_min_bas:[1007,1088,1257,1258,1290,1291],_min_denomin:[1007,1087],_min_node_dim_s:1159,_min_sf_tune_step:1159,_min_unit_node_tune_step:1159,_model:1305,_native_wrapp:43,_node_mapp:1159,_node_percent_mem:1159,_node_str:1159,_node_str_da_ratio:1159,_node_strs_da:1159,_node_strs_kei:1159,_node_strs_n:1159,_node_util:1159,_ns_step_tim:1159,_ns_time:1159,_ns_tune_count:1159,_num_nod:1159,_num_work:1159,_observed_config:1159,_output_queu:1159,_paramet:1301,_percent_mem_inc_per_sf:1159,_percent_mem_inc_per_unit_da_dim:1159,_percent_util_inc_per_unit_da_dim:1159,_ret_fn:1159,_safety_factor:1159,_save_dir:1159,_shift_da_split:1159,_shift_n:1159,_slice:1159,_step:[1292,1296],_sum_unify_arrai:1159,_timeout:1159,_tune:1159,_tune_da:1159,_tune_n:1159,_tune_step:1159,_unit_da_tune_count:1159,_unroll_step:1305,_with_node_mappig:1159,_worker:1159,_worker_class:1159,_worker_fn:1159,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,933,942,948,1159,1288,1289,1292,1296],abil:1259,abl:[40,41],about:[859,860,861],abov:[43,855,857,877,878,1215,1217],above_height:[40,41],abs:[296,444,577,712,877,880,1007,1159],absolut:[40,41,877,879,1007,1008,1127,1133],abstractmethod:1159,accept:[15,43,863,874,1259],access:[40,41,43,1302],accord:[40,41,859,860,1007,1024,1042,1077,1078,1097,1102],accordingli:[877,880,888,889,890],accur:[59,398,442,443,933,945,946,947,948,983,1104,1267,1269,1270,1272,1273,1275],aco:[802,1139],acosh:[802,1139],across:[40,41,933,942,943,952,953,955,956,957,958,959,965,975,976,1007,1012,1013,1015,1016,1159,1203,1207],act:43,activ:[1233,1234,1235,1236,1237,1238,1239,1259,1263,1264],actual:1302,adam:[1104,1106,1107,1111,1259,1292,1294,1301],adam_step:1104,adam_upd:1104,adapt:[1104,1112,1292,1295],add:[40,41,43,1159,1253,1254,1255,1256,1257,1258,1259,1290,1291,1302],added:[43,1007,1087,1088,1298,1299],adding:[43,1007,1018],addit:[40,41,43,1007,1032,1033,1034,1257,1258,1276,1286],addition:43,address:43,adher:43,adjac:[1007,1010],adopt:[43,1007,1025],affect:[1007,1010],affin:[1290,1291],after:[863,875,1007,1059,1104,1107,1108,1109,1111,1112,1113,1120,1121,1257,1258,1292,1293,1294,1295,1296,1297,1305],after_1:[1007,1024,1102],after_n:[1007,1024,1102],again:43,against:[40,41,1127,1130,1222,1224,1225,1226,1227,1228,1229,1230],agnost:[43,1259,1301,1302],aim:1305,algebra:1127,algorithm:[1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283,1305],align:[40,41,43,1007,1018],aliv:[933,967,969,973,1007,1044,1068,1072],all:[15,16,17,18,19,40,41,43,110,238,429,556,690,855,857,877,880,881,882,888,931,932,933,942,967,973,1007,1008,1009,1015,1016,1025,1044,1050,1072,1086,1127,1132,1155,1156,1157,1158,1159,1203,1204,1205,1211,1212,1215,1216,1219,1222,1224,1225,1226,1227,1228,1229,1230,1240,1250,1259,1302,1305],all_depth:[40,41],all_equ:1007,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1203,all_tru:[40,41],alloc:[43,855,857,933,1159],allow:[1007,1060,1061,1062,1288,1289],allow_dupl:[1007,1062],alon:[933,972,982,1159,1259],along:[40,41,43,496,877,880,881,882,885,886,888,889,890,933,956,957,958,959,962,963,964,965,977,1007,1023,1028,1029,1042,1059,1060,1061,1074,1085,1089,1092,1099,1127,1130,1155,1156,1157,1158,1159,1215,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230],alongsid:[1301,1302],alpha:[1232,1234],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,863,866,933,1159],also:[40,41,43,1007,1010,1104,1107,1155,1156,1157,1158,1203,1204,1205,1211,1212,1240,1249,1259,1276,1286,1301],altern:1301,alwai:[40,41,43,1104,1110,1115],among:[40,41],amount:[933,979,1159,1259],angl:[863,868,1139,1140,1144],ani:[15,16,17,18,19,40,41,43,110,238,429,556,690,888,931,932,933,935,938,942,943,945,954,955,958,959,964,1007,1009,1010,1014,1031,1032,1033,1034,1035,1036,1049,1057,1062,1087,1088,1104,1108,1159,1203,1204,1207,1211,1212,1213,1214,1215,1219,1259,1265,1266,1288,1289,1301,1302,1305],anoth:[40,41,43,983,989,1259],another_backend:43,anyth:[43,1305],anywai:43,apart:43,api:[1259,1260],appear:[43,1007,1037],append:[40,41,877,878,1159],appli:[15,18,19,40,41,1007,1032,1033,1034,1104,1111,1112,1127,1134,1136,1137,1138,1155,1156,1157,1203,1207,1210,1212,1232,1233,1234,1235,1236,1237,1238,1239,1240,1249,1251,1252,1257,1258,1259,1262,1263,1264,1290,1291],applic:[1203,1207,1212,1240,1251,1252,1259,1305],approxim:[43,863,864,867,868,872,873,892,917,1232,1233],arang:[130,296,444,496,577,712,1007,1060,1061],arbitrari:[40,41,933,962,963,965,1159],arc:[1139,1144],arcco:[1139,1140],arctan:[1139,1143],area:[863,864,1259],arg:[15,16,17,40,41,43,59,63,933,942,955,959,965,977,1007,1032,1033,1034,1078,1159,1265,1266,1288,1289],arg_nam:1007,arg_stateful_idx:[1288,1289],argmax:[130,444,577,712,1007],argmin:[130,444,577,712,1007],args_clon:1159,args_dist:1159,args_to_ivi:[15,1259],args_to_n:[15,1259],args_uni:1159,argsort:[107,235,426,553,687,885],argument:[15,16,17,18,19,40,41,42,43,59,63,931,932,933,942,943,955,959,965,1007,1010,1011,1019,1031,1062,1078,1139,1140,1159,1203,1207,1265,1266,1288,1289],aris:[1259,1305],arithmet:[43,1222,1225,1228,1230],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:496,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,130,296,444,487,488,491,496,577,712,855,856,857,858,859,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,885,886,888,889,890,911,917,933,951,952,953,956,957,958,959,962,963,964,965,967,969,973,977,978,983,987,993,998,999,1007,1008,1009,1010,1012,1013,1015,1016,1017,1018,1020,1021,1022,1023,1024,1026,1027,1028,1029,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1044,1047,1049,1050,1051,1052,1053,1054,1055,1057,1058,1059,1060,1061,1063,1064,1065,1066,1068,1069,1070,1071,1072,1074,1075,1076,1077,1078,1083,1085,1086,1089,1090,1091,1092,1094,1095,1096,1097,1099,1100,1101,1102,1103,1104,1106,1107,1110,1111,1115,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1159,1203,1205,1212,1215,1216,1217,1218,1219,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1276,1284,1285,1287,1292,1296,1301,1302],arrang:[1007,1032],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,394,395,396,397,398,400,401,854,855,856,857,858,859,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,885,886,888,889,890],array_api_methods_to_test:43,array_builtin:[43,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930],array_equ:[296,712,1007],array_lik:[496,1007,1014],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1007],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1259],arraywithgener:[22,1259],arraywithgradi:[24,1259],arraywithimag:[26,1259],arraywithlinalg:[28,1259],arraywithlog:[30,1259],arraywithmath:[32,1259],arraywithmeta:[34,1259],arraywithrandom:[36,1259],arraywithreduct:[38,1259],arriv:[40,41,42],articl:1259,arxiv:1259,as_arrai:[40,41,1007,1047,1083],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[442,444,453,933,951,983,990,991,992,993],as_tensor:444,as_vari:[40,41],as_zero:[40,41],asarrai:[444,1007],ascend:[885,886],asin:[802,1139],asinh:[86,403,530,664,863],aspect:[1120,1125],assert:[40,41,1007,1017,1159],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1007,associ:[43,1127,1135],assum:[863,867,1302,1305],astyp:[444,983],asynchron:[40,41,42],at_dev:[40,42,933,946,947],at_kei:[40,41],at_key_chain:[40,41],at_nod:1159,atan2:[802,1139],atan:[802,1139],atanh:[802,1139],attent:[43,1240,1251,1252,1276,1287],attribut:[0,6,40,41,859,860,861,1007,1071,1103],audienc:[1259,1302],author:1259,automat:43,avail:[40,41,43,933,968,970,971,980,1007,1033,1159],averag:[1104,1106,1107,1111,1155,1156,1157,1222,1225],average_across_step:[1155,1156,1157],avoid:[43,933,1159,1302],axes:[40,41,43,444,475,487,489,877,880,881,882,888,889,890,933,977,1007,1012,1013,1024,1037,1091,1097,1102,1127,1130,1159,1222,1224,1225,1226,1227,1228,1229,1230],axes_length:[40,41,1007,1032,1033,1034],axi:[40,41,444,446,447,451,452,458,466,467,468,473,474,476,877,878,880,881,882,885,886,888,889,890,933,935,938,945,956,957,958,959,962,963,964,965,977,1007,1012,1013,1023,1024,1027,1028,1029,1037,1042,1059,1060,1061,1074,1085,1086,1089,1091,1092,1099,1102,1159,1215,1221,1222,1224,1225,1226,1227,1228,1229,1230,1232,1237,1253,1255,1256],axis0:[40,41,1007,1091],axis1:[40,41,877,878,1007,1091],axis2:[877,878],back:[43,1288,1289,1292,1296],backend:[15,17,19,40,41,394,395,396,397,398,400,401,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,494,495,496,497,933,968,971,980,983,989,997,1006,1007,1052,1056,1104,1107,1109,1111,1112,1113,1118,1159,1259,1260,1265,1266,1292,1293,1294,1295,1296,1297,1301,1302,1305],backend_nam:43,background:[1259,1302],backprop:1305,backward:[888,889,890,1301],band:[1007,1040],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,398,442,443,444,468,863,872,873,892,917,933,935,936,937,938,939,940,942,943,945,946,947,948,983,1007,1045,1061,1079,1088,1104,1159,1222,1223,1259,1262,1263,1264,1267,1269,1270,1272,1273,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1305],basi:43,batch:[40,41,877,880,933,975,976,1007,1040,1050,1120,1124,1127,1134,1155,1156,1157,1158,1159,1240,1249,1257,1258,1290,1291],batch_shap:[444,460,1007,1050,1069,1120,1121,1122,1123,1124,1125,1126,1127,1135,1215,1216,1240,1250,1251,1252,1276,1285],batch_siz:[496,497,1159,1215,1216,1240,1241,1242,1243,1244,1245,1246,1247],bayesian:1305,becaus:[43,1007,1010],becom:[43,1007,1020,1139,1144,1305],been:[1007,1032,1033,1034,1215,1216],befor:[40,41,43,933,977,1155,1156,1157,1159,1203,1212,1222,1224,1225,1226,1227,1228,1229,1230,1240,1251,1252,1305],before_1:[1007,1024,1102],before_n:[1007,1024,1102],begin:[1203,1204,1211,1302],behaviour:[43,1305],behind:[1104,1107,1109,1111,1112,1113,1259],being:[40,41,43,1007,1010,1073,1081,1159],believ:43,belong:[40,41],below:[43,855,857,877,878,1259,1302,1305],below_depth:[40,41],benefit:1259,bernoul:[1240,1248,1276,1284],best:[43,1007,1062,1259],beta1:[1104,1106,1107,1111,1292,1293,1294],beta2:[1104,1106,1107,1111,1292,1293,1294],beta:[1257,1258],between:[40,41,42,859,860,1007,1010,1127,1132,1203,1207,1215,1217,1253,1255,1256,1292,1294],bia:[1240,1249,1250,1276,1277,1278,1279,1280,1281,1282,1283,1286],bias_initi:[1276,1277,1278,1279,1280,1281,1282,1283,1286],bilinear:[1120,1121],bilinear_resampl:[166,350,483,620,785,1120],bilinearli:[1120,1121],binari:[863,865,1253,1254],binary_cross_entropi:1253,bit:[398,859,860,861,983,994,1120,1122,1126,1259],bitwis:[863,865],bitwise_and:[86,217,403,530,664,863],bitwise_oper:[0,7,8],block:[1259,1302],bool:[15,18,19,40,41,42,43,487,488,491,863,869,870,871,874,877,880,885,886,888,889,890,892,911,931,932,933,951,964,968,972,977,980,982,983,993,1007,1009,1015,1016,1028,1031,1035,1036,1040,1047,1049,1057,1062,1083,1085,1099,1100,1101,1104,1107,1108,1109,1110,1111,1112,1113,1115,1127,1130,1155,1156,1157,1158,1159,1203,1204,1205,1207,1211,1212,1215,1216,1222,1224,1225,1226,1227,1228,1229,1230,1232,1233,1240,1248,1265,1266,1276,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297],both:[43,1007,1027],bottom:1259,boundari:[40,41,1215,1219],branch:[43,931,932],brittl:43,broadcast:[40,41,43,863,865,871,877,880,888,889,890,892,911,917,1007,1018,1035,1064,1065,1066,1074,1127,1130,1139,1144,1147,1222,1224,1225,1226,1227,1228,1229,1230],broadcast_to:[296,712,1007],build:[1159,1259,1276,1287,1288,1289],build_mod:[1276,1287,1288,1289],builder:[43,1259],built:[933,1007,1010,1159,1276,1287,1288,1289],builtin:43,builtin_ab:[251,892],builtin_add:[251,892],builtin_and:[251,892],builtin_bool:[251,892],builtin_contain:[251,892],builtin_deepcopi:[251,892],builtin_dir:[251,892],builtin_eq:[251,892],builtin_float:[251,892],builtin_floordiv:[251,892],builtin_g:[251,892],builtin_getattr:[251,892],builtin_getattribut:[251,892],builtin_getitem:[251,892],builtin_gt:[251,892],builtin_int:[251,892],builtin_invert:[251,892],builtin_l:[251,892],builtin_lt:[251,565,699,892],builtin_mul:[251,892],builtin_n:[251,892],builtin_neg:[251,892],builtin_or:[251,892],builtin_po:[251,892],builtin_pow:[43,251,892],builtin_radd:[251,892],builtin_rand:[251,892],builtin_rfloordiv:[251,892],builtin_rmul:[251,892],builtin_ror:[251,892],builtin_rpow:[251,892],builtin_rsub:[251,892],builtin_rtruediv:[251,892],builtin_rxor:[251,892],builtin_setitem:[251,892],builtin_some_op:43,builtin_sub:[251,892],builtin_truediv:[251,892],builtin_xor:[251,892],busi:43,bypass:1302,cach:[933,949,1007,1019],cache_fn:1007,calcul:[40,41,42,43,863,864,867,868,872,873,875,892,917,1139,1147],call:[43,933,977,1007,1073,1081,1098,1104,1108,1159,1203,1204,1207,1211,1276,1287,1288,1289,1292,1296,1302,1305],callabl:[40,41,931,932,933,942,943,977,1007,1019,1031,1033,1062,1098,1155,1156,1157,1158,1159,1203,1207,1208,1209,1211,1212,1240,1251],can:[43,933,975,976,977,1007,1075,1120,1122,1159,1259,1301,1302,1305],cancel_join_thread:1159,cannot:43,captur:1259,cast:[40,41,130,296,444,577,712,983,1007,1023,1120,1122,1126],catch_except:[1007,1031],categori:43,caus:43,ceil:[86,217,403,530,664,863,1007,1010],cell:[1240,1250,1276,1285],certain:[40,41,1007,1010,1060,1061],chain:[40,41,1155,1156,1157,1298,1299],chang:[43,933,1007,1075,1159,1203,1205,1212,1259,1301],channel:[1007,1040,1120,1122,1123,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286],check:[15,16,17,18,19,40,41,43,933,972,982,983,988,997,1006,1007,1017,1036,1049,1057,1090,1100,1104,1110,1159,1203,1204,1211,1259,1302],check_nest:[1203,1211],check_shap:[40,41],check_submod_ret:[1288,1289],check_typ:[40,41],choic:[1259,1302],choleski:[789,1127],choos:[863,874,1007,1101,1127,1132,1139,1144,1259],choose_random_framework:59,chosen:[40,41,1007,1010,1101],chunk:[933,975,976,977,1159],chunk_siz:[933,977,1159],circl:[1139,1140,1142],clark:1259,clear:[43,933,949,1159],clear_framework_stack:59,clear_mem_on_dev:[442,704,933],click:1259,clip:[40,41,296,444,712,1007,1021,1022,1064,1066,1259],clip_matrix_norm:1007,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1007],clipped_delta:1159,clone:[40,41,933,952,953,954,955,1159],clone_arrai:1159,clone_it:1159,clone_nest:1159,clonedit:1159,cloneditem:1159,clonednest:1159,close:[43,1120,1125,1139,1142,1159,1305],closest:[863,866,983,988],closest_valid_dtyp:983,code:[40,41,42,43,496,1259,1260,1301,1302],codebas:[933,975,976,1159,1259,1302,1305],codomain:[863,864,867,868,873,875],colab:1259,collect:[15,40,41,442,444,478,483,487,493,494,496,892,931,933,983,1007,1104,1120,1127,1136,1139,1159,1203,1215,1222,1232,1240,1253,1257,1262,1276,1290,1292],color:[40,41,42,1303,1304],column:[1007,1050],combin:[40,41,42,1120,1125,1259,1305],combined_batch_s:1159,come:1302,command:1259,comment:43,commit:1305,common:[40,41,43,1139,1144],common_key_chain:[40,41],commun:[43,1259,1302],communuti:43,compar:[40,41,885,886,1007,1009,1015,1016],comparison_oper:[0,9,10],compat:[43,863,865,871,877,880,888,889,890,892,911,917,1007,1035,1075,1139,1147,1259,1305],compil:[296,444,712,1288,1289,1292,1293,1294,1295,1296,1297],compile_on_next_step:[1288,1289,1292,1293,1294,1295,1296,1297],complet:[40,41,43,1127,1132,1159],complex:[1302,1305],compliant:[863,874],compon:[1007,1027],composit:43,comput:[40,41,863,865,871,874,877,879,880,892,911,933,977,1007,1021,1022,1028,1029,1035,1063,1104,1106,1107,1108,1109,1111,1112,1113,1115,1117,1120,1123,1127,1128,1129,1130,1131,1132,1133,1136,1137,1138,1139,1140,1142,1143,1144,1148,1149,1150,1151,1153,1203,1207,1222,1223,1224,1225,1226,1227,1228,1229,1230,1240,1241,1242,1243,1244,1245,1246,1247,1249,1251,1253,1254,1255,1256],concat:[40,41,933,962,963,964,965,977,1007,1040,1159],concaten:[40,41,130,296,444,577,712,1007,1040,1159,1259],concatten:[40,41,933,962,963,964,965,977,1159],condit:[444,931,932,1007,1101,1203,1211],conditon:[1203,1211],config:[40,41,1159],config_list:1159,configur:[40,41],conflict:43,conform:43,conjunct:1302,connect:[1276,1286,1287],consid:[40,41,863,874,1127,1132,1301,1305],consist:[40,41,933,965,1159,1222,1223,1288,1289,1302],constant:[933,942,943,1007,1024,1159,1203,1207,1253,1254,1255,1256,1257,1258,1267,1268,1272,1275,1288,1289,1290,1291,1302],constant_kwarg:1159,constant_pad:[296,444,577,712,1007],constitu:[40,41],construct:[1007,1092,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301],constructor:[40,41,42,1007,1011,1298,1299],consum:[933,1159],cont_feat_dim:[1240,1251],contaienr:[40,41],contain:[15,18,19,42,43,855,856,857,858,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,880,888,889,890,892,911,917,933,952,956,977,983,987,1007,1008,1012,1013,1020,1021,1022,1025,1035,1049,1064,1066,1076,1087,1088,1104,1106,1107,1109,1111,1112,1113,1139,1147,1155,1156,1157,1158,1159,1215,1216,1222,1224,1225,1226,1228,1230,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[444,712,1007],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[444,1007,1067,1240,1251,1276,1287],context_dim:[1276,1287],contextmanag:[59,60],continu:[43,1159,1302],contract:[40,41,1222,1223],contribut:[1259,1260],contributor:[43,1259],control:1259,conv1d:[197,383,510,844,1240,1259,1276],conv1d_transpos:[197,383,510,844,1240],conv1dtranspos:[1259,1276],conv2d:[197,383,510,648,844,1240,1259,1276],conv2d_transpos:[197,383,510,844,1240],conv2dtranspos:[1259,1276],conv3d:[197,383,510,648,844,1240,1259,1276],conv3d_transpos:[197,383,510,844,1240],conv3dtranspos:[1259,1276],convent:[40,41,1222,1223],conver:[933,949,960,972,979,982,1159],convers:[16,17,18,19,40,41,1159,1259],convert:[15,16,17,18,19,40,41,43,933,960,961,983,989,995,996,1007,1084,1095,1096,1120,1122,1126,1127,1135,1159,1203,1205,1212,1259,1266],convert_dtyp:983,convolut:[1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283],cool:43,cooler:43,coordin:[1007,1065,1139,1140,1142,1144],copi:[40,41,43,496,1007,1026,1159,1203,1205],copy_arrai:[444,712,1007],copy_nest:1203,core:[442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,494,495,496,497,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,935,936,937,938,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1259],corner:43,correct:[43,1259,1302],correctli:[40,41,43,1127,1130,1139,1144,1222,1224,1225,1226,1227,1228,1229,1230],correspond:[40,41,43,892,917,1007,1023,1215,1216],cos:[86,403,530,664,863,1007,1040,1139,1140,1153,1302],cosh:[86,403,530,664,802,863,1139],cosin:[863,867,868,1139,1140,1141,1146],cost:[1104,1106,1107,1109,1111,1112,1113,1155,1156,1157,1158],cost_fn:[1155,1158],could:1305,count:[40,41,881,882,888,889,890,1159,1222,1227,1229],cours:43,cprint:1303,cpu:[40,41,43,933,970,972,978,979,982,1007,1010,1014,1042,1043,1050,1060,1061,1069,1070,1071,1077,1078,1103,1159,1215,1216,1217,1218,1219,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1298,1299,1301,1302],creat:[40,41,855,856,858,933,942,943,1007,1010,1014,1041,1042,1043,1050,1060,1061,1069,1070,1071,1077,1078,1094,1103,1104,1117,1159,1215,1216,1217,1218,1219,1259,1260,1265,1266,1267,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1305],create_if_abs:[40,41],create_vari:1267,creation:[40,41,42,43],creation_funct:[394,395,396,397,855,856,857,858],crop:[1120,1124],crop_siz:[1120,1124],cross:[296,712,1007,1253,1254,1255,1256],cross_entropi:1253,cuda:[40,41,933,942,961,978,1007,1010,1014,1042,1043,1050,1060,1061,1069,1070,1071,1077,1078,1103,1159,1215,1216,1217,1218,1219,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1298,1299],cumprod:[130,296,444,712,1007],cumsum:[712,1007],cumul:[1007,1028,1029],current:[40,41,42,43,933,942,966,967,969,973,983,989,997,1006,1007,1030,1044,1052,1056,1068,1072,1159,1203,1204,1211,1259,1305],current_framework:59,current_framework_str:[444,712,1007,1159],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1240,1241,1242,1243,1244,1245,1246],d_out:[1240,1241,1242,1243,1244,1245,1246],da_can_termin:1159,da_dim_s:[933,1159],da_direct:1159,da_tune_step:[933,1159],dai:1305,daniel:1259,data:[40,41,42,43,855,856,857,858,860,861,863,864,865,866,867,868,869,870,871,873,874,875,877,878,880,881,882,885,886,888,889,890,892,911,917,933,935,936,937,938,939,940,945,946,947,961,983,987,988,989,993,994,995,996,997,998,999,1006,1007,1010,1014,1035,1041,1050,1057,1070,1071,1075,1086,1090,1103,1104,1110,1118,1139,1147,1159,1240,1249,1259],data_format:[1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283],data_type_funct:[398,400,401,859,860,861],dataset:[40,41],datatyp:[40,41,983,988,998,999],dcdw:[1104,1106,1107,1109,1111,1112],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1104,1111,1112,1292,1294,1295],decay_lambda:[1104,1111,1112,1292,1294,1295],decid:[40,41,1305],decompos:[1127,1128,1132],decomposit:[1127,1128,1132,1134],decor:43,decrement:[1007,1053],dedic:[1104,1118,1265,1266],deep:[40,41,1259],deep_copi:[40,41],deeper:[933,955,959,965,1159,1203,1212,1259],deepli:[1203,1205],def:[43,60,82,213,399,526,660,934,941,944,984,985,986,1105,1159,1163,1170,1259,1268,1271,1274,1301,1302,1305],default_dev:43,default_devic:933,default_dtyp:[43,983],default_float_dtyp:983,default_int_dtyp:983,default_key_color:[40,41,42],default_nod:1159,default_rng:496,default_v:[1007,1031],defaultdevic:[933,934],defaultdtyp:[983,984],defaultfloatdtyp:[983,985],defaultintdtyp:[983,986],defer:43,defin:[43,1007,1027,1069,1071,1103,1215,1217],definit:43,degre:[1139,1151,1153],del:1159,delai:43,delet:43,delta:[1104,1106,1159],delta_dim_s:1159,delta_percent_mem:1159,delta_sf:1159,delta_util:1159,demo:1259,denomin:[1007,1039,1046,1080,1087,1088,1257,1258,1290,1291],denot:43,dens:[1276,1286],depend:[43,863,864,867,868,872,873,885,886,892,917,1007,1101,1127,1134,1259],depth:[40,41,444,469,933,955,959,965,1007,1048,1069,1159,1203,1212,1288,1289],depth_cutoff:[40,41],depthwis:[1240,1247,1276,1283],depthwise_conv2d:[197,383,510,648,844,1240],depthwiseconv2d:[1259,1276],deriv:[1104,1106,1107,1109,1111,1112,1113,1203,1205,1212,1259,1288,1292,1296,1298],descend:[885,886,1127,1134],descent:[1104,1109,1292,1297],describ:[40,41,1222,1223],descript:[877,880],design:[1259,1260],desir:[40,41,933,978,983,987,1007,1010,1014,1050,1051,1070,1071,1103,1120,1125,1159,1222,1224,1225,1226,1228,1230],desired_aspect_ratio:[483,486,1120,1125],desired_percent_increas:1159,det:[226,354,417,487,544,624,678,789],detail:1305,detect:[40,41,1203,1204,1211],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,863,864,865,867,868,869,870,873,875,877,878,879,880,888,889,890,892,917,933,968,970,971,980,983,987,988,994,997,998,999,1006,1007,1009,1010,1014,1015,1016,1049,1052,1056,1057,1090,1100,1104,1110,1127,1133,1139,1147,1155,1156,1157,1158,1159,1240,1251],dev:[40,41,42,43,123,290,442,444,445,448,458,459,460,467,468,469,470,471,472,477,496,497,570,704,933,936,937,939,940,942,943,946,947,949,950,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,969,972,973,974,975,976,977,978,979,982,1007,1010,1014,1042,1043,1050,1060,1061,1069,1070,1071,1077,1078,1103,1104,1119,1215,1216,1217,1218,1219,1265,1266,1267,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1298,1299],dev_clon:[40,41,933],dev_clone_arrai:933,dev_clone_it:933,dev_clone_nest:933,dev_dist:[40,41,933],dev_dist_arrai:933,dev_dist_it:933,dev_dist_nest:933,dev_from_str:[43,123,290,442,570,704,933],dev_mapp:933,dev_str:[40,41],dev_to_str:[123,290,442,570,704,933],dev_unifi:933,dev_unify_arrai:933,dev_unify_it:933,dev_unify_nest:933,dev_util:933,devclonedit:933,devcloneditem:933,devclonednest:933,devdistit:933,devdistitem:933,devdistnest:933,develop:[43,1259,1302,1305],deviat:[40,41,1215,1218,1222,1228,1257,1258,1290,1291],devic:[21,40,41,43,394,395,397,443,444,457,855,856,857,858,935,936,937,938,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,1007,1010,1014,1041,1042,1043,1050,1060,1061,1069,1070,1071,1077,1078,1103,1104,1119,1215,1216,1217,1218,1219,1259,1265,1266,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1298,1299],devmanag:[933,941],devmapp:[933,943],devmappermultiproc:933,diag:[1127,1134],diagon:[100,226,417,544,678,855,857,877,1007,1050],dict:[15,16,17,18,19,40,41,42,933,935,938,942,943,945,955,956,957,958,959,1007,1032,1033,1034,1062,1155,1156,1157,1159,1203,1205,1206,1207,1210,1212,1265,1266],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,859,860,933,952,953,956,957,1127,1132,1159,1240,1249,1259,1302,1305],differenti:[1259,1302],dilat:[1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283],dim:[40,41,43,1007,1069,1120,1121,1125,1127,1134,1159,1276,1287],dim_siz:[40,41,933,1159],dimens:[40,41,42,855,857,877,878,880,881,882,888,889,890,933,964,1007,1018,1023,1027,1032,1033,1034,1037,1040,1047,1059,1069,1074,1075,1085,1086,1089,1097,1099,1120,1124,1127,1130,1134,1155,1156,1157,1158,1159,1215,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1237,1240,1241,1242,1243,1244,1245,1246,1247,1250,1253,1255,1256,1276,1277,1278,1279,1280,1281,1282,1283,1286,1287],dimension:[40,41,496,877,880,888,889,890,1007,1085,1086,1127,1134],direct:1159,directli:[43,1203,1212,1302,1305],directori:[1007,1082,1093],discord:43,discret:[1253,1255],discuss:43,disk:[40,41,1120,1122],distanc:[1007,1010],distribut:[40,41,933,952,956,957,958,959,1159,1215,1216,1217,1218,1219,1240,1248,1276,1284,1288,1289],distribute_nest:1159,distributedarrai:[40,41],distrubt:[1253,1255],dive:[1259,1302],divid:[40,41,1007,1085,1087,1139],dividend:[1139,1147],divis:[1007,1039,1046,1080,1087,1088,1104,1106,1107,1111,1139,1147,1292,1293,1294],divisor:[1104,1106,1107,1111,1139,1147,1292,1293,1294],doc:1259,docstr:43,document:43,doe:[40,41,43,1007,1010,1085,1301],doesn:[1127,1132,1259],doing:43,domain:[863,864,867,868,873,875,1139,1140],don:[43,1259],done:43,door:1305,dot:[1127,1129,1240,1251,1252,1276,1287],down:1301,downscal:[1007,1021,1022],drag:[1259,1305],draw:[1215,1216,1218,1219],drawn:[1215,1216,1217,1218,1219],drop:[1259,1305],dropout:[1240,1259,1276,1287],dropout_r:[1276,1287],ds_tune_step:933,dtype:[40,41,43,130,296,394,395,397,398,400,401,444,445,448,449,457,460,470,477,577,712,855,856,858,859,860,861,987,988,989,990,991,992,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1010,1014,1041,1050,1069,1070,1071,1103],dtype_bit:[130,296,444,577,712,983],dtype_from_str:[43,130,296,444,577,712,983],dtype_in:[444,454,455,456,983,989,994,995,996,997,998,999,1006],dtype_to_str:[130,296,444,577,712,983],duplic:[40,41,43],dure:[40,41,43,931,932,1007,1098,1104,1106,1107,1111,1155,1156,1157,1158,1288,1289,1292,1293,1294,1296],dynam:[43,444,450,931,932],each:[40,41,42,43,863,864,865,866,867,868,869,870,871,872,873,874,875,892,911,917,933,942,943,952,953,954,955,956,957,958,964,976,977,1007,1008,1009,1024,1035,1074,1085,1089,1092,1102,1104,1107,1109,1111,1112,1113,1120,1123,1127,1134,1139,1142,1147,1149,1150,1159,1203,1207,1215,1216,1222,1223,1240,1241,1242,1243,1244,1245,1246,1247,1248,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1302],eager:1302,easi:1305,easili:1259,econom:1305,ecosystem:1259,edg:[1007,1020,1024,1102],effect:[1104,1113],effective_grad:[1104,1113],effici:1305,einop:[40,41,1007,1032,1033,1034],einops_rearrang:[40,41,1007],einops_reduc:[40,41,1007],einops_repeat:[40,41,1007],einstein:[40,41,1222,1223],einsum:[40,41,183,371,498,638,824,1222],either:[40,41,43,863,873,1007,1031,1062,1065,1067,1155,1156,1157,1158,1159,1276,1287,1288,1289,1302],eleg:1159,element:[40,41,43,496,855,857,863,864,865,866,867,868,869,870,871,872,873,874,875,881,882,888,889,890,892,911,917,933,954,958,964,983,987,1007,1008,1010,1012,1013,1015,1016,1020,1021,1022,1028,1029,1035,1038,1039,1050,1051,1064,1066,1074,1076,1085,1096,1101,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1159,1222,1223,1225,1227,1229,1232,1233,1234,1235,1236,1237,1238,1239,1240,1248,1276,1284],elementwis:[40,41],elementwise_affin:[1290,1291],elementwise_funct:[863,864,865,866,867,868,869,870,871,872,873,874,875],elemtn:[1215,1216],elif:1159,els:[43,1007,1017,1031,1036,1159],elsewher:[1007,1101],emphas:1259,empti:[40,41,888,889,890,1127,1132,1159],enabl:[40,41,42,43,1259],encapsul:[859,861],encod:[1007,1040,1120,1122],end:[1007,1010,1259,1302],engag:43,ensur:43,entir:[40,41,888,889,890,933,977,1159,1259,1276,1285],entri:[40,41,1007,1060,1061,1085,1086],entropi:[1253,1254,1255,1256],enumer:1159,environ:1259,eps:[398,859,860],epsilon:[1104,1106,1107,1111,1253,1254,1255,1256,1257,1258,1290,1291,1292,1293,1294],equal:[40,41,444,577,712,863,869,877,878,885,886,1007,1009,1015,1016,1024,1085,1102,1139,1151,1153,1215,1219],equality_matrix:[1007,1009],equat:[40,41,1222,1223],equival:[863,874,877,880,1007,1010,1139,1153],erf:[494,802,1139],error:[40,41,43,933,1007,1086,1139,1148,1159,1232,1233,1288,1289,1292,1296],essenti:43,etc:[40,41,43,933,978,1007,1010,1014,1042,1043,1050,1060,1061,1069,1070,1071,1077,1078,1103,1159,1215,1216,1217,1218,1219,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1298,1299,1305],euclidean:[877,880],euler:854,evalu:[40,41,863,872,873,888,889,890,1007,1065,1203,1204,1211],even:[43,1305],evenli:[40,41,1007,1010,1060,1061,1085],everi:[43,1007,1009,1305],exact:[40,41],exampl:[43,931,932,1007,1020,1089,1127,1132,1259,1301,1302,1305],example_input:[444,450,931,932],exc_tb:1159,exc_typ:1159,exc_val:1159,exce:[1007,1066],except:[40,41,44,47,888,889,890,1007,1010,1017,1023,1031,1098,1159],excess_s:1159,excit:[1259,1302],exclud:[59,61,1007,1010,1215,1219],exclus:[40,41,444,452,465,478,480,1007,1028,1057,1104,1110,1215,1217],execut:[43,1007,1098,1302],execute_with_gradi:[163,345,478,615,779,1104,1259,1301],exist:[40,41,1007,1031,1159,1259,1292,1296,1305],exp:[802,1139],expand:[40,41,1007,1037,1040],expand_dim:[40,41,296,712,1007,1159],expect:[1007,1011],explain:[43,1302],explicitli:[43,1276,1285,1287,1288,1289,1302],expon:[43,892,917,1007,1088],exponenti:[43,892,917,1139,1148,1149],expos:[1007,1014,1025],express:[863,867,1007,1065],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1104,1108],eye:[1127,1129],fabian:1259,fabio:1259,factor:[933,942,975,976,977,1104,1106,1107,1111,1112,1127,1134,1159,1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283,1292,1293,1294,1295],fail:43,falck:1259,fall:[1288,1289,1292,1296],fallback_to_non_compil:[1288,1289,1292,1296],fals:[15,18,19,40,41,42,59,66,67,68,69,70,442,444,452,453,465,473,476,478,479,480,487,489,863,869,870,874,877,880,885,886,888,889,890,933,951,964,972,977,982,983,990,991,992,993,1007,1009,1028,1031,1036,1040,1047,1057,1062,1083,1085,1099,1101,1104,1107,1108,1109,1110,1111,1112,1113,1127,1130,1155,1156,1157,1158,1159,1203,1204,1205,1207,1211,1212,1222,1224,1225,1226,1227,1228,1229,1230,1265,1266,1288,1289,1292,1293,1294,1295,1296,1297],fan_in:1267,fan_mod:1267,fan_out:1267,far:[1203,1204,1211,1301],faster:[931,932],favourit:[1259,1301],feasibl:1305,feat_dim:[1240,1251,1252],fed:[933,977,1159],feed:[933,977,1159],few:43,field:1305,file:[40,41,43,1007,1082,1093,1288,1289],filepath:[40,41],fill:[40,41,855,856,858,1007,1041,1070,1215,1217],fill_valu:[444,457,1007,1041],filter:[1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283,1305],filter_s:[1276,1277,1278],filter_shap:[1276,1279,1280,1281,1282,1283],find:[40,41,43,1305],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,212,213,398,399,525,526,659,660,859],finish:[1259,1305],finit:[863,869],first:[40,41,43,496,863,865,871,877,878,931,932,933,964,1007,1015,1023,1027,1035,1060,1061,1089,1091,1104,1108,1127,1134,1155,1156,1157,1158,1159,1203,1204,1211,1215,1221,1222,1227,1229,1276,1287,1288,1289,1292,1296,1302,1305],firstlayersiren:[1259,1267],firstli:[1302,1305],fist:[933,977,1159],fit:[40,41,442,444,478,483,487,493,494,496,1007,1074,1120,1125],fix:43,fkt:1305,flag:[40,41,43,1104,1110],flat:[40,41,43,1007,1074,1077],flat_list:[40,41],flatten:[40,41,877,880,1007,1040,1074,1222,1224,1225,1226,1228,1230],flatten_key_chain:[40,41,1288,1289],flexibl:[1259,1302],flip:[40,41,103,231,422,549,683,881],float32:[43,444,460,983,987,995,996,1007,1010,1014,1050,1070,1071,1103],float_dtyp:[983,991,1001],float_img_to_uint8_img:1120,floor:[296,444,712,1007,1039,1159],floormod:[296,444,712,1007],fluid:1305,folder:[43,1259],follow:[40,41,43,859,861,877,880,933,977,1007,1053,1054,1055,1087,1088,1104,1107,1109,1111,1112,1113,1159,1203,1207,1212,1240,1251,1252,1259,1276,1286,1292,1296],followng:[859,860],fomaml_step:1155,forget:[1104,1106,1107,1111,1292,1293,1294],fork:[1007,1067,1259,1260],forkserv:[1007,1067,1159],form:[15,16,17,18,19,40,41,855,857,877,878,1007,1014,1104,1107,1109,1111,1112,1113,1203,1205,1212,1240],format:[40,41,43,933,951,983,987,989,993,1007,1010,1014,1050,1070,1071,1103,1159,1222,1223,1259,1301,1302],format_fn:[40,41],format_key_chain:[40,41],forward:[1288,1289,1292,1296,1301],found:[40,41,42],fourier:[1007,1040],fourier_encod:1007,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,360,361,363,364,367,368,369,370,372,373,374,375,376,377,378,379,382,384,385,386,387,388,389,390,395,396,397,399,400,401,404,405,406,407,408,409,410,411,412,413,414,415,418,419,420,421,423,427,430,431,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,479,480,481,482,484,485,486,488,489,490,491,492,495,497,499,500,501,502,503,504,505,508,509,511,512,513,514,515,516,517,522,523,524,526,527,528,531,532,533,534,535,536,537,538,539,540,541,542,545,546,547,548,550,554,557,558,566,571,572,573,574,575,576,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,616,617,618,619,621,622,623,625,626,627,628,629,630,634,635,636,637,639,640,641,642,643,644,645,649,650,651,656,657,658,660,661,662,665,666,667,668,669,670,671,672,673,674,675,676,679,680,681,682,684,688,691,692,700,705,706,707,708,709,710,711,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,780,781,782,783,784,786,787,788,790,791,792,793,794,795,796,797,798,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,818,819,820,821,822,823,825,826,827,828,829,830,831,834,835,836,837,838,839,840,842,843,845,846,847,848,849,850,851,856,857,858,860,861,864,865,866,867,868,869,870,871,872,873,874,875,878,879,880,882,886,889,890,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1233,1234,1235,1236,1237,1238,1239,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1258,1259,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1304,1305],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1159,framewrk:[1007,1067],free:43,freed:43,freeli:43,frequenc:[1007,1040],from:[40,41,42,43,863,875,877,878,881,882,888,889,890,933,942,943,977,983,989,1007,1031,1042,1043,1050,1075,1086,1094,1101,1104,1107,1111,1120,1124,1127,1132,1155,1156,1157,1158,1159,1203,1205,1212,1215,1216,1217,1218,1219,1222,1227,1229,1240,1248,1251,1259,1265,1266,1276,1284,1287,1292,1296,1301,1302],from_cal:[1288,1289],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,130,296,444,577,712,859,860,1007,1127,1132,1259],full_matric:[487,488,491,1127,1134],fulli:[43,1259,1276,1286,1287,1301],func:[40,41,444,450,478,479,931,932,933,977,1007,1019,1104,1108,1159],further:[43,1305],furthermor:1305,futur:1305,gain:1267,gamma:[1257,1258],gather:[40,41,130,296,444,577,712,1007,1043],gather_nd:[40,41,130,296,444,577,712,1007],gauss:[1139,1148],gaussian:[1232,1233],geglu:[1259,1262],gelu:[381,507,833,1232,1259,1262],gener:[23,40,41,43,442,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,496,931,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1110,1215,1217,1219,1220,1259,1292,1296],geometr:[1007,1040],get:[40,41,43,859,860,861,933,942,943,951,966,967,972,976,979,982,983,993,994,1007,1011,1044,1045,1046,1073,1159,1259,1276,1285,1305],get_all_arrays_in_memori:1007,get_all_arrays_on_dev:933,get_framework:59,get_initial_st:[1276,1285],get_min_bas:1007,get_min_denomin:1007,get_mod_kei:[1288,1289],get_num_dim:[444,712,1007],get_referrers_recurs:1007,getfullargspec:1159,gist:1259,give:[43,1007,1075,1302],given:[40,41,43,881,882,933,966,972,975,976,977,979,982,983,987,1007,1010,1014,1020,1028,1029,1043,1060,1061,1070,1071,1074,1077,1078,1085,1092,1097,1099,1103,1104,1106,1107,1109,1111,1112,1113,1127,1129,1135,1139,1140,1159,1203,1208,1209,1215,1218,1219,1221,1222,1225,1227,1228,1229,1230,1240,1241,1242,1243,1244,1245,1246,1247,1265,1266,1305],global:[40,41,42,933,942,943,950,975,976,977,983,990,991,992,1007,1030,1045,1046,1073,1079,1080,1081,1087,1088,1104,1119,1159,1257,1258,1290,1291],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1259,1267,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286],good:43,googl:1259,got:[43,1259],gpu0:43,gpu2:43,gpu:[933,968,971,1159],gpu_is_avail:[442,933,1159],grad:[1259,1292,1296,1301],gradient:[25,40,41,479,480,481,482,933,977,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1123,1155,1156,1157,1158,1259,1292,1293,1294,1295,1296,1297,1301,1305],gradient_descent_upd:[1104,1155,1156,1157,1158],gradient_imag:[166,350,483,620,785,1120],gradienttrack:[1104,1105],graph:[1104,1107,1109,1111,1112,1113,1288,1289],greater:[40,41,1007,1010,1038,1086,1215,1219],green:[40,41,42,1303,1304],grid:[1007,1065],group:[1120,1125],guid:[43,1259,1260,1305],gym:1259,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1305,half:[1007,1010,1159,1215,1219],hand:1259,handl:[40,41,42,43,931,932,933,949,951,960,961,972,979,982,1104,1107,1109,1111,1112,1113,1159,1292,1293,1294,1295,1296,1297],happen:43,has:[40,41,43,877,879,1007,1089,1127,1132,1133,1139,1143],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1007],hasattr:1159,have:[40,41,43,855,856,857,858,859,860,863,864,865,866,867,868,869,870,871,873,874,875,877,878,880,881,882,885,886,888,889,890,892,911,917,1007,1023,1027,1032,1033,1034,1035,1041,1089,1104,1110,1118,1127,1134,1139,1147,1159,1259,1301,1302],haven:43,hdf5:[40,41,1288,1289],head:[1240,1251,1276,1287],head_dim:[1276,1287],height:[1120,1125],height_cutoff:[40,41],help:[43,59,398,442,443,933,945,946,947,948,983,1104,1259,1267,1269,1270,1272,1273,1275],here:[43,1259],hidden:[1240,1250,1276,1285],hierarch:[1007,1025],hierarchi:[40,41],high:[40,41,496,1215,1217,1219],higher:[1104,1107,1109,1111,1112,1113,1127,1134],highest:[1215,1217],highest_util:1159,highest_util_nod:1159,highli:1259,highlight:1305,hint:43,hkt:1305,hold:[983,987,1007,1010,1014,1077,1078],host:1259,hot:[1007,1069],hour:43,how:[1259,1276,1287,1288,1289,1302,1305],howev:[43,1302],http:1305,hyperbol:[863,864,868,1139,1141,1145,1146,1152,1154,1232,1239],hypothet:[43,1305],icon:1259,idea:1259,ident:[40,41,43,130,296,444,577,712,1007],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[854,859,860,863,875],if_exist:[40,41],ignor:[40,41,1292,1296],ignore_key_error:[40,41],ignore_miss:[1292,1296],ignore_non:[40,41],iii:43,iinfo:[81,212,398,525,659,859],imag:[27,484,485,486,1007,1059,1121,1122,1123,1124,1125,1126,1240,1241,1242,1243,1244,1246,1247,1259,1305],image_dim:[1120,1124],imkkhk:1305,immedi:[1259,1302,1305],implement:[43,863,864,867,868,872,873,885,886,892,917,1259,1302,1305],in_featur:[1240,1249],inadvert:43,includ:[40,41,43,877,880,888,889,890,1007,1010,1049,1087,1088,1100,1203,1204,1215,1219,1276,1286,1287,1290,1291,1301],include_deriv:[1203,1205,1212],include_empti:[40,41],include_inf:[40,41,1007,1049,1100],include_nest:[1203,1204],include_self:[40,41],inclus:[43,1215,1217],incom:[1240,1249],increas:[933,955,959,965,1007,1024,1037,1102,1159,1203,1212],increasingli:1305,increment:[1007,1054,1159],inde:1259,indent:[40,41,42],independ:[1215,1216],index:[40,41,444,496,885,886,1007,1012,1013,1042,1043,1065,1086,1089,1203,1206,1208,1209,1210,1213],index_nest:1203,indic:[40,41,444,458,459,469,471,472,877,880,885,886,1007,1012,1013,1042,1043,1051,1069,1077,1078,1203,1204,1206,1208,1209,1210,1211,1213,1214,1215,1216,1232,1237,1240,1241,1242,1243,1244,1245,1246,1247,1257,1258,1276,1277,1278,1279,1280,1281,1282,1283,1288,1289],indices_wher:[130,296,444,712,1007],indistinguish:[863,875],inevit:1305,inf:[40,41,877,880,1007,1049,1058,1100,1139,1143],infer:[931,932,1007,1047,1050,1075,1083,1120,1124,1127,1132,1302,1305],infin:[863,864,866,867,868,869,873,875,877,880,888,889,890,1007,1058],infinit:[863,875],inform:[859,860,861,1104,1115],init_c:[1240,1250],init_h:[1240,1250],init_on_first_step:[1292,1296],initi:[40,41,42,43,59,398,442,443,933,945,946,947,948,983,1104,1159,1240,1250,1259,1269,1270,1272,1273,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1292,1296],initialz:[1288,1289],inner:[1155,1156,1157,1158],inner_batch_fn:[1155,1156,1157],inner_batch_shap:[1240,1249],inner_cost_fn:[1155,1156,1157],inner_grad_step:[1155,1156,1157,1158],inner_learning_r:[1155,1156,1157,1158],inner_optimization_step:[1155,1156,1157,1158],inner_v:[1155,1156,1157],innermost:[855,857,877,878],inp:1159,inplac:[40,41,1007,1017,1052,1056,1090,1104,1107,1109,1111,1112,1113,1265,1266,1292,1293,1294,1295,1296,1297],inplace_arrays_support:[444,1007],inplace_decr:[130,296,444,577,712,1007],inplace_incr:[130,296,444,577,712,1007],inplace_oper:[0,11,12],inplace_upd:[40,41,130,296,444,577,712,1007,1265,1266],inplace_variables_support:[444,1007],input:[15,18,19,40,41,42,43,855,857,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,880,881,882,885,886,888,889,890,931,932,933,942,943,950,951,952,955,956,959,965,977,978,983,987,988,990,991,992,993,994,998,999,1007,1008,1009,1012,1013,1015,1016,1017,1018,1020,1021,1022,1023,1024,1026,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1047,1049,1050,1051,1053,1054,1055,1057,1058,1059,1063,1064,1065,1066,1074,1076,1083,1084,1086,1089,1090,1091,1092,1094,1095,1096,1097,1099,1100,1102,1104,1108,1110,1115,1119,1120,1121,1122,1123,1124,1126,1127,1130,1132,1134,1136,1137,1138,1139,1141,1143,1145,1146,1147,1151,1152,1153,1154,1155,1156,1157,1158,1159,1215,1216,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1257,1258,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1290,1291,1302],input_ax:[933,977,1159],input_channel:[1276,1277,1278,1279,1280,1281,1282,1285,1286],input_queu:1159,inputs_split:1159,insert:[1007,1037],insid:43,inspect:1159,inspir:1305,instal:1259,instanc:[15,16,17,18,19,40,41,43,496,892,911,917,933,942,1159,1265,1266,1298,1299],instead:[40,41,43,496,1222,1224,1225,1226,1227,1228,1229,1230,1305],int32:43,int64:[983,987,1007,1010,1014,1050,1070,1071,1103],int_dtyp:[983,992,1002],integ:[40,41,496,859,861,863,865,866,877,880,888,889,890,983,999,1007,1010,1038,1076,1085,1215,1217,1220],integr:1259,intend:43,inter:1259,interact:1259,interchang:[40,41,1007,1091],interest:1259,interfac:[1007,1014,1302],intermedi:[40,41],intern:[40,41,933,1104,1118,1159,1203,1204,1211,1212,1267,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1298,1299],interpol:[1007,1059],intersect:[1139,1140],interv:[40,41,888,889,890,1007,1010,1020,1060,1061,1139,1142,1215,1219],introduc:1305,inv:[789,1127,1305],invalid:[888,889,890],invalid_dtyp:983,invers:[863,864,1127,1129,1131,1139,1140,1141,1142,1143,1145,1305],invert:[1127,1129,1131],invest:1305,investig:43,invoc:[931,932],irrespect:1259,is_al:1159,is_arrai:[130,296,444,577,712,1007,1159],is_float_dtyp:983,is_int_dtyp:983,is_mean:1159,is_sum:1159,is_vari:[163,345,478,615,779,1104],isfinit:[86,217,403,530,664,863],isinf:[296,577,712,1007],isinst:1159,isnan:[86,217,403,530,664,863],isnumer:1159,issu:[1259,1260],issue_numb:43,item:[15,19,40,41,892,904,905,933,942,943,945,952,954,956,958,964,983,990,1007,1025,1048,1087,1088,1159,1203,1207,1208,1209,1212,1213,1214,1259,1288,1289,1301],iter:[15,16,17,18,19,40,41,42,931,932,933,936,937,939,940,942,943,946,947,954,956,957,958,959,964,977,1007,1009,1018,1023,1024,1050,1065,1070,1074,1075,1078,1083,1085,1089,1092,1097,1102,1159,1203,1204,1205,1207,1211,1212],iterbal:[933,954,958,964,1159],its:[496,933,977,1007,1050,1075,1091,1097,1159,1259],itself:[43,1203,1212],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,394,395,396,397,398,400,401,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,854,855,856,857,858,859,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,885,886,888,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,935,936,937,938,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1262,1263,1264,1265,1266,1267,1269,1270,1272,1273,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1303,1304],ivy_backend:[40,41],ivy_bay:1305,ivy_test:43,ivyfcmodel:1301,ivyh:[40,41,42],ivymodul:[194,841],jame:1259,jax:[43,1104,1110,1259,1305],jax_concat:1259,jnp:1259,join:[40,41,1007,1023,1089,1159],journal:1259,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1259,1276,1285,1305],kaimingnorm:[1267,1271],kalman:1305,kalman_filt:1305,kalman_filter_step:1305,kalman_filter_upd:1305,keep:[40,41,933,978,1007,1099,1159,1259,1260,1305],keep_inner_v:[1155,1156,1157],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1155,1156,1157],keepdim:[40,41,444,476,487,489,877,880,888,889,890,1007,1099,1127,1130,1222,1224,1225,1226,1227,1228,1229,1230],kei:[15,16,17,40,41,42,43,892,897,933,945,1007,1025,1155,1156,1157,1159,1203,1206,1210,1240,1251,1252,1259,1265,1266,1276,1287,1292,1296],kept:[40,41,42,1155,1156,1157],kera:1305,kernel:[1240,1250],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,933,942,943,955,959,965,1007,1011,1032,1033,1034,1062,1159,1203,1207,1288,1289],keyword_color_dict:[40,41,42],kind:[859,860,861,1305],kwarg:[15,16,17,40,41,42,59,63,933,942,955,959,965,1007,1062,1159,1265,1266,1288,1289],kwarg_stateful_idx:[1288,1289],kwargs_clon:1159,kwargs_dist:1159,kwargs_uni:1159,label:[43,1253,1254,1255,1256],lamb:[1104,1111,1259,1292],lamb_upd:1104,lambda:[1159,1292,1295,1297,1301],lar:[1104,1111,1112,1259,1292],larger:[859,860,1007,1020],largest:[40,41,859,860,861,1007,1012,1038],lars_upd:1104,last:[40,41,877,878,881,882,885,886,888,889,890,1007,1010,1027,1059,1085,1089,1127,1130,1134,1222,1227,1229,1232,1237,1240,1250,1276,1286],later:[40,41,1007,1019],latest:[1276,1285],layer:[1104,1107,1109,1111,1113,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1257,1258,1259,1267,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1298,1299,1305],layer_norm:1257,layernorm:[1259,1290],layerwis:[1104,1112,1292,1295],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1203,1204,1211],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1232,1233,1234],leaky_relu:[833,1232],learn:[1104,1107,1109,1111,1112,1113,1127,1132,1155,1156,1157,1158,1215,1221,1259,1292,1293,1294,1295,1296,1297,1302,1305],learnabl:[1257,1258,1290,1291],least:43,leav:[15,18,19,40,41,1203,1204,1205,1211,1212],left:[40,41,43,1127,1130,1222,1224,1225,1226,1227,1228,1229,1230,1259],leftmost:[40,41],len:1159,length:[40,41,42,1007,1010,1075,1086,1097],lenton2021ivi:1259,lenton:1259,less:[40,41,43,86,217,403,530,664,863,866,873,875,877,880,1159,1215,1219],less_util_node_str:1159,let:[1302,1305],level:1259,librari:[863,874,1259,1301,1305],lightweight:1259,like:[43,1104,1110,1215,1219,1259,1301,1302,1305],likewis:43,limit:[40,41,42,43,859,860,861,1007,1020,1021,1022],linalg:[29,1128,1129,1130,1131,1132,1133,1134,1135,1259],line:43,linear0:[1259,1301],linear1:1259,linear2:1301,linear:[1007,1040,1059,1127,1232,1233,1234,1235,1240,1248,1259,1276,1277,1278,1279,1280,1281,1282,1283,1301],linear_algebra:[487,488,489,490,491,492,877,878,879,880],linear_resampl:[130,296,444,577,712,1007],linearli:[1007,1040],link:[43,1259],linspac:[130,296,444,577,712,1007,1010],list:[15,18,19,40,41,394,395,397,855,856,858,881,882,888,889,890,933,942,943,952,953,955,956,957,959,962,963,977,1007,1010,1014,1016,1065,1084,1085,1094,1099,1155,1156,1157,1159,1203,1204,1205,1207,1211,1212,1240,1241,1242,1243,1244,1245,1246,1247,1259,1260,1265,1266,1276,1277,1278,1279,1280,1281,1282,1283],list_join:[40,41,42],list_stack:[40,41],liter:[877,880],littl:1302,load:[40,41],loaded_kwarg:1159,loader:1259,local:43,local_set:[1007,1048],locat:[43,1007,1058,1215,1216],log1p:[86,403,530,664,863],log2:[86,403,530,664,863],log:[802,863,872,877,879,1007,1061,1127,1133,1139,1159,1253,1254,1255,1256],logarithm:[863,872,873,877,879,1127,1133,1139,1150],logic:[31,863,874,888,889,890,1137,1138,1259],logical_and:[362,799,1136],logical_not:[86,217,403,530,664,863],logical_or:[362,799,1136],logit:[1253,1256],logspac:[130,296,444,577,712,1007],look:[43,1302,1305],loop:[1155,1156,1157,1158],loss:[1254,1255,1256,1259,1301],loss_fn:[1259,1301],lot:1302,low:[40,41,496,1215,1217,1219],lower:[40,41,43,855,857,1007,1064,1215,1219],lower_depth:[1288,1289],lowest:[15,18,19,40,41,1203,1212,1215,1217],lstm:[1240,1250,1259,1276],lstm_updat:[43,1240],machin:[859,860,861,1127,1132,1215,1221,1259,1302,1305],made:43,mai:[863,874,885,886,1007,1010,1031,1035,1259,1302,1305],main:[855,857,877,878,1007,1050,1259],mainli:1259,maintain:[43,885,886],make:[43,496,933,1159,1259,1302],maml:[1155,1156,1157],maml_step:1155,manag:[933,1159],manhattan:[877,880],mani:[40,41,43,1007,1085,1259],manipulation_funct:[881,882],manner:[15,18,19,40,41,43,1203,1212],manual:[1203,1204,1211,1305],map:[40,41,42,933,942,1007,1058,1159,1203,1208,1209,1212,1276,1287,1301],map_cont:[40,41],map_nest_at_index:1203,map_nest_at_indic:1203,map_sequ:[40,41],mapper:[933,942,943,1159],mark:43,mask:[1240,1251,1252],master:43,match:[40,41,1007,1062],match_kwarg:1007,math:[33,495,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1159,1259],mathbb:[1127,1135],mathbf:[1127,1135],mathemat:[854,877,880],matmul:[43,296,444,577,712,1007,1305],matplotlib:1302,matric:[855,857,877,878,1240,1249],matrix:[40,41,855,857,877,878,879,1007,1009,1021,1063,1127,1128,1129,1130,1131,1132,1133,1135,1240,1249,1276,1286],matrix_norm:[40,41,170,354,487,624,789,1127],matter:1259,max:[40,41,398,859,860,861,1007,1021,1022,1033,1064,1077,1078,1159,1222,1224,1292,1294],max_batch_s:[40,41],max_chunk_s:[933,977,1159],max_depth:[40,41,933,937,940,947,955,959,965,1007,1048,1159,1203,1212],max_dev_dim_step_ratio:933,max_freq:[1007,1040],max_length:[40,41],max_node_dim_step_ratio:1159,max_norm:[40,41,1007,1021,1022],max_split_factor_step_s:[933,1159],max_trust_ratio:[1104,1111,1292,1294],maxim:[1259,1302,1305],maximis:1259,maximum:[40,41,42,712,933,955,959,965,977,1007,1012,1020,1021,1022,1040,1104,1111,1159,1203,1212,1222,1224],mayb:[15,18,19],mdi:1159,mean:[40,41,496,933,962,963,964,965,977,1007,1033,1155,1156,1157,1158,1159,1203,1207,1215,1218,1222,1225,1228,1230,1267,1301,1305],measur:[1240,1251,1276,1287],mech:1259,mechan:[1259,1305],medic:1305,member:43,memori:[933,949,972,977,979,982,1159,1240,1250,1259],mention:43,merg:43,merge_with_upstream:43,meshgrid:[296,444,712,1007],messag:[1303,1304],meta:[35,1156,1157,1158,1259],method:[40,41,42,43,496,1007,1014,1025,1065,1077,1078,1104,1111,1112,1159,1203,1204,1211,1212,1259,1276,1287,1288,1289,1302],might:[1007,1031,1305],min:[40,41,398,859,860,861,877,880,1007,1033,1066,1077,1078,1087,1127,1132,1159,1222,1226],min_bas:[1007,1088],min_denomin:[1007,1087],min_dev_dim_s:933,min_node_dim_s:1159,min_sf_tune_step:[933,1159],min_unit_dev_tune_step:933,min_unit_node_tune_step:1159,mind:1259,mini:[1257,1258,1290,1291],minimum:[40,41,712,933,983,987,1007,1010,1013,1014,1020,1045,1046,1079,1080,1087,1088,1159,1222,1226],miss:[1292,1296],ml_framework:[1007,1010,1127,1132],mod:[1007,1039],mod_depth:[1288,1289],mod_height:[1288,1289],mod_with_top_mod_key_chain:[1288,1289],mode:[40,41,487,490,931,932,933,962,963,964,965,977,1127,1132,1134,1159,1302],model:[1259,1301],modul:[40,41,42,59,1007,1067,1159,1259,1260,1262,1263,1264,1265,1266,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1290,1291,1298,1299,1305],moment:[1104,1106,1107,1111,1292,1293,1294],more:[43,881,882,1007,1089,1159,1259,1302,1305],more_util_node_str:1159,most:[40,41,43,1127,1132,1259,1305],move:[40,41,43,933,978,1159],much:[43,1259,1305],multi:[496,1007,1067,1240,1251,1276,1287],multi_head_attent:1240,multi_index_nest:1203,multi_map:[40,41],multi_nod:1159,multidev:[933,944,945,946,965],multidevcontain:[40,41],multidevic:[933,942],multidevit:[933,936,939,942,943,947],multidevitem:[933,935,938],multidevnest:[933,937,940],multiheadattent:[1259,1276],multinod:[1159,1163],multinodecontain:1159,multinodeit:1159,multinodeitem:1159,multinodenest:1159,multinomi:[176,366,496,633,817,1215],multipl:[40,41,888,889,890,1007,1062,1085,1127,1129,1222,1224,1225,1226,1227,1228,1230,1257,1258,1276,1286,1302],multipli:[40,41,1007,1028,1222,1227],multiprocess:[40,41,42,444,712,933,942,1007,1159],must:[40,41,42,43,855,856,857,858,863,864,865,866,867,868,869,871,873,874,875,877,878,880,881,882,885,886,888,889,890,892,911,917,933,962,963,964,965,977,1007,1010,1023,1025,1027,1035,1064,1066,1078,1089,1139,1144,1147,1159,1215,1220,1292,1296],mutabl:[1203,1205,1212],mutlidevic:[933,942],mutlinod:1159,mw_tm1:[1104,1107,1111],mx_concat:1259,mxn:[855,857,877,878],mxnet:[43,1259,1305],my_func:43,mymodel:1259,name:[43,931,932,1301],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1302],nan:[40,41,43,854,863,864,866,867,868,869,870,873,875,888,889,890,1007,1049,1100],nativ:[15,17,18,19,40,41,43,933,949,951,960,961,972,979,982,983,988,995,996,1159,1259,1260,1265,1266],native_modul:[1265,1266],native_module_class:[1265,1266],nativearrai:[15,18,19,43,487,488,491,855,857,859,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,877,880,881,882,885,886,888,889,890,892,911,917,933,951,977,978,983,987,993,998,999,1007,1008,1009,1010,1012,1013,1014,1015,1016,1018,1020,1021,1022,1023,1024,1026,1027,1028,1029,1032,1033,1034,1035,1037,1038,1039,1040,1042,1043,1047,1049,1050,1051,1058,1059,1060,1061,1063,1064,1065,1066,1069,1070,1071,1074,1075,1076,1077,1078,1083,1085,1086,1089,1091,1092,1094,1095,1096,1097,1099,1100,1101,1102,1103,1159,1203,1205,1212],natur:[863,872,877,879,1127,1133,1139,1150,1305],ncdhw:[1240,1245,1246,1276,1281,1282],nchw:[1240,1243,1244,1247,1276,1279,1280,1283],ncw:[1240,1241,1242,1276,1277,1278],ndarrai:[43,394,395,396,397,398,400,401,496,1007,1095],ndhwc:[1240,1245,1246,1276,1281,1282],nearest:[1007,1076],need:[43,1007,1021,1022,1240,1242,1244,1246,1259,1276,1278,1280,1282,1305],neg:[40,41,863,869,877,880,881,882,888,889,890,1222,1227,1229,1232,1234],negative_slop:1267,neither:1159,nest:[15,16,17,18,19,40,41,42,933,955,959,965,1007,1014,1094,1155,1156,1157,1159,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1288,1289,1292,1293,1294,1295,1296,1297],nested_indices_wher:1203,nested_map:[1159,1203],network:[1240,1249,1259,1260,1262,1276,1288,1289,1305],neural:[1240,1259,1262,1276,1301],never:43,new_node_percent_mem:1159,new_node_util:1159,new_node_utils_kei:1159,new_std:[1257,1258,1290,1291],newli:[43,931,932,1007,1018,1019],newlin:[40,41,42],newshap:[1007,1018,1075],next:[859,860,1159,1288,1289,1292,1293,1294,1295,1296,1297],nhwc:[1240,1243,1244,1247,1276,1279,1280,1283],node:[40,41,1203,1204,1211],node_clon:1159,node_dist:1159,node_dist_arrai:1159,node_dist_it:1159,node_in:1159,node_mapp:1159,node_str:1159,node_to_str:1159,node_util:1159,nodedistit:1159,nodedistitem:1159,nodedistnest:1159,nodemanag:[1159,1170],nodemapp:1159,nodemappermultiproc:1159,noinspect:[43,934,984,985,986,1105,1159],non:[40,41,863,874,877,880,888,889,890,931,932,983,997,1288,1289,1292,1296,1302],none:[40,41,42,43,59,61,64,394,395,397,442,444,445,448,450,457,458,459,460,467,468,469,470,471,472,473,474,475,477,487,489,496,497,855,856,858,859,860,861,877,880,881,882,888,889,890,931,932,933,942,943,949,950,975,976,977,978,983,990,991,992,1007,1010,1014,1030,1031,1036,1041,1042,1043,1048,1050,1052,1053,1054,1055,1056,1060,1061,1067,1069,1070,1071,1074,1077,1078,1079,1080,1085,1086,1087,1088,1097,1098,1103,1104,1107,1109,1111,1112,1113,1119,1120,1124,1127,1130,1132,1155,1156,1157,1158,1159,1203,1204,1207,1211,1212,1215,1216,1217,1218,1219,1222,1224,1225,1226,1227,1228,1229,1230,1240,1242,1244,1246,1249,1250,1251,1252,1257,1258,1265,1266,1267,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299],norm:[40,41,877,880,1007,1021,1022,1127,1130,1258,1259,1291,1292,1294],normal:[1215,1218,1257,1258,1290,1291],normalized_idx:[1257,1258],normalized_shap:[1290,1291],notat:[40,41,1222,1223],note:[43,1127,1132],noth:[40,41,1302],notimplementederror:1159,now:[40,41,43,933,978,1007,1008,1159,1259,1276,1287,1288,1289,1301,1302,1305],np_concat:1259,np_finfo:398,ns_tune_step:1159,num:[444,467,468,1007,1060,1061],num_arrai:[40,41],num_arrays_in_memori:1007,num_arrays_on_dev:933,num_band:[1007,1040],num_channel:[1276,1283],num_chunk:1159,num_chunks_floor:1159,num_class:[1215,1216],num_cpu_cor:933,num_gpu:[123,442,933,1159],num_head:[1240,1251,1276,1287],num_kei:[1240,1251,1252],num_lay:[1276,1285],num_or_size_split:[40,41,444,473,1007,1085],num_output:1159,num_queri:[1240,1251,1252],num_sampl:[444,466,496,497,1007,1059,1120,1121,1215,1216],num_task:[1155,1156,1157,1158],number:[40,41,42,854,859,860,861,863,866,888,889,890,931,932,933,969,970,971,983,994,998,999,1007,1010,1020,1024,1037,1040,1047,1050,1059,1060,1061,1064,1068,1074,1085,1092,1096,1100,1102,1127,1134,1155,1156,1157,1158,1159,1215,1216,1220,1222,1224,1225,1226,1228,1230,1240,1251,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1302,1305],numer:[43,863,866,869,870,871,874,892,911,917,1007,1045,1046,1079,1080,1087,1088,1139,1147,1267],numhead:[1240,1251],numpi:[40,41,43,394,395,396,397,398,400,401,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,1007,1095,1127,1132,1134,1222,1223,1259,1301,1302,1305],nwc:[1240,1241,1242,1276,1277,1278],obj:[40,41],object:[40,41,42,59,398,859,860,933,983,987,1007,1010,1014,1104,1203,1206,1208,1209,1210,1213,1214,1215,1221,1267,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1288,1289],object_in:[444,448,1007,1014],observ:1159,obvious:43,occupi:[859,860,861,1007,1077,1078],off:[877,878,1007,1010],offer:1259,offset:[877,878,1257,1258],often:1302,old:[40,41],on_init:[1276,1287,1288,1289],onc:[43,933,977,1159,1215,1216,1259],one:[40,41,43,877,880,881,882,933,962,963,964,965,977,983,989,1007,1050,1062,1069,1077,1078,1086,1089,1127,1130,1159,1222,1223,1224,1225,1226,1227,1228,1229,1230,1259,1302,1305],one_hot:[130,444,577,712,1007],onearrai:[1007,1037],ones:[40,41,77,208,394,521,655,855,1007,1050,1069,1071,1259],ones_lik:[130,296,444,577,712,1007],ongo:43,onli:[40,41,43,496,863,874,881,882,933,1127,1132,1159,1203,1204,1205,1211,1292,1293,1294,1295,1296,1297,1301,1302],onlin:[43,1259],onto:[933,962,963,978,1159,1203,1207,1212],oom:[933,1159],open:[1007,1010,1215,1219,1259,1305],opencv:1302,oper:[40,41,1007,1017,1032,1033,1034,1060,1061,1090,1104,1107,1109,1111,1112,1113,1136,1137,1138,1240,1241,1242,1243,1244,1245,1246,1247,1249,1259,1260],operand:[40,41,863,864,866,867,868,873,875,1222,1223],oppos:[1007,1040],optim:[933,1104,1107,1109,1111,1112,1113,1155,1156,1157,1158,1159,1259,1293,1294,1295,1297,1301,1305],optimizer_upd:1104,option:[15,18,19,40,41,42,43,394,395,397,855,856,858,877,880,881,882,888,889,890,931,932,933,942,943,951,955,956,957,958,959,962,963,964,965,972,975,976,977,978,982,983,988,993,997,1006,1007,1009,1010,1012,1013,1014,1021,1022,1023,1028,1030,1031,1040,1041,1042,1043,1047,1049,1050,1057,1059,1060,1061,1062,1065,1067,1069,1070,1071,1074,1077,1078,1081,1083,1085,1086,1087,1088,1089,1097,1099,1100,1103,1104,1107,1109,1110,1111,1112,1113,1115,1120,1124,1127,1130,1132,1155,1156,1157,1158,1159,1203,1204,1205,1207,1211,1212,1215,1216,1222,1224,1225,1226,1227,1228,1229,1230,1232,1233,1237,1240,1248,1249,1251,1252,1253,1254,1255,1256,1257,1258,1265,1266,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1302],ord:[877,880,1127,1134],order:[40,41,42,43,877,880,881,882,885,886,1104,1107,1109,1111,1112,1113,1127,1130,1155,1156,1157,1298,1299],ordered_node_util_kei:1159,org:1305,organ:43,origin:[40,41,42,1007,1071,1075,1103,1127,1130],other:[40,41,43,892,894,895,900,902,903,907,909,910,911,912,913,915,917,918,919,920,921,922,924,925,926,928,929,930,931,932,1007,1009,1010,1050,1104,1108,1215,1219,1259,1301,1302,1305],other_i:[43,892,911,917],otherwis:[15,16,17,18,19,40,41,863,869,870,877,880,888,889,890,933,950,983,990,991,992,1007,1017,1097,1098,1101,1104,1110,1115,1119,1155,1156,1157,1159,1222,1224,1225,1226,1228,1230],our:[43,1259,1305],out:[43,496,855,856,857,858,859,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,880,881,882,885,886,888,889,890,892,911,1007,1010,1139,1143,1240,1248,1250,1259,1276,1284],out_feat_dim:[1240,1251],out_featur:[1240,1248,1249],out_i:[863,869,870],outdat:1305,outer:[1155,1156,1157,1158],outer_batch_fn:[1155,1156,1157],outer_batch_shap:[1240,1249],outer_cost_fn:[1155,1156,1157],outer_v:[1155,1156,1157],outlin:1302,output:[40,41,43,855,856,858,881,882,933,942,943,977,1007,1010,1019,1041,1050,1074,1092,1104,1108,1139,1144,1159,1215,1217,1218,1219,1240,1242,1244,1246,1248,1250,1251,1252,1259,1276,1277,1278,1279,1280,1281,1282,1284,1285,1286,1287],output_ax:[933,977,1159],output_axi:1159,output_channel:[1276,1277,1278,1279,1280,1281,1282,1285,1286],output_queu:1159,output_shap:[1240,1242,1244,1246,1276,1278,1280,1282],outsid:[1007,1020],over:[40,41,877,880,888,889,890,1127,1130,1215,1219,1222,1224,1225,1226,1228,1230,1257,1258,1290,1291],overal:1302,overflow:[1007,1010],overhead:1302,overrid:[1007,1069,1071,1103],overriden:[1292,1296],overwrit:[40,41,933,977,1159],overwrite_at_key_chain:[40,41],own:[1259,1302,1305],packag:[43,1302],pad:[1007,1024,1040,1102,1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283],pad_width:[444,1007,1024,1102],page:1259,pair:[1240,1252],parallel:[933,942,943,1159],parallelis:[933,942,943,1159],param:[40,41,42,444,458,459,933,977,1007,1008,1042,1043,1069,1070,1159,1288,1289,1301],paramet:[15,16,17,18,19,40,41,42,43,877,878,879,892,911,917,931,932,933,942,943,949,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,972,975,976,977,978,979,982,983,987,988,989,993,994,995,996,997,998,999,1006,1007,1009,1010,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1026,1027,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1047,1049,1050,1051,1053,1054,1055,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1070,1071,1074,1075,1076,1077,1078,1079,1080,1081,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1106,1107,1108,1109,1110,1111,1112,1113,1115,1117,1118,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1265,1266,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301],parameter:[1215,1218,1219],pardo:1259,pars:[1007,1025],part:[855,857,1104,1107,1109,1111,1112,1113,1139,1143,1259,1288,1289,1302],partial:[40,41,43,1288,1289],particl:1305,particular:[43,1305],pass:[40,41,42,43,933,942,977,983,988,1007,1019,1104,1118,1155,1156,1157,1159,1265,1266,1288,1289,1292,1296,1298,1299],pattern:[40,41,1007,1032,1033,1034],peopl:43,per:[933,1159,1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283],percent_used_mem_on_dev:933,percent_used_mem_on_nod:1159,percentag:[933,972,1159],perf_count:1159,perform:[40,41,43,888,889,890,933,1007,1012,1013,1028,1032,1033,1034,1053,1054,1055,1059,1060,1061,1104,1107,1109,1111,1112,1113,1120,1121,1155,1156,1157,1158,1159,1203,1208,1209,1222,1224,1225,1226,1227,1228,1229,1230,1232,1237,1240,1248,1250],period:43,permissable_step:1159,permit:43,permut:[496,1007,1091,1097],perpendicular:[1007,1027],person:[43,1259],physci:1305,pickl:[40,41,1159],pickle_filepath:[40,41],pinv:[354,789,1127],pip:1259,pipelin:1301,pkk:1305,pkkm1:1305,pkm1km1:1305,place:[40,41,43,855,856,858,933,978,1007,1037,1041,1053,1054,1055,1159,1292,1293,1294,1295,1296,1297],placehold:[43,1203,1212],pleas:[43,496,1127,1132],point:[43,854,855,856,858,859,860,863,864,866,867,868,873,875,877,880,983,998,1007,1010,1139,1147],popul:[40,41,1215,1216],popular:1305,population_s:[496,497,1215,1216],portabl:[1259,1260],posit:[15,16,17,859,860,863,869,888,889,890,933,955,959,965,1007,1008,1010,1037,1040,1159,1215,1220,1265,1266],possibi:[40,41],possibl:[43,1007,1062,1094,1120,1125,1305],post:[1257,1258],post_shap:[40,41],power:[43,892,917,923,1007,1045,1079,1088,1267],practic:1259,pre:[933,1159,1259],pre_shap:[40,41],precis:[859,860,863,875],pred:[1253,1254,1255,1256],predict:[1253,1254,1255,1256,1305],preprint:1259,present:[40,41],preserv:[40,41,42,881,882,1104,1115],preserve_typ:[40,41,478,481,1104,1115],press:1259,prevent:[43,1104,1106,1107,1111,1159,1292,1293,1294],prevet:43,previou:[1104,1107,1111],previous:[1007,1019],prime:1259,print:[40,41,42,933,973,1007,1072,1259,1301],print_all_arrays_in_memori:1007,print_all_arrays_on_dev:933,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1292,1296],prob:[496,497,1215,1216,1240,1248,1276,1284],probabl:[1215,1216,1240,1248,1276,1284],problem:[43,1305],process:[43,933,942,943,972,982,1007,1067,1159],process_specif:[933,972,982,1159],prod:[40,41,1007,1033],produc:[933,942,943,1159],product:[40,41,1007,1027,1028,1063,1222,1223,1240,1251,1252,1276,1287],profil:[123,290,442,570,704,933,1159],progress:43,project:[1259,1301,1302,1305],promot:[43,863,864,865,867,868,873,875,877,880,892,917,1139,1147],prompt:1259,properli:43,properti:[40,41,398,933,945,1159,1288,1289,1292,1293,1294,1295,1297],provid:[40,41,43,881,882,888,889,890,931,932,933,950,983,990,991,992,997,1006,1007,1031,1069,1071,1078,1103,1104,1107,1109,1111,1112,1113,1119,1159,1259,1276,1285,1292,1293,1294,1295,1296,1297,1302],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1127,1131],pull:[1259,1260],pure:[40,41,1259,1305],purpos:[43,1305],put:1159,pybroadexcept:1159,pyprotectedmemb:1159,pyshadowingbuiltin:43,pyshadowingnam:[934,984,985,986,1105,1159],python:[40,41,933,972,982,1007,1010,1159,1259],pytorch:[1104,1107,1109,1111,1112,1113,1127,1132,1259,1292,1293,1294,1295,1296,1297,1301,1302,1305],pyunresolvedrefer:1159,quadrant:[1139,1144],qualiti:43,queri:[40,41,892,906,927,933,966,976,1159,1240,1251,1252,1276,1287],query_dim:[1276,1287],query_kei:[40,41],queue:[40,41,42,933,942,943,1007,1073,1081,1159],queue_class:[933,942,943,1159],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1007,1159],quick:[496,1259],quickli:[43,1301],radian:[863,867,1139,1140,1142,1144,1151,1153],rai:[1139,1140],rais:[40,41,43,888,889,890,892,917,1007,1017,1045,1079,1086,1088,1098,1159,1288,1289,1292,1296],ram:[933,972,979,982,1159],randint:[176,366,496,633,817,1215],random:[37,40,41,497,1216,1217,1218,1219,1220,1221,1259],random_crop:1120,random_norm:[176,366,496,633,817,1215],random_uniform:[176,366,496,633,817,1215],randomli:[496,1120,1124,1240,1248,1276,1284],rang:[496,1007,1010,1060,1061,1139,1144,1159,1259,1301,1305],rank:[877,880,888,889,890,1007,1024,1099,1102],rate:[1104,1107,1109,1111,1112,1113,1155,1156,1157,1158,1276,1287,1292,1293,1294,1295,1296,1297],rather:[40,41,43,933,977,1007,1010,1057,1104,1110,1159],ratio:[933,1104,1111,1120,1125,1159,1292,1294],raw:[40,41,1127,1132],raw_delta:1159,reach:[43,933,955,959,965,1159,1203,1212],read:[40,41],readi:[1159,1301],real:[1139,1140,1143],realiti:1302,rearrang:[40,41,1007,1032,1034],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1155,1157],receiv:[43,933,942,943,1007,1011,1062,1159,1276,1286],receivess:[933,1159],receivng:[1155,1158],recev:[1155,1156,1157],recognit:1305,recommend:[863,874,1259],rectifi:[1232,1234,1235],recurr:[1240,1250],recurrent_bia:[1240,1250],recurrent_kernel:[1240,1250],recurs:[40,41,1203,1204,1205,1211,1212],redefin:43,reduc:[40,41,888,889,890,933,977,1007,1033,1127,1132,1159,1222,1224,1225,1226,1227,1228,1229,1230],reduce_max:[40,41,183,371,498,638,824,1222],reduce_mean:[40,41,183,371,498,638,824,1222,1259,1301],reduce_min:[40,41,183,371,498,638,824,1222],reduce_prod:[40,41,183,371,498,638,824,1222],reduce_std:[40,41,371,1222],reduce_sum:[40,41,183,371,498,638,824,1159,1222],reduce_var:[40,41,183,371,498,638,824,1222],reduct:[39,40,41,444,471,472,888,889,890,1007,1033,1077,1078,1223,1224,1225,1226,1227,1228,1229,1230,1259],refactor:43,refer:[43,863,872,888,889,890,1104,1106,1107,1127,1135,1276,1286,1305],reflect:43,reflected_oper:[0,13,14],regard:[933,1159],regardless:[40,41,931,932],register_paramet:1301,reimplement:1305,rel:[877,878,881,882,885,886,1104,1107,1109,1111,1112,1113],rel_slice_obj:1159,relat:43,relev:[1292,1293,1294,1295,1296,1297],relu:[833,1232,1233,1234,1259,1301],remain:[43,1007,1075,1203,1207],remaind:[40,41,1007,1039,1085],remov:[40,41,43,877,878,1007,1086,1155,1156,1157],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,881,882],rep:[1007,1092],repeat:[40,41,43,296,712,1007,1034,1092,1159,1302],repeated_config_check:[933,1159],repeatedli:[1203,1210],repetit:[40,41,1007,1074,1092],replac:[40,41,43,496,497,1007,1020,1077,1078,1215,1216],repo:[43,1259],repositori:43,repres:[43,863,864,868,983,989,994,1240,1249],represent:[40,41,42,43,854,859,860,861,863,865,933,960,961,983,989,995,996,1007,1084,1094,1159],reptil:[1155,1158],reptile_step:1155,request:[1259,1260],requir:[43,863,875,931,932,983,987,1007,1010,1014,1265,1266],resampl:[1007,1059],reserv:43,reshap:[40,41,43,496,712,1007],reshape_lik:[40,41],respect:[863,865,871,892,911,1007,1035,1104,1106,1107,1108,1109,1111,1112,1113,1127,1132,1139,1147,1155,1156,1157,1158],respond:43,respons:[43,1159],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,880,888,889,890,892,911,917,933,942,1007,1010,1035,1077,1078,1089,1127,1130,1136,1137,1138,1139,1147,1159,1222,1224,1225,1226,1227,1228,1229,1230,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1259],ret:1159,ret_dict:1159,ret_fn:[933,942,943,1159],retain:[1104,1108],retain_grad:[478,479,1104,1108],retreiv:1159,retrn:[1007,1084],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1155,1156,1157,1158],return_sequ:[1276,1285],return_st:[1276,1285],rev:[1007,1031],revers:[40,41,881,882,1007,1031,1097],review:43,right:[40,41,43],rk_e:1305,robot:1259,ronald:1259,root:[43,863,875],round:[296,444,712,863,866,875,1007,1010,1159],row:[1007,1050,1215,1216],rule:[43,892,917,1007,1010,1139,1147],run:[43,933,942,1104,1106,1107,1111,1155,1156,1157,1158,1159,1259,1260,1276,1287,1288,1289],safe:[933,942,1159],safety_factor:[933,1159],same:[15,16,17,40,41,43,855,857,863,866,877,878,881,882,885,886,933,942,943,977,978,983,987,1007,1008,1023,1038,1039,1042,1043,1069,1071,1076,1077,1078,1089,1103,1104,1110,1115,1127,1134,1139,1143,1155,1156,1157,1159,1222,1223,1240,1241,1242,1243,1244,1245,1246,1247,1259,1276,1277,1278,1279,1280,1281,1282,1283,1301,1305],same_arrai:[40,41],sampl:[1007,1059,1120,1121,1215,1216,1218,1219,1240,1248,1259,1276,1284],satisfi:[1007,1014,1127,1129,1135],save:[40,41,1007,1082,1093,1120,1122,1288,1289],save_dir:[442,443,933,948,1159],save_weight:[1288,1289],scalar:[877,880,1007,1020,1069,1096,1100],scale:[933,975,976,1104,1112,1159,1240,1248,1251,1252,1257,1258,1276,1284,1287,1292,1295],scaled_dot_product_attent:1240,scatter:[1007,1069,1077,1078],scatter_flat:[130,296,444,577,712,1007],scatter_nd:[130,296,444,577,712,1007],scene:[1104,1107,1109,1111,1112,1113],schemat:1259,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,863,865,871,877,878,933,964,1007,1015,1027,1035,1073,1081,1091,1104,1106,1107,1111,1155,1157,1159,1292,1293,1294],secondli:1305,sector:[863,864],see:[43,59,398,442,443,496,863,865,871,877,880,888,889,890,892,911,917,933,945,946,947,948,983,1007,1010,1060,1061,1104,1139,1147,1259,1267,1269,1270,1272,1273,1275],seed:[40,41,176,496,817,1215],seed_valu:[40,41,496,1215,1220],seem:1259,seen_set:[1007,1048],select:[1007,1014,1086,1302,1305],self:[40,41,43,59,398,442,443,892,911,917,933,945,946,947,948,983,1104,1159,1259,1267,1269,1270,1272,1273,1275,1292,1296,1301,1305],self_i:[892,911],sent:1159,seper:[43,1007,1040],seq:[40,41,42,1222,1223,1288,1289],sequenc:[15,16,17,40,41,42,43,496,931,932,933,942,943,952,953,954,955,956,957,958,959,962,963,977,983,987,1007,1010,1014,1016,1018,1023,1024,1050,1062,1065,1070,1074,1075,1078,1085,1089,1092,1097,1102,1104,1108,1120,1124,1125,1127,1130,1159,1203,1214,1215,1217,1219,1222,1224,1225,1226,1227,1228,1229,1230,1240,1241,1242,1243,1244,1245,1246,1247,1257,1258,1265,1266,1276,1277,1278,1279,1280,1281,1282,1283,1285,1288,1289,1290,1291,1292,1296,1298,1299],sequenti:1259,seri:43,set:[15,18,19,40,41,885,886,933,962,963,975,976,977,1007,1009,1030,1050,1079,1080,1081,1082,1104,1107,1109,1110,1111,1112,1113,1127,1130,1159,1203,1204,1211,1213,1214,1215,1216,1220,1222,1224,1225,1226,1227,1228,1229,1230,1259,1276,1285,1292,1293,1294,1295,1296,1297,1302,1305],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:933,set_default_dtyp:983,set_default_float_dtyp:983,set_default_int_dtyp:983,set_default_nod:1159,set_exception_debug_mod:44,set_framework:[40,41,43,59,1159,1259,1301,1302,1305],set_ivy_backend:[40,41],set_min_bas:1007,set_min_denomin:1007,set_nest_at_index:1203,set_nest_at_indic:1203,set_queue_timeout:1007,set_split_factor:[933,1159],set_stat:[1292,1293,1294,1295,1296,1297],set_tmp_dir:1007,set_with_grad:1104,setter:1159,sever:1305,sgd:[1259,1292],shape0:1159,shape:[40,41,43,394,395,397,444,457,472,496,712,855,856,857,858,877,878,881,882,885,886,933,945,983,987,1007,1008,1018,1023,1024,1037,1038,1039,1041,1043,1047,1050,1069,1070,1071,1074,1075,1076,1077,1078,1084,1086,1089,1102,1103,1120,1124,1127,1129,1132,1139,1143,1144,1159,1215,1217,1218,1219,1222,1223,1240,1242,1244,1246,1276,1278,1279,1280,1281,1282,1283,1290,1291],shape_slic:[40,41],shape_to_tupl:1007,share:[40,41,1259,1302],shift:1159,should:[40,41,42,43,496,855,857,863,864,865,866,867,868,869,870,871,873,874,875,877,878,880,892,911,917,931,932,933,1007,1018,1019,1025,1069,1075,1104,1107,1109,1111,1112,1113,1139,1147,1159,1222,1223,1259],show:[40,41,1259,1305],show_mod_in_top_mod:[1288,1289],show_structur:[1288,1289],show_sub_contain:[40,41],show_v:[1288,1289],show_v_in_top_v:[1288,1289],shown:[40,41],shp:1159,shuffl:[40,41,176,496,817,1215],shuffle_h5_fil:[40,41],side:43,sigmoid:[833,1232,1259,1301],sign:[877,879,1127,1133],signatur:[43,59,398,442,443,444,478,483,487,493,494,496,933,945,946,947,948,983,1104,1267,1269,1270,1272,1273,1275],signific:1305,similar:[43,1240,1251,1276,1287],similarli:[1127,1132],simpl:[43,1007,1036,1259,1302,1305],simpler:43,simplest:1302,simpli:[40,41,43,1259,1302,1305],simultan:1259,sin:[802,1007,1040,1139,1153,1302],sinco:1302,sine:[863,864,1139,1142,1151,1152],singl:[40,41,931,932,933,942,943,962,963,964,965,1007,1086,1096,1100,1120,1125,1159,1215,1218,1219,1222,1224,1225,1226,1227,1228,1229,1230,1259,1302,1305],singleton:[877,880,888,889,890],singular:[1127,1134],sinh:[802,1139],siren:[1259,1267],situat:43,size:[40,41,42,444,471,877,878,888,889,890,933,956,957,958,959,975,976,977,1007,1010,1018,1060,1061,1077,1085,1120,1124,1127,1130,1134,1159,1215,1216,1218,1219,1222,1224,1225,1226,1227,1228,1229,1230,1276,1277,1278],size_ordered_arrai:[40,41],skew:[1127,1135],skinv:1305,skip:[40,41],slice:[40,41,1007,1042,1043,1159,1203,1210],slice_kei:[40,41],slice_obj:[40,41,1159],slice_via_kei:[40,41],slide:[1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283],slodget:[877,1127],slogdet:[226,354,417,487,544,624,678,789,877,879,1127,1133],slope:[1232,1234],small:[1253,1254,1255,1256,1257,1258,1259,1290,1291,1302],smaller:[1007,1020],smallest:[40,41,859,860,861,863,866,1007,1013],smallest_norm:[398,859,860],softmax:[192,507,833,1232,1240,1251,1252],softplu:[833,1232],solut:43,solv:1305,some:[40,41,43,1007,1010,1104,1106,1107,1109,1111,1112,1113,1118,1240,1248,1259,1276,1284,1302,1305],some_backend:43,some_namespac:43,someth:[43,1305],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,886,1127,1134,1159],sort_by_kei:[40,41],sorting_funct:[885,886],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,394,395,396,397,398,400,401,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,494,495,496,497,855,856,857,858,859,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,881,882,885,886,888,889,890,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,935,936,937,938,939,940,942,943,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1262,1263,1264,1265,1266,1267,1269,1270,1272,1273,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1303,1304,1305],space:[1007,1010,1040,1060,1061],spars:[1253,1256],sparse_cross_entropi:1253,spawn:[1007,1067],special:[43,863,864,866,867,868,873,875],specif:[40,41,43,863,874,933,975,1007,1025,1032,1033,1034,1067,1155,1156,1157,1158,1159,1215,1221,1259,1288,1289,1301,1302],specifc:[1215,1216],specifi:[40,41,43,855,856,857,858,877,878,880,881,882,885,886,888,889,890,933,952,953,954,955,956,957,958,959,962,963,967,969,973,976,977,978,983,987,989,1007,1010,1012,1013,1014,1020,1023,1024,1041,1042,1043,1049,1060,1061,1089,1099,1102,1127,1130,1159,1203,1208,1209,1213,1214,1222,1223,1224,1225,1226,1227,1228,1229,1230],sphinx:43,split:[40,41,130,296,444,577,712,933,942,956,957,958,959,975,976,977,1007,1062,1159],split_arg:1159,split_factor:[933,942,1159],split_func_cal:[933,1159],split_siz:1159,spread:[933,965,1159],sqrt:[86,217,403,530,664,863,877,880],squar:[863,875,877,879,1007,1050,1127,1129,1133],squeez:[130,296,444,577,712,1007],stabil:[885,886,1007,1087,1088],stabl:[885,886,1007,1045,1046,1079,1080,1087,1088],stable_divid:1007,stable_pow:1007,stack:[40,41,296,712,855,857,877,878,1007,1120,1125,1203,1204,1211,1276,1285],stack_imag:[166,350,483,620,785,1120],stacked_dim_s:1159,stage:43,standard:[40,41,859,860,1215,1218,1222,1228,1257,1258,1259,1260,1290,1291],start:[40,41,43,442,443,444,445,467,468,496,933,948,1007,1010,1060,1061,1159,1259,1302],starting_index:[40,41],starting_split_factor:[933,1159],state:[1159,1240,1250,1259,1262,1263,1264,1265,1266,1267,1269,1270,1272,1273,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301],statement:1302,static_argnam:[444,450,931,932],static_argnum:[444,450,931,932],std:[496,1215,1218],step:[40,41,444,445,933,1007,1010,1060,1061,1104,1106,1107,1109,1111,1112,1113,1155,1156,1157,1158,1159,1259,1292,1293,1294,1295,1296,1297,1301,1305],stephen:1259,stick:1259,still:[40,41,43],stochast:[1292,1297],stop:[40,41,442,443,444,445,467,468,933,948,977,1007,1010,1060,1061,1104,1107,1109,1111,1112,1113,1115,1155,1156,1157,1158,1159,1292,1293,1294,1295,1296,1297],stop_gradi:[40,41,345,478,615,779,933,977,1104,1107,1109,1111,1112,1113,1155,1156,1157,1158,1159,1292,1293,1294,1295,1296,1297],stopiter:1159,store:[40,41,1007,1040,1085,1104,1118,1288,1289],store_var:[1288,1289],str:[15,16,17,40,41,42,43,394,395,397,398,400,401,859,860,861,931,932,933,942,943,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,977,983,988,989,994,995,996,997,998,999,1006,1007,1014,1030,1032,1033,1034,1065,1067,1070,1077,1078,1127,1130,1132,1155,1156,1157,1158,1159,1203,1207,1222,1223,1265,1266,1276,1287,1288,1289],str_to_nod:1159,straight:1302,strength:[1259,1305],stride:[1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283],string:[40,41,43,933,949,951,960,961,966,972,978,979,982,983,987,993,995,996,997,1006,1007,1010,1014,1030,1050,1070,1071,1103,1159,1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283,1288,1289],structur:[40,41,42,43,1007,1025],structural_diff:[40,41],style:43,sub:[40,41,43,877,878,933,956,957,962,963,964,965,1007,1085,1155,1156,1157,1158,1159],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1159,sub_mod:[1288,1289],sub_modul:[1298,1299],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1259,1260,1290,1291,1298,1299],subsequ:43,subset:43,substr:[40,41],suffici:[1127,1132],suggest:1259,suitabl:[1120,1125],sum:[40,41,444,471,472,877,880,933,962,963,964,965,977,1007,1029,1033,1077,1078,1159,1222,1223,1229],summat:[40,41,1222,1223],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,360,361,363,364,367,368,369,370,372,373,374,375,376,377,378,379,382,384,385,386,387,388,389,390,395,396,397,399,400,401,404,405,406,407,408,409,410,411,412,413,414,415,418,419,420,421,423,427,430,431,443,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,479,480,481,482,484,485,486,488,489,490,491,492,495,497,499,500,501,502,503,504,505,508,509,511,512,513,514,515,516,517,522,523,524,526,527,528,531,532,533,534,535,536,537,538,539,540,541,542,545,546,547,548,550,554,557,558,566,571,572,573,574,575,576,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,616,617,618,619,621,622,623,625,626,627,628,629,630,634,635,636,637,639,640,641,642,643,644,645,649,650,651,656,657,658,660,661,662,665,666,667,668,669,670,671,672,673,674,675,676,679,680,681,682,684,688,691,692,700,705,706,707,708,709,710,711,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,780,781,782,783,784,786,787,788,790,791,792,793,794,795,796,797,798,800,801,803,804,805,806,807,808,809,810,811,812,813,814,815,816,818,819,820,821,822,823,825,826,827,828,829,830,831,834,835,836,837,838,839,840,842,843,845,846,847,848,849,850,851,856,857,858,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,877,878,879,880,882,886,889,890,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,932,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1156,1157,1158,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1254,1255,1256,1258,1259,1263,1264,1266,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1289,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302,1304,1305],supports_inplac:1007,suppos:1305,sure:43,svd:[354,624,789,1127],swap:[40,41,1007,1091],swapax:[40,41,577,712,1007,1305],symmetr:[1127,1135],syntax:[442,444,478,483,487,493,494,496],tab:1259,take:[43,1007,1059],taken:[43,877,878,1222,1224,1225,1226,1228,1230],tan:[802,1139,1143],tangent:[1139,1143,1144,1145,1153,1154,1232,1239],tanh:[802,833,1139,1232],target:[40,41,933,949,952,953,954,955,956,957,958,959,962,963,964,965,978,1159,1259],target_dict:[40,41],task:[43,1155,1156,1157,1158],team:[43,1305],templat:1259,temporari:[1007,1082,1093],tensor:[40,41,43,444,471,472,933,951,983,993,1007,1010,1012,1013,1018,1060,1061,1064,1066,1069,1070,1071,1075,1077,1078,1085,1103,1159,1215,1216,1217,1240,1248,1250,1259,1276,1284,1286,1292,1293,1294,1295,1296,1297,1301,1302],tensorflow:[43,1127,1132,1240,1242,1244,1246,1259,1276,1278,1280,1282,1302,1305],term:[40,41,43,1240,1250,1259,1276,1286],termcolor:[40,41,42],termin:[40,41,42,1159],test:[43,863,869,870,888,889,890,983,998,999],test_array_api:43,tf_concat:1259,than:[40,41,43,859,860,863,866,873,875,877,880,881,882,933,977,1007,1010,1020,1038,1057,1064,1086,1089,1104,1110,1159,1215,1219,1259,1302],thei:[40,41,43,1139,1144,1155,1156,1157,1215,1216,1259,1298,1299,1302],them:[1259,1305],themselv:[1203,1204],therefor:43,thi:[40,41,42,43,863,874,877,879,933,955,959,965,972,977,982,1007,1010,1040,1073,1075,1081,1104,1107,1109,1110,1111,1112,1113,1118,1127,1130,1133,1159,1203,1207,1212,1222,1224,1225,1226,1227,1228,1229,1230,1240,1249,1259,1288,1289,1292,1293,1294,1295,1296,1297,1301,1302,1305],thing:[43,1259],those:[40,41,43,1007,1020,1104,1118,1127,1134,1159],though:43,thought:43,threshold:[1007,1064,1066],through:[40,41,43],tick:43,tickbox:43,tile:[296,577,712,1007],time:[43,1007,1092,1104,1107,1111,1155,1156,1157,1158,1159,1215,1216,1240,1250,1276,1287,1288,1289,1305],timeout:[40,41,42,933,942,943,1007,1073,1081,1159],timestep:[1240,1250,1276,1285],titl:[43,1259],tmp_dir:1007,tmp_dr:[1007,1082],to_appli:[40,41],to_clon:[933,1159],to_dev:[40,41,123,290,442,570,704,933],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[933,1159],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1259],to_ivy_modul:[194,841,1259,1265],to_json:[40,41],to_kv_fn:[1240,1251],to_kv_v:[1240,1251],to_list:[40,41,444,712,1007],to_multi_dev:[40,41],to_mut:[1203,1205,1212],to_n:[15,40,41,1259],to_nod:1159,to_numpi:[40,41,444,712,1007,1259,1301],to_out_fn:[1240,1251],to_out_v:[1240,1251],to_q_fn:[1240,1251],to_q_v:[1240,1251],to_raw:[40,41],to_scalar:[444,712,1007],todo:[1159,1259,1260],togeth:[40,41,1298,1299],tool:[1259,1302],top_mod:[1288,1289],topic:1305,torch:[43,931,932,1259,1301,1302,1305],torch_concat:1259,torchfcmodel:1301,total:[40,41,42,933,979,1159],total_mem_on_dev:933,total_mem_on_nod:1159,tpu:[933,980,1159],tpu_is_avail:[442,570,704,933,1159],tpye:[983,994],trace:[40,41,1007,1057],track:[43,933,1159,1203,1212,1288,1289],track_submod_call_ord:[1288,1289],track_submod_ret:[1288,1289],trail:[1290,1291],train:[1104,1106,1107,1111,1259,1260],trainabl:[1104,1110,1259,1260,1265,1266,1288,1289,1298],trainer:1259,tran:1305,transform:[1240,1248,1249],transpos:[40,41,130,296,444,712,933,964,1007,1159,1240,1242,1244,1246,1276,1278,1280,1282],travers:[15,18,19,40,41,1203,1212],treat:[40,41,931,932],tri:[40,41],triangular:[855,857],trigonometr:[1139,1140,1143,1151],tril:[77,208,394,521,655,855],trim_kei:[40,41],trust:[1104,1111,1292,1294],truth:[863,871,892,911,1007,1035,1136,1137,1138],try_else_non:1007,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[933,1159],tune_dev_alloc:933,tune_dev_split:933,tune_node_alloc:1159,tune_node_split:1159,tune_step:[933,1159],tupl:[15,16,17,18,19,40,41,43,394,395,397,487,488,491,855,856,858,877,880,881,882,888,889,890,931,932,1007,1024,1040,1041,1084,1102,1159,1203,1204,1205,1206,1208,1209,1210,1211,1212,1213,1214,1215,1217,1222,1224,1225,1226,1227,1228,1229,1230],tutori:43,two:[40,41,855,857,877,878,879,1007,1010,1015,1027,1063,1091,1127,1130,1133,1134],type:[15,18,40,41,42,43,59,400,401,442,443,855,856,857,858,860,861,863,864,865,866,867,868,869,870,871,873,874,875,877,878,880,881,882,885,886,888,889,890,892,911,917,933,945,946,947,948,960,961,965,977,983,987,988,989,993,994,995,996,997,998,999,1006,1007,1008,1010,1014,1023,1025,1035,1038,1039,1041,1050,1057,1069,1070,1071,1076,1090,1100,1103,1104,1110,1115,1139,1147,1159,1259,1267,1269,1270,1272,1273,1275,1288,1289,1302],types_to_iteratively_nest:[40,41,42],uint8:[1120,1122,1126],uint8_img_to_float_img:1120,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[863,865],underwai:43,unecessari:43,unfairli:43,unif:1159,unifi:[40,41,933,962,963,964,965,977,1159,1259],uniform:[40,41,1215,1216,1218,1219,1267,1269,1270,1273,1274],uniformli:[1215,1217,1219],unify_arrai:1159,unify_it:1159,unify_nest:1159,union:[15,18,19,40,41,43,394,395,397,398,400,401,487,488,491,855,856,857,858,859,860,861,863,864,865,866,867,868,869,870,871,872,873,874,875,877,880,881,882,885,886,888,889,890,892,911,917,931,932,933,951,956,957,958,959,977,978,983,987,988,989,993,994,995,996,997,998,999,1006,1007,1008,1009,1010,1012,1013,1014,1015,1016,1018,1020,1021,1022,1023,1024,1026,1027,1028,1029,1032,1033,1034,1035,1037,1038,1039,1040,1041,1042,1043,1047,1049,1050,1051,1058,1059,1060,1061,1063,1064,1065,1066,1069,1070,1071,1074,1075,1076,1077,1078,1083,1084,1085,1086,1089,1091,1092,1094,1095,1096,1097,1099,1100,1101,1102,1103,1159,1203,1204,1205,1211,1212],uniqu:[933,942,943,1155,1156,1157,1158,1159,1203,1207],unique_kwarg:1159,unit:[43,933,1139,1140,1142,1159,1232,1233,1234,1235],unitari:[1127,1134],unless:[1007,1069,1071,1103],unlik:[933,1159],unnorm:[1215,1216],unpack:[1007,1099],unrol:[1240,1250],unset:1302,unset_debug_mod:44,unset_default_devic:933,unset_default_dtyp:983,unset_default_float_dtyp:983,unset_default_int_dtyp:983,unset_framework:[59,1302],unset_with_grad:1104,unstack:[40,41,130,296,444,577,712,1007],until:43,unus:[931,932],updat:[40,41,444,471,472,933,942,1007,1055,1077,1078,1104,1106,1107,1109,1111,1112,1113,1155,1156,1157,1159,1203,1208,1209,1213,1214,1240,1250,1259,1260,1265,1266,1292,1293,1294,1295,1296,1297,1302,1305],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1215,1219],upper_depth:[1288,1289],upstream:43,usabl:[1259,1305],usag:[933,977,1159],use:[40,41,42,43,496,933,942,943,968,980,1007,1074,1087,1088,1127,1132,1159,1240,1251,1257,1258,1259,1290,1291,1302,1305],used:[40,41,43,496,877,878,933,942,972,975,976,982,983,994,1007,1045,1046,1062,1071,1077,1078,1079,1080,1103,1104,1111,1112,1127,1130,1155,1156,1157,1158,1159,1203,1212,1276,1287,1292,1294,1295,1301,1302],used_dev:[933,942],used_mem_on_dev:933,used_mem_on_nod:1159,used_node_str:1159,used_node_strs_dict:1159,useful:[40,41,933,977,1159,1240,1249,1259,1302],user:[1259,1276,1287,1288,1289,1302,1305],uses:1259,using:[40,41,43,1104,1106,1107,1203,1206,1210,1222,1223,1240,1248,1252,1259,1276,1284,1301,1302,1305],util:[933,966,1159],utility_funct:[888,889,890],v_with_top_v_key_chain:[1288,1289],val:[40,41,444,462,463,464,892,927,1007,1053,1054,1055,1079,1080],valid:[888,889,890,983,988,1007,1087,1088,1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283],valid_dtyp:983,valu:[40,41,444,863,866,871,877,879,880,885,886,892,911,933,945,976,977,1007,1008,1010,1012,1013,1020,1021,1022,1024,1025,1031,1035,1040,1041,1042,1043,1058,1060,1061,1064,1066,1073,1074,1075,1076,1077,1078,1079,1080,1081,1097,1100,1101,1102,1104,1108,1111,1120,1126,1127,1133,1134,1136,1137,1138,1139,1148,1149,1150,1155,1156,1157,1159,1203,1207,1208,1209,1213,1214,1215,1218,1219,1222,1224,1226,1240,1251,1252,1257,1258,1276,1287,1290,1291,1292,1294],value_is_nan:1007,vanilla:[1155,1157],var_shap:1267,variabl:[15,16,17,18,19,40,41,345,478,615,779,1007,1017,1053,1054,1055,1056,1057,1090,1104,1107,1108,1109,1110,1111,1112,1113,1115,1118,1155,1156,1157,1158,1240,1251,1257,1258,1265,1266,1267,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299],variable_data:[478,779,1104],varianc:[40,41,1222,1230,1305],varieti:1302,variou:[43,1259],vector:[40,41,487,492,877,880,1007,1022,1027,1127,1134,1135,1240,1249,1276,1286],vector_norm:[40,41,100,226,417,544,678,877],vector_to_skew_symmetric_matrix:[170,354,487,624,789,1127],verbos:1304,veri:[43,1259],verifi:43,version:43,via:[1203,1204,1211,1302],view:[1120,1125],vision:1259,visual:1302,volum:[1240,1245],vw_tm1:[1104,1107,1111],wai:[1302,1305],wait:[40,41,42,43],want:[43,1259,1302,1305],warn:[59,66,67,68,69,70],warp:[483,484,1120,1121],watch:1301,websit:43,weight:[1104,1106,1107,1109,1111,1112,1113,1240,1249,1250,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1288,1289,1292,1294,1295],weight_initi:[1276,1277,1278,1279,1280,1281,1282,1283,1285,1286],weights_path:[1288,1289],well:[40,41,1007,1049],were:[40,41,1159],what:[43,1259],when:[40,41,42,43,933,1007,1019,1088,1101,1127,1134,1159,1259,1288,1289,1302,1305],where:[40,41,43,296,444,712,863,872,888,889,890,892,917,1007,1010,1018,1020,1024,1037,1051,1058,1069,1102,1127,1134,1203,1204,1211,1215,1216],wherea:43,wherebi:[1203,1212],whether:[15,18,19,40,41,42,863,870,888,889,890,931,932,933,951,964,968,972,977,980,982,983,993,997,998,999,1006,1007,1009,1015,1016,1028,1031,1036,1040,1047,1049,1052,1056,1057,1062,1083,1090,1099,1100,1104,1107,1108,1109,1110,1111,1112,1113,1115,1155,1156,1157,1158,1159,1203,1204,1205,1207,1211,1212,1215,1216,1232,1233,1240,1248,1259,1265,1266,1276,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297],which:[40,41,42,43,496,855,856,857,858,859,860,861,877,878,880,881,882,885,886,888,889,890,931,932,933,942,943,951,956,957,958,959,962,963,964,965,967,969,973,975,976,977,983,988,993,997,1006,1007,1010,1014,1023,1025,1027,1028,1029,1031,1041,1042,1043,1044,1050,1051,1059,1060,1061,1068,1069,1070,1071,1072,1074,1077,1078,1085,1089,1099,1101,1103,1104,1107,1108,1109,1111,1112,1113,1115,1117,1118,1120,1122,1127,1130,1139,1144,1159,1203,1207,1208,1209,1213,1214,1215,1216,1217,1218,1219,1222,1224,1225,1226,1227,1228,1229,1230,1232,1237,1240,1251,1252,1259,1265,1266,1276,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1296,1298,1299,1301,1302],whilst:43,whitespac:[40,41,42],who:43,whose:[43,855,857,863,864,867,868,877,878,881,882,892,917,1007,1014,1019,1222,1223,1224,1225,1226,1228,1230],why:[1259,1260],width:[1120,1125],wiki:1305,wikipedia:1305,window:[1120,1125,1240,1241,1242,1243,1244,1245,1246,1247,1276,1277,1278,1279,1280,1281,1282,1283],wise:[40,41,43,863,865,871,874,892,911,917,1007,1020,1035,1038,1039,1064,1066,1076,1104,1107,1109,1111,1113,1136,1137,1138,1139,1140,1142,1143,1144,1147,1148,1149,1150,1151,1153,1232,1233,1234,1235,1236,1237,1238,1239],wish:1302,with_bia:[1276,1286],with_cal:[1007,1031],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1104,1114],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1159,with_partial_v:[1288,1289],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,444,473,1007,1085,1159],with_to_kv_fn:[1276,1287],with_to_out_fn:[1276,1287],with_to_q_fn:[1276,1287],within:[15,18,19,43,1007,1010,1127,1134,1215,1219],without:[40,41,43,1007,1073,1075,1081,1203,1205,1302],wonder:1259,word:[15,16,17,1007,1010,1215,1219,1265,1266],work:[43,1301],worker:[933,942,943,1159],worker_class:[933,942,943,1159],worker_kwarg:1159,would:[43,1232,1237,1259,1302,1305],wrap:[15,40,41,42,43,442,444,478,483,487,493,494,496,1007,1019,1104,1118,1259],wrapper:43,write:[40,41,43,1259,1260,1305],written:[43,1259,1305],ws_new:[1104,1107,1109,1111,1112,1113],x1_i:[863,865,871,1007,1035,1139,1147],x2_i:[863,865,871,1007,1035,1139,1147],x_feat_dim:[1240,1251],x_i:[863,864,866,867,868,869,870,873,874,875],x_in:[1259,1301],x_inv:[1127,1129],x_max:[444,1007,1020],x_min:[444,1007,1020],x_sub:1159,xkk:1305,xkkm1:1305,xkm1km1:1305,xs0:1159,xs_t:1159,year:[1259,1305],yet:[1203,1212,1305],yield:[1007,1101],you:[43,1259,1301,1302,1305],your:[1259,1260,1301,1302,1305],your_awesome_project:1302,yourself:[43,1259],yourslef:43,youtub:43,zero:[40,41,77,208,394,521,655,855,857,863,874,877,880,888,889,890,1007,1024,1069,1071,1077,1078,1102,1103,1104,1106,1107,1111,1112,1240,1248,1259,1267,1276,1277,1278,1279,1280,1281,1282,1283,1284,1286,1292,1293,1294,1295],zero_pad:[296,444,577,712,1007],zeros_lik:[130,296,444,577,712,1007],zip:1159,zk_e:1305},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","pinv","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","qr","slogdet","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","det","inv","matrix_norm","pinv","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","slodget","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","slodget","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1031,"function":[77,81,86,99,103,105,106,107,109,110,208,212,217,225,231,233,234,235,237,238,394,398,403,416,422,424,425,426,428,429,521,525,530,543,549,551,552,553,555,556,655,659,664,677,683,685,686,687,689,690,855,859,863,876,881,883,884,885,887,888],Ones:1272,Using:1302,abs:[297,578,713,1008],aco:[803,1140],acosh:[804,1141],activ:[192,381,507,647,833,1232,1262],adam:1293,adam_step:1106,adam_upd:1107,algebra:[100,170,226,354,417,487,544,624,678,789,877],all:[111,239,430,557,691,889],all_equ:1009,all_nested_indic:1204,ani:[112,240,431,558,692,890],api:[0,43,75,114,206,242,392,433,519,560,653,694,853],arang:[131,298,445,579,714,1010],arg_nam:1011,argmax:[132,446,580,715,1012],argmin:[133,447,581,716,1013],args_to_ivi:16,args_to_n:17,argsort:[108,236,427,554,688,886],arithmet:[1,115,243,434,561,695],arrai:[0,3,43,75,113,114,116,134,206,241,242,244,251,299,392,432,433,435,448,519,559,560,562,582,653,693,694,696,717,853,892,1014],array_equ:[300,718,1015],arrays_equ:1016,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[805,1142],asinh:[87,404,531,665,864],assert_supports_inplac:1017,atan2:[807,1144],atan:[806,1143],atanh:[808,1145],attribut:[5,117,245,436,563,697],backend:[43,73],bilinear_resampl:[167,351,484,621,786,1121],binary_cross_entropi:1254,bitwis:[7,118,246,437,564,698],bitwise_and:[88,218,405,532,666,865],broadcast_to:[301,719,1018],builder:51,builtin:[113,241,251,432,559,693,892],builtin_ab:[252,893],builtin_add:[253,894],builtin_and:[254,895],builtin_bool:[255,896],builtin_contain:[256,897],builtin_deepcopi:[257,898],builtin_dir:[258,899],builtin_eq:[259,900],builtin_float:[260,901],builtin_floordiv:[261,902],builtin_g:[262,903],builtin_getattr:[263,904],builtin_getattribut:[264,905],builtin_getitem:[265,906],builtin_gt:[266,907],builtin_int:[267,908],builtin_invert:[268,909],builtin_l:[269,910],builtin_lt:[270,566,700,911],builtin_mul:[271,912],builtin_n:[272,913],builtin_neg:[273,914],builtin_or:[274,915],builtin_po:[275,916],builtin_pow:[276,917],builtin_radd:[277,918],builtin_rand:[278,919],builtin_rfloordiv:[279,920],builtin_rmul:[280,921],builtin_ror:[281,922],builtin_rpow:[282,923],builtin_rsub:[283,924],builtin_rtruediv:[284,925],builtin_rxor:[285,926],builtin_setitem:[286,927],builtin_sub:[287,928],builtin_truediv:[288,929],builtin_xor:[289,930],cache_fn:1019,cast:[135,302,449,583,720,987],ceil:[89,219,406,533,667,866],choleski:[790,1128],choose_random_framework:61,citat:1259,clear_framework_stack:62,clear_mem_on_dev:[706,949],clip:[303,721,1020],clip_matrix_norm:1021,clip_vector_norm:1022,clone:1174,clone_arrai:1175,clone_it:1176,clone_nest:1177,clonedit:1161,cloneditem:1160,clonednest:1162,closest_valid_dtyp:988,code:1305,comparison:[9,119,247,438,565,699],compil:[304,450,722,931,932],concaten:[136,305,451,584,723,1023],constant:[76,207,393,520,654,854],constant_pad:[306,585,724,1024],contain:[40,41],container_typ:[725,1025],content:1259,contribut:43,conv1d:[198,384,511,845,1241,1277],conv1d_transpos:[199,385,512,846,1242],conv1dtranspos:1278,conv2d:[200,386,513,649,847,1243,1279],conv2d_transpos:[201,387,514,848,1244],conv2dtranspos:1280,conv3d:[202,388,515,650,849,1245,1281],conv3d_transpos:[203,389,516,850,1246],conv3dtranspos:1282,convers:15,convert:[194,841,1265],convert_dtyp:989,copy_arrai:[726,1026],copy_nest:1205,core:[122,250,441,569,703,891],cos:[90,407,534,668,867],cosh:[91,408,535,669,809,868,1146],cprint:1304,creat:43,creation:[77,208,394,521,655,855],cross:[307,727,1027],cross_entropi:1255,cumprod:[137,308,452,728,1028],cumsum:[729,1029],current_framework:63,current_framework_str:[730,1030],data:[81,85,212,216,398,402,525,529,659,663,859,862],debug_mod:45,debugg:44,default_devic:950,default_dtyp:990,default_float_dtyp:991,default_int_dtyp:992,default_nod:1178,depthwise_conv2d:[204,390,517,651,851,1247],depthwiseconv2d:1283,design:43,det:[227,355,418,488,545,625,679,791],dev:[125,292,572,707,951],dev_clon:952,dev_clone_arrai:953,dev_clone_it:954,dev_clone_nest:955,dev_dist:956,dev_dist_arrai:957,dev_dist_it:958,dev_dist_nest:959,dev_from_str:[126,293,573,708,960],dev_to_str:[127,294,574,709,961],dev_unifi:962,dev_unify_arrai:963,dev_unify_it:964,dev_unify_nest:965,dev_util:966,devclonedit:936,devcloneditem:935,devclonednest:937,devdistit:939,devdistitem:938,devdistnest:940,devic:[20,123,290,442,570,704,933],devmapp:942,devmappermultiproc:943,diagon:[101,228,419,546,680,878],distribute_nest:1179,divid:1147,document:1259,dropout:[1248,1284],dtype:[138,309,453,586,731,983,993],dtype_bit:[139,310,454,587,732,994],dtype_from_str:[140,311,455,588,733,995],dtype_to_str:[141,312,456,589,734,996],ecosystem:52,einops_rearrang:1032,einops_reduc:1033,einops_repeat:1034,einsum:[184,372,499,639,825,1223],elementwis:[86,217,403,530,664,863],equal:[590,735,1035],erf:[495,810,1148],execute_with_gradi:[164,346,479,616,780,1108],exist:1036,exp:[811,1149],expand_dim:[313,736,1037],finfo:[83,214,400,527,661,860],firstlayersiren:1269,flip:[104,232,423,550,684,882],float_img_to_uint8_img:1122,floor:[314,737,1038],floormod:[315,738,1039],fomaml_step:1156,fork:43,fourier_encod:1040,framework:59,full:[142,316,457,591,739,1041],func:72,gather:[143,317,458,592,740,1042],gather_nd:[144,318,459,593,741,1043],geglu:1263,gelu:[382,508,834,1233,1264],gener:[22,130,296,444,577,712,1007],get_all_arrays_in_memori:1044,get_all_arrays_on_dev:967,get_framework:64,get_min_bas:1045,get_min_denomin:1046,get_num_dim:[742,1047],get_referrers_recurs:1048,glorotuniform:1270,gpu_is_avail:[968,1180],gradient:[24,163,345,478,615,779,1104],gradient_descent_upd:1109,gradient_imag:[168,352,485,622,787,1123],gym:53,handler:59,has_nan:1049,ident:[145,319,460,594,743,1050],iinfo:[84,215,401,528,662,861],imag:[26,166,350,483,620,785,1120],index_nest:1206,indices_wher:[146,320,461,744,1051],initi:1267,inplac:[11,120,248,439,567,701],inplace_arrays_support:1052,inplace_decr:[147,321,462,595,745,1053],inplace_incr:[148,322,463,596,746,1054],inplace_upd:[149,323,464,597,747,1055],inplace_variables_support:1056,inv:[792,1129],invalid_dtyp:997,is_arrai:[150,324,465,598,748,1057],is_float_dtyp:998,is_int_dtyp:999,is_vari:[165,347,480,617,781,1110],isfinit:[92,220,409,536,670,869],isinf:[325,599,749,1058],isnan:[93,221,410,537,671,870],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,852,1301,1302,1305],ivymodul:[195,842],jax:74,keep:43,lamb:1294,lamb_upd:1111,lar:1295,lars_upd:1112,layer:[197,383,510,648,844,1240,1276],layer_norm:1258,layernorm:1291,leaky_relu:[835,1234],less:[94,222,411,538,672,871],linalg:[28,1127],linear:[100,170,226,354,417,487,544,624,678,789,877,1249,1286],linear_resampl:[151,326,466,600,750,1059],linspac:[152,327,467,601,751,1060],list:43,log1p:[95,412,539,673,872],log2:[96,413,540,674,873],log:[812,1150],logic:[30,174,362,493,631,799,1136],logical_and:[363,800,1137],logical_not:[97,223,414,541,675,874],logical_or:[364,801,1138],logspac:[153,328,468,602,752,1061],loss:1253,lstm:1285,lstm_updat:1250,maml_step:1157,manipul:[103,231,422,549,683,881],map:1207,map_nest_at_index:1208,map_nest_at_indic:1209,match_kwarg:1062,math:[32,175,365,494,632,802,1139],matmul:[329,603,753,1063],matrix_norm:[171,356,489,626,793,1130],maximum:[754,1064],mech:54,memori:55,meshgrid:[330,755,1065],meta:[34,1155],method:[99,225,416,543,677,876],minimum:[756,1066],model:56,modul:[1288,1289,1301],multi:1159,multi_head_attent:1251,multi_index_nest:1210,multidevcontain:42,multidevit:946,multidevitem:945,multidevnest:947,multiheadattent:1287,multinodeit:1165,multinodeitem:1164,multinodenest:1166,multinomi:[177,367,497,634,818,1216],multiprocess:[757,1067],mxnet:205,nativ:1301,nest:1203,nested_indices_wher:1211,nested_map:1212,network:1301,next:1259,node:[1159,1181],node_dist:1182,node_dist_arrai:1183,node_dist_it:1184,node_str:1185,node_to_str:1186,node_util:1187,nodedistit:1168,nodedistitem:1167,nodedistnest:1169,nodemapp:1171,nodemappermultiproc:1172,norm:[1257,1290],num_arrays_in_memori:1068,num_arrays_on_dev:969,num_cpu_cor:970,num_gpu:[128,971,1188],numpi:391,nutshel:1259,one_hot:[154,469,604,758,1069],ones:[78,209,395,522,656,856,1070],ones_lik:[155,331,470,605,759,1071],oper:[1,3,7,9,11,13,43,115,116,118,119,120,121,243,244,246,247,248,249,434,435,437,438,439,440,561,562,564,565,567,568,695,696,698,699,701,702],optim:[1292,1296],optimizer_upd:1113,overview:1259,percent_used_mem_on_dev:972,percent_used_mem_on_nod:1189,pinv:[357,794,1131],portabl:1305,print_all_arrays_in_memori:1072,print_all_arrays_on_dev:973,profil:[124,291,443,571,705,948,1173],pull:43,queue_timeout:1073,randint:[178,368,635,819,1217],random:[36,176,366,496,633,817,1215],random_crop:1124,random_norm:[179,369,636,820,1218],random_uniform:[180,370,637,821,1219],reduce_max:[185,373,500,640,826,1224],reduce_mean:[186,374,501,641,827,1225],reduce_min:[187,375,502,642,828,1226],reduce_prod:[188,376,503,643,829,1227],reduce_std:[377,1228],reduce_sum:[189,378,504,644,830,1229],reduce_var:[190,379,505,645,831,1230],reduct:[38,183,371,498,638,824,1222],reflect:[13,121,249,440,568,702],relu:[836,1235],repeat:[332,760,1074],reptile_step:1158,request:43,reshap:[761,1075],robot:57,round:[333,762,1076],run:1302,scaled_dot_product_attent:1252,scatter_flat:[156,334,471,606,763,1077],scatter_nd:[157,335,472,607,764,1078],search:[105,233,424,551,685,883],seed:[181,822,1220],sequenti:[1298,1299],set:[106,234,425,552,686,884],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:974,set_default_dtyp:1000,set_default_float_dtyp:1001,set_default_int_dtyp:1002,set_default_nod:1190,set_exception_debug_mod:48,set_framework:65,set_min_bas:1079,set_min_denomin:1080,set_nest_at_index:1213,set_nest_at_indic:1214,set_queue_timeout:1081,set_split_factor:[975,1191],set_tmp_dir:1082,set_with_grad:1114,sgd:1297,shape:[765,1083],shape_to_tupl:1084,shuffl:[182,823,1221],sigmoid:[837,1236],signatur:[99,225,416,543,677,876],sin:[813,1151],sinh:[814,1152],siren:1273,slodget:[879,1133],slogdet:[229,359,420,491,547,628,681,796],softmax:[193,509,838,1237],softplu:[839,1238],sort:[107,235,426,553,687,885],sparse_cross_entropi:1256,split:[158,336,473,608,766,1085],split_factor:[976,1192],split_func_cal:[977,1193],sqrt:[98,224,415,542,676,875],squeez:[159,337,474,609,767,1086],stable_divid:1087,stable_pow:1088,stack:[338,768,1089],stack_imag:[169,353,486,623,788,1125],standard:43,statist:[109,237,428,555,689,887],stop_gradi:[348,481,618,782,1115],str_to_nod:1194,submodul:43,supports_inplac:1090,svd:[360,629,797,1134],swapax:[610,769,1091],tan:[815,1153],tanh:[816,840,1154,1239],tensorflow:518,tile:[339,611,770,1092],tmp_dir:1093,to_dev:[129,295,575,710,978],to_ivi:18,to_ivy_modul:[196,843,1266],to_list:[771,1094],to_n:19,to_nod:1195,to_numpi:[772,1095],to_scalar:[773,1096],todo:43,torch:652,total_mem_on_dev:979,total_mem_on_nod:1196,tpu_is_avail:[576,711,980,1197],train:1301,trainabl:1301,transpos:[160,340,475,774,1097],tree:1259,tril:[79,210,396,523,657,857],try_else_non:1098,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,212,216,398,402,525,529,659,663,859,862],uint8_img_to_float_img:1126,unifi:1198,unify_arrai:1199,unify_it:1200,unify_nest:1201,unset_debug_mod:49,unset_default_devic:981,unset_default_dtyp:1003,unset_default_float_dtyp:1004,unset_default_int_dtyp:1005,unset_framework:71,unset_with_grad:1116,unstack:[161,341,476,612,775,1099],updat:43,used_mem_on_dev:982,used_mem_on_nod:1202,util:[110,238,429,556,690,888],valid_dtyp:1006,value_is_nan:1100,variabl:[349,482,619,783,1117],variable_data:[784,1118],vector_norm:[102,230,421,548,682,880],vector_to_skew_symmetric_matrix:[173,361,492,630,798,1135],verbos:1303,vision:58,where:[342,776,1101,1259],why:1305,with_grad:1119,wrapper:72,write:1302,your:43,zero:[80,211,397,524,658,858,1275],zero_pad:[343,613,777,1102],zeros_lik:[162,344,477,614,778,1103]}})
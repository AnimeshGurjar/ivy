Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/det","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/det","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/det","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/det","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/slogdet","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/det","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/det","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/slogdet","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/slodget","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/det.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/det.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/det.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/det.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/slogdet.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/det.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/det.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/slogdet.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/slodget.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[848,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[391,0,0,"-"],creation_functions:[392,0,0,"-"],data_type_functions:[396,0,0,"-"],data_types:[400,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[393,2,1,""],tril:[394,2,1,""],zeros:[395,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[396,1,1,""],finfo:[398,2,1,""],iinfo:[399,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[396,3,1,""],bits:[396,3,1,""],eps:[396,3,1,""],max:[396,3,1,""],min:[396,3,1,""],smallest_normal:[396,3,1,""]},"ivy.functional.backends.numpy.core":{device:[440,0,0,"-"],general:[442,0,0,"-"],gradients:[476,0,0,"-"],image:[481,0,0,"-"],linear_algebra:[485,0,0,"-"],logic:[489,0,0,"-"],math:[490,0,0,"-"],random:[492,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[441,1,1,""],clear_mem_on_dev:[440,2,1,""],dev:[440,2,1,""],dev_from_str:[440,2,1,""],dev_to_str:[440,2,1,""],gpu_is_available:[440,2,1,""],num_gpus:[440,2,1,""],to_dev:[440,2,1,""],tpu_is_available:[440,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[441,3,1,""],start:[441,3,1,""],stop:[441,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[442,2,1,""],arange:[443,2,1,""],argmax:[444,2,1,""],argmin:[445,2,1,""],array:[446,2,1,""],asarray:[442,2,1,""],astype:[442,2,1,""],cast:[447,2,1,""],clip:[442,2,1,""],compile:[448,2,1,""],concatenate:[449,2,1,""],constant_pad:[442,2,1,""],container_types:[442,2,1,""],copy_array:[442,2,1,""],cumprod:[450,2,1,""],current_framework_str:[442,2,1,""],dtype:[451,2,1,""],dtype_bits:[452,2,1,""],dtype_from_str:[453,2,1,""],dtype_to_str:[454,2,1,""],equal:[442,2,1,""],floor:[442,2,1,""],floormod:[442,2,1,""],full:[455,2,1,""],gather:[456,2,1,""],gather_nd:[457,2,1,""],get_num_dims:[442,2,1,""],identity:[458,2,1,""],indices_where:[459,2,1,""],inplace_arrays_supported:[442,2,1,""],inplace_decrement:[460,2,1,""],inplace_increment:[461,2,1,""],inplace_update:[462,2,1,""],inplace_variables_supported:[442,2,1,""],is_array:[463,2,1,""],linear_resample:[464,2,1,""],linspace:[465,2,1,""],logspace:[466,2,1,""],matmul:[442,2,1,""],meshgrid:[442,2,1,""],multiprocessing:[442,2,1,""],one_hot:[467,2,1,""],ones_like:[468,2,1,""],round:[442,2,1,""],scatter_flat:[469,2,1,""],scatter_nd:[470,2,1,""],shape:[442,2,1,""],split:[471,2,1,""],squeeze:[472,2,1,""],to_list:[442,2,1,""],to_numpy:[442,2,1,""],to_scalar:[442,2,1,""],transpose:[473,2,1,""],unstack:[474,2,1,""],where:[442,2,1,""],zero_pad:[442,2,1,""],zeros_like:[475,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[477,2,1,""],is_variable:[478,2,1,""],stop_gradient:[479,2,1,""],variable:[480,2,1,""],variable_data:[476,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[482,2,1,""],gradient_image:[483,2,1,""],stack_images:[484,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[486,2,1,""],qr:[487,2,1,""],vector_to_skew_symmetric_matrix:[488,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[491,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[493,2,1,""],randint:[492,2,1,""],random_normal:[492,2,1,""],random_uniform:[492,2,1,""],seed:[492,2,1,""],shuffle:[492,2,1,""]},"ivy.functional.ivy":{array_api:[849,0,0,"-"],core:[887,0,0,"-"],nn:[1227,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[850,0,0,"-"],creation_functions:[851,0,0,"-"],data_type_functions:[855,0,0,"-"],data_types:[858,0,0,"-"],elementwise_functions:[859,0,0,"-"],function_and_method_signatures:[872,0,0,"-"],linear_algebra:[873,0,0,"-"],manipulation_functions:[877,0,0,"-"],searching_functions:[879,0,0,"-"],set_functions:[880,0,0,"-"],sorting_functions:[881,0,0,"-"],statistical_functions:[883,0,0,"-"],utility_functions:[884,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[850,4,1,""],nan:[850,4,1,""],pi:[850,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[852,2,1,""],tril:[853,2,1,""],zeros:[854,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[856,2,1,""],iinfo:[857,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[860,2,1,""],bitwise_and:[861,2,1,""],ceil:[862,2,1,""],cos:[863,2,1,""],cosh:[864,2,1,""],isfinite:[865,2,1,""],isnan:[866,2,1,""],less:[867,2,1,""],log1p:[868,2,1,""],log2:[869,2,1,""],logical_not:[870,2,1,""],sqrt:[871,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[874,2,1,""],slodget:[875,2,1,""],vector_norm:[876,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[878,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[882,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[885,2,1,""],any:[886,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[888,0,0,"-"],compilation:[927,0,0,"-"],device:[929,0,0,"-"],dtype:[979,0,0,"-"],general:[1003,0,0,"-"],gradients:[1100,0,0,"-"],image:[1116,0,0,"-"],linalg:[1123,0,0,"-"],logic:[1132,0,0,"-"],math:[1135,0,0,"-"],meta:[1151,0,0,"-"],multi_node:[1155,0,0,"-"],nest:[1199,0,0,"-"],random:[1211,0,0,"-"],reductions:[1218,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[889,2,1,""],builtin_add:[890,2,1,""],builtin_and:[891,2,1,""],builtin_bool:[892,2,1,""],builtin_contains:[893,2,1,""],builtin_deepcopy:[894,2,1,""],builtin_dir:[895,2,1,""],builtin_eq:[896,2,1,""],builtin_float:[897,2,1,""],builtin_floordiv:[898,2,1,""],builtin_ge:[899,2,1,""],builtin_getattr:[900,2,1,""],builtin_getattribute:[901,2,1,""],builtin_getitem:[902,2,1,""],builtin_gt:[903,2,1,""],builtin_int:[904,2,1,""],builtin_invert:[905,2,1,""],builtin_le:[906,2,1,""],builtin_lt:[907,2,1,""],builtin_mul:[908,2,1,""],builtin_ne:[909,2,1,""],builtin_neg:[910,2,1,""],builtin_or:[911,2,1,""],builtin_pos:[912,2,1,""],builtin_pow:[913,2,1,""],builtin_radd:[914,2,1,""],builtin_rand:[915,2,1,""],builtin_rfloordiv:[916,2,1,""],builtin_rmul:[917,2,1,""],builtin_ror:[918,2,1,""],builtin_rpow:[919,2,1,""],builtin_rsub:[920,2,1,""],builtin_rtruediv:[921,2,1,""],builtin_rxor:[922,2,1,""],builtin_setitem:[923,2,1,""],builtin_sub:[924,2,1,""],builtin_truediv:[925,2,1,""],builtin_xor:[926,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[928,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[929,1,1,""],DevClonedItem:[931,1,1,""],DevClonedIter:[932,1,1,""],DevClonedNest:[933,1,1,""],DevDistItem:[934,1,1,""],DevDistIter:[935,1,1,""],DevDistNest:[936,1,1,""],DevManager:[929,1,1,""],DevMapper:[938,1,1,""],DevMapperMultiProc:[939,1,1,""],MultiDev:[929,1,1,""],MultiDevItem:[941,1,1,""],MultiDevIter:[942,1,1,""],MultiDevNest:[943,1,1,""],Profiler:[944,1,1,""],clear_mem_on_dev:[945,2,1,""],default_device:[946,2,1,""],dev:[947,2,1,""],dev_clone:[948,2,1,""],dev_clone_array:[949,2,1,""],dev_clone_iter:[950,2,1,""],dev_clone_nest:[951,2,1,""],dev_dist:[952,2,1,""],dev_dist_array:[953,2,1,""],dev_dist_iter:[954,2,1,""],dev_dist_nest:[955,2,1,""],dev_from_str:[956,2,1,""],dev_to_str:[957,2,1,""],dev_unify:[958,2,1,""],dev_unify_array:[959,2,1,""],dev_unify_iter:[960,2,1,""],dev_unify_nest:[961,2,1,""],dev_util:[962,2,1,""],get_all_arrays_on_dev:[963,2,1,""],gpu_is_available:[964,2,1,""],num_arrays_on_dev:[965,2,1,""],num_cpu_cores:[966,2,1,""],num_gpus:[967,2,1,""],percent_used_mem_on_dev:[968,2,1,""],print_all_arrays_on_dev:[969,2,1,""],set_default_device:[970,2,1,""],set_split_factor:[971,2,1,""],split_factor:[972,2,1,""],split_func_call:[973,2,1,""],to_dev:[974,2,1,""],total_mem_on_dev:[975,2,1,""],tpu_is_available:[976,2,1,""],unset_default_device:[977,2,1,""],used_mem_on_dev:[978,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[929,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[929,3,1,""],da_tune_step:[929,3,1,""],dim_size:[929,3,1,""],ds_tune_step:[929,3,1,""],map:[929,3,1,""],repeated_config_check:[929,3,1,""],tune_step:[929,3,1,""],tuned:[929,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[938,3,1,""],map:[938,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[939,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[929,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[941,3,1,""],items:[941,3,1,""],keys:[941,3,1,""],shape:[941,3,1,""],values:[941,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[942,3,1,""],at_dev:[942,3,1,""],at_devs:[942,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[943,3,1,""],at_dev:[943,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[944,3,1,""],start:[944,3,1,""],stop:[944,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[979,1,1,""],DefaultFloatDtype:[979,1,1,""],DefaultIntDtype:[979,1,1,""],astype:[979,2,1,""],cast:[983,2,1,""],closest_valid_dtype:[984,2,1,""],convert_dtype:[985,2,1,""],default_dtype:[986,2,1,""],default_float_dtype:[987,2,1,""],default_int_dtype:[988,2,1,""],dtype:[989,2,1,""],dtype_bits:[990,2,1,""],dtype_from_str:[991,2,1,""],dtype_to_str:[992,2,1,""],invalid_dtype:[993,2,1,""],is_float_dtype:[994,2,1,""],is_int_dtype:[995,2,1,""],set_default_dtype:[996,2,1,""],set_default_float_dtype:[997,2,1,""],set_default_int_dtype:[998,2,1,""],unset_default_dtype:[999,2,1,""],unset_default_float_dtype:[1000,2,1,""],unset_default_int_dtype:[1001,2,1,""],valid_dtype:[1002,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[979,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[979,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[979,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1027,2,1,""],abs:[1004,2,1,""],all_equal:[1005,2,1,""],arange:[1006,2,1,""],arg_names:[1007,2,1,""],argmax:[1008,2,1,""],argmin:[1009,2,1,""],array:[1010,2,1,""],array_equal:[1011,2,1,""],arrays_equal:[1012,2,1,""],asarray:[1003,2,1,""],assert_supports_inplace:[1013,2,1,""],broadcast_to:[1014,2,1,""],cache_fn:[1015,2,1,""],clip:[1016,2,1,""],clip_matrix_norm:[1017,2,1,""],clip_vector_norm:[1018,2,1,""],concatenate:[1019,2,1,""],constant_pad:[1020,2,1,""],container_types:[1021,2,1,""],copy_array:[1022,2,1,""],cross:[1023,2,1,""],cumprod:[1024,2,1,""],cumsum:[1025,2,1,""],current_framework_str:[1026,2,1,""],einops_rearrange:[1028,2,1,""],einops_reduce:[1029,2,1,""],einops_repeat:[1030,2,1,""],equal:[1031,2,1,""],exists:[1032,2,1,""],expand_dims:[1033,2,1,""],floor:[1034,2,1,""],floormod:[1035,2,1,""],fourier_encode:[1036,2,1,""],full:[1037,2,1,""],gather:[1038,2,1,""],gather_nd:[1039,2,1,""],get_all_arrays_in_memory:[1040,2,1,""],get_min_base:[1041,2,1,""],get_min_denominator:[1042,2,1,""],get_num_dims:[1043,2,1,""],get_referrers_recursive:[1044,2,1,""],has_nans:[1045,2,1,""],identity:[1046,2,1,""],indices_where:[1047,2,1,""],inplace_arrays_supported:[1048,2,1,""],inplace_decrement:[1049,2,1,""],inplace_increment:[1050,2,1,""],inplace_update:[1051,2,1,""],inplace_variables_supported:[1052,2,1,""],is_array:[1053,2,1,""],isinf:[1054,2,1,""],linear_resample:[1055,2,1,""],linspace:[1056,2,1,""],logspace:[1057,2,1,""],match_kwargs:[1058,2,1,""],matmul:[1059,2,1,""],maximum:[1060,2,1,""],meshgrid:[1061,2,1,""],minimum:[1062,2,1,""],multiprocessing:[1063,2,1,""],num_arrays_in_memory:[1064,2,1,""],one_hot:[1065,2,1,""],ones:[1066,2,1,""],ones_like:[1067,2,1,""],print_all_arrays_in_memory:[1068,2,1,""],queue_timeout:[1069,2,1,""],repeat:[1070,2,1,""],reshape:[1071,2,1,""],round:[1072,2,1,""],scatter_flat:[1073,2,1,""],scatter_nd:[1074,2,1,""],set_min_base:[1075,2,1,""],set_min_denominator:[1076,2,1,""],set_queue_timeout:[1077,2,1,""],set_tmp_dir:[1078,2,1,""],shape:[1079,2,1,""],shape_to_tuple:[1080,2,1,""],split:[1081,2,1,""],squeeze:[1082,2,1,""],stable_divide:[1083,2,1,""],stable_pow:[1084,2,1,""],stack:[1085,2,1,""],supports_inplace:[1086,2,1,""],swapaxes:[1087,2,1,""],tile:[1088,2,1,""],tmp_dir:[1089,2,1,""],to_list:[1090,2,1,""],to_numpy:[1091,2,1,""],to_scalar:[1092,2,1,""],transpose:[1093,2,1,""],try_else_none:[1094,2,1,""],unstack:[1095,2,1,""],value_is_nan:[1096,2,1,""],where:[1097,2,1,""],zero_pad:[1098,2,1,""],zeros_like:[1099,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1100,1,1,""],adam_step:[1102,2,1,""],adam_update:[1103,2,1,""],execute_with_gradients:[1104,2,1,""],gradient_descent_update:[1105,2,1,""],is_variable:[1106,2,1,""],lamb_update:[1107,2,1,""],lars_update:[1108,2,1,""],optimizer_update:[1109,2,1,""],set_with_grads:[1110,2,1,""],stop_gradient:[1111,2,1,""],unset_with_grads:[1112,2,1,""],variable:[1113,2,1,""],variable_data:[1114,2,1,""],with_grads:[1115,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1100,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1117,2,1,""],float_img_to_uint8_img:[1118,2,1,""],gradient_image:[1119,2,1,""],random_crop:[1120,2,1,""],stack_images:[1121,2,1,""],uint8_img_to_float_img:[1122,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1124,2,1,""],inv:[1125,2,1,""],matrix_norm:[1126,2,1,""],pinv:[1127,2,1,""],qr:[1128,2,1,""],slodget:[1129,2,1,""],svd:[1130,2,1,""],vector_to_skew_symmetric_matrix:[1131,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1133,2,1,""],logical_or:[1134,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1136,2,1,""],acosh:[1137,2,1,""],asin:[1138,2,1,""],atan2:[1140,2,1,""],atan:[1139,2,1,""],atanh:[1141,2,1,""],cosh:[1142,2,1,""],divide:[1143,2,1,""],erf:[1144,2,1,""],exp:[1145,2,1,""],log:[1146,2,1,""],sin:[1147,2,1,""],sinh:[1148,2,1,""],tan:[1149,2,1,""],tanh:[1150,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1152,2,1,""],maml_step:[1153,2,1,""],reptile_step:[1154,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1155,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1200,2,1,""],copy_nest:[1201,2,1,""],index_nest:[1202,2,1,""],map:[1203,2,1,""],map_nest_at_index:[1204,2,1,""],map_nest_at_indices:[1205,2,1,""],multi_index_nest:[1206,2,1,""],nested_indices_where:[1207,2,1,""],nested_map:[1208,2,1,""],set_nest_at_index:[1209,2,1,""],set_nest_at_indices:[1210,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1212,2,1,""],randint:[1213,2,1,""],random_normal:[1214,2,1,""],random_uniform:[1215,2,1,""],seed:[1216,2,1,""],shuffle:[1217,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1219,2,1,""],reduce_max:[1220,2,1,""],reduce_mean:[1221,2,1,""],reduce_min:[1222,2,1,""],reduce_prod:[1223,2,1,""],reduce_std:[1224,2,1,""],reduce_sum:[1225,2,1,""],reduce_var:[1226,2,1,""]},"ivy.functional.ivy.nn":{activations:[1228,0,0,"-"],layers:[1236,0,0,"-"],losses:[1249,0,0,"-"],norms:[1253,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1229,2,1,""],leaky_relu:[1230,2,1,""],relu:[1231,2,1,""],sigmoid:[1232,2,1,""],softmax:[1233,2,1,""],softplus:[1234,2,1,""],tanh:[1235,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1237,2,1,""],conv1d_transpose:[1238,2,1,""],conv2d:[1239,2,1,""],conv2d_transpose:[1240,2,1,""],conv3d:[1241,2,1,""],conv3d_transpose:[1242,2,1,""],depthwise_conv2d:[1243,2,1,""],dropout:[1244,2,1,""],linear:[1245,2,1,""],lstm_update:[1246,2,1,""],multi_head_attention:[1247,2,1,""],scaled_dot_product_attention:[1248,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1250,2,1,""],cross_entropy:[1251,2,1,""],sparse_cross_entropy:[1252,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1254,2,1,""]},"ivy.stateful":{activations:[1258,0,0,"-"],converters:[1261,0,0,"-"],initializers:[1263,0,0,"-"],layers:[1272,0,0,"-"],module:[1284,0,0,"-"],norms:[1286,0,0,"-"],optimizers:[1288,0,0,"-"],sequential:[1294,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1259,1,1,""],GELU:[1260,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1259,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1260,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1262,2,1,""]},"ivy.stateful.initializers":{Constant:[1263,1,1,""],FirstLayerSiren:[1265,1,1,""],GlorotUniform:[1266,1,1,""],KaimingNormal:[1263,1,1,""],Ones:[1268,1,1,""],Siren:[1269,1,1,""],Uniform:[1263,1,1,""],Zeros:[1271,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1263,3,1,""],create_variables:[1263,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1265,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1266,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1263,3,1,""],create_variables:[1263,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1268,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1269,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1263,3,1,""],create_variables:[1263,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1271,3,1,""]},"ivy.stateful.layers":{Conv1D:[1273,1,1,""],Conv1DTranspose:[1274,1,1,""],Conv2D:[1275,1,1,""],Conv2DTranspose:[1276,1,1,""],Conv3D:[1277,1,1,""],Conv3DTranspose:[1278,1,1,""],DepthwiseConv2D:[1279,1,1,""],Dropout:[1280,1,1,""],LSTM:[1281,1,1,""],Linear:[1282,1,1,""],MultiHeadAttention:[1283,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1273,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1274,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1275,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1276,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1277,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1278,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1279,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1280,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1281,3,1,""],get_initial_state:[1281,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1282,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1283,3,1,""]},"ivy.stateful.module":{Module:[1285,1,1,""]},"ivy.stateful.module.Module":{__init__:[1285,3,1,""],build:[1285,3,1,""],build_mode:[1285,3,1,""],built:[1285,3,1,""],check_submod_rets:[1285,3,1,""],get_mod_key:[1285,3,1,""],mod_depth:[1285,3,1,""],mod_height:[1285,3,1,""],mod_with_top_mod_key_chain:[1285,3,1,""],save_weights:[1285,3,1,""],show_mod_in_top_mod:[1285,3,1,""],show_structure:[1285,3,1,""],show_v_in_top_v:[1285,3,1,""],sub_mods:[1285,3,1,""],track_submod_call_order:[1285,3,1,""],track_submod_rets:[1285,3,1,""],v_with_top_v_key_chains:[1285,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1287,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1287,3,1,""]},"ivy.stateful.optimizers":{Adam:[1289,1,1,""],LAMB:[1290,1,1,""],LARS:[1291,1,1,""],Optimizer:[1292,1,1,""],SGD:[1293,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1289,3,1,""],set_state:[1289,3,1,""],state:[1289,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1290,3,1,""],set_state:[1290,3,1,""],state:[1290,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1291,3,1,""],set_state:[1291,3,1,""],state:[1291,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1292,3,1,""],set_state:[1292,3,1,""],step:[1292,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1293,3,1,""],set_state:[1293,3,1,""],state:[1293,3,1,""]},"ivy.stateful.sequential":{Sequential:[1295,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1295,3,1,""]},"ivy.verbosity":{cprint:[1300,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1299,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1288,1289,1290],"02886":1255,"100":[1155,1255,1297],"141592653589793":850,"2021":1255,"2102":1255,"360":[1135,1147,1149],"718281828459045":850,"754":[850,855,856,859,871],"999":[1100,1102,1103,1107,1288,1289,1290],"abstract":[929,944,1255,1288,1292],"boolean":[40,41,859,861,870,929,964,976,979,993,1002,1003,1005,1011,1012,1045,1047,1048,1052,1053,1054,1086,1096,1100,1106,1132,1133,1134,1151,1152,1153,1155],"break":43,"case":[15,18,19,40,41,42,43,859,860,862,863,864,869,871,929,968,975,978,1003,1006,1071,1073,1074,1123,1126,1128,1155,1199,1202,1206,1255,1272,1283,1284,1285,1288,1292,1301],"catch":[1003,1027],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,396,440,441,855,857,929,931,932,933,934,935,936,938,939,941,942,943,944,956,957,979,1003,1007,1058,1100,1114,1155,1199,1201,1208,1249,1251,1252,1255,1258,1259,1260,1261,1262,1263,1265,1266,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1301],"default":[15,18,19,40,41,42,43,851,852,853,854,873,874,876,877,878,881,882,884,885,886,927,928,929,938,939,946,947,951,952,953,954,955,958,959,960,961,968,971,972,973,978,979,986,987,988,989,1003,1005,1006,1008,1009,1017,1018,1019,1020,1023,1024,1025,1036,1037,1038,1043,1045,1046,1055,1057,1058,1061,1063,1066,1069,1070,1073,1074,1077,1079,1081,1083,1084,1093,1095,1096,1100,1103,1105,1106,1107,1108,1109,1111,1115,1123,1126,1128,1151,1152,1153,1154,1155,1199,1200,1201,1203,1207,1208,1211,1212,1214,1215,1218,1220,1221,1222,1223,1224,1225,1226,1228,1229,1233,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1261,1262,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295],"final":[40,41,43,1003,1036,1056,1057,1155,1272,1283,1298],"float":[40,41,42,43,850,851,852,854,855,856,859,860,862,863,864,869,871,873,876,888,907,913,929,938,939,962,968,971,975,978,979,987,994,1003,1006,1017,1018,1020,1036,1037,1041,1042,1057,1075,1076,1077,1083,1084,1100,1102,1103,1105,1107,1108,1109,1116,1118,1122,1135,1143,1151,1152,1153,1154,1155,1211,1214,1215,1228,1230,1236,1244,1247,1248,1249,1250,1251,1252,1253,1254,1272,1280,1283,1286,1287,1288,1289,1290,1291,1292,1293],"function":[15,40,41,43,393,394,395,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,850,852,853,854,856,857,860,861,862,863,864,865,866,867,868,869,870,871,873,874,875,876,878,882,885,886,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,938,939,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1258,1259,1260,1288,1291,1292,1293,1297,1298,1301],"import":[43,1255,1298,1301],"int":[40,41,42,43,392,393,394,395,492,851,852,853,854,855,856,857,873,874,876,877,878,881,882,884,885,886,888,907,913,927,928,929,951,952,953,954,955,958,959,960,961,966,967,973,979,988,990,995,1003,1008,1009,1014,1019,1020,1024,1025,1028,1029,1030,1033,1036,1037,1038,1043,1046,1055,1056,1057,1065,1066,1070,1071,1073,1074,1079,1080,1081,1082,1085,1087,1088,1093,1095,1098,1100,1102,1103,1107,1116,1120,1121,1123,1126,1151,1152,1153,1154,1155,1199,1208,1211,1212,1213,1215,1216,1218,1220,1221,1222,1223,1224,1225,1226,1228,1233,1236,1237,1238,1239,1240,1241,1242,1243,1247,1249,1251,1252,1253,1254,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1286,1287],"long":[43,1236,1246],"new":[40,41,43,492,851,852,854,859,868,979,983,1003,1004,1014,1028,1029,1030,1033,1036,1037,1038,1039,1066,1071,1073,1074,1075,1076,1083,1084,1085,1100,1103,1105,1107,1108,1109,1116,1118,1120,1122,1135,1137,1141,1142,1148,1150,1155,1199,1209,1210,1211,1212,1253,1254,1255,1261,1262,1272,1282,1286,1287,1288,1289,1290,1291,1292,1293,1298,1301],"public":[1003,1021],"return":[15,16,17,18,19,40,41,42,43,492,851,852,853,854,859,860,861,862,863,864,865,866,867,869,870,871,873,874,875,876,881,882,884,885,886,888,907,913,927,928,929,938,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,964,965,967,968,972,973,974,975,976,978,979,983,984,985,986,987,988,989,990,991,992,993,994,995,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1043,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1070,1071,1072,1073,1074,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1102,1103,1104,1105,1106,1107,1108,1109,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1199,1200,1201,1203,1207,1208,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1261,1262,1272,1281,1282,1288,1292,1297,1298,1301],"short":[43,1236,1246,1255,1301],"static":[40,41,927,928],"super":1155,"true":[40,41,42,442,448,476,479,492,493,859,865,866,870,873,876,881,882,884,885,886,927,928,929,1003,1005,1013,1015,1032,1036,1045,1047,1096,1097,1100,1103,1105,1106,1107,1108,1109,1111,1123,1126,1151,1152,1153,1154,1155,1199,1200,1207,1211,1212,1218,1220,1221,1222,1223,1224,1225,1226,1228,1229,1236,1244,1249,1250,1251,1252,1272,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293],"try":[40,41,1003,1094,1155],"var":[40,41,1151,1152,1153,1301],"while":[40,41,42,859,870,1155],AND:[859,861,884,885,1132,1133],But:1301,For:[43,859,860,862,863,864,869,871,1003,1006,1016,1085,1100,1106,1114,1123,1128,1135,1136,1255,1261,1262,1298,1301],Its:[1135,1139],NOT:[859,870],Not:850,One:[40,41,43,1003,1029,1071,1211,1213,1301],Ones:[1255,1263],PRs:43,Such:[1003,1021],That:1298,The:[15,16,17,18,19,40,41,42,43,851,853,859,860,861,862,863,864,865,866,867,869,870,871,873,874,876,877,878,881,882,884,885,886,888,907,913,927,928,929,938,939,945,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,968,971,972,973,974,975,978,979,983,984,985,990,991,992,993,1002,1003,1006,1010,1011,1014,1015,1017,1018,1019,1020,1022,1023,1026,1027,1031,1036,1038,1039,1046,1049,1050,1051,1053,1055,1057,1059,1061,1063,1066,1067,1070,1071,1073,1074,1075,1076,1077,1080,1081,1082,1083,1084,1085,1088,1096,1099,1100,1102,1103,1105,1107,1108,1109,1111,1114,1116,1118,1120,1122,1123,1126,1128,1130,1135,1136,1138,1139,1143,1144,1145,1146,1147,1149,1151,1152,1153,1154,1155,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1261,1262,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1298,1301],There:[43,1255,1298],These:[43,1255],Use:43,Used:[1199,1200,1207,1284,1285],Using:[1255,1256,1301],With:[40,41,1123,1126,1218,1220,1221,1222,1223,1224,1225,1226,1255,1297,1301],__array__:[1003,1010],__call__:[1272,1283,1284,1285],__del__:1155,__dict__:[1155,1298],__enter__:1155,__exit__:1155,__getitem__:1155,__getstate__:1155,__init__:[40,41,42,43,59,60,82,213,396,397,440,441,522,656,929,930,937,938,939,940,941,942,943,944,979,980,981,982,1100,1101,1155,1159,1166,1255,1258,1259,1260,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1301],__iter__:1155,__len__:1155,__next__:1155,__pow__:43,__repr__:1155,_assign_vari:1297,_axi:1155,_base:[1199,1200,1207],_compute_node_da_ratio:1155,_compute_node_strs_da:1155,_concat_unify_arrai:1155,_counter:1155,_cur_framework:[43,1155],_da_direct:1155,_da_directions_flip:1155,_da_step_tim:1155,_da_tim:1155,_da_tune_count:1155,_data:1155,_delta_da_dim_s:1155,_delta_sf:1155,_dict:1155,_dim_siz:1155,_first_da_tune_step:1155,_first_ns_tune_step:1155,_fn:1155,_forward:[1255,1297],_get_kalman_param:1301,_get_prior:1301,_get_some_model:1301,_handle_flat_arrays_in_out:43,_index:[1199,1200,1207],_input_queu:1155,_length:1155,_max_depth:1155,_max_node_dim_step_ratio:1155,_max_node_dim_step_s:1155,_max_split_factor_step_s:1155,_mean_unify_arrai:1155,_min_bas:[1003,1084,1253,1254,1286,1287],_min_denomin:[1003,1083],_min_node_dim_s:1155,_min_sf_tune_step:1155,_min_unit_node_tune_step:1155,_model:1301,_native_wrapp:43,_node_mapp:1155,_node_percent_mem:1155,_node_str:1155,_node_str_da_ratio:1155,_node_strs_da:1155,_node_strs_kei:1155,_node_strs_n:1155,_node_util:1155,_ns_step_tim:1155,_ns_time:1155,_ns_tune_count:1155,_num_nod:1155,_num_work:1155,_observed_config:1155,_output_queu:1155,_paramet:1297,_percent_mem_inc_per_sf:1155,_percent_mem_inc_per_unit_da_dim:1155,_percent_util_inc_per_unit_da_dim:1155,_ret_fn:1155,_safety_factor:1155,_save_dir:1155,_shift_da_split:1155,_shift_n:1155,_slice:1155,_step:[1288,1292],_sum_unify_arrai:1155,_timeout:1155,_tune:1155,_tune_da:1155,_tune_n:1155,_tune_step:1155,_unit_da_tune_count:1155,_unroll_step:1301,_with_node_mappig:1155,_worker:1155,_worker_class:1155,_worker_fn:1155,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,929,938,944,1155,1284,1285,1288,1292],abil:1255,abl:[40,41],about:[855,856,857],abov:[43,851,853,873,874,1211,1213],above_height:[40,41],abs:[296,442,573,708,873,876,1003,1155],absolut:[40,41,873,875,1003,1004,1123,1129],abstractmethod:1155,accept:[15,43,859,870,1255],access:[40,41,43,1298],accord:[40,41,855,856,1003,1020,1038,1073,1074,1093,1098],accordingli:[873,876,884,885,886],accur:[59,396,440,441,929,941,942,943,944,979,1100,1263,1265,1266,1268,1269,1271],aco:[798,1135],acosh:[798,1135],across:[40,41,929,938,939,948,949,951,952,953,954,955,961,971,972,1003,1008,1009,1011,1012,1155,1199,1203],act:43,activ:[1229,1230,1231,1232,1233,1234,1235,1255,1259,1260],actual:1298,adam:[1100,1102,1103,1107,1255,1288,1290,1297],adam_step:1100,adam_upd:1100,adapt:[1100,1108,1288,1291],add:[40,41,43,1155,1249,1250,1251,1252,1253,1254,1255,1286,1287,1298],added:[43,1003,1083,1084,1294,1295],adding:[43,1003,1014],addit:[40,41,43,1003,1028,1029,1030,1253,1254,1272,1282],addition:43,address:43,adher:43,adjac:[1003,1006],adopt:[43,1003,1021],affect:[1003,1006],affin:[1286,1287],after:[859,871,1003,1055,1100,1103,1104,1105,1107,1108,1109,1116,1117,1253,1254,1288,1289,1290,1291,1292,1293,1301],after_1:[1003,1020,1098],after_n:[1003,1020,1098],again:43,against:[40,41,1123,1126,1218,1220,1221,1222,1223,1224,1225,1226],agnost:[43,1255,1297,1298],aim:1301,algebra:1123,algorithm:[1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279,1301],align:[40,41,43,1003,1014],aliv:[929,963,965,969,1003,1040,1064,1068],all:[15,16,17,18,19,40,41,43,110,238,427,552,686,851,853,873,876,877,878,884,927,928,929,938,963,969,1003,1004,1005,1011,1012,1021,1040,1046,1068,1082,1123,1128,1151,1152,1153,1154,1155,1199,1200,1201,1207,1208,1211,1212,1215,1218,1220,1221,1222,1223,1224,1225,1226,1236,1246,1255,1298,1301],all_depth:[40,41],all_equ:1003,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1199,all_tru:[40,41],alloc:[43,851,853,929,1155],allow:[1003,1056,1057,1058,1284,1285],allow_dupl:[1003,1058],alon:[929,968,978,1155,1255],along:[40,41,43,492,873,876,877,878,881,882,884,885,886,929,952,953,954,955,958,959,960,961,973,1003,1019,1024,1025,1038,1055,1056,1057,1070,1081,1085,1088,1095,1123,1126,1151,1152,1153,1154,1155,1211,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226],alongsid:[1297,1298],alpha:[1228,1230],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,859,862,929,1155],also:[40,41,43,1003,1006,1100,1103,1151,1152,1153,1154,1199,1200,1201,1207,1208,1236,1245,1255,1272,1282,1297],altern:1297,alwai:[40,41,43,1100,1106,1111],among:[40,41],amount:[929,975,1155,1255],angl:[859,864,1135,1136,1140],ani:[15,16,17,18,19,40,41,43,110,238,427,552,686,884,927,928,929,931,934,938,939,941,950,951,954,955,960,1003,1005,1006,1010,1027,1028,1029,1030,1031,1032,1045,1053,1058,1083,1084,1100,1104,1155,1199,1200,1203,1207,1208,1209,1210,1211,1215,1255,1261,1262,1284,1285,1297,1298,1301],anoth:[40,41,43,979,985,1255],another_backend:43,anyth:[43,1301],anywai:43,apart:43,api:[1255,1256],appear:[43,1003,1033],append:[40,41,873,874,1155],appli:[15,18,19,40,41,1003,1028,1029,1030,1100,1107,1108,1123,1130,1132,1133,1134,1151,1152,1153,1199,1203,1206,1208,1228,1229,1230,1231,1232,1233,1234,1235,1236,1245,1247,1248,1253,1254,1255,1258,1259,1260,1286,1287],applic:[1199,1203,1208,1236,1247,1248,1255,1301],approxim:[43,859,860,863,864,868,869,888,913,1228,1229],arang:[130,296,442,492,573,708,1003,1056,1057],arbitrari:[40,41,929,958,959,961,1155],arc:[1135,1140],arcco:[1135,1136],arctan:[1135,1139],area:[859,860,1255],arg:[15,16,17,40,41,43,59,63,929,938,951,955,961,973,1003,1028,1029,1030,1074,1155,1261,1262,1284,1285],arg_nam:1003,arg_stateful_idx:[1284,1285],argmax:[130,442,573,708,1003],argmin:[130,442,573,708,1003],args_clon:1155,args_dist:1155,args_to_ivi:[15,1255],args_to_n:[15,1255],args_uni:1155,argsort:[107,235,424,549,683,881],argument:[15,16,17,18,19,40,41,42,43,59,63,927,928,929,938,939,951,955,961,1003,1006,1007,1015,1027,1058,1074,1135,1136,1155,1199,1203,1261,1262,1284,1285],aris:[1255,1301],arithmet:[43,1218,1221,1224,1226],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:492,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,130,296,442,492,573,708,851,852,853,854,855,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,873,874,875,876,877,878,881,882,884,885,886,907,913,929,947,948,949,952,953,954,955,958,959,960,961,963,965,969,973,974,979,983,989,994,995,1003,1004,1005,1006,1008,1009,1011,1012,1013,1014,1016,1017,1018,1019,1020,1022,1023,1024,1025,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1043,1045,1046,1047,1048,1049,1050,1051,1053,1054,1055,1056,1057,1059,1060,1061,1062,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1079,1081,1082,1085,1086,1087,1088,1090,1091,1092,1093,1095,1096,1097,1098,1099,1100,1102,1103,1106,1107,1111,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1155,1199,1201,1208,1211,1212,1213,1214,1215,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1272,1280,1281,1283,1288,1292,1297,1298],arrang:[1003,1028],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,392,393,394,395,396,398,399,850,851,852,853,854,855,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,873,874,875,876,877,878,881,882,884,885,886],array_api_methods_to_test:43,array_builtin:[43,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926],array_equ:[296,708,1003],array_lik:[492,1003,1010],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1003],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1255],arraywithgener:[22,1255],arraywithgradi:[24,1255],arraywithimag:[26,1255],arraywithlinalg:[28,1255],arraywithlog:[30,1255],arraywithmath:[32,1255],arraywithmeta:[34,1255],arraywithrandom:[36,1255],arraywithreduct:[38,1255],arriv:[40,41,42],articl:1255,arxiv:1255,as_arrai:[40,41,1003,1043,1079],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[440,442,451,929,947,979,986,987,988,989],as_tensor:442,as_vari:[40,41],as_zero:[40,41],asarrai:[442,1003],ascend:[881,882],asin:[798,1135],asinh:[86,401,526,660,859],aspect:[1116,1121],assert:[40,41,1003,1013,1155],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1003,associ:[43,1123,1131],assum:[859,863,1298,1301],astyp:[442,979],asynchron:[40,41,42],at_dev:[40,42,929,942,943],at_kei:[40,41],at_key_chain:[40,41],at_nod:1155,atan2:[798,1135],atan:[798,1135],atanh:[798,1135],attent:[43,1236,1247,1248,1272,1283],attribut:[0,6,40,41,855,856,857,1003,1067,1099],audienc:[1255,1298],author:1255,automat:43,avail:[40,41,43,929,964,966,967,976,1003,1029,1155],averag:[1100,1102,1103,1107,1151,1152,1153,1218,1221],average_across_step:[1151,1152,1153],avoid:[43,929,1155,1298],axes:[40,41,43,442,473,485,486,873,876,877,878,884,885,886,929,973,1003,1008,1009,1020,1033,1087,1093,1098,1123,1126,1155,1218,1220,1221,1222,1223,1224,1225,1226],axes_length:[40,41,1003,1028,1029,1030],axi:[40,41,442,444,445,449,450,456,464,465,466,471,472,474,873,874,876,877,878,881,882,884,885,886,929,931,934,941,952,953,954,955,958,959,960,961,973,1003,1008,1009,1019,1020,1023,1024,1025,1033,1038,1055,1056,1057,1070,1081,1082,1085,1087,1088,1095,1098,1155,1211,1217,1218,1220,1221,1222,1223,1224,1225,1226,1228,1233,1249,1251,1252],axis0:[40,41,1003,1087],axis1:[40,41,873,874,1003,1087],axis2:[873,874],back:[43,1284,1285,1288,1292],backend:[15,17,19,40,41,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,929,964,967,976,979,985,993,1002,1003,1048,1052,1100,1103,1105,1107,1108,1109,1114,1155,1255,1256,1261,1262,1288,1289,1290,1291,1292,1293,1297,1298,1301],backend_nam:43,background:[1255,1298],backprop:1301,backward:[884,885,886,1297],band:[1003,1036],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,396,440,441,442,466,859,868,869,888,913,929,931,932,933,934,935,936,938,939,941,942,943,944,979,1003,1041,1057,1075,1084,1100,1155,1218,1219,1255,1258,1259,1260,1263,1265,1266,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1301],basi:43,batch:[40,41,873,876,929,971,972,1003,1036,1046,1116,1120,1123,1130,1151,1152,1153,1154,1155,1236,1245,1253,1254,1286,1287],batch_shap:[442,458,1003,1046,1065,1116,1117,1118,1119,1120,1121,1122,1123,1131,1211,1212,1236,1246,1247,1248,1272,1281],batch_siz:[492,493,1155,1211,1212,1236,1237,1238,1239,1240,1241,1242,1243],bayesian:1301,becaus:[43,1003,1006],becom:[43,1003,1016,1135,1140,1301],been:[1003,1028,1029,1030,1211,1212],befor:[40,41,43,929,973,1151,1152,1153,1155,1199,1208,1218,1220,1221,1222,1223,1224,1225,1226,1236,1247,1248,1301],before_1:[1003,1020,1098],before_n:[1003,1020,1098],begin:[1199,1200,1207,1298],behaviour:[43,1301],behind:[1100,1103,1105,1107,1108,1109,1255],being:[40,41,43,1003,1006,1069,1077,1155],believ:43,belong:[40,41],below:[43,851,853,873,874,1255,1298,1301],below_depth:[40,41],benefit:1255,bernoul:[1236,1244,1272,1280],best:[43,1003,1058,1255],beta1:[1100,1102,1103,1107,1288,1289,1290],beta2:[1100,1102,1103,1107,1288,1289,1290],beta:[1253,1254],between:[40,41,42,855,856,1003,1006,1123,1128,1199,1203,1211,1213,1249,1251,1252,1288,1290],bia:[1236,1245,1246,1272,1273,1274,1275,1276,1277,1278,1279,1282],bias_initi:[1272,1273,1274,1275,1276,1277,1278,1279,1282],bilinear:[1116,1117],bilinear_resampl:[166,350,481,616,781,1116],bilinearli:[1116,1117],binari:[859,861,1249,1250],binary_cross_entropi:1249,bit:[396,855,856,857,979,990,1116,1118,1122,1255],bitwis:[859,861],bitwise_and:[86,217,401,526,660,859],bitwise_oper:[0,7,8],block:[1255,1298],bool:[15,18,19,40,41,42,43,859,865,866,867,870,873,876,881,882,884,885,886,888,907,927,928,929,947,960,964,968,973,976,978,979,989,1003,1005,1011,1012,1024,1027,1031,1032,1036,1043,1045,1053,1058,1079,1081,1095,1096,1097,1100,1103,1104,1105,1106,1107,1108,1109,1111,1123,1126,1151,1152,1153,1154,1155,1199,1200,1201,1203,1207,1208,1211,1212,1218,1220,1221,1222,1223,1224,1225,1226,1228,1229,1236,1244,1261,1262,1272,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293],both:[43,1003,1023],bottom:1255,boundari:[40,41,1211,1215],branch:[43,927,928],brittl:43,broadcast:[40,41,43,859,861,867,873,876,884,885,886,888,907,913,1003,1014,1031,1060,1061,1062,1070,1123,1126,1135,1140,1143,1218,1220,1221,1222,1223,1224,1225,1226],broadcast_to:[296,708,1003],build:[1155,1255,1272,1283,1284,1285],build_mod:[1272,1283,1284,1285],builder:[43,1255],built:[929,1003,1006,1155,1272,1283,1284,1285],builtin:43,builtin_ab:[251,888],builtin_add:[251,888],builtin_and:[251,888],builtin_bool:[251,888],builtin_contain:[251,888],builtin_deepcopi:[251,888],builtin_dir:[251,888],builtin_eq:[251,888],builtin_float:[251,888],builtin_floordiv:[251,888],builtin_g:[251,888],builtin_getattr:[251,888],builtin_getattribut:[251,888],builtin_getitem:[251,888],builtin_gt:[251,888],builtin_int:[251,888],builtin_invert:[251,888],builtin_l:[251,888],builtin_lt:[251,561,695,888],builtin_mul:[251,888],builtin_n:[251,888],builtin_neg:[251,888],builtin_or:[251,888],builtin_po:[251,888],builtin_pow:[43,251,888],builtin_radd:[251,888],builtin_rand:[251,888],builtin_rfloordiv:[251,888],builtin_rmul:[251,888],builtin_ror:[251,888],builtin_rpow:[251,888],builtin_rsub:[251,888],builtin_rtruediv:[251,888],builtin_rxor:[251,888],builtin_setitem:[251,888],builtin_some_op:43,builtin_sub:[251,888],builtin_truediv:[251,888],builtin_xor:[251,888],busi:43,bypass:1298,cach:[929,945,1003,1015],cache_fn:1003,calcul:[40,41,42,43,859,860,863,864,868,869,871,888,913,1135,1143],call:[43,929,973,1003,1069,1077,1094,1100,1104,1155,1199,1200,1203,1207,1272,1283,1284,1285,1288,1292,1298,1301],callabl:[40,41,927,928,929,938,939,973,1003,1015,1027,1029,1058,1094,1151,1152,1153,1154,1155,1199,1203,1204,1205,1207,1208,1236,1247],can:[43,929,971,972,973,1003,1071,1116,1118,1155,1255,1297,1298,1301],cancel_join_thread:1155,cannot:43,captur:1255,cast:[40,41,130,296,442,573,708,979,1003,1019,1116,1118,1122],catch_except:[1003,1027],categori:43,caus:43,ceil:[86,217,401,526,660,859,1003,1006],cell:[1236,1246,1272,1281],certain:[40,41,1003,1006,1056,1057],chain:[40,41,1151,1152,1153,1294,1295],chang:[43,929,1003,1071,1155,1199,1201,1208,1255,1297],channel:[1003,1036,1116,1118,1119,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282],check:[15,16,17,18,19,40,41,43,929,968,978,979,984,993,1002,1003,1013,1032,1045,1053,1086,1096,1100,1106,1155,1199,1200,1207,1255,1298],check_nest:[1199,1207],check_shap:[40,41],check_submod_ret:[1284,1285],check_typ:[40,41],choic:[1255,1298],choleski:[785,1123],choos:[859,870,1003,1097,1123,1128,1135,1140,1255],choose_random_framework:59,chosen:[40,41,1003,1006,1097],chunk:[929,971,972,973,1155],chunk_siz:[929,973,1155],circl:[1135,1136,1138],clark:1255,clear:[43,929,945,1155],clear_framework_stack:59,clear_mem_on_dev:[440,700,929],click:1255,clip:[40,41,296,442,708,1003,1017,1018,1060,1062,1255],clip_matrix_norm:1003,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1003],clipped_delta:1155,clone:[40,41,929,948,949,950,951,1155],clone_arrai:1155,clone_it:1155,clone_nest:1155,clonedit:1155,cloneditem:1155,clonednest:1155,close:[43,1116,1121,1135,1138,1155,1301],closest:[859,862,979,984],closest_valid_dtyp:979,code:[40,41,42,43,492,1255,1256,1297,1298],codebas:[929,971,972,1155,1255,1298,1301],codomain:[859,860,863,864,869,871],colab:1255,collect:[15,40,41,440,442,476,481,485,489,490,492,888,927,929,979,1003,1100,1116,1123,1132,1135,1155,1199,1211,1218,1228,1236,1249,1253,1258,1272,1286,1288],color:[40,41,42,1299,1300],column:[1003,1046],combin:[40,41,42,1116,1121,1255,1301],combined_batch_s:1155,come:1298,command:1255,comment:43,commit:1301,common:[40,41,43,1135,1140],common_key_chain:[40,41],commun:[43,1255,1298],communuti:43,compar:[40,41,881,882,1003,1005,1011,1012],comparison_oper:[0,9,10],compat:[43,859,861,867,873,876,884,885,886,888,907,913,1003,1031,1071,1135,1143,1255,1301],compil:[296,442,708,1284,1285,1288,1289,1290,1291,1292,1293],compile_on_next_step:[1284,1285,1288,1289,1290,1291,1292,1293],complet:[40,41,43,1123,1128,1155],complex:[1298,1301],compliant:[859,870],compon:[1003,1023],composit:43,comput:[40,41,859,861,867,870,873,875,876,888,907,929,973,1003,1017,1018,1024,1025,1031,1059,1100,1102,1103,1104,1105,1107,1108,1109,1111,1113,1116,1119,1123,1124,1125,1126,1127,1128,1129,1132,1133,1134,1135,1136,1138,1139,1140,1144,1145,1146,1147,1149,1199,1203,1218,1219,1220,1221,1222,1223,1224,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1245,1247,1249,1250,1251,1252],concat:[40,41,929,958,959,960,961,973,1003,1036,1155],concaten:[40,41,130,296,442,573,708,1003,1036,1155,1255],concatten:[40,41,929,958,959,960,961,973,1155],condit:[442,927,928,1003,1097,1199,1207],conditon:[1199,1207],config:[40,41,1155],config_list:1155,configur:[40,41],conflict:43,conform:43,conjunct:1298,connect:[1272,1282,1283],consid:[40,41,859,870,1123,1128,1297,1301],consist:[40,41,929,961,1155,1218,1219,1284,1285,1298],constant:[929,938,939,1003,1020,1155,1199,1203,1249,1250,1251,1252,1253,1254,1263,1264,1268,1271,1284,1285,1286,1287,1298],constant_kwarg:1155,constant_pad:[296,442,573,708,1003],constitu:[40,41],construct:[1003,1088,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297],constructor:[40,41,42,1003,1007,1294,1295],consum:[929,1155],cont_feat_dim:[1236,1247],contaienr:[40,41],contain:[15,18,19,42,43,851,852,853,854,859,860,861,862,863,864,865,866,867,868,869,870,871,873,874,876,884,885,886,888,907,913,929,948,952,973,979,983,1003,1004,1008,1009,1016,1017,1018,1021,1031,1045,1060,1062,1072,1083,1084,1100,1102,1103,1105,1107,1108,1109,1135,1143,1151,1152,1153,1154,1155,1211,1212,1218,1220,1221,1222,1224,1226,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[442,708,1003],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[442,1003,1063,1236,1247,1272,1283],context_dim:[1272,1283],contextmanag:[59,60],continu:[43,1155,1298],contract:[40,41,1218,1219],contribut:[1255,1256],contributor:[43,1255],control:1255,conv1d:[197,381,506,840,1236,1255,1272],conv1d_transpos:[197,381,506,840,1236],conv1dtranspos:[1255,1272],conv2d:[197,381,506,644,840,1236,1255,1272],conv2d_transpos:[197,381,506,840,1236],conv2dtranspos:[1255,1272],conv3d:[197,381,506,644,840,1236,1255,1272],conv3d_transpos:[197,381,506,840,1236],conv3dtranspos:[1255,1272],convent:[40,41,1218,1219],conver:[929,945,956,968,975,978,1155],convers:[16,17,18,19,40,41,1155,1255],convert:[15,16,17,18,19,40,41,43,929,956,957,979,985,991,992,1003,1080,1091,1092,1116,1118,1122,1123,1131,1155,1199,1201,1208,1255,1262],convert_dtyp:979,convolut:[1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279],cool:43,cooler:43,coordin:[1003,1061,1135,1136,1138,1140],copi:[40,41,43,492,1003,1022,1155,1199,1201],copy_arrai:[442,708,1003],copy_nest:1199,core:[440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,938,939,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1255],corner:43,correct:[43,1255,1298],correctli:[40,41,43,1123,1126,1135,1140,1218,1220,1221,1222,1223,1224,1225,1226],correspond:[40,41,43,888,913,1003,1019,1211,1212],cos:[86,401,526,660,859,1003,1036,1135,1136,1149,1298],cosh:[86,401,526,660,798,859,1135],cosin:[859,863,864,1135,1136,1137,1142],cost:[1100,1102,1103,1105,1107,1108,1109,1151,1152,1153,1154],cost_fn:[1151,1154],could:1301,count:[40,41,877,878,884,885,886,1155,1218,1223,1225],cours:43,cprint:1299,cpu:[40,41,43,929,966,968,974,975,978,1003,1006,1010,1038,1039,1046,1056,1057,1065,1066,1067,1073,1074,1099,1155,1211,1212,1213,1214,1215,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1294,1295,1297,1298],creat:[40,41,851,852,854,929,938,939,1003,1006,1010,1037,1038,1039,1046,1056,1057,1065,1066,1067,1073,1074,1090,1099,1100,1113,1155,1211,1212,1213,1214,1215,1255,1256,1261,1262,1263,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1301],create_if_abs:[40,41],create_vari:1263,creation:[40,41,42,43],creation_funct:[392,393,394,395,851,852,853,854],crop:[1116,1120],crop_siz:[1116,1120],cross:[296,708,1003,1249,1250,1251,1252],cross_entropi:1249,cuda:[40,41,929,938,957,974,1003,1006,1010,1038,1039,1046,1056,1057,1065,1066,1067,1073,1074,1099,1155,1211,1212,1213,1214,1215,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1294,1295],cumprod:[130,296,442,708,1003],cumsum:[708,1003],cumul:[1003,1024,1025],current:[40,41,42,43,929,938,962,963,965,969,979,985,993,1002,1003,1026,1040,1048,1052,1064,1068,1155,1199,1200,1207,1255,1301],current_framework:59,current_framework_str:[442,708,1003,1155],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1236,1237,1238,1239,1240,1241,1242],d_out:[1236,1237,1238,1239,1240,1241,1242],da_can_termin:1155,da_dim_s:[929,1155],da_direct:1155,da_tune_step:[929,1155],dai:1301,daniel:1255,data:[40,41,42,43,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,869,870,871,873,874,876,877,878,881,882,884,885,886,888,907,913,929,931,932,933,934,935,936,941,942,943,957,979,983,984,985,989,990,991,992,993,994,995,1002,1003,1006,1010,1031,1037,1046,1053,1066,1067,1071,1082,1086,1099,1100,1106,1114,1135,1143,1155,1236,1245,1255],data_format:[1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279],data_type_funct:[396,398,399,855,856,857],dataset:[40,41],datatyp:[40,41,979,984,994,995],dcdw:[1100,1102,1103,1105,1107,1108],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1100,1107,1108,1288,1290,1291],decay_lambda:[1100,1107,1108,1288,1290,1291],decid:[40,41,1301],decompos:[1123,1124,1128],decomposit:[1123,1124,1128,1130],decor:43,decrement:[1003,1049],dedic:[1100,1114,1261,1262],deep:[40,41,1255],deep_copi:[40,41],deeper:[929,951,955,961,1155,1199,1208,1255],deepli:[1199,1201],def:[43,60,82,213,397,522,656,930,937,940,980,981,982,1101,1155,1159,1166,1255,1264,1267,1270,1297,1298,1301],default_dev:43,default_devic:929,default_dtyp:[43,979],default_float_dtyp:979,default_int_dtyp:979,default_key_color:[40,41,42],default_nod:1155,default_rng:492,default_v:[1003,1027],defaultdevic:[929,930],defaultdtyp:[979,980],defaultfloatdtyp:[979,981],defaultintdtyp:[979,982],defer:43,defin:[43,1003,1023,1065,1067,1099,1211,1213],definit:43,degre:[1135,1147,1149],del:1155,delai:43,delet:43,delta:[1100,1102,1155],delta_dim_s:1155,delta_percent_mem:1155,delta_sf:1155,delta_util:1155,demo:1255,denomin:[1003,1035,1042,1076,1083,1084,1253,1254,1286,1287],denot:43,dens:[1272,1282],depend:[43,859,860,863,864,868,869,881,882,888,913,1003,1097,1123,1130,1255],depth:[40,41,442,467,929,951,955,961,1003,1044,1065,1155,1199,1208,1284,1285],depth_cutoff:[40,41],depthwis:[1236,1243,1272,1279],depthwise_conv2d:[197,381,506,644,840,1236],depthwiseconv2d:[1255,1272],deriv:[1100,1102,1103,1105,1107,1108,1109,1199,1201,1208,1255,1284,1288,1292,1294],descend:[881,882,1123,1130],descent:[1100,1105,1288,1293],describ:[40,41,1218,1219],descript:[873,876],design:[1255,1256],desir:[40,41,929,974,979,983,1003,1006,1010,1046,1047,1066,1067,1099,1116,1121,1155,1218,1220,1221,1222,1224,1226],desired_aspect_ratio:[481,484,1116,1121],desired_percent_increas:1155,det:[226,415,540,620,674,785],detail:1301,detect:[40,41,1199,1200,1207],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,859,860,861,863,864,865,866,869,871,873,874,875,876,884,885,886,888,913,929,964,966,967,976,979,983,984,990,993,994,995,1002,1003,1005,1006,1010,1011,1012,1045,1048,1052,1053,1086,1096,1100,1106,1123,1129,1135,1143,1151,1152,1153,1154,1155,1236,1247],dev:[40,41,42,43,123,290,440,442,443,446,456,457,458,465,466,467,468,469,470,475,492,493,566,700,929,932,933,935,936,938,939,942,943,945,946,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,965,968,969,970,971,972,973,974,975,978,1003,1006,1010,1038,1039,1046,1056,1057,1065,1066,1067,1073,1074,1099,1100,1115,1211,1212,1213,1214,1215,1261,1262,1263,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1294,1295],dev_clon:[40,41,929],dev_clone_arrai:929,dev_clone_it:929,dev_clone_nest:929,dev_dist:[40,41,929],dev_dist_arrai:929,dev_dist_it:929,dev_dist_nest:929,dev_from_str:[43,123,290,440,566,700,929],dev_mapp:929,dev_str:[40,41],dev_to_str:[123,290,440,566,700,929],dev_unifi:929,dev_unify_arrai:929,dev_unify_it:929,dev_unify_nest:929,dev_util:929,devclonedit:929,devcloneditem:929,devclonednest:929,devdistit:929,devdistitem:929,devdistnest:929,develop:[43,1255,1298,1301],deviat:[40,41,1211,1214,1218,1224,1253,1254,1286,1287],devic:[21,40,41,43,392,393,395,441,442,455,851,852,853,854,931,932,933,934,935,936,938,939,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,1003,1006,1010,1037,1038,1039,1046,1056,1057,1065,1066,1067,1073,1074,1099,1100,1115,1211,1212,1213,1214,1215,1255,1261,1262,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1294,1295],devmanag:[929,937],devmapp:[929,939],devmappermultiproc:929,diag:[1123,1130],diagon:[100,226,415,540,674,851,853,873,1003,1046],dict:[15,16,17,18,19,40,41,42,929,931,934,938,939,941,951,952,953,954,955,1003,1028,1029,1030,1058,1151,1152,1153,1155,1199,1201,1202,1203,1206,1208,1261,1262],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,855,856,929,948,949,952,953,1123,1128,1155,1236,1245,1255,1298,1301],differenti:[1255,1298],dilat:[1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279],dim:[40,41,43,1003,1065,1116,1117,1121,1123,1130,1155,1272,1283],dim_siz:[40,41,929,1155],dimens:[40,41,42,851,853,873,874,876,877,878,884,885,886,929,960,1003,1014,1019,1023,1028,1029,1030,1033,1036,1043,1055,1065,1070,1071,1081,1082,1085,1093,1095,1116,1120,1123,1126,1130,1151,1152,1153,1154,1155,1211,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1233,1236,1237,1238,1239,1240,1241,1242,1243,1246,1249,1251,1252,1272,1273,1274,1275,1276,1277,1278,1279,1282,1283],dimension:[40,41,492,873,876,884,885,886,1003,1081,1082,1123,1130],direct:1155,directli:[43,1199,1208,1298,1301],directori:[1003,1078,1089],discord:43,discret:[1249,1251],discuss:43,disk:[40,41,1116,1118],distanc:[1003,1006],distribut:[40,41,929,948,952,953,954,955,1155,1211,1212,1213,1214,1215,1236,1244,1272,1280,1284,1285],distribute_nest:1155,distributedarrai:[40,41],distrubt:[1249,1251],dive:[1255,1298],divid:[40,41,1003,1081,1083,1135],dividend:[1135,1143],divis:[1003,1035,1042,1076,1083,1084,1100,1102,1103,1107,1135,1143,1288,1289,1290],divisor:[1100,1102,1103,1107,1135,1143,1288,1289,1290],doc:1255,docstr:43,document:43,doe:[40,41,43,1003,1006,1081,1297],doesn:[1123,1128,1255],doing:43,domain:[859,860,863,864,869,871,1135,1136],don:[43,1255],done:43,door:1301,dot:[1123,1125,1236,1247,1248,1272,1283],down:1297,downscal:[1003,1017,1018],drag:[1255,1301],draw:[1211,1212,1214,1215],drawn:[1211,1212,1213,1214,1215],drop:[1255,1301],dropout:[1236,1255,1272,1283],dropout_r:[1272,1283],ds_tune_step:929,dtype:[40,41,43,130,296,392,393,395,396,398,399,442,443,446,447,455,458,468,475,573,708,851,852,854,855,856,857,983,984,985,986,987,988,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1006,1010,1037,1046,1065,1066,1067,1099],dtype_bit:[130,296,442,573,708,979],dtype_from_str:[43,130,296,442,573,708,979],dtype_in:[442,452,453,454,979,985,990,991,992,993,994,995,1002],dtype_to_str:[130,296,442,573,708,979],duplic:[40,41,43],dure:[40,41,43,927,928,1003,1094,1100,1102,1103,1107,1151,1152,1153,1154,1284,1285,1288,1289,1290,1292],dynam:[43,442,448,927,928],each:[40,41,42,43,859,860,861,862,863,864,865,866,867,868,869,870,871,888,907,913,929,938,939,948,949,950,951,952,953,954,960,972,973,1003,1004,1005,1020,1031,1070,1081,1085,1088,1098,1100,1103,1105,1107,1108,1109,1116,1119,1123,1130,1135,1138,1143,1145,1146,1155,1199,1203,1211,1212,1218,1219,1236,1237,1238,1239,1240,1241,1242,1243,1244,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1283,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1298],eager:1298,easi:1301,easili:1255,econom:1301,ecosystem:1255,edg:[1003,1016,1020,1098],effect:[1100,1109],effective_grad:[1100,1109],effici:1301,einop:[40,41,1003,1028,1029,1030],einops_rearrang:[40,41,1003],einops_reduc:[40,41,1003],einops_repeat:[40,41,1003],einstein:[40,41,1218,1219],einsum:[40,41,183,369,494,634,820,1218],either:[40,41,43,859,869,1003,1027,1058,1061,1063,1151,1152,1153,1154,1155,1272,1283,1284,1285,1298],eleg:1155,element:[40,41,43,492,851,853,859,860,861,862,863,864,865,866,867,868,869,870,871,877,878,884,885,886,888,907,913,929,950,954,960,979,983,1003,1004,1006,1008,1009,1011,1012,1016,1017,1018,1024,1025,1031,1034,1035,1046,1047,1060,1062,1070,1072,1081,1092,1097,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1155,1218,1219,1221,1223,1225,1228,1229,1230,1231,1232,1233,1234,1235,1236,1244,1272,1280],elementwis:[40,41],elementwise_affin:[1286,1287],elementwise_funct:[859,860,861,862,863,864,865,866,867,868,869,870,871],elemtn:[1211,1212],elif:1155,els:[43,1003,1013,1027,1032,1155],elsewher:[1003,1097],emphas:1255,empti:[40,41,884,885,886,1123,1128,1155],enabl:[40,41,42,43,1255],encapsul:[855,857],encod:[1003,1036,1116,1118],end:[1003,1006,1255,1298],engag:43,ensur:43,entir:[40,41,884,885,886,929,973,1155,1255,1272,1281],entri:[40,41,1003,1056,1057,1081,1082],entropi:[1249,1250,1251,1252],enumer:1155,environ:1255,eps:[396,855,856],epsilon:[1100,1102,1103,1107,1249,1250,1251,1252,1253,1254,1286,1287,1288,1289,1290],equal:[40,41,442,573,708,859,865,873,874,881,882,1003,1005,1011,1012,1020,1081,1098,1135,1147,1149,1211,1215],equality_matrix:[1003,1005],equat:[40,41,1218,1219],equival:[859,870,873,876,1003,1006,1135,1149],erf:[490,798,1135],error:[40,41,43,929,1003,1082,1135,1144,1155,1228,1229,1284,1285,1288,1292],essenti:43,etc:[40,41,43,929,974,1003,1006,1010,1038,1039,1046,1056,1057,1065,1066,1067,1073,1074,1099,1155,1211,1212,1213,1214,1215,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1294,1295,1301],euclidean:[873,876],euler:850,evalu:[40,41,859,868,869,884,885,886,1003,1061,1199,1200,1207],even:[43,1301],evenli:[40,41,1003,1006,1056,1057,1081],everi:[43,1003,1005,1301],exact:[40,41],exampl:[43,927,928,1003,1016,1085,1123,1128,1255,1297,1298,1301],example_input:[442,448,927,928],exc_tb:1155,exc_typ:1155,exc_val:1155,exce:[1003,1062],except:[40,41,44,47,884,885,886,1003,1006,1013,1019,1027,1094,1155],excess_s:1155,excit:[1255,1298],exclud:[59,61,1003,1006,1211,1215],exclus:[40,41,442,450,463,476,478,1003,1024,1053,1100,1106,1211,1213],execut:[43,1003,1094,1298],execute_with_gradi:[163,345,476,611,775,1100,1255,1297],exist:[40,41,1003,1027,1155,1255,1288,1292,1301],exp:[798,1135],expand:[40,41,1003,1033,1036],expand_dim:[40,41,296,708,1003,1155],expect:[1003,1007],explain:[43,1298],explicitli:[43,1272,1281,1283,1284,1285,1298],expon:[43,888,913,1003,1084],exponenti:[43,888,913,1135,1144,1145],expos:[1003,1010,1021],express:[859,863,1003,1061],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1100,1104],eye:[1123,1125],fabian:1255,fabio:1255,factor:[929,938,971,972,973,1100,1102,1103,1107,1108,1123,1130,1155,1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279,1288,1289,1290,1291],fail:43,falck:1255,fall:[1284,1285,1288,1292],fallback_to_non_compil:[1284,1285,1288,1292],fals:[15,18,19,40,41,42,59,66,67,68,69,70,440,442,450,451,463,471,474,476,477,478,485,486,859,865,866,870,873,876,881,882,884,885,886,929,947,960,968,973,978,979,986,987,988,989,1003,1005,1024,1027,1032,1036,1043,1053,1058,1079,1081,1095,1097,1100,1103,1104,1105,1106,1107,1108,1109,1123,1126,1151,1152,1153,1154,1155,1199,1200,1201,1203,1207,1208,1218,1220,1221,1222,1223,1224,1225,1226,1261,1262,1284,1285,1288,1289,1290,1291,1292,1293],fan_in:1263,fan_mod:1263,fan_out:1263,far:[1199,1200,1207,1297],faster:[927,928],favourit:[1255,1297],feasibl:1301,feat_dim:[1236,1247,1248],fed:[929,973,1155],feed:[929,973,1155],few:43,field:1301,file:[40,41,43,1003,1078,1089,1284,1285],filepath:[40,41],fill:[40,41,851,852,854,1003,1037,1066,1211,1213],fill_valu:[442,455,1003,1037],filter:[1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279,1301],filter_s:[1272,1273,1274],filter_shap:[1272,1275,1276,1277,1278,1279],find:[40,41,43,1301],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,212,213,396,397,521,522,655,656,855],finish:[1255,1301],finit:[859,865],first:[40,41,43,492,859,861,867,873,874,927,928,929,960,1003,1011,1019,1023,1031,1056,1057,1085,1087,1100,1104,1123,1130,1151,1152,1153,1154,1155,1199,1200,1207,1211,1217,1218,1223,1225,1272,1283,1284,1285,1288,1292,1298,1301],firstlayersiren:[1255,1263],firstli:[1298,1301],fist:[929,973,1155],fit:[40,41,440,442,476,481,485,489,490,492,1003,1070,1116,1121],fix:43,fkt:1301,flag:[40,41,43,1100,1106],flat:[40,41,43,1003,1070,1073],flat_list:[40,41],flatten:[40,41,873,876,1003,1036,1070,1218,1220,1221,1222,1224,1226],flatten_key_chain:[40,41,1284,1285],flexibl:[1255,1298],flip:[40,41,103,231,420,545,679,877],float32:[43,442,458,979,983,991,992,1003,1006,1010,1046,1066,1067,1099],float_dtyp:[979,987,997],float_img_to_uint8_img:1116,floor:[296,442,708,1003,1035,1155],floormod:[296,442,708,1003],fluid:1301,folder:[43,1255],follow:[40,41,43,855,857,873,876,929,973,1003,1049,1050,1051,1083,1084,1100,1103,1105,1107,1108,1109,1155,1199,1203,1208,1236,1247,1248,1255,1272,1282,1288,1292],followng:[855,856],fomaml_step:1151,forget:[1100,1102,1103,1107,1288,1289,1290],fork:[1003,1063,1255,1256],forkserv:[1003,1063,1155],form:[15,16,17,18,19,40,41,851,853,873,874,1003,1010,1100,1103,1105,1107,1108,1109,1199,1201,1208,1236],format:[40,41,43,929,947,979,983,985,989,1003,1006,1010,1046,1066,1067,1099,1155,1218,1219,1255,1297,1298],format_fn:[40,41],format_key_chain:[40,41],forward:[1284,1285,1288,1292,1297],found:[40,41,42],fourier:[1003,1036],fourier_encod:1003,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,419,421,425,428,429,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,483,484,486,487,488,491,493,495,496,497,498,499,500,501,504,505,507,508,509,510,511,512,513,518,519,520,522,523,524,527,528,529,530,531,532,533,534,535,536,537,538,541,542,543,544,546,550,553,554,562,567,568,569,570,571,572,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,612,613,614,615,617,618,619,621,622,623,624,625,626,630,631,632,633,635,636,637,638,639,640,641,645,646,647,652,653,654,656,657,658,661,662,663,664,665,666,667,668,669,670,671,672,675,676,677,678,680,684,687,688,696,701,702,703,704,705,706,707,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,776,777,778,779,780,782,783,784,786,787,788,789,790,791,792,793,794,796,797,799,800,801,802,803,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,821,822,823,824,825,826,827,830,831,832,833,834,835,836,838,839,841,842,843,844,845,846,847,852,853,854,856,857,860,861,862,863,864,865,866,867,868,869,870,871,874,875,876,878,882,885,886,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1229,1230,1231,1232,1233,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1250,1251,1252,1254,1255,1259,1260,1261,1262,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1300,1301],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1155,framewrk:[1003,1063],free:43,freed:43,freeli:43,frequenc:[1003,1036],from:[40,41,42,43,859,871,873,874,877,878,884,885,886,929,938,939,973,979,985,1003,1027,1038,1039,1046,1071,1082,1090,1097,1100,1103,1107,1116,1120,1123,1128,1151,1152,1153,1154,1155,1199,1201,1208,1211,1212,1213,1214,1215,1218,1223,1225,1236,1244,1247,1255,1261,1262,1272,1280,1283,1288,1292,1297,1298],from_cal:[1284,1285],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,130,296,442,573,708,855,856,1003,1123,1128,1255],full_matric:[1123,1130],fulli:[43,1255,1272,1282,1283,1297],func:[40,41,442,448,476,477,927,928,929,973,1003,1015,1100,1104,1155],further:[43,1301],furthermor:1301,futur:1301,gain:1263,gamma:[1253,1254],gather:[40,41,130,296,442,573,708,1003,1039],gather_nd:[40,41,130,296,442,573,708,1003],gauss:[1135,1144],gaussian:[1228,1229],geglu:[1255,1258],gelu:[379,503,829,1228,1255,1258],gener:[23,40,41,43,440,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,492,927,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1106,1211,1213,1215,1216,1255,1288,1292],geometr:[1003,1036],get:[40,41,43,855,856,857,929,938,939,947,962,963,968,972,975,978,979,989,990,1003,1007,1040,1041,1042,1069,1155,1255,1272,1281,1301],get_all_arrays_in_memori:1003,get_all_arrays_on_dev:929,get_framework:59,get_initial_st:[1272,1281],get_min_bas:1003,get_min_denomin:1003,get_mod_kei:[1284,1285],get_num_dim:[442,708,1003],get_referrers_recurs:1003,getfullargspec:1155,gist:1255,give:[43,1003,1071,1298],given:[40,41,43,877,878,929,962,968,971,972,973,975,978,979,983,1003,1006,1010,1016,1024,1025,1039,1056,1057,1066,1067,1070,1073,1074,1081,1088,1093,1095,1099,1100,1102,1103,1105,1107,1108,1109,1123,1125,1131,1135,1136,1155,1199,1204,1205,1211,1214,1215,1217,1218,1221,1223,1224,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1261,1262,1301],global:[40,41,42,929,938,939,946,971,972,973,979,986,987,988,1003,1026,1041,1042,1069,1075,1076,1077,1083,1084,1100,1115,1155,1253,1254,1286,1287],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1255,1263,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282],good:43,googl:1255,got:[43,1255],gpu0:43,gpu2:43,gpu:[929,964,967,1155],gpu_is_avail:[440,929,1155],grad:[1255,1288,1292,1297],gradient:[25,40,41,477,478,479,480,929,973,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1119,1151,1152,1153,1154,1255,1288,1289,1290,1291,1292,1293,1297,1301],gradient_descent_upd:[1100,1151,1152,1153,1154],gradient_imag:[166,350,481,616,781,1116],gradienttrack:[1100,1101],graph:[1100,1103,1105,1107,1108,1109,1284,1285],greater:[40,41,1003,1006,1034,1082,1211,1215],green:[40,41,42,1299,1300],grid:[1003,1061],group:[1116,1121],guid:[43,1255,1256,1301],gym:1255,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1301,half:[1003,1006,1155,1211,1215],hand:1255,handl:[40,41,42,43,927,928,929,945,947,956,957,968,975,978,1100,1103,1105,1107,1108,1109,1155,1288,1289,1290,1291,1292,1293],happen:43,has:[40,41,43,873,875,1003,1085,1123,1128,1129,1135,1139],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1003],hasattr:1155,have:[40,41,43,851,852,853,854,855,856,859,860,861,862,863,864,865,866,867,869,870,871,873,874,876,877,878,881,882,884,885,886,888,907,913,1003,1019,1023,1028,1029,1030,1031,1037,1085,1100,1106,1114,1123,1130,1135,1143,1155,1255,1297,1298],haven:43,hdf5:[40,41,1284,1285],head:[1236,1247,1272,1283],head_dim:[1272,1283],height:[1116,1121],height_cutoff:[40,41],help:[43,59,396,440,441,929,941,942,943,944,979,1100,1255,1263,1265,1266,1268,1269,1271],here:[43,1255],hidden:[1236,1246,1272,1281],hierarch:[1003,1021],hierarchi:[40,41],high:[40,41,492,1211,1213,1215],higher:[1100,1103,1105,1107,1108,1109,1123,1130],highest:[1211,1213],highest_util:1155,highest_util_nod:1155,highli:1255,highlight:1301,hint:43,hkt:1301,hold:[979,983,1003,1006,1010,1073,1074],host:1255,hot:[1003,1065],hour:43,how:[1255,1272,1283,1284,1285,1298,1301],howev:[43,1298],http:1301,hyperbol:[859,860,864,1135,1137,1141,1142,1148,1150,1228,1235],hypothet:[43,1301],icon:1255,idea:1255,ident:[40,41,43,130,296,442,573,708,1003],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[850,855,856,859,871],if_exist:[40,41],ignor:[40,41,1288,1292],ignore_key_error:[40,41],ignore_miss:[1288,1292],ignore_non:[40,41],iii:43,iinfo:[81,212,396,521,655,855],imag:[27,482,483,484,1003,1055,1117,1118,1119,1120,1121,1122,1236,1237,1238,1239,1240,1242,1243,1255,1301],image_dim:[1116,1120],imkkhk:1301,immedi:[1255,1298,1301],implement:[43,859,860,863,864,868,869,881,882,888,913,1255,1298,1301],in_featur:[1236,1245],inadvert:43,includ:[40,41,43,873,876,884,885,886,1003,1006,1045,1083,1084,1096,1199,1200,1211,1215,1272,1282,1283,1286,1287,1297],include_deriv:[1199,1201,1208],include_empti:[40,41],include_inf:[40,41,1003,1045,1096],include_nest:[1199,1200],include_self:[40,41],inclus:[43,1211,1213],incom:[1236,1245],increas:[929,951,955,961,1003,1020,1033,1098,1155,1199,1208],increasingli:1301,increment:[1003,1050,1155],inde:1255,indent:[40,41,42],independ:[1211,1212],index:[40,41,442,492,881,882,1003,1008,1009,1038,1039,1061,1082,1085,1199,1202,1204,1205,1206,1209],index_nest:1199,indic:[40,41,442,456,457,467,469,470,873,876,881,882,1003,1008,1009,1038,1039,1047,1065,1073,1074,1199,1200,1202,1204,1205,1206,1207,1209,1210,1211,1212,1228,1233,1236,1237,1238,1239,1240,1241,1242,1243,1253,1254,1272,1273,1274,1275,1276,1277,1278,1279,1284,1285],indices_wher:[130,296,442,708,1003],indistinguish:[859,871],inevit:1301,inf:[40,41,873,876,1003,1045,1054,1096,1135,1139],infer:[927,928,1003,1043,1046,1071,1079,1116,1120,1123,1128,1298,1301],infin:[859,860,862,863,864,865,869,871,873,876,884,885,886,1003,1054],infinit:[859,871],inform:[855,856,857,1100,1111],init_c:[1236,1246],init_h:[1236,1246],init_on_first_step:[1288,1292],initi:[40,41,42,43,59,396,440,441,929,941,942,943,944,979,1100,1155,1236,1246,1255,1265,1266,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1288,1292],initialz:[1284,1285],inner:[1151,1152,1153,1154],inner_batch_fn:[1151,1152,1153],inner_batch_shap:[1236,1245],inner_cost_fn:[1151,1152,1153],inner_grad_step:[1151,1152,1153,1154],inner_learning_r:[1151,1152,1153,1154],inner_optimization_step:[1151,1152,1153,1154],inner_v:[1151,1152,1153],innermost:[851,853,873,874],inp:1155,inplac:[40,41,1003,1013,1048,1052,1086,1100,1103,1105,1107,1108,1109,1261,1262,1288,1289,1290,1291,1292,1293],inplace_arrays_support:[442,1003],inplace_decr:[130,296,442,573,708,1003],inplace_incr:[130,296,442,573,708,1003],inplace_oper:[0,11,12],inplace_upd:[40,41,130,296,442,573,708,1003,1261,1262],inplace_variables_support:[442,1003],input:[15,18,19,40,41,42,43,851,853,859,860,861,862,863,864,865,866,867,868,869,870,871,873,874,876,877,878,881,882,884,885,886,927,928,929,938,939,946,947,948,951,952,955,961,973,974,979,983,984,986,987,988,989,990,994,995,1003,1004,1005,1008,1009,1011,1012,1013,1014,1016,1017,1018,1019,1020,1022,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1043,1045,1046,1047,1049,1050,1051,1053,1054,1055,1059,1060,1061,1062,1070,1072,1079,1080,1082,1085,1086,1087,1088,1090,1091,1092,1093,1095,1096,1098,1100,1104,1106,1111,1115,1116,1117,1118,1119,1120,1122,1123,1126,1128,1130,1132,1133,1134,1135,1137,1139,1141,1142,1143,1147,1148,1149,1150,1151,1152,1153,1154,1155,1211,1212,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1253,1254,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1286,1287,1298],input_ax:[929,973,1155],input_channel:[1272,1273,1274,1275,1276,1277,1278,1281,1282],input_queu:1155,inputs_split:1155,insert:[1003,1033],insid:43,inspect:1155,inspir:1301,instal:1255,instanc:[15,16,17,18,19,40,41,43,492,888,907,913,929,938,1155,1261,1262,1294,1295],instead:[40,41,43,492,1218,1220,1221,1222,1223,1224,1225,1226,1301],int32:43,int64:[979,983,1003,1006,1010,1046,1066,1067,1099],int_dtyp:[979,988,998],integ:[40,41,492,855,857,859,861,862,873,876,884,885,886,979,995,1003,1006,1034,1072,1081,1211,1213,1216],integr:1255,intend:43,inter:1255,interact:1255,interchang:[40,41,1003,1087],interest:1255,interfac:[1003,1010,1298],intermedi:[40,41],intern:[40,41,929,1100,1114,1155,1199,1200,1207,1208,1263,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1294,1295],interpol:[1003,1055],intersect:[1135,1136],interv:[40,41,884,885,886,1003,1006,1016,1056,1057,1135,1138,1211,1215],introduc:1301,inv:[785,1123,1301],invalid:[884,885,886],invalid_dtyp:979,invers:[859,860,1123,1125,1127,1135,1136,1137,1138,1139,1141,1301],invert:[1123,1125,1127],invest:1301,investig:43,invoc:[927,928],irrespect:1255,is_al:1155,is_arrai:[130,296,442,573,708,1003,1155],is_float_dtyp:979,is_int_dtyp:979,is_mean:1155,is_sum:1155,is_vari:[163,345,476,611,775,1100],isfinit:[86,217,401,526,660,859],isinf:[296,573,708,1003],isinst:1155,isnan:[86,217,401,526,660,859],isnumer:1155,issu:[1255,1256],issue_numb:43,item:[15,19,40,41,888,900,901,929,938,939,941,948,950,952,954,960,979,986,1003,1021,1044,1083,1084,1155,1199,1203,1204,1205,1208,1209,1210,1255,1284,1285,1297],iter:[15,16,17,18,19,40,41,42,927,928,929,932,933,935,936,938,939,942,943,950,952,953,954,955,960,973,1003,1005,1014,1019,1020,1046,1061,1066,1070,1071,1074,1079,1081,1085,1088,1093,1098,1155,1199,1200,1201,1203,1207,1208],iterbal:[929,950,954,960,1155],its:[492,929,973,1003,1046,1071,1087,1093,1155,1255],itself:[43,1199,1208],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,850,851,852,853,854,855,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,873,874,875,876,877,878,881,882,884,885,886,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,938,939,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1258,1259,1260,1261,1262,1263,1265,1266,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1299,1300],ivy_backend:[40,41],ivy_bay:1301,ivy_test:43,ivyfcmodel:1297,ivyh:[40,41,42],ivymodul:[194,837],jame:1255,jax:[43,1100,1106,1255,1301],jax_concat:1255,jnp:1255,join:[40,41,1003,1019,1085,1155],journal:1255,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1255,1272,1281,1301],kaimingnorm:[1263,1267],kalman:1301,kalman_filt:1301,kalman_filter_step:1301,kalman_filter_upd:1301,keep:[40,41,929,974,1003,1095,1155,1255,1256,1301],keep_inner_v:[1151,1152,1153],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1151,1152,1153],keepdim:[40,41,442,474,485,486,873,876,884,885,886,1003,1095,1123,1126,1218,1220,1221,1222,1223,1224,1225,1226],kei:[15,16,17,40,41,42,43,888,893,929,941,1003,1021,1151,1152,1153,1155,1199,1202,1206,1236,1247,1248,1255,1261,1262,1272,1283,1288,1292],kept:[40,41,42,1151,1152,1153],kera:1301,kernel:[1236,1246],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,929,938,939,951,955,961,1003,1007,1028,1029,1030,1058,1155,1199,1203,1284,1285],keyword_color_dict:[40,41,42],kind:[855,856,857,1301],kwarg:[15,16,17,40,41,42,59,63,929,938,951,955,961,1003,1058,1155,1261,1262,1284,1285],kwarg_stateful_idx:[1284,1285],kwargs_clon:1155,kwargs_dist:1155,kwargs_uni:1155,label:[43,1249,1250,1251,1252],lamb:[1100,1107,1255,1288],lamb_upd:1100,lambda:[1155,1288,1291,1293,1297],lar:[1100,1107,1108,1255,1288],larger:[855,856,1003,1016],largest:[40,41,855,856,857,1003,1008,1034],lars_upd:1100,last:[40,41,873,874,877,878,881,882,884,885,886,1003,1006,1023,1055,1081,1085,1123,1126,1130,1218,1223,1225,1228,1233,1236,1246,1272,1282],later:[40,41,1003,1015],latest:[1272,1281],layer:[1100,1103,1105,1107,1109,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1253,1254,1255,1263,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1294,1295,1301],layer_norm:1253,layernorm:[1255,1286],layerwis:[1100,1108,1288,1291],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1199,1200,1207],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1228,1229,1230],leaky_relu:[829,1228],learn:[1100,1103,1105,1107,1108,1109,1123,1128,1151,1152,1153,1154,1211,1217,1255,1288,1289,1290,1291,1292,1293,1298,1301],learnabl:[1253,1254,1286,1287],least:43,leav:[15,18,19,40,41,1199,1200,1201,1207,1208],left:[40,41,43,1123,1126,1218,1220,1221,1222,1223,1224,1225,1226,1255],leftmost:[40,41],len:1155,length:[40,41,42,1003,1006,1071,1082,1093],lenton2021ivi:1255,lenton:1255,less:[40,41,43,86,217,401,526,660,859,862,869,871,873,876,1155,1211,1215],less_util_node_str:1155,let:[1298,1301],level:1255,librari:[859,870,1255,1297,1301],lightweight:1255,like:[43,1100,1106,1211,1215,1255,1297,1298,1301],likewis:43,limit:[40,41,42,43,855,856,857,1003,1016,1017,1018],linalg:[29,1124,1125,1126,1127,1128,1129,1130,1131,1255],line:43,linear0:[1255,1297],linear1:1255,linear2:1297,linear:[1003,1036,1055,1123,1228,1229,1230,1231,1236,1244,1255,1272,1273,1274,1275,1276,1277,1278,1279,1297],linear_algebra:[485,486,487,488,873,874,875,876],linear_resampl:[130,296,442,573,708,1003],linearli:[1003,1036],link:[43,1255],linspac:[130,296,442,573,708,1003,1006],list:[15,18,19,40,41,392,393,395,851,852,854,877,878,884,885,886,929,938,939,948,949,951,952,953,955,958,959,973,1003,1006,1010,1012,1061,1080,1081,1090,1095,1151,1152,1153,1155,1199,1200,1201,1203,1207,1208,1236,1237,1238,1239,1240,1241,1242,1243,1255,1256,1261,1262,1272,1273,1274,1275,1276,1277,1278,1279],list_join:[40,41,42],list_stack:[40,41],liter:[873,876],littl:1298,load:[40,41],loaded_kwarg:1155,loader:1255,local:43,local_set:[1003,1044],locat:[43,1003,1054,1211,1212],log1p:[86,401,526,660,859],log2:[86,401,526,660,859],log:[798,859,868,873,875,1003,1057,1123,1129,1135,1155,1249,1250,1251,1252],logarithm:[859,868,869,873,875,1123,1129,1135,1146],logic:[31,859,870,884,885,886,1133,1134,1255],logical_and:[360,795,1132],logical_not:[86,217,401,526,660,859],logical_or:[360,795,1132],logit:[1249,1252],logspac:[130,296,442,573,708,1003],look:[43,1298,1301],loop:[1151,1152,1153,1154],loss:[1250,1251,1252,1255,1297],loss_fn:[1255,1297],lot:1298,low:[40,41,492,1211,1213,1215],lower:[40,41,43,851,853,1003,1060,1211,1215],lower_depth:[1284,1285],lowest:[15,18,19,40,41,1199,1208,1211,1213],lstm:[1236,1246,1255,1272],lstm_updat:[43,1236],machin:[855,856,857,1123,1128,1211,1217,1255,1298,1301],made:43,mai:[859,870,881,882,1003,1006,1027,1031,1255,1298,1301],main:[851,853,873,874,1003,1046,1255],mainli:1255,maintain:[43,881,882],make:[43,492,929,1155,1255,1298],maml:[1151,1152,1153],maml_step:1151,manag:[929,1155],manhattan:[873,876],mani:[40,41,43,1003,1081,1255],manipulation_funct:[877,878],manner:[15,18,19,40,41,43,1199,1208],manual:[1199,1200,1207,1301],map:[40,41,42,929,938,1003,1054,1155,1199,1204,1205,1208,1272,1283,1297],map_cont:[40,41],map_nest_at_index:1199,map_nest_at_indic:1199,map_sequ:[40,41],mapper:[929,938,939,1155],mark:43,mask:[1236,1247,1248],master:43,match:[40,41,1003,1058],match_kwarg:1003,math:[33,491,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1155,1255],mathbb:[1123,1131],mathbf:[1123,1131],mathemat:[850,873,876],matmul:[43,296,442,573,708,1003,1301],matplotlib:1298,matric:[851,853,873,874,1236,1245],matrix:[40,41,851,853,873,874,875,1003,1005,1017,1059,1123,1124,1125,1126,1127,1128,1129,1131,1236,1245,1272,1282],matrix_norm:[40,41,170,354,485,620,785,1123],matter:1255,max:[40,41,396,855,856,857,1003,1017,1018,1029,1060,1073,1074,1155,1218,1220,1288,1290],max_batch_s:[40,41],max_chunk_s:[929,973,1155],max_depth:[40,41,929,933,936,943,951,955,961,1003,1044,1155,1199,1208],max_dev_dim_step_ratio:929,max_freq:[1003,1036],max_length:[40,41],max_node_dim_step_ratio:1155,max_norm:[40,41,1003,1017,1018],max_split_factor_step_s:[929,1155],max_trust_ratio:[1100,1107,1288,1290],maxim:[1255,1298,1301],maximis:1255,maximum:[40,41,42,708,929,951,955,961,973,1003,1008,1016,1017,1018,1036,1100,1107,1155,1199,1208,1218,1220],mayb:[15,18,19],mdi:1155,mean:[40,41,492,929,958,959,960,961,973,1003,1029,1151,1152,1153,1154,1155,1199,1203,1211,1214,1218,1221,1224,1226,1263,1297,1301],measur:[1236,1247,1272,1283],mech:1255,mechan:[1255,1301],medic:1301,member:43,memori:[929,945,968,973,975,978,1155,1236,1246,1255],mention:43,merg:43,merge_with_upstream:43,meshgrid:[296,442,708,1003],messag:[1299,1300],meta:[35,1152,1153,1154,1255],method:[40,41,42,43,492,1003,1010,1021,1061,1073,1074,1100,1107,1108,1155,1199,1200,1207,1208,1255,1272,1283,1284,1285,1298],might:[1003,1027,1301],min:[40,41,396,855,856,857,873,876,1003,1029,1062,1073,1074,1083,1123,1128,1155,1218,1222],min_bas:[1003,1084],min_denomin:[1003,1083],min_dev_dim_s:929,min_node_dim_s:1155,min_sf_tune_step:[929,1155],min_unit_dev_tune_step:929,min_unit_node_tune_step:1155,mind:1255,mini:[1253,1254,1286,1287],minimum:[40,41,708,929,979,983,1003,1006,1009,1010,1016,1041,1042,1075,1076,1083,1084,1155,1218,1222],miss:[1288,1292],ml_framework:[1003,1006,1123,1128],mod:[1003,1035],mod_depth:[1284,1285],mod_height:[1284,1285],mod_with_top_mod_key_chain:[1284,1285],mode:[40,41,485,487,927,928,929,958,959,960,961,973,1123,1128,1130,1155,1298],model:[1255,1297],modul:[40,41,42,59,1003,1063,1155,1255,1256,1258,1259,1260,1261,1262,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1286,1287,1294,1295,1301],moment:[1100,1102,1103,1107,1288,1289,1290],more:[43,877,878,1003,1085,1155,1255,1298,1301],more_util_node_str:1155,most:[40,41,43,1123,1128,1255,1301],move:[40,41,43,929,974,1155],much:[43,1255,1301],multi:[492,1003,1063,1236,1247,1272,1283],multi_head_attent:1236,multi_index_nest:1199,multi_map:[40,41],multi_nod:1155,multidev:[929,940,941,942,961],multidevcontain:[40,41],multidevic:[929,938],multidevit:[929,932,935,938,939,943],multidevitem:[929,931,934],multidevnest:[929,933,936],multiheadattent:[1255,1272],multinod:[1155,1159],multinodecontain:1155,multinodeit:1155,multinodeitem:1155,multinodenest:1155,multinomi:[176,364,492,629,813,1211],multipl:[40,41,884,885,886,1003,1058,1081,1123,1125,1218,1220,1221,1222,1223,1224,1226,1253,1254,1272,1282,1298],multipli:[40,41,1003,1024,1218,1223],multiprocess:[40,41,42,442,708,929,938,1003,1155],must:[40,41,42,43,851,852,853,854,859,860,861,862,863,864,865,867,869,870,871,873,874,876,877,878,881,882,884,885,886,888,907,913,929,958,959,960,961,973,1003,1006,1019,1021,1023,1031,1060,1062,1074,1085,1135,1140,1143,1155,1211,1216,1288,1292],mutabl:[1199,1201,1208],mutlidevic:[929,938],mutlinod:1155,mw_tm1:[1100,1103,1107],mx_concat:1255,mxn:[851,853,873,874],mxnet:[43,1255,1301],my_func:43,mymodel:1255,name:[43,927,928,1297],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1298],nan:[40,41,43,850,859,860,862,863,864,865,866,869,871,884,885,886,1003,1045,1096],nativ:[15,17,18,19,40,41,43,929,945,947,956,957,968,975,978,979,984,991,992,1155,1255,1256,1261,1262],native_modul:[1261,1262],native_module_class:[1261,1262],nativearrai:[15,18,19,43,851,853,855,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,873,876,877,878,881,882,884,885,886,888,907,913,929,947,973,974,979,983,989,994,995,1003,1004,1005,1006,1008,1009,1010,1011,1012,1014,1016,1017,1018,1019,1020,1022,1023,1024,1025,1028,1029,1030,1031,1033,1034,1035,1036,1038,1039,1043,1045,1046,1047,1054,1055,1056,1057,1059,1060,1061,1062,1065,1066,1067,1070,1071,1072,1073,1074,1079,1081,1082,1085,1087,1088,1090,1091,1092,1093,1095,1096,1097,1098,1099,1155,1199,1201,1208],natur:[859,868,873,875,1123,1129,1135,1146,1301],ncdhw:[1236,1241,1242,1272,1277,1278],nchw:[1236,1239,1240,1243,1272,1275,1276,1279],ncw:[1236,1237,1238,1272,1273,1274],ndarrai:[43,392,393,394,395,396,398,399,492,1003,1091],ndhwc:[1236,1241,1242,1272,1277,1278],nearest:[1003,1072],need:[43,1003,1017,1018,1236,1238,1240,1242,1255,1272,1274,1276,1278,1301],neg:[40,41,859,865,873,876,877,878,884,885,886,1218,1223,1225,1228,1230],negative_slop:1263,neither:1155,nest:[15,16,17,18,19,40,41,42,929,951,955,961,1003,1010,1090,1151,1152,1153,1155,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1284,1285,1288,1289,1290,1291,1292,1293],nested_indices_wher:1199,nested_map:[1155,1199],network:[1236,1245,1255,1256,1258,1272,1284,1285,1301],neural:[1236,1255,1258,1272,1297],never:43,new_node_percent_mem:1155,new_node_util:1155,new_node_utils_kei:1155,new_std:[1253,1254,1286,1287],newli:[43,927,928,1003,1014,1015],newlin:[40,41,42],newshap:[1003,1014,1071],next:[855,856,1155,1284,1285,1288,1289,1290,1291,1292,1293],nhwc:[1236,1239,1240,1243,1272,1275,1276,1279],node:[40,41,1199,1200,1207],node_clon:1155,node_dist:1155,node_dist_arrai:1155,node_dist_it:1155,node_in:1155,node_mapp:1155,node_str:1155,node_to_str:1155,node_util:1155,nodedistit:1155,nodedistitem:1155,nodedistnest:1155,nodemanag:[1155,1166],nodemapp:1155,nodemappermultiproc:1155,noinspect:[43,930,980,981,982,1101,1155],non:[40,41,859,870,873,876,884,885,886,927,928,979,993,1284,1285,1288,1292,1298],none:[40,41,42,43,59,61,64,392,393,395,440,442,443,446,448,455,456,457,458,465,466,467,468,469,470,471,472,473,475,485,486,492,493,851,852,854,855,856,857,873,876,877,878,884,885,886,927,928,929,938,939,945,946,971,972,973,974,979,986,987,988,1003,1006,1010,1026,1027,1032,1037,1038,1039,1044,1046,1048,1049,1050,1051,1052,1056,1057,1063,1065,1066,1067,1070,1073,1074,1075,1076,1081,1082,1083,1084,1093,1094,1099,1100,1103,1105,1107,1108,1109,1115,1116,1120,1123,1126,1128,1151,1152,1153,1154,1155,1199,1200,1203,1207,1208,1211,1212,1213,1214,1215,1218,1220,1221,1222,1223,1224,1225,1226,1236,1238,1240,1242,1245,1246,1247,1248,1253,1254,1261,1262,1263,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295],norm:[40,41,873,876,1003,1017,1018,1123,1126,1254,1255,1287,1288,1290],normal:[1211,1214,1253,1254,1286,1287],normalized_idx:[1253,1254],normalized_shap:[1286,1287],notat:[40,41,1218,1219],note:[43,1123,1128],noth:[40,41,1298],notimplementederror:1155,now:[40,41,43,929,974,1003,1004,1155,1255,1272,1283,1284,1285,1297,1298,1301],np_concat:1255,np_finfo:396,ns_tune_step:1155,num:[442,465,466,1003,1056,1057],num_arrai:[40,41],num_arrays_in_memori:1003,num_arrays_on_dev:929,num_band:[1003,1036],num_channel:[1272,1279],num_chunk:1155,num_chunks_floor:1155,num_class:[1211,1212],num_cpu_cor:929,num_gpu:[123,440,929,1155],num_head:[1236,1247,1272,1283],num_kei:[1236,1247,1248],num_lay:[1272,1281],num_or_size_split:[40,41,442,471,1003,1081],num_output:1155,num_queri:[1236,1247,1248],num_sampl:[442,464,492,493,1003,1055,1116,1117,1211,1212],num_task:[1151,1152,1153,1154],number:[40,41,42,850,855,856,857,859,862,884,885,886,927,928,929,965,966,967,979,990,994,995,1003,1006,1016,1020,1033,1036,1043,1046,1055,1056,1057,1060,1064,1070,1081,1088,1092,1096,1098,1123,1130,1151,1152,1153,1154,1155,1211,1212,1216,1218,1220,1221,1222,1224,1226,1236,1247,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1298,1301],numer:[43,859,862,865,866,867,870,888,907,913,1003,1041,1042,1075,1076,1083,1084,1135,1143,1263],numhead:[1236,1247],numpi:[40,41,43,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,1003,1091,1123,1128,1130,1218,1219,1255,1297,1298,1301],nwc:[1236,1237,1238,1272,1273,1274],obj:[40,41],object:[40,41,42,59,396,855,856,929,979,983,1003,1006,1010,1100,1199,1202,1204,1205,1206,1209,1210,1211,1217,1263,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1284,1285],object_in:[442,446,1003,1010],observ:1155,obvious:43,occupi:[855,856,857,1003,1073,1074],off:[873,874,1003,1006],offer:1255,offset:[873,874,1253,1254],often:1298,old:[40,41],on_init:[1272,1283,1284,1285],onc:[43,929,973,1155,1211,1212,1255],one:[40,41,43,873,876,877,878,929,958,959,960,961,973,979,985,1003,1046,1058,1065,1073,1074,1082,1085,1123,1126,1155,1218,1219,1220,1221,1222,1223,1224,1225,1226,1255,1298,1301],one_hot:[130,442,573,708,1003],onearrai:[1003,1033],ones:[40,41,77,208,392,517,651,851,1003,1046,1065,1067,1255],ones_lik:[130,296,442,573,708,1003],ongo:43,onli:[40,41,43,492,859,870,877,878,929,1123,1128,1155,1199,1200,1201,1207,1288,1289,1290,1291,1292,1293,1297,1298],onlin:[43,1255],onto:[929,958,959,974,1155,1199,1203,1208],oom:[929,1155],open:[1003,1006,1211,1215,1255,1301],opencv:1298,oper:[40,41,1003,1013,1028,1029,1030,1056,1057,1086,1100,1103,1105,1107,1108,1109,1132,1133,1134,1236,1237,1238,1239,1240,1241,1242,1243,1245,1255,1256],operand:[40,41,859,860,862,863,864,869,871,1218,1219],oppos:[1003,1036],optim:[929,1100,1103,1105,1107,1108,1109,1151,1152,1153,1154,1155,1255,1289,1290,1291,1293,1297,1301],optimizer_upd:1100,option:[15,18,19,40,41,42,43,392,393,395,851,852,854,873,876,877,878,884,885,886,927,928,929,938,939,947,951,952,953,954,955,958,959,960,961,968,971,972,973,974,978,979,984,989,993,1002,1003,1005,1006,1008,1009,1010,1017,1018,1019,1024,1026,1027,1036,1037,1038,1039,1043,1045,1046,1053,1055,1056,1057,1058,1061,1063,1065,1066,1067,1070,1073,1074,1077,1079,1081,1082,1083,1084,1085,1093,1095,1096,1099,1100,1103,1105,1106,1107,1108,1109,1111,1116,1120,1123,1126,1128,1151,1152,1153,1154,1155,1199,1200,1201,1203,1207,1208,1211,1212,1218,1220,1221,1222,1223,1224,1225,1226,1228,1229,1233,1236,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1261,1262,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1298],ord:[873,876,1123,1130],order:[40,41,42,43,873,876,877,878,881,882,1100,1103,1105,1107,1108,1109,1123,1126,1151,1152,1153,1294,1295],ordered_node_util_kei:1155,org:1301,organ:43,origin:[40,41,42,1003,1067,1071,1099,1123,1126],other:[40,41,43,888,890,891,896,898,899,903,905,906,907,908,909,911,913,914,915,916,917,918,920,921,922,924,925,926,927,928,1003,1005,1006,1046,1100,1104,1211,1215,1255,1297,1298,1301],other_i:[43,888,907,913],otherwis:[15,16,17,18,19,40,41,859,865,866,873,876,884,885,886,929,946,979,986,987,988,1003,1013,1093,1094,1097,1100,1106,1111,1115,1151,1152,1153,1155,1218,1220,1221,1222,1224,1226],our:[43,1255,1301],out:[43,492,851,852,853,854,855,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,873,874,876,877,878,881,882,884,885,886,888,907,1003,1006,1135,1139,1236,1244,1246,1255,1272,1280],out_feat_dim:[1236,1247],out_featur:[1236,1244,1245],out_i:[859,865,866],outdat:1301,outer:[1151,1152,1153,1154],outer_batch_fn:[1151,1152,1153],outer_batch_shap:[1236,1245],outer_cost_fn:[1151,1152,1153],outer_v:[1151,1152,1153],outlin:1298,output:[40,41,43,851,852,854,877,878,929,938,939,973,1003,1006,1015,1037,1046,1070,1088,1100,1104,1135,1140,1155,1211,1213,1214,1215,1236,1238,1240,1242,1244,1246,1247,1248,1255,1272,1273,1274,1275,1276,1277,1278,1280,1281,1282,1283],output_ax:[929,973,1155],output_axi:1155,output_channel:[1272,1273,1274,1275,1276,1277,1278,1281,1282],output_queu:1155,output_shap:[1236,1238,1240,1242,1272,1274,1276,1278],outsid:[1003,1016],over:[40,41,873,876,884,885,886,1123,1126,1211,1215,1218,1220,1221,1222,1224,1226,1253,1254,1286,1287],overal:1298,overflow:[1003,1006],overhead:1298,overrid:[1003,1065,1067,1099],overriden:[1288,1292],overwrit:[40,41,929,973,1155],overwrite_at_key_chain:[40,41],own:[1255,1298,1301],packag:[43,1298],pad:[1003,1020,1036,1098,1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279],pad_width:[442,1003,1020,1098],page:1255,pair:[1236,1248],parallel:[929,938,939,1155],parallelis:[929,938,939,1155],param:[40,41,42,442,456,457,929,973,1003,1004,1038,1039,1065,1066,1155,1284,1285,1297],paramet:[15,16,17,18,19,40,41,42,43,873,874,875,888,907,913,927,928,929,938,939,945,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,968,971,972,973,974,975,978,979,983,984,985,989,990,991,992,993,994,995,1002,1003,1005,1006,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1022,1023,1024,1025,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1043,1045,1046,1047,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1066,1067,1070,1071,1072,1073,1074,1075,1076,1077,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1102,1103,1104,1105,1106,1107,1108,1109,1111,1113,1114,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1261,1262,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297],parameter:[1211,1214,1215],pardo:1255,pars:[1003,1021],part:[851,853,1100,1103,1105,1107,1108,1109,1135,1139,1255,1284,1285,1298],partial:[40,41,43,1284,1285],particl:1301,particular:[43,1301],pass:[40,41,42,43,929,938,973,979,984,1003,1015,1100,1114,1151,1152,1153,1155,1261,1262,1284,1285,1288,1292,1294,1295],pattern:[40,41,1003,1028,1029,1030],peopl:43,per:[929,1155,1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279],percent_used_mem_on_dev:929,percent_used_mem_on_nod:1155,percentag:[929,968,1155],perf_count:1155,perform:[40,41,43,884,885,886,929,1003,1008,1009,1024,1028,1029,1030,1049,1050,1051,1055,1056,1057,1100,1103,1105,1107,1108,1109,1116,1117,1151,1152,1153,1154,1155,1199,1204,1205,1218,1220,1221,1222,1223,1224,1225,1226,1228,1233,1236,1244,1246],period:43,permissable_step:1155,permit:43,permut:[492,1003,1087,1093],perpendicular:[1003,1023],person:[43,1255],physci:1301,pickl:[40,41,1155],pickle_filepath:[40,41],pinv:[354,785,1123],pip:1255,pipelin:1297,pkk:1301,pkkm1:1301,pkm1km1:1301,place:[40,41,43,851,852,854,929,974,1003,1033,1037,1049,1050,1051,1155,1288,1289,1290,1291,1292,1293],placehold:[43,1199,1208],pleas:[43,492,1123,1128],point:[43,850,851,852,854,855,856,859,860,862,863,864,869,871,873,876,979,994,1003,1006,1135,1143],popul:[40,41,1211,1212],popular:1301,population_s:[492,493,1211,1212],portabl:[1255,1256],posit:[15,16,17,855,856,859,865,884,885,886,929,951,955,961,1003,1004,1006,1033,1036,1155,1211,1216,1261,1262],possibi:[40,41],possibl:[43,1003,1058,1090,1116,1121,1301],post:[1253,1254],post_shap:[40,41],power:[43,888,913,919,1003,1041,1075,1084,1263],practic:1255,pre:[929,1155,1255],pre_shap:[40,41],precis:[855,856,859,871],pred:[1249,1250,1251,1252],predict:[1249,1250,1251,1252,1301],preprint:1255,present:[40,41],preserv:[40,41,42,877,878,1100,1111],preserve_typ:[40,41,476,479,1100,1111],press:1255,prevent:[43,1100,1102,1103,1107,1155,1288,1289,1290],prevet:43,previou:[1100,1103,1107],previous:[1003,1015],prime:1255,print:[40,41,42,929,969,1003,1068,1255,1297],print_all_arrays_in_memori:1003,print_all_arrays_on_dev:929,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1288,1292],prob:[492,493,1211,1212,1236,1244,1272,1280],probabl:[1211,1212,1236,1244,1272,1280],problem:[43,1301],process:[43,929,938,939,968,978,1003,1063,1155],process_specif:[929,968,978,1155],prod:[40,41,1003,1029],produc:[929,938,939,1155],product:[40,41,1003,1023,1024,1059,1218,1219,1236,1247,1248,1272,1283],profil:[123,290,440,566,700,929,1155],progress:43,project:[1255,1297,1298,1301],promot:[43,859,860,861,863,864,869,871,873,876,888,913,1135,1143],prompt:1255,properli:43,properti:[40,41,396,929,941,1155,1284,1285,1288,1289,1290,1291,1293],provid:[40,41,43,877,878,884,885,886,927,928,929,946,979,986,987,988,993,1002,1003,1027,1065,1067,1074,1099,1100,1103,1105,1107,1108,1109,1115,1155,1255,1272,1281,1288,1289,1290,1291,1292,1293,1298],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1123,1127],pull:[1255,1256],pure:[40,41,1255,1301],purpos:[43,1301],put:1155,pybroadexcept:1155,pyprotectedmemb:1155,pyshadowingbuiltin:43,pyshadowingnam:[930,980,981,982,1101,1155],python:[40,41,929,968,978,1003,1006,1155,1255],pytorch:[1100,1103,1105,1107,1108,1109,1123,1128,1255,1288,1289,1290,1291,1292,1293,1297,1298,1301],pyunresolvedrefer:1155,quadrant:[1135,1140],qualiti:43,queri:[40,41,888,902,923,929,962,972,1155,1236,1247,1248,1272,1283],query_dim:[1272,1283],query_kei:[40,41],queue:[40,41,42,929,938,939,1003,1069,1077,1155],queue_class:[929,938,939,1155],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1003,1155],quick:[492,1255],quickli:[43,1297],radian:[859,863,1135,1136,1138,1140,1147,1149],rai:[1135,1136],rais:[40,41,43,884,885,886,888,913,1003,1013,1041,1075,1082,1084,1094,1155,1284,1285,1288,1292],ram:[929,968,975,978,1155],randint:[176,364,492,629,813,1211],random:[37,40,41,493,1212,1213,1214,1215,1216,1217,1255],random_crop:1116,random_norm:[176,364,492,629,813,1211],random_uniform:[176,364,492,629,813,1211],randomli:[492,1116,1120,1236,1244,1272,1280],rang:[492,1003,1006,1056,1057,1135,1140,1155,1255,1297,1301],rank:[873,876,884,885,886,1003,1020,1095,1098],rate:[1100,1103,1105,1107,1108,1109,1151,1152,1153,1154,1272,1283,1288,1289,1290,1291,1292,1293],rather:[40,41,43,929,973,1003,1006,1053,1100,1106,1155],ratio:[929,1100,1107,1116,1121,1155,1288,1290],raw:[40,41,1123,1128],raw_delta:1155,reach:[43,929,951,955,961,1155,1199,1208],read:[40,41],readi:[1155,1297],real:[1135,1136,1139],realiti:1298,rearrang:[40,41,1003,1028,1030],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1151,1153],receiv:[43,929,938,939,1003,1007,1058,1155,1272,1282],receivess:[929,1155],receivng:[1151,1154],recev:[1151,1152,1153],recognit:1301,recommend:[859,870,1255],rectifi:[1228,1230,1231],recurr:[1236,1246],recurrent_bia:[1236,1246],recurrent_kernel:[1236,1246],recurs:[40,41,1199,1200,1201,1207,1208],redefin:43,reduc:[40,41,884,885,886,929,973,1003,1029,1123,1128,1155,1218,1220,1221,1222,1223,1224,1225,1226],reduce_max:[40,41,183,369,494,634,820,1218],reduce_mean:[40,41,183,369,494,634,820,1218,1255,1297],reduce_min:[40,41,183,369,494,634,820,1218],reduce_prod:[40,41,183,369,494,634,820,1218],reduce_std:[40,41,369,1218],reduce_sum:[40,41,183,369,494,634,820,1155,1218],reduce_var:[40,41,183,369,494,634,820,1218],reduct:[39,40,41,442,469,470,884,885,886,1003,1029,1073,1074,1219,1220,1221,1222,1223,1224,1225,1226,1255],refactor:43,refer:[43,859,868,884,885,886,1100,1102,1103,1123,1131,1272,1282,1301],reflect:43,reflected_oper:[0,13,14],regard:[929,1155],regardless:[40,41,927,928],register_paramet:1297,reimplement:1301,rel:[873,874,877,878,881,882,1100,1103,1105,1107,1108,1109],rel_slice_obj:1155,relat:43,relev:[1288,1289,1290,1291,1292,1293],relu:[829,1228,1229,1230,1255,1297],remain:[43,1003,1071,1199,1203],remaind:[40,41,1003,1035,1081],remov:[40,41,43,873,874,1003,1082,1151,1152,1153],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,877,878],rep:[1003,1088],repeat:[40,41,43,296,708,1003,1030,1088,1155,1298],repeated_config_check:[929,1155],repeatedli:[1199,1206],repetit:[40,41,1003,1070,1088],replac:[40,41,43,492,493,1003,1016,1073,1074,1211,1212],repo:[43,1255],repositori:43,repres:[43,859,860,864,979,985,990,1236,1245],represent:[40,41,42,43,850,855,856,857,859,861,929,956,957,979,985,991,992,1003,1080,1090,1155],reptil:[1151,1154],reptile_step:1151,request:[1255,1256],requir:[43,859,871,927,928,979,983,1003,1006,1010,1261,1262],resampl:[1003,1055],reserv:43,reshap:[40,41,43,492,708,1003],reshape_lik:[40,41],respect:[859,861,867,888,907,1003,1031,1100,1102,1103,1104,1105,1107,1108,1109,1123,1128,1135,1143,1151,1152,1153,1154],respond:43,respons:[43,1155],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,859,860,861,862,863,864,865,866,867,868,869,870,871,873,874,876,884,885,886,888,907,913,929,938,1003,1006,1031,1073,1074,1085,1123,1126,1132,1133,1134,1135,1143,1155,1218,1220,1221,1222,1223,1224,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1255],ret:1155,ret_dict:1155,ret_fn:[929,938,939,1155],retain:[1100,1104],retain_grad:[476,477,1100,1104],retreiv:1155,retrn:[1003,1080],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1151,1152,1153,1154],return_sequ:[1272,1281],return_st:[1272,1281],rev:[1003,1027],revers:[40,41,877,878,1003,1027,1093],review:43,right:[40,41,43],rk_e:1301,robot:1255,ronald:1255,root:[43,859,871],round:[296,442,708,859,862,871,1003,1006,1155],row:[1003,1046,1211,1212],rule:[43,888,913,1003,1006,1135,1143],run:[43,929,938,1100,1102,1103,1107,1151,1152,1153,1154,1155,1255,1256,1272,1283,1284,1285],safe:[929,938,1155],safety_factor:[929,1155],same:[15,16,17,40,41,43,851,853,859,862,873,874,877,878,881,882,929,938,939,973,974,979,983,1003,1004,1019,1034,1035,1038,1039,1065,1067,1072,1073,1074,1085,1099,1100,1106,1111,1123,1130,1135,1139,1151,1152,1153,1155,1218,1219,1236,1237,1238,1239,1240,1241,1242,1243,1255,1272,1273,1274,1275,1276,1277,1278,1279,1297,1301],same_arrai:[40,41],sampl:[1003,1055,1116,1117,1211,1212,1214,1215,1236,1244,1255,1272,1280],satisfi:[1003,1010,1123,1125,1131],save:[40,41,1003,1078,1089,1116,1118,1284,1285],save_dir:[440,441,929,944,1155],save_weight:[1284,1285],scalar:[873,876,1003,1016,1065,1092,1096],scale:[929,971,972,1100,1108,1155,1236,1244,1247,1248,1253,1254,1272,1280,1283,1288,1291],scaled_dot_product_attent:1236,scatter:[1003,1065,1073,1074],scatter_flat:[130,296,442,573,708,1003],scatter_nd:[130,296,442,573,708,1003],scene:[1100,1103,1105,1107,1108,1109],schemat:1255,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,859,861,867,873,874,929,960,1003,1011,1023,1031,1069,1077,1087,1100,1102,1103,1107,1151,1153,1155,1288,1289,1290],secondli:1301,sector:[859,860],see:[43,59,396,440,441,492,859,861,867,873,876,884,885,886,888,907,913,929,941,942,943,944,979,1003,1006,1056,1057,1100,1135,1143,1255,1263,1265,1266,1268,1269,1271],seed:[40,41,176,492,813,1211],seed_valu:[40,41,492,1211,1216],seem:1255,seen_set:[1003,1044],select:[1003,1010,1082,1298,1301],self:[40,41,43,59,396,440,441,888,907,913,929,941,942,943,944,979,1100,1155,1255,1263,1265,1266,1268,1269,1271,1288,1292,1297,1301],self_i:[888,907],sent:1155,seper:[43,1003,1036],seq:[40,41,42,1218,1219,1284,1285],sequenc:[15,16,17,40,41,42,43,492,927,928,929,938,939,948,949,950,951,952,953,954,955,958,959,973,979,983,1003,1006,1010,1012,1014,1019,1020,1046,1058,1061,1066,1070,1071,1074,1081,1085,1088,1093,1098,1100,1104,1116,1120,1121,1123,1126,1155,1199,1210,1211,1213,1215,1218,1220,1221,1222,1223,1224,1225,1226,1236,1237,1238,1239,1240,1241,1242,1243,1253,1254,1261,1262,1272,1273,1274,1275,1276,1277,1278,1279,1281,1284,1285,1286,1287,1288,1292,1294,1295],sequenti:1255,seri:43,set:[15,18,19,40,41,881,882,929,958,959,971,972,973,1003,1005,1026,1046,1075,1076,1077,1078,1100,1103,1105,1106,1107,1108,1109,1123,1126,1155,1199,1200,1207,1209,1210,1211,1212,1216,1218,1220,1221,1222,1223,1224,1225,1226,1255,1272,1281,1288,1289,1290,1291,1292,1293,1298,1301],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:929,set_default_dtyp:979,set_default_float_dtyp:979,set_default_int_dtyp:979,set_default_nod:1155,set_exception_debug_mod:44,set_framework:[40,41,43,59,1155,1255,1297,1298,1301],set_ivy_backend:[40,41],set_min_bas:1003,set_min_denomin:1003,set_nest_at_index:1199,set_nest_at_indic:1199,set_queue_timeout:1003,set_split_factor:[929,1155],set_stat:[1288,1289,1290,1291,1292,1293],set_tmp_dir:1003,set_with_grad:1100,setter:1155,sever:1301,sgd:[1255,1288],shape0:1155,shape:[40,41,43,392,393,395,442,455,470,492,708,851,852,853,854,873,874,877,878,881,882,929,941,979,983,1003,1004,1014,1019,1020,1033,1034,1035,1037,1039,1043,1046,1065,1066,1067,1070,1071,1072,1073,1074,1080,1082,1085,1098,1099,1116,1120,1123,1125,1128,1135,1139,1140,1155,1211,1213,1214,1215,1218,1219,1236,1238,1240,1242,1272,1274,1275,1276,1277,1278,1279,1286,1287],shape_slic:[40,41],shape_to_tupl:1003,share:[40,41,1255,1298],shift:1155,should:[40,41,42,43,492,851,853,859,860,861,862,863,864,865,866,867,869,870,871,873,874,876,888,907,913,927,928,929,1003,1014,1015,1021,1065,1071,1100,1103,1105,1107,1108,1109,1135,1143,1155,1218,1219,1255],show:[40,41,1255,1301],show_mod_in_top_mod:[1284,1285],show_structur:[1284,1285],show_sub_contain:[40,41],show_v:[1284,1285],show_v_in_top_v:[1284,1285],shown:[40,41],shp:1155,shuffl:[40,41,176,492,813,1211],shuffle_h5_fil:[40,41],side:43,sigmoid:[829,1228,1255,1297],sign:[873,875,1123,1129],signatur:[43,59,396,440,441,442,476,481,485,489,490,492,929,941,942,943,944,979,1100,1263,1265,1266,1268,1269,1271],signific:1301,similar:[43,1236,1247,1272,1283],similarli:[1123,1128],simpl:[43,1003,1032,1255,1298,1301],simpler:43,simplest:1298,simpli:[40,41,43,1255,1298,1301],simultan:1255,sin:[798,1003,1036,1135,1149,1298],sinco:1298,sine:[859,860,1135,1138,1147,1148],singl:[40,41,927,928,929,938,939,958,959,960,961,1003,1082,1092,1096,1116,1121,1155,1211,1214,1215,1218,1220,1221,1222,1223,1224,1225,1226,1255,1298,1301],singleton:[873,876,884,885,886],singular:[1123,1130],sinh:[798,1135],siren:[1255,1263],situat:43,size:[40,41,42,442,469,873,874,884,885,886,929,952,953,954,955,971,972,973,1003,1006,1014,1056,1057,1073,1081,1116,1120,1123,1126,1130,1155,1211,1212,1214,1215,1218,1220,1221,1222,1223,1224,1225,1226,1272,1273,1274],size_ordered_arrai:[40,41],skew:[1123,1131],skinv:1301,skip:[40,41],slice:[40,41,1003,1038,1039,1155,1199,1206],slice_kei:[40,41],slice_obj:[40,41,1155],slice_via_kei:[40,41],slide:[1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279],slodget:[873,1123],slogdet:[226,415,540,620,674,785,873,875,1123,1129],slope:[1228,1230],small:[1249,1250,1251,1252,1253,1254,1255,1286,1287,1298],smaller:[1003,1016],smallest:[40,41,855,856,857,859,862,1003,1009],smallest_norm:[396,855,856],softmax:[192,503,829,1228,1236,1247,1248],softplu:[829,1228],solut:43,solv:1301,some:[40,41,43,1003,1006,1100,1102,1103,1105,1107,1108,1109,1114,1236,1244,1255,1272,1280,1298,1301],some_backend:43,some_namespac:43,someth:[43,1301],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,882,1123,1130,1155],sort_by_kei:[40,41],sorting_funct:[881,882],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,851,852,853,854,855,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,873,874,875,876,877,878,881,882,884,885,886,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,931,932,933,934,935,936,938,939,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1258,1259,1260,1261,1262,1263,1265,1266,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1299,1300,1301],space:[1003,1006,1036,1056,1057],spars:[1249,1252],sparse_cross_entropi:1249,spawn:[1003,1063],special:[43,859,860,862,863,864,869,871],specif:[40,41,43,859,870,929,971,1003,1021,1028,1029,1030,1063,1151,1152,1153,1154,1155,1211,1217,1255,1284,1285,1297,1298],specifc:[1211,1212],specifi:[40,41,43,851,852,853,854,873,874,876,877,878,881,882,884,885,886,929,948,949,950,951,952,953,954,955,958,959,963,965,969,972,973,974,979,983,985,1003,1006,1008,1009,1010,1016,1019,1020,1037,1038,1039,1045,1056,1057,1085,1095,1098,1123,1126,1155,1199,1204,1205,1209,1210,1218,1219,1220,1221,1222,1223,1224,1225,1226],sphinx:43,split:[40,41,130,296,442,573,708,929,938,952,953,954,955,971,972,973,1003,1058,1155],split_arg:1155,split_factor:[929,938,1155],split_func_cal:[929,1155],split_siz:1155,spread:[929,961,1155],sqrt:[86,217,401,526,660,859,873,876],squar:[859,871,873,875,1003,1046,1123,1125,1129],squeez:[130,296,442,573,708,1003],stabil:[881,882,1003,1083,1084],stabl:[881,882,1003,1041,1042,1075,1076,1083,1084],stable_divid:1003,stable_pow:1003,stack:[40,41,296,708,851,853,873,874,1003,1116,1121,1199,1200,1207,1272,1281],stack_imag:[166,350,481,616,781,1116],stacked_dim_s:1155,stage:43,standard:[40,41,855,856,1211,1214,1218,1224,1253,1254,1255,1256,1286,1287],start:[40,41,43,440,441,442,443,465,466,492,929,944,1003,1006,1056,1057,1155,1255,1298],starting_index:[40,41],starting_split_factor:[929,1155],state:[1155,1236,1246,1255,1258,1259,1260,1261,1262,1263,1265,1266,1268,1269,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297],statement:1298,static_argnam:[442,448,927,928],static_argnum:[442,448,927,928],std:[492,1211,1214],step:[40,41,442,443,929,1003,1006,1056,1057,1100,1102,1103,1105,1107,1108,1109,1151,1152,1153,1154,1155,1255,1288,1289,1290,1291,1292,1293,1297,1301],stephen:1255,stick:1255,still:[40,41,43],stochast:[1288,1293],stop:[40,41,440,441,442,443,465,466,929,944,973,1003,1006,1056,1057,1100,1103,1105,1107,1108,1109,1111,1151,1152,1153,1154,1155,1288,1289,1290,1291,1292,1293],stop_gradi:[40,41,345,476,611,775,929,973,1100,1103,1105,1107,1108,1109,1151,1152,1153,1154,1155,1288,1289,1290,1291,1292,1293],stopiter:1155,store:[40,41,1003,1036,1081,1100,1114,1284,1285],store_var:[1284,1285],str:[15,16,17,40,41,42,43,392,393,395,396,398,399,855,856,857,927,928,929,938,939,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,973,979,984,985,990,991,992,993,994,995,1002,1003,1010,1026,1028,1029,1030,1061,1063,1066,1073,1074,1123,1126,1128,1151,1152,1153,1154,1155,1199,1203,1218,1219,1261,1262,1272,1283,1284,1285],str_to_nod:1155,straight:1298,strength:[1255,1301],stride:[1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279],string:[40,41,43,929,945,947,956,957,962,968,974,975,978,979,983,989,991,992,993,1002,1003,1006,1010,1026,1046,1066,1067,1099,1155,1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279,1284,1285],structur:[40,41,42,43,1003,1021],structural_diff:[40,41],style:43,sub:[40,41,43,873,874,929,952,953,958,959,960,961,1003,1081,1151,1152,1153,1154,1155],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1155,sub_mod:[1284,1285],sub_modul:[1294,1295],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1255,1256,1286,1287,1294,1295],subsequ:43,subset:43,substr:[40,41],suffici:[1123,1128],suggest:1255,suitabl:[1116,1121],sum:[40,41,442,469,470,873,876,929,958,959,960,961,973,1003,1025,1029,1073,1074,1155,1218,1219,1225],summat:[40,41,1218,1219],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,419,421,425,428,429,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,483,484,486,487,488,491,493,495,496,497,498,499,500,501,504,505,507,508,509,510,511,512,513,518,519,520,522,523,524,527,528,529,530,531,532,533,534,535,536,537,538,541,542,543,544,546,550,553,554,562,567,568,569,570,571,572,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,612,613,614,615,617,618,619,621,622,623,624,625,626,630,631,632,633,635,636,637,638,639,640,641,645,646,647,652,653,654,656,657,658,661,662,663,664,665,666,667,668,669,670,671,672,675,676,677,678,680,684,687,688,696,701,702,703,704,705,706,707,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,776,777,778,779,780,782,783,784,786,787,788,789,790,791,792,793,794,796,797,799,800,801,802,803,804,805,806,807,808,809,810,811,812,814,815,816,817,818,819,821,822,823,824,825,826,827,830,831,832,833,834,835,836,838,839,841,842,843,844,845,846,847,852,853,854,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,873,874,875,876,878,882,885,886,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,928,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1152,1153,1154,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1250,1251,1252,1254,1255,1259,1260,1262,1264,1265,1266,1267,1268,1269,1270,1271,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1285,1287,1288,1289,1290,1291,1292,1293,1295,1296,1297,1298,1300,1301],supports_inplac:1003,suppos:1301,sure:43,svd:[354,620,785,1123],swap:[40,41,1003,1087],swapax:[40,41,573,708,1003,1301],symmetr:[1123,1131],syntax:[440,442,476,481,485,489,490,492],tab:1255,take:[43,1003,1055],taken:[43,873,874,1218,1220,1221,1222,1224,1226],tan:[798,1135,1139],tangent:[1135,1139,1140,1141,1149,1150,1228,1235],tanh:[798,829,1135,1228],target:[40,41,929,945,948,949,950,951,952,953,954,955,958,959,960,961,974,1155,1255],target_dict:[40,41],task:[43,1151,1152,1153,1154],team:[43,1301],templat:1255,temporari:[1003,1078,1089],tensor:[40,41,43,442,469,470,929,947,979,989,1003,1006,1008,1009,1014,1056,1057,1060,1062,1065,1066,1067,1071,1073,1074,1081,1099,1155,1211,1212,1213,1236,1244,1246,1255,1272,1280,1282,1288,1289,1290,1291,1292,1293,1297,1298],tensorflow:[43,1123,1128,1236,1238,1240,1242,1255,1272,1274,1276,1278,1298,1301],term:[40,41,43,1236,1246,1255,1272,1282],termcolor:[40,41,42],termin:[40,41,42,1155],test:[43,859,865,866,884,885,886,979,994,995],test_array_api:43,tf_concat:1255,than:[40,41,43,855,856,859,862,869,871,873,876,877,878,929,973,1003,1006,1016,1034,1053,1060,1082,1085,1100,1106,1155,1211,1215,1255,1298],thei:[40,41,43,1135,1140,1151,1152,1153,1211,1212,1255,1294,1295,1298],them:[1255,1301],themselv:[1199,1200],therefor:43,thi:[40,41,42,43,859,870,873,875,929,951,955,961,968,973,978,1003,1006,1036,1069,1071,1077,1100,1103,1105,1106,1107,1108,1109,1114,1123,1126,1129,1155,1199,1203,1208,1218,1220,1221,1222,1223,1224,1225,1226,1236,1245,1255,1284,1285,1288,1289,1290,1291,1292,1293,1297,1298,1301],thing:[43,1255],those:[40,41,43,1003,1016,1100,1114,1123,1130,1155],though:43,thought:43,threshold:[1003,1060,1062],through:[40,41,43],tick:43,tickbox:43,tile:[296,573,708,1003],time:[43,1003,1088,1100,1103,1107,1151,1152,1153,1154,1155,1211,1212,1236,1246,1272,1283,1284,1285,1301],timeout:[40,41,42,929,938,939,1003,1069,1077,1155],timestep:[1236,1246,1272,1281],titl:[43,1255],tmp_dir:1003,tmp_dr:[1003,1078],to_appli:[40,41],to_clon:[929,1155],to_dev:[40,41,123,290,440,566,700,929],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[929,1155],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1255],to_ivy_modul:[194,837,1255,1261],to_json:[40,41],to_kv_fn:[1236,1247],to_kv_v:[1236,1247],to_list:[40,41,442,708,1003],to_multi_dev:[40,41],to_mut:[1199,1201,1208],to_n:[15,40,41,1255],to_nod:1155,to_numpi:[40,41,442,708,1003,1255,1297],to_out_fn:[1236,1247],to_out_v:[1236,1247],to_q_fn:[1236,1247],to_q_v:[1236,1247],to_raw:[40,41],to_scalar:[442,708,1003],todo:[1155,1255,1256],togeth:[40,41,1294,1295],tool:[1255,1298],top_mod:[1284,1285],topic:1301,torch:[43,927,928,1255,1297,1298,1301],torch_concat:1255,torchfcmodel:1297,total:[40,41,42,929,975,1155],total_mem_on_dev:929,total_mem_on_nod:1155,tpu:[929,976,1155],tpu_is_avail:[440,566,700,929,1155],tpye:[979,990],trace:[40,41,1003,1053],track:[43,929,1155,1199,1208,1284,1285],track_submod_call_ord:[1284,1285],track_submod_ret:[1284,1285],trail:[1286,1287],train:[1100,1102,1103,1107,1255,1256],trainabl:[1100,1106,1255,1256,1261,1262,1284,1285,1294],trainer:1255,tran:1301,transform:[1236,1244,1245],transpos:[40,41,130,296,442,708,929,960,1003,1155,1236,1238,1240,1242,1272,1274,1276,1278],travers:[15,18,19,40,41,1199,1208],treat:[40,41,927,928],tri:[40,41],triangular:[851,853],trigonometr:[1135,1136,1139,1147],tril:[77,208,392,517,651,851],trim_kei:[40,41],trust:[1100,1107,1288,1290],truth:[859,867,888,907,1003,1031,1132,1133,1134],try_else_non:1003,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[929,1155],tune_dev_alloc:929,tune_dev_split:929,tune_node_alloc:1155,tune_node_split:1155,tune_step:[929,1155],tupl:[15,16,17,18,19,40,41,43,392,393,395,851,852,854,873,876,877,878,884,885,886,927,928,1003,1020,1036,1037,1080,1098,1155,1199,1200,1201,1202,1204,1205,1206,1207,1208,1209,1210,1211,1213,1218,1220,1221,1222,1223,1224,1225,1226],tutori:43,two:[40,41,851,853,873,874,875,1003,1006,1011,1023,1059,1087,1123,1126,1129,1130],type:[15,18,40,41,42,43,59,398,399,440,441,851,852,853,854,856,857,859,860,861,862,863,864,865,866,867,869,870,871,873,874,876,877,878,881,882,884,885,886,888,907,913,929,941,942,943,944,956,957,961,973,979,983,984,985,989,990,991,992,993,994,995,1002,1003,1004,1006,1010,1019,1021,1031,1034,1035,1037,1046,1053,1065,1066,1067,1072,1086,1096,1099,1100,1106,1111,1135,1143,1155,1255,1263,1265,1266,1268,1269,1271,1284,1285,1298],types_to_iteratively_nest:[40,41,42],uint8:[1116,1118,1122],uint8_img_to_float_img:1116,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[859,861],underwai:43,unecessari:43,unfairli:43,unif:1155,unifi:[40,41,929,958,959,960,961,973,1155,1255],uniform:[40,41,1211,1212,1214,1215,1263,1265,1266,1269,1270],uniformli:[1211,1213,1215],unify_arrai:1155,unify_it:1155,unify_nest:1155,union:[15,18,19,40,41,43,392,393,395,396,398,399,851,852,853,854,855,856,857,859,860,861,862,863,864,865,866,867,868,869,870,871,873,876,877,878,881,882,884,885,886,888,907,913,927,928,929,947,952,953,954,955,973,974,979,983,984,985,989,990,991,992,993,994,995,1002,1003,1004,1005,1006,1008,1009,1010,1011,1012,1014,1016,1017,1018,1019,1020,1022,1023,1024,1025,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1043,1045,1046,1047,1054,1055,1056,1057,1059,1060,1061,1062,1065,1066,1067,1070,1071,1072,1073,1074,1079,1080,1081,1082,1085,1087,1088,1090,1091,1092,1093,1095,1096,1097,1098,1099,1155,1199,1200,1201,1207,1208],uniqu:[929,938,939,1151,1152,1153,1154,1155,1199,1203],unique_kwarg:1155,unit:[43,929,1135,1136,1138,1155,1228,1229,1230,1231],unitari:[1123,1130],unless:[1003,1065,1067,1099],unlik:[929,1155],unnorm:[1211,1212],unpack:[1003,1095],unrol:[1236,1246],unset:1298,unset_debug_mod:44,unset_default_devic:929,unset_default_dtyp:979,unset_default_float_dtyp:979,unset_default_int_dtyp:979,unset_framework:[59,1298],unset_with_grad:1100,unstack:[40,41,130,296,442,573,708,1003],until:43,unus:[927,928],updat:[40,41,442,469,470,929,938,1003,1051,1073,1074,1100,1102,1103,1105,1107,1108,1109,1151,1152,1153,1155,1199,1204,1205,1209,1210,1236,1246,1255,1256,1261,1262,1288,1289,1290,1291,1292,1293,1298,1301],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1211,1215],upper_depth:[1284,1285],upstream:43,usabl:[1255,1301],usag:[929,973,1155],use:[40,41,42,43,492,929,938,939,964,976,1003,1070,1083,1084,1123,1128,1155,1236,1247,1253,1254,1255,1286,1287,1298,1301],used:[40,41,43,492,873,874,929,938,968,971,972,978,979,990,1003,1041,1042,1058,1067,1073,1074,1075,1076,1099,1100,1107,1108,1123,1126,1151,1152,1153,1154,1155,1199,1208,1272,1283,1288,1290,1291,1297,1298],used_dev:[929,938],used_mem_on_dev:929,used_mem_on_nod:1155,used_node_str:1155,used_node_strs_dict:1155,useful:[40,41,929,973,1155,1236,1245,1255,1298],user:[1255,1272,1283,1284,1285,1298,1301],uses:1255,using:[40,41,43,1100,1102,1103,1199,1202,1206,1218,1219,1236,1244,1248,1255,1272,1280,1297,1298,1301],util:[929,962,1155],utility_funct:[884,885,886],v_with_top_v_key_chain:[1284,1285],val:[40,41,442,460,461,462,888,923,1003,1049,1050,1051,1075,1076],valid:[884,885,886,979,984,1003,1083,1084,1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279],valid_dtyp:979,valu:[40,41,442,859,862,867,873,875,876,881,882,888,907,929,941,972,973,1003,1004,1006,1008,1009,1016,1017,1018,1020,1021,1027,1031,1036,1037,1038,1039,1054,1056,1057,1060,1062,1069,1070,1071,1072,1073,1074,1075,1076,1077,1093,1096,1097,1098,1100,1104,1107,1116,1122,1123,1129,1130,1132,1133,1134,1135,1144,1145,1146,1151,1152,1153,1155,1199,1203,1204,1205,1209,1210,1211,1214,1215,1218,1220,1222,1236,1247,1248,1253,1254,1272,1283,1286,1287,1288,1290],value_is_nan:1003,vanilla:[1151,1153],var_shap:1263,variabl:[15,16,17,18,19,40,41,345,476,611,775,1003,1013,1049,1050,1051,1052,1053,1086,1100,1103,1104,1105,1106,1107,1108,1109,1111,1114,1151,1152,1153,1154,1236,1247,1253,1254,1261,1262,1263,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295],variable_data:[476,775,1100],varianc:[40,41,1218,1226,1301],varieti:1298,variou:[43,1255],vector:[40,41,485,488,873,876,1003,1018,1023,1123,1130,1131,1236,1245,1272,1282],vector_norm:[40,41,100,226,415,540,674,873],vector_to_skew_symmetric_matrix:[170,354,485,620,785,1123],verbos:1300,veri:[43,1255],verifi:43,version:43,via:[1199,1200,1207,1298],view:[1116,1121],vision:1255,visual:1298,volum:[1236,1241],vw_tm1:[1100,1103,1107],wai:[1298,1301],wait:[40,41,42,43],want:[43,1255,1298,1301],warn:[59,66,67,68,69,70],warp:[481,482,1116,1117],watch:1297,websit:43,weight:[1100,1102,1103,1105,1107,1108,1109,1236,1245,1246,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1284,1285,1288,1290,1291],weight_initi:[1272,1273,1274,1275,1276,1277,1278,1279,1281,1282],weights_path:[1284,1285],well:[40,41,1003,1045],were:[40,41,1155],what:[43,1255],when:[40,41,42,43,929,1003,1015,1084,1097,1123,1130,1155,1255,1284,1285,1298,1301],where:[40,41,43,296,442,708,859,868,884,885,886,888,913,1003,1006,1014,1016,1020,1033,1047,1054,1065,1098,1123,1130,1199,1200,1207,1211,1212],wherea:43,wherebi:[1199,1208],whether:[15,18,19,40,41,42,859,866,884,885,886,927,928,929,947,960,964,968,973,976,978,979,989,993,994,995,1002,1003,1005,1011,1012,1024,1027,1032,1036,1043,1045,1048,1052,1053,1058,1079,1086,1095,1096,1100,1103,1104,1105,1106,1107,1108,1109,1111,1151,1152,1153,1154,1155,1199,1200,1201,1203,1207,1208,1211,1212,1228,1229,1236,1244,1255,1261,1262,1272,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293],which:[40,41,42,43,492,851,852,853,854,855,856,857,873,874,876,877,878,881,882,884,885,886,927,928,929,938,939,947,952,953,954,955,958,959,960,961,963,965,969,971,972,973,979,984,989,993,1002,1003,1006,1010,1019,1021,1023,1024,1025,1027,1037,1038,1039,1040,1046,1047,1055,1056,1057,1064,1065,1066,1067,1068,1070,1073,1074,1081,1085,1095,1097,1099,1100,1103,1104,1105,1107,1108,1109,1111,1113,1114,1116,1118,1123,1126,1135,1140,1155,1199,1203,1204,1205,1209,1210,1211,1212,1213,1214,1215,1218,1220,1221,1222,1223,1224,1225,1226,1228,1233,1236,1247,1248,1255,1261,1262,1272,1273,1274,1275,1276,1277,1278,1279,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1294,1295,1297,1298],whilst:43,whitespac:[40,41,42],who:43,whose:[43,851,853,859,860,863,864,873,874,877,878,888,913,1003,1010,1015,1218,1219,1220,1221,1222,1224,1226],why:[1255,1256],width:[1116,1121],wiki:1301,wikipedia:1301,window:[1116,1121,1236,1237,1238,1239,1240,1241,1242,1243,1272,1273,1274,1275,1276,1277,1278,1279],wise:[40,41,43,859,861,867,870,888,907,913,1003,1016,1031,1034,1035,1060,1062,1072,1100,1103,1105,1107,1109,1132,1133,1134,1135,1136,1138,1139,1140,1143,1144,1145,1146,1147,1149,1228,1229,1230,1231,1232,1233,1234,1235],wish:1298,with_bia:[1272,1282],with_cal:[1003,1027],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1100,1110],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1155,with_partial_v:[1284,1285],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,442,471,1003,1081,1155],with_to_kv_fn:[1272,1283],with_to_out_fn:[1272,1283],with_to_q_fn:[1272,1283],within:[15,18,19,43,1003,1006,1123,1130,1211,1215],without:[40,41,43,1003,1069,1071,1077,1199,1201,1298],wonder:1255,word:[15,16,17,1003,1006,1211,1215,1261,1262],work:[43,1297],worker:[929,938,939,1155],worker_class:[929,938,939,1155],worker_kwarg:1155,would:[43,1228,1233,1255,1298,1301],wrap:[15,40,41,42,43,440,442,476,481,485,489,490,492,1003,1015,1100,1114,1255],wrapper:43,write:[40,41,43,1255,1256,1301],written:[43,1255,1301],ws_new:[1100,1103,1105,1107,1108,1109],x1_i:[859,861,867,1003,1031,1135,1143],x2_i:[859,861,867,1003,1031,1135,1143],x_feat_dim:[1236,1247],x_i:[859,860,862,863,864,865,866,869,870,871],x_in:[1255,1297],x_inv:[1123,1125],x_max:[442,1003,1016],x_min:[442,1003,1016],x_sub:1155,xkk:1301,xkkm1:1301,xkm1km1:1301,xs0:1155,xs_t:1155,year:[1255,1301],yet:[1199,1208,1301],yield:[1003,1097],you:[43,1255,1297,1298,1301],your:[1255,1256,1297,1298,1301],your_awesome_project:1298,yourself:[43,1255],yourslef:43,youtub:43,zero:[40,41,77,208,392,517,651,851,853,859,870,873,876,884,885,886,1003,1020,1065,1067,1073,1074,1098,1099,1100,1102,1103,1107,1108,1236,1244,1255,1263,1272,1273,1274,1275,1276,1277,1278,1279,1280,1282,1288,1289,1290,1291],zero_pad:[296,442,573,708,1003],zeros_lik:[130,296,442,573,708,1003],zip:1155,zk_e:1301},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","det","matrix_norm","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","det","inv","matrix_norm","pinv","qr","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","slodget","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","slodget","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1027,"function":[77,81,86,99,103,105,106,107,109,110,208,212,217,225,231,233,234,235,237,238,392,396,401,414,420,422,423,424,426,427,517,521,526,539,545,547,548,549,551,552,651,655,660,673,679,681,682,683,685,686,851,855,859,872,877,879,880,881,883,884],Ones:1268,Using:1298,abs:[297,574,709,1004],aco:[799,1136],acosh:[800,1137],activ:[192,379,503,643,829,1228,1258],adam:1289,adam_step:1102,adam_upd:1103,algebra:[100,170,226,354,415,485,540,620,674,785,873],all:[111,239,428,553,687,885],all_equ:1005,all_nested_indic:1200,ani:[112,240,429,554,688,886],api:[0,43,75,114,206,242,390,431,515,556,649,690,849],arang:[131,298,443,575,710,1006],arg_nam:1007,argmax:[132,444,576,711,1008],argmin:[133,445,577,712,1009],args_to_ivi:16,args_to_n:17,argsort:[108,236,425,550,684,882],arithmet:[1,115,243,432,557,691],arrai:[0,3,43,75,113,114,116,134,206,241,242,244,251,299,390,430,431,433,446,515,555,556,558,578,649,689,690,692,713,849,888,1010],array_equ:[300,714,1011],arrays_equ:1012,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[801,1138],asinh:[87,402,527,661,860],assert_supports_inplac:1013,atan2:[803,1140],atan:[802,1139],atanh:[804,1141],attribut:[5,117,245,434,559,693],backend:[43,73],bilinear_resampl:[167,351,482,617,782,1117],binary_cross_entropi:1250,bitwis:[7,118,246,435,560,694],bitwise_and:[88,218,403,528,662,861],broadcast_to:[301,715,1014],builder:51,builtin:[113,241,251,430,555,689,888],builtin_ab:[252,889],builtin_add:[253,890],builtin_and:[254,891],builtin_bool:[255,892],builtin_contain:[256,893],builtin_deepcopi:[257,894],builtin_dir:[258,895],builtin_eq:[259,896],builtin_float:[260,897],builtin_floordiv:[261,898],builtin_g:[262,899],builtin_getattr:[263,900],builtin_getattribut:[264,901],builtin_getitem:[265,902],builtin_gt:[266,903],builtin_int:[267,904],builtin_invert:[268,905],builtin_l:[269,906],builtin_lt:[270,562,696,907],builtin_mul:[271,908],builtin_n:[272,909],builtin_neg:[273,910],builtin_or:[274,911],builtin_po:[275,912],builtin_pow:[276,913],builtin_radd:[277,914],builtin_rand:[278,915],builtin_rfloordiv:[279,916],builtin_rmul:[280,917],builtin_ror:[281,918],builtin_rpow:[282,919],builtin_rsub:[283,920],builtin_rtruediv:[284,921],builtin_rxor:[285,922],builtin_setitem:[286,923],builtin_sub:[287,924],builtin_truediv:[288,925],builtin_xor:[289,926],cache_fn:1015,cast:[135,302,447,579,716,983],ceil:[89,219,404,529,663,862],choleski:[786,1124],choose_random_framework:61,citat:1255,clear_framework_stack:62,clear_mem_on_dev:[702,945],clip:[303,717,1016],clip_matrix_norm:1017,clip_vector_norm:1018,clone:1170,clone_arrai:1171,clone_it:1172,clone_nest:1173,clonedit:1157,cloneditem:1156,clonednest:1158,closest_valid_dtyp:984,code:1301,comparison:[9,119,247,436,561,695],compil:[304,448,718,927,928],concaten:[136,305,449,580,719,1019],constant:[76,207,391,516,650,850],constant_pad:[306,581,720,1020],contain:[40,41],container_typ:[721,1021],content:1255,contribut:43,conv1d:[198,382,507,841,1237,1273],conv1d_transpos:[199,383,508,842,1238],conv1dtranspos:1274,conv2d:[200,384,509,645,843,1239,1275],conv2d_transpos:[201,385,510,844,1240],conv2dtranspos:1276,conv3d:[202,386,511,646,845,1241,1277],conv3d_transpos:[203,387,512,846,1242],conv3dtranspos:1278,convers:15,convert:[194,837,1261],convert_dtyp:985,copy_arrai:[722,1022],copy_nest:1201,core:[122,250,439,565,699,887],cos:[90,405,530,664,863],cosh:[91,406,531,665,805,864,1142],cprint:1300,creat:43,creation:[77,208,392,517,651,851],cross:[307,723,1023],cross_entropi:1251,cumprod:[137,308,450,724,1024],cumsum:[725,1025],current_framework:63,current_framework_str:[726,1026],data:[81,85,212,216,396,400,521,525,655,659,855,858],debug_mod:45,debugg:44,default_devic:946,default_dtyp:986,default_float_dtyp:987,default_int_dtyp:988,default_nod:1174,depthwise_conv2d:[204,388,513,647,847,1243],depthwiseconv2d:1279,design:43,det:[227,416,541,621,675,787],dev:[125,292,568,703,947],dev_clon:948,dev_clone_arrai:949,dev_clone_it:950,dev_clone_nest:951,dev_dist:952,dev_dist_arrai:953,dev_dist_it:954,dev_dist_nest:955,dev_from_str:[126,293,569,704,956],dev_to_str:[127,294,570,705,957],dev_unifi:958,dev_unify_arrai:959,dev_unify_it:960,dev_unify_nest:961,dev_util:962,devclonedit:932,devcloneditem:931,devclonednest:933,devdistit:935,devdistitem:934,devdistnest:936,devic:[20,123,290,440,566,700,929],devmapp:938,devmappermultiproc:939,diagon:[101,228,417,542,676,874],distribute_nest:1175,divid:1143,document:1255,dropout:[1244,1280],dtype:[138,309,451,582,727,979,989],dtype_bit:[139,310,452,583,728,990],dtype_from_str:[140,311,453,584,729,991],dtype_to_str:[141,312,454,585,730,992],ecosystem:52,einops_rearrang:1028,einops_reduc:1029,einops_repeat:1030,einsum:[184,370,495,635,821,1219],elementwis:[86,217,401,526,660,859],equal:[586,731,1031],erf:[491,806,1144],execute_with_gradi:[164,346,477,612,776,1104],exist:1032,exp:[807,1145],expand_dim:[313,732,1033],finfo:[83,214,398,523,657,856],firstlayersiren:1265,flip:[104,232,421,546,680,878],float_img_to_uint8_img:1118,floor:[314,733,1034],floormod:[315,734,1035],fomaml_step:1152,fork:43,fourier_encod:1036,framework:59,full:[142,316,455,587,735,1037],func:72,gather:[143,317,456,588,736,1038],gather_nd:[144,318,457,589,737,1039],geglu:1259,gelu:[380,504,830,1229,1260],gener:[22,130,296,442,573,708,1003],get_all_arrays_in_memori:1040,get_all_arrays_on_dev:963,get_framework:64,get_min_bas:1041,get_min_denomin:1042,get_num_dim:[738,1043],get_referrers_recurs:1044,glorotuniform:1266,gpu_is_avail:[964,1176],gradient:[24,163,345,476,611,775,1100],gradient_descent_upd:1105,gradient_imag:[168,352,483,618,783,1119],gym:53,handler:59,has_nan:1045,ident:[145,319,458,590,739,1046],iinfo:[84,215,399,524,658,857],imag:[26,166,350,481,616,781,1116],index_nest:1202,indices_wher:[146,320,459,740,1047],initi:1263,inplac:[11,120,248,437,563,697],inplace_arrays_support:1048,inplace_decr:[147,321,460,591,741,1049],inplace_incr:[148,322,461,592,742,1050],inplace_upd:[149,323,462,593,743,1051],inplace_variables_support:1052,inv:[788,1125],invalid_dtyp:993,is_arrai:[150,324,463,594,744,1053],is_float_dtyp:994,is_int_dtyp:995,is_vari:[165,347,478,613,777,1106],isfinit:[92,220,407,532,666,865],isinf:[325,595,745,1054],isnan:[93,221,408,533,667,866],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,848,1297,1298,1301],ivymodul:[195,838],jax:74,keep:43,lamb:1290,lamb_upd:1107,lar:1291,lars_upd:1108,layer:[197,381,506,644,840,1236,1272],layer_norm:1254,layernorm:1287,leaky_relu:[831,1230],less:[94,222,409,534,668,867],linalg:[28,1123],linear:[100,170,226,354,415,485,540,620,674,785,873,1245,1282],linear_resampl:[151,326,464,596,746,1055],linspac:[152,327,465,597,747,1056],list:43,log1p:[95,410,535,669,868],log2:[96,411,536,670,869],log:[808,1146],logic:[30,174,360,489,627,795,1132],logical_and:[361,796,1133],logical_not:[97,223,412,537,671,870],logical_or:[362,797,1134],logspac:[153,328,466,598,748,1057],loss:1249,lstm:1281,lstm_updat:1246,maml_step:1153,manipul:[103,231,420,545,679,877],map:1203,map_nest_at_index:1204,map_nest_at_indic:1205,match_kwarg:1058,math:[32,175,363,490,628,798,1135],matmul:[329,599,749,1059],matrix_norm:[171,355,486,622,789,1126],maximum:[750,1060],mech:54,memori:55,meshgrid:[330,751,1061],meta:[34,1151],method:[99,225,414,539,673,872],minimum:[752,1062],model:56,modul:[1284,1285,1297],multi:1155,multi_head_attent:1247,multi_index_nest:1206,multidevcontain:42,multidevit:942,multidevitem:941,multidevnest:943,multiheadattent:1283,multinodeit:1161,multinodeitem:1160,multinodenest:1162,multinomi:[177,365,493,630,814,1212],multiprocess:[753,1063],mxnet:205,nativ:1297,nest:1199,nested_indices_wher:1207,nested_map:1208,network:1297,next:1255,node:[1155,1177],node_dist:1178,node_dist_arrai:1179,node_dist_it:1180,node_str:1181,node_to_str:1182,node_util:1183,nodedistit:1164,nodedistitem:1163,nodedistnest:1165,nodemapp:1167,nodemappermultiproc:1168,norm:[1253,1286],num_arrays_in_memori:1064,num_arrays_on_dev:965,num_cpu_cor:966,num_gpu:[128,967,1184],numpi:389,nutshel:1255,one_hot:[154,467,600,754,1065],ones:[78,209,393,518,652,852,1066],ones_lik:[155,331,468,601,755,1067],oper:[1,3,7,9,11,13,43,115,116,118,119,120,121,243,244,246,247,248,249,432,433,435,436,437,438,557,558,560,561,563,564,691,692,694,695,697,698],optim:[1288,1292],optimizer_upd:1109,overview:1255,percent_used_mem_on_dev:968,percent_used_mem_on_nod:1185,pinv:[356,790,1127],portabl:1301,print_all_arrays_in_memori:1068,print_all_arrays_on_dev:969,profil:[124,291,441,567,701,944,1169],pull:43,queue_timeout:1069,randint:[178,366,631,815,1213],random:[36,176,364,492,629,813,1211],random_crop:1120,random_norm:[179,367,632,816,1214],random_uniform:[180,368,633,817,1215],reduce_max:[185,371,496,636,822,1220],reduce_mean:[186,372,497,637,823,1221],reduce_min:[187,373,498,638,824,1222],reduce_prod:[188,374,499,639,825,1223],reduce_std:[375,1224],reduce_sum:[189,376,500,640,826,1225],reduce_var:[190,377,501,641,827,1226],reduct:[38,183,369,494,634,820,1218],reflect:[13,121,249,438,564,698],relu:[832,1231],repeat:[332,756,1070],reptile_step:1154,request:43,reshap:[757,1071],robot:57,round:[333,758,1072],run:1298,scaled_dot_product_attent:1248,scatter_flat:[156,334,469,602,759,1073],scatter_nd:[157,335,470,603,760,1074],search:[105,233,422,547,681,879],seed:[181,818,1216],sequenti:[1294,1295],set:[106,234,423,548,682,880],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:970,set_default_dtyp:996,set_default_float_dtyp:997,set_default_int_dtyp:998,set_default_nod:1186,set_exception_debug_mod:48,set_framework:65,set_min_bas:1075,set_min_denomin:1076,set_nest_at_index:1209,set_nest_at_indic:1210,set_queue_timeout:1077,set_split_factor:[971,1187],set_tmp_dir:1078,set_with_grad:1110,sgd:1293,shape:[761,1079],shape_to_tupl:1080,shuffl:[182,819,1217],sigmoid:[833,1232],signatur:[99,225,414,539,673,872],sin:[809,1147],sinh:[810,1148],siren:1269,slodget:[875,1129],slogdet:[229,418,543,624,677,792],softmax:[193,505,834,1233],softplu:[835,1234],sort:[107,235,424,549,683,881],sparse_cross_entropi:1252,split:[158,336,471,604,762,1081],split_factor:[972,1188],split_func_cal:[973,1189],sqrt:[98,224,413,538,672,871],squeez:[159,337,472,605,763,1082],stable_divid:1083,stable_pow:1084,stack:[338,764,1085],stack_imag:[169,353,484,619,784,1121],standard:43,statist:[109,237,426,551,685,883],stop_gradi:[348,479,614,778,1111],str_to_nod:1190,submodul:43,supports_inplac:1086,svd:[358,625,793,1130],swapax:[606,765,1087],tan:[811,1149],tanh:[812,836,1150,1235],tensorflow:514,tile:[339,607,766,1088],tmp_dir:1089,to_dev:[129,295,571,706,974],to_ivi:18,to_ivy_modul:[196,839,1262],to_list:[767,1090],to_n:19,to_nod:1191,to_numpi:[768,1091],to_scalar:[769,1092],todo:43,torch:648,total_mem_on_dev:975,total_mem_on_nod:1192,tpu_is_avail:[572,707,976,1193],train:1297,trainabl:1297,transpos:[160,340,473,770,1093],tree:1255,tril:[79,210,394,519,653,853],try_else_non:1094,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,212,216,396,400,521,525,655,659,855,858],uint8_img_to_float_img:1122,unifi:1194,unify_arrai:1195,unify_it:1196,unify_nest:1197,unset_debug_mod:49,unset_default_devic:977,unset_default_dtyp:999,unset_default_float_dtyp:1000,unset_default_int_dtyp:1001,unset_framework:71,unset_with_grad:1112,unstack:[161,341,474,608,771,1095],updat:43,used_mem_on_dev:978,used_mem_on_nod:1198,util:[110,238,427,552,686,884],valid_dtyp:1002,value_is_nan:1096,variabl:[349,480,615,779,1113],variable_data:[780,1114],vector_norm:[102,230,419,544,678,876],vector_to_skew_symmetric_matrix:[173,359,488,626,794,1131],verbos:1299,vision:58,where:[342,772,1097,1255],why:1301,with_grad:1115,wrapper:72,write:1298,your:43,zero:[80,211,395,520,654,854,1271],zero_pad:[343,609,773,1098],zeros_lik:[162,344,475,610,774,1099]}})
Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/det","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/det","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/det","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/det.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/det.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/det.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[865,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[399,0,0,"-"],creation_functions:[400,0,0,"-"],data_type_functions:[406,0,0,"-"],data_types:[410,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[401,2,1,""],ones:[402,2,1,""],ones_like:[403,2,1,""],tril:[404,2,1,""],zeros:[405,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[406,1,1,""],finfo:[408,2,1,""],iinfo:[409,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[406,3,1,""],bits:[406,3,1,""],eps:[406,3,1,""],max:[406,3,1,""],min:[406,3,1,""],smallest_normal:[406,3,1,""]},"ivy.functional.backends.numpy.core":{device:[456,0,0,"-"],general:[458,0,0,"-"],gradients:[490,0,0,"-"],image:[495,0,0,"-"],linear_algebra:[499,0,0,"-"],logic:[503,0,0,"-"],math:[504,0,0,"-"],random:[506,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[457,1,1,""],clear_mem_on_dev:[456,2,1,""],dev:[456,2,1,""],dev_from_str:[456,2,1,""],dev_to_str:[456,2,1,""],gpu_is_available:[456,2,1,""],num_gpus:[456,2,1,""],to_dev:[456,2,1,""],tpu_is_available:[456,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[457,3,1,""],start:[457,3,1,""],stop:[457,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[458,2,1,""],arange:[459,2,1,""],argmin:[460,2,1,""],array:[461,2,1,""],asarray:[458,2,1,""],astype:[458,2,1,""],cast:[462,2,1,""],clip:[458,2,1,""],compile:[463,2,1,""],concatenate:[464,2,1,""],constant_pad:[458,2,1,""],container_types:[458,2,1,""],copy_array:[458,2,1,""],cumprod:[465,2,1,""],current_framework_str:[458,2,1,""],dtype:[466,2,1,""],dtype_bits:[467,2,1,""],dtype_from_str:[468,2,1,""],dtype_to_str:[469,2,1,""],floor:[458,2,1,""],floormod:[458,2,1,""],full:[470,2,1,""],gather:[471,2,1,""],gather_nd:[472,2,1,""],get_num_dims:[458,2,1,""],identity:[473,2,1,""],indices_where:[474,2,1,""],inplace_arrays_supported:[458,2,1,""],inplace_decrement:[475,2,1,""],inplace_increment:[476,2,1,""],inplace_update:[477,2,1,""],inplace_variables_supported:[458,2,1,""],is_array:[478,2,1,""],linear_resample:[479,2,1,""],linspace:[480,2,1,""],logspace:[481,2,1,""],matmul:[458,2,1,""],meshgrid:[458,2,1,""],multiprocessing:[458,2,1,""],one_hot:[482,2,1,""],round:[458,2,1,""],scatter_flat:[483,2,1,""],scatter_nd:[484,2,1,""],shape:[458,2,1,""],split:[485,2,1,""],squeeze:[486,2,1,""],to_list:[458,2,1,""],to_numpy:[458,2,1,""],to_scalar:[458,2,1,""],transpose:[487,2,1,""],unstack:[488,2,1,""],where:[458,2,1,""],zero_pad:[458,2,1,""],zeros_like:[489,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[491,2,1,""],is_variable:[492,2,1,""],stop_gradient:[493,2,1,""],variable:[494,2,1,""],variable_data:[490,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[496,2,1,""],gradient_image:[497,2,1,""],stack_images:[498,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[500,2,1,""],qr:[501,2,1,""],vector_to_skew_symmetric_matrix:[502,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[505,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[507,2,1,""],randint:[506,2,1,""],random_normal:[506,2,1,""],random_uniform:[506,2,1,""],seed:[506,2,1,""],shuffle:[506,2,1,""]},"ivy.functional.ivy":{array_api:[866,0,0,"-"],core:[911,0,0,"-"],nn:[1246,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[867,0,0,"-"],creation_functions:[868,0,0,"-"],data_type_functions:[874,0,0,"-"],data_types:[877,0,0,"-"],elementwise_functions:[878,0,0,"-"],function_and_method_signatures:[893,0,0,"-"],linear_algebra:[894,0,0,"-"],manipulation_functions:[899,0,0,"-"],searching_functions:[901,0,0,"-"],set_functions:[903,0,0,"-"],sorting_functions:[904,0,0,"-"],statistical_functions:[906,0,0,"-"],utility_functions:[908,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[867,4,1,""],nan:[867,4,1,""],pi:[867,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[869,2,1,""],ones:[870,2,1,""],ones_like:[871,2,1,""],tril:[872,2,1,""],zeros:[873,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[875,2,1,""],iinfo:[876,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[879,2,1,""],bitwise_and:[880,2,1,""],ceil:[881,2,1,""],cos:[882,2,1,""],cosh:[883,2,1,""],isfinite:[884,2,1,""],isnan:[885,2,1,""],less:[886,2,1,""],less_equal:[887,2,1,""],log1p:[888,2,1,""],log2:[889,2,1,""],logical_not:[890,2,1,""],sin:[891,2,1,""],sqrt:[892,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[895,2,1,""],slodget:[896,2,1,""],svd:[897,2,1,""],vector_norm:[898,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[900,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[902,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[905,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[907,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[909,2,1,""],any:[910,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[912,0,0,"-"],compilation:[951,0,0,"-"],device:[953,0,0,"-"],dtype:[1003,0,0,"-"],general:[1027,0,0,"-"],gradients:[1122,0,0,"-"],image:[1138,0,0,"-"],linalg:[1145,0,0,"-"],logic:[1152,0,0,"-"],math:[1155,0,0,"-"],meta:[1170,0,0,"-"],multi_node:[1174,0,0,"-"],nest:[1218,0,0,"-"],random:[1230,0,0,"-"],reductions:[1237,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[913,2,1,""],builtin_add:[914,2,1,""],builtin_and:[915,2,1,""],builtin_bool:[916,2,1,""],builtin_contains:[917,2,1,""],builtin_deepcopy:[918,2,1,""],builtin_dir:[919,2,1,""],builtin_eq:[920,2,1,""],builtin_float:[921,2,1,""],builtin_floordiv:[922,2,1,""],builtin_ge:[923,2,1,""],builtin_getattr:[924,2,1,""],builtin_getattribute:[925,2,1,""],builtin_getitem:[926,2,1,""],builtin_gt:[927,2,1,""],builtin_int:[928,2,1,""],builtin_invert:[929,2,1,""],builtin_le:[930,2,1,""],builtin_lt:[931,2,1,""],builtin_mul:[932,2,1,""],builtin_ne:[933,2,1,""],builtin_neg:[934,2,1,""],builtin_or:[935,2,1,""],builtin_pos:[936,2,1,""],builtin_pow:[937,2,1,""],builtin_radd:[938,2,1,""],builtin_rand:[939,2,1,""],builtin_rfloordiv:[940,2,1,""],builtin_rmul:[941,2,1,""],builtin_ror:[942,2,1,""],builtin_rpow:[943,2,1,""],builtin_rsub:[944,2,1,""],builtin_rtruediv:[945,2,1,""],builtin_rxor:[946,2,1,""],builtin_setitem:[947,2,1,""],builtin_sub:[948,2,1,""],builtin_truediv:[949,2,1,""],builtin_xor:[950,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[952,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[953,1,1,""],DevClonedItem:[955,1,1,""],DevClonedIter:[956,1,1,""],DevClonedNest:[957,1,1,""],DevDistItem:[958,1,1,""],DevDistIter:[959,1,1,""],DevDistNest:[960,1,1,""],DevManager:[953,1,1,""],DevMapper:[962,1,1,""],DevMapperMultiProc:[963,1,1,""],MultiDev:[953,1,1,""],MultiDevItem:[965,1,1,""],MultiDevIter:[966,1,1,""],MultiDevNest:[967,1,1,""],Profiler:[968,1,1,""],clear_mem_on_dev:[969,2,1,""],default_device:[970,2,1,""],dev:[971,2,1,""],dev_clone:[972,2,1,""],dev_clone_array:[973,2,1,""],dev_clone_iter:[974,2,1,""],dev_clone_nest:[975,2,1,""],dev_dist:[976,2,1,""],dev_dist_array:[977,2,1,""],dev_dist_iter:[978,2,1,""],dev_dist_nest:[979,2,1,""],dev_from_str:[980,2,1,""],dev_to_str:[981,2,1,""],dev_unify:[982,2,1,""],dev_unify_array:[983,2,1,""],dev_unify_iter:[984,2,1,""],dev_unify_nest:[985,2,1,""],dev_util:[986,2,1,""],get_all_arrays_on_dev:[987,2,1,""],gpu_is_available:[988,2,1,""],num_arrays_on_dev:[989,2,1,""],num_cpu_cores:[990,2,1,""],num_gpus:[991,2,1,""],percent_used_mem_on_dev:[992,2,1,""],print_all_arrays_on_dev:[993,2,1,""],set_default_device:[994,2,1,""],set_split_factor:[995,2,1,""],split_factor:[996,2,1,""],split_func_call:[997,2,1,""],to_dev:[998,2,1,""],total_mem_on_dev:[999,2,1,""],tpu_is_available:[1000,2,1,""],unset_default_device:[1001,2,1,""],used_mem_on_dev:[1002,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[953,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[953,3,1,""],da_tune_step:[953,3,1,""],dim_size:[953,3,1,""],ds_tune_step:[953,3,1,""],map:[953,3,1,""],repeated_config_check:[953,3,1,""],tune_step:[953,3,1,""],tuned:[953,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[962,3,1,""],map:[962,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[963,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[953,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[965,3,1,""],items:[965,3,1,""],keys:[965,3,1,""],shape:[965,3,1,""],values:[965,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[966,3,1,""],at_dev:[966,3,1,""],at_devs:[966,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[967,3,1,""],at_dev:[967,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[968,3,1,""],start:[968,3,1,""],stop:[968,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[1003,1,1,""],DefaultFloatDtype:[1003,1,1,""],DefaultIntDtype:[1003,1,1,""],astype:[1003,2,1,""],cast:[1007,2,1,""],closest_valid_dtype:[1008,2,1,""],convert_dtype:[1009,2,1,""],default_dtype:[1010,2,1,""],default_float_dtype:[1011,2,1,""],default_int_dtype:[1012,2,1,""],dtype:[1013,2,1,""],dtype_bits:[1014,2,1,""],dtype_from_str:[1015,2,1,""],dtype_to_str:[1016,2,1,""],invalid_dtype:[1017,2,1,""],is_float_dtype:[1018,2,1,""],is_int_dtype:[1019,2,1,""],set_default_dtype:[1020,2,1,""],set_default_float_dtype:[1021,2,1,""],set_default_int_dtype:[1022,2,1,""],unset_default_dtype:[1023,2,1,""],unset_default_float_dtype:[1024,2,1,""],unset_default_int_dtype:[1025,2,1,""],valid_dtype:[1026,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[1003,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[1003,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[1003,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1050,2,1,""],abs:[1028,2,1,""],all_equal:[1029,2,1,""],arange:[1030,2,1,""],arg_names:[1031,2,1,""],argmin:[1032,2,1,""],array:[1033,2,1,""],array_equal:[1034,2,1,""],arrays_equal:[1035,2,1,""],asarray:[1027,2,1,""],assert_supports_inplace:[1036,2,1,""],broadcast_to:[1037,2,1,""],cache_fn:[1038,2,1,""],clip:[1039,2,1,""],clip_matrix_norm:[1040,2,1,""],clip_vector_norm:[1041,2,1,""],concatenate:[1042,2,1,""],constant_pad:[1043,2,1,""],container_types:[1044,2,1,""],copy_array:[1045,2,1,""],cross:[1046,2,1,""],cumprod:[1047,2,1,""],cumsum:[1048,2,1,""],current_framework_str:[1049,2,1,""],einops_rearrange:[1051,2,1,""],einops_reduce:[1052,2,1,""],einops_repeat:[1053,2,1,""],equal:[1054,2,1,""],exists:[1055,2,1,""],expand_dims:[1056,2,1,""],floor:[1057,2,1,""],floormod:[1058,2,1,""],fourier_encode:[1059,2,1,""],full:[1060,2,1,""],gather:[1061,2,1,""],gather_nd:[1062,2,1,""],get_all_arrays_in_memory:[1063,2,1,""],get_min_base:[1064,2,1,""],get_min_denominator:[1065,2,1,""],get_num_dims:[1066,2,1,""],get_referrers_recursive:[1067,2,1,""],has_nans:[1068,2,1,""],identity:[1069,2,1,""],indices_where:[1070,2,1,""],inplace_arrays_supported:[1071,2,1,""],inplace_decrement:[1072,2,1,""],inplace_increment:[1073,2,1,""],inplace_update:[1074,2,1,""],inplace_variables_supported:[1075,2,1,""],is_array:[1076,2,1,""],isinf:[1077,2,1,""],linear_resample:[1078,2,1,""],linspace:[1079,2,1,""],logspace:[1080,2,1,""],match_kwargs:[1081,2,1,""],matmul:[1082,2,1,""],maximum:[1083,2,1,""],meshgrid:[1084,2,1,""],minimum:[1085,2,1,""],multiprocessing:[1086,2,1,""],num_arrays_in_memory:[1087,2,1,""],one_hot:[1088,2,1,""],ones:[1089,2,1,""],print_all_arrays_in_memory:[1090,2,1,""],queue_timeout:[1091,2,1,""],repeat:[1092,2,1,""],reshape:[1093,2,1,""],round:[1094,2,1,""],scatter_flat:[1095,2,1,""],scatter_nd:[1096,2,1,""],set_min_base:[1097,2,1,""],set_min_denominator:[1098,2,1,""],set_queue_timeout:[1099,2,1,""],set_tmp_dir:[1100,2,1,""],shape:[1101,2,1,""],shape_to_tuple:[1102,2,1,""],split:[1103,2,1,""],squeeze:[1104,2,1,""],stable_divide:[1105,2,1,""],stable_pow:[1106,2,1,""],stack:[1107,2,1,""],supports_inplace:[1108,2,1,""],swapaxes:[1109,2,1,""],tile:[1110,2,1,""],tmp_dir:[1111,2,1,""],to_list:[1112,2,1,""],to_numpy:[1113,2,1,""],to_scalar:[1114,2,1,""],transpose:[1115,2,1,""],try_else_none:[1116,2,1,""],unstack:[1117,2,1,""],value_is_nan:[1118,2,1,""],where:[1119,2,1,""],zero_pad:[1120,2,1,""],zeros_like:[1121,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1122,1,1,""],adam_step:[1124,2,1,""],adam_update:[1125,2,1,""],execute_with_gradients:[1126,2,1,""],gradient_descent_update:[1127,2,1,""],is_variable:[1128,2,1,""],lamb_update:[1129,2,1,""],lars_update:[1130,2,1,""],optimizer_update:[1131,2,1,""],set_with_grads:[1132,2,1,""],stop_gradient:[1133,2,1,""],unset_with_grads:[1134,2,1,""],variable:[1135,2,1,""],variable_data:[1136,2,1,""],with_grads:[1137,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1122,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1139,2,1,""],float_img_to_uint8_img:[1140,2,1,""],gradient_image:[1141,2,1,""],random_crop:[1142,2,1,""],stack_images:[1143,2,1,""],uint8_img_to_float_img:[1144,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1146,2,1,""],inv:[1147,2,1,""],matrix_norm:[1148,2,1,""],pinv:[1149,2,1,""],qr:[1150,2,1,""],vector_to_skew_symmetric_matrix:[1151,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1153,2,1,""],logical_or:[1154,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1156,2,1,""],acosh:[1157,2,1,""],asin:[1158,2,1,""],atan2:[1160,2,1,""],atan:[1159,2,1,""],atanh:[1161,2,1,""],cosh:[1162,2,1,""],divide:[1163,2,1,""],erf:[1164,2,1,""],exp:[1165,2,1,""],log:[1166,2,1,""],sinh:[1167,2,1,""],tan:[1168,2,1,""],tanh:[1169,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1171,2,1,""],maml_step:[1172,2,1,""],reptile_step:[1173,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1174,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1219,2,1,""],copy_nest:[1220,2,1,""],index_nest:[1221,2,1,""],map:[1222,2,1,""],map_nest_at_index:[1223,2,1,""],map_nest_at_indices:[1224,2,1,""],multi_index_nest:[1225,2,1,""],nested_indices_where:[1226,2,1,""],nested_map:[1227,2,1,""],set_nest_at_index:[1228,2,1,""],set_nest_at_indices:[1229,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1231,2,1,""],randint:[1232,2,1,""],random_normal:[1233,2,1,""],random_uniform:[1234,2,1,""],seed:[1235,2,1,""],shuffle:[1236,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1238,2,1,""],reduce_max:[1239,2,1,""],reduce_mean:[1240,2,1,""],reduce_min:[1241,2,1,""],reduce_prod:[1242,2,1,""],reduce_std:[1243,2,1,""],reduce_sum:[1244,2,1,""],reduce_var:[1245,2,1,""]},"ivy.functional.ivy.nn":{activations:[1247,0,0,"-"],layers:[1255,0,0,"-"],losses:[1268,0,0,"-"],norms:[1272,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1248,2,1,""],leaky_relu:[1249,2,1,""],relu:[1250,2,1,""],sigmoid:[1251,2,1,""],softmax:[1252,2,1,""],softplus:[1253,2,1,""],tanh:[1254,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1256,2,1,""],conv1d_transpose:[1257,2,1,""],conv2d:[1258,2,1,""],conv2d_transpose:[1259,2,1,""],conv3d:[1260,2,1,""],conv3d_transpose:[1261,2,1,""],depthwise_conv2d:[1262,2,1,""],dropout:[1263,2,1,""],linear:[1264,2,1,""],lstm_update:[1265,2,1,""],multi_head_attention:[1266,2,1,""],scaled_dot_product_attention:[1267,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1269,2,1,""],cross_entropy:[1270,2,1,""],sparse_cross_entropy:[1271,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1273,2,1,""]},"ivy.stateful":{activations:[1277,0,0,"-"],converters:[1280,0,0,"-"],initializers:[1282,0,0,"-"],layers:[1291,0,0,"-"],module:[1303,0,0,"-"],norms:[1305,0,0,"-"],optimizers:[1307,0,0,"-"],sequential:[1313,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1278,1,1,""],GELU:[1279,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1278,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1279,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1281,2,1,""]},"ivy.stateful.initializers":{Constant:[1282,1,1,""],FirstLayerSiren:[1284,1,1,""],GlorotUniform:[1285,1,1,""],KaimingNormal:[1282,1,1,""],Ones:[1287,1,1,""],Siren:[1288,1,1,""],Uniform:[1282,1,1,""],Zeros:[1290,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1282,3,1,""],create_variables:[1282,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1284,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1285,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1282,3,1,""],create_variables:[1282,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1287,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1288,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1282,3,1,""],create_variables:[1282,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1290,3,1,""]},"ivy.stateful.layers":{Conv1D:[1292,1,1,""],Conv1DTranspose:[1293,1,1,""],Conv2D:[1294,1,1,""],Conv2DTranspose:[1295,1,1,""],Conv3D:[1296,1,1,""],Conv3DTranspose:[1297,1,1,""],DepthwiseConv2D:[1298,1,1,""],Dropout:[1299,1,1,""],LSTM:[1300,1,1,""],Linear:[1301,1,1,""],MultiHeadAttention:[1302,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1292,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1293,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1294,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1295,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1296,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1297,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1298,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1299,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1300,3,1,""],get_initial_state:[1300,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1301,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1302,3,1,""]},"ivy.stateful.module":{Module:[1304,1,1,""]},"ivy.stateful.module.Module":{__init__:[1304,3,1,""],build:[1304,3,1,""],build_mode:[1304,3,1,""],built:[1304,3,1,""],check_submod_rets:[1304,3,1,""],get_mod_key:[1304,3,1,""],mod_depth:[1304,3,1,""],mod_height:[1304,3,1,""],mod_with_top_mod_key_chain:[1304,3,1,""],save_weights:[1304,3,1,""],show_mod_in_top_mod:[1304,3,1,""],show_structure:[1304,3,1,""],show_v_in_top_v:[1304,3,1,""],sub_mods:[1304,3,1,""],track_submod_call_order:[1304,3,1,""],track_submod_rets:[1304,3,1,""],v_with_top_v_key_chains:[1304,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1306,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1306,3,1,""]},"ivy.stateful.optimizers":{Adam:[1308,1,1,""],LAMB:[1309,1,1,""],LARS:[1310,1,1,""],Optimizer:[1311,1,1,""],SGD:[1312,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1308,3,1,""],set_state:[1308,3,1,""],state:[1308,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1309,3,1,""],set_state:[1309,3,1,""],state:[1309,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1310,3,1,""],set_state:[1310,3,1,""],state:[1310,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1311,3,1,""],set_state:[1311,3,1,""],step:[1311,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1312,3,1,""],set_state:[1312,3,1,""],state:[1312,3,1,""]},"ivy.stateful.sequential":{Sequential:[1314,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1314,3,1,""]},"ivy.verbosity":{cprint:[1319,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1318,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1307,1308,1309],"02886":1274,"100":[1174,1274,1316],"141592653589793":867,"2021":1274,"2102":1274,"360":[1155,1168],"718281828459045":867,"754":[867,874,875,878,892],"999":[1122,1124,1125,1129,1307,1308,1309],"abstract":[953,968,1274,1307,1311],"boolean":[40,41,878,880,890,912,930,953,988,1000,1003,1017,1026,1027,1029,1034,1035,1068,1070,1071,1075,1076,1077,1108,1118,1122,1128,1152,1153,1154,1170,1171,1172,1174],"break":43,"case":[15,18,19,40,41,42,43,878,879,881,882,883,889,891,892,953,992,999,1002,1027,1030,1093,1095,1096,1145,1148,1150,1174,1218,1221,1225,1274,1291,1302,1303,1304,1307,1311,1320],"catch":[1027,1050],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,406,456,457,874,876,953,955,956,957,958,959,960,962,963,965,966,967,968,980,981,1003,1027,1031,1081,1122,1136,1174,1218,1220,1227,1268,1270,1271,1274,1277,1278,1279,1280,1281,1282,1284,1285,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1316,1320],"default":[15,18,19,40,41,42,43,868,869,870,871,872,873,894,895,898,899,900,901,902,904,905,906,907,908,909,910,951,952,953,962,963,970,971,975,976,977,978,979,982,983,984,985,992,995,996,997,1002,1003,1010,1011,1012,1013,1027,1029,1030,1032,1040,1041,1042,1043,1046,1047,1048,1059,1060,1061,1066,1068,1069,1078,1080,1081,1084,1086,1089,1091,1092,1095,1096,1099,1101,1103,1105,1106,1115,1117,1118,1122,1125,1127,1128,1129,1130,1131,1133,1137,1145,1148,1150,1170,1171,1172,1173,1174,1218,1219,1220,1222,1226,1227,1230,1231,1233,1234,1237,1239,1240,1241,1242,1243,1244,1245,1247,1248,1252,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1280,1281,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314],"final":[40,41,43,1027,1059,1079,1080,1174,1291,1302,1317],"float":[40,41,42,43,867,868,869,870,873,874,875,878,879,881,882,883,889,891,892,894,898,912,930,931,937,953,962,963,986,992,995,999,1002,1003,1011,1018,1027,1030,1040,1041,1043,1059,1060,1064,1065,1080,1097,1098,1099,1105,1106,1122,1124,1125,1127,1129,1130,1131,1138,1140,1144,1155,1163,1170,1171,1172,1173,1174,1230,1233,1234,1247,1249,1255,1263,1266,1267,1268,1269,1270,1271,1272,1273,1291,1299,1302,1305,1306,1307,1308,1309,1310,1311,1312],"function":[15,40,41,43,401,402,403,404,405,408,409,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,867,869,870,871,872,873,875,876,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,896,897,898,900,902,905,907,909,910,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,955,956,957,958,959,960,962,963,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1277,1278,1279,1307,1310,1311,1312,1316,1317,1320],"import":[43,1274,1317,1320],"int":[40,41,42,43,400,401,402,404,405,506,868,869,870,872,873,874,875,876,894,895,898,899,900,901,902,904,905,906,907,908,909,910,912,930,931,937,951,952,953,975,976,977,978,979,982,983,984,985,990,991,997,1003,1012,1014,1019,1027,1032,1037,1042,1043,1047,1048,1051,1052,1053,1056,1059,1060,1061,1066,1069,1078,1079,1080,1088,1089,1092,1093,1095,1096,1101,1102,1103,1104,1107,1109,1110,1115,1117,1120,1122,1124,1125,1129,1138,1142,1143,1145,1148,1170,1171,1172,1173,1174,1218,1227,1230,1231,1232,1234,1235,1237,1239,1240,1241,1242,1243,1244,1245,1247,1252,1255,1256,1257,1258,1259,1260,1261,1262,1266,1268,1270,1271,1272,1273,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1305,1306],"long":[43,1255,1265],"new":[40,41,43,506,868,869,870,871,873,878,888,1003,1007,1027,1028,1037,1051,1052,1053,1056,1059,1060,1061,1062,1089,1093,1095,1096,1097,1098,1105,1106,1107,1122,1125,1127,1129,1130,1131,1138,1140,1142,1144,1155,1157,1161,1162,1167,1169,1174,1218,1228,1229,1230,1231,1272,1273,1274,1280,1281,1291,1301,1305,1306,1307,1308,1309,1310,1311,1312,1317,1320],"public":[1027,1044],"return":[15,16,17,18,19,40,41,42,43,506,868,869,870,871,872,873,878,879,880,881,882,883,884,885,886,887,889,890,891,892,894,895,896,897,898,901,902,904,905,906,907,908,909,910,912,930,931,937,951,952,953,962,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,988,989,991,992,996,997,998,999,1000,1002,1003,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1026,1027,1028,1029,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1066,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1092,1093,1094,1095,1096,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1218,1219,1220,1222,1226,1227,1230,1231,1232,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1280,1281,1291,1300,1301,1307,1311,1316,1317,1320],"short":[43,1255,1265,1274,1320],"static":[40,41,951,952],"super":1174,"true":[40,41,42,458,463,490,493,506,507,878,884,885,890,894,897,898,901,902,904,905,908,909,910,951,952,953,1027,1029,1036,1038,1055,1059,1068,1070,1118,1119,1122,1125,1127,1128,1129,1130,1131,1133,1145,1148,1170,1171,1172,1173,1174,1218,1219,1226,1230,1231,1237,1239,1240,1241,1242,1243,1244,1245,1247,1248,1255,1263,1268,1269,1270,1271,1291,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312],"try":[40,41,1027,1116,1174],"var":[40,41,1170,1171,1172,1320],"while":[40,41,42,878,890,1174],AND:[878,880,908,909,1152,1153],But:1320,For:[43,878,879,881,882,883,889,891,892,1027,1030,1039,1107,1122,1128,1136,1145,1150,1155,1156,1274,1280,1281,1317,1320],Its:[1155,1159],NOT:[878,890],Not:867,One:[40,41,43,1027,1052,1093,1230,1232,1320],Ones:[1274,1282],PRs:43,Such:[1027,1044],That:1317,The:[15,16,17,18,19,40,41,42,43,868,872,878,879,880,881,882,883,884,885,886,887,889,890,891,892,894,895,896,897,898,899,900,904,905,908,909,910,912,930,931,937,951,952,953,962,963,969,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,992,995,996,997,998,999,1002,1003,1007,1008,1009,1014,1015,1016,1017,1026,1027,1030,1033,1034,1037,1038,1040,1041,1042,1043,1045,1046,1049,1050,1054,1059,1061,1062,1069,1072,1073,1074,1076,1078,1080,1082,1084,1086,1089,1092,1093,1095,1096,1097,1098,1099,1102,1103,1104,1105,1106,1107,1110,1118,1121,1122,1124,1125,1127,1129,1130,1131,1133,1136,1138,1140,1142,1144,1145,1148,1150,1155,1156,1158,1159,1163,1164,1165,1166,1168,1170,1171,1172,1173,1174,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1233,1234,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1280,1281,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1309,1310,1311,1317,1320],There:[43,1274,1317],These:[43,1274],Use:43,Used:[1218,1219,1226,1303,1304],Using:[1274,1275,1320],With:[40,41,901,902,1145,1148,1237,1239,1240,1241,1242,1243,1244,1245,1274,1316,1320],__array__:[1027,1033],__call__:[1291,1302,1303,1304],__del__:1174,__dict__:[1174,1317],__enter__:1174,__exit__:1174,__getitem__:1174,__getstate__:1174,__init__:[40,41,42,43,59,60,84,221,406,407,456,457,538,674,953,954,961,962,963,964,965,966,967,968,1003,1004,1005,1006,1122,1123,1174,1178,1185,1274,1277,1278,1279,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1316,1320],__iter__:1174,__len__:1174,__next__:1174,__pow__:43,__repr__:1174,_assign_vari:1316,_axi:1174,_base:[1218,1219,1226],_compute_node_da_ratio:1174,_compute_node_strs_da:1174,_concat_unify_arrai:1174,_counter:1174,_cur_framework:[43,1174],_da_direct:1174,_da_directions_flip:1174,_da_step_tim:1174,_da_tim:1174,_da_tune_count:1174,_data:1174,_delta_da_dim_s:1174,_delta_sf:1174,_dict:1174,_dim_siz:1174,_first_da_tune_step:1174,_first_ns_tune_step:1174,_fn:1174,_forward:[1274,1316],_get_kalman_param:1320,_get_prior:1320,_get_some_model:1320,_handle_flat_arrays_in_out:43,_index:[1218,1219,1226],_input_queu:1174,_length:1174,_max_depth:1174,_max_node_dim_step_ratio:1174,_max_node_dim_step_s:1174,_max_split_factor_step_s:1174,_mean_unify_arrai:1174,_min_bas:[1027,1106,1272,1273,1305,1306],_min_denomin:[1027,1105],_min_node_dim_s:1174,_min_sf_tune_step:1174,_min_unit_node_tune_step:1174,_model:1320,_native_wrapp:43,_node_mapp:1174,_node_percent_mem:1174,_node_str:1174,_node_str_da_ratio:1174,_node_strs_da:1174,_node_strs_kei:1174,_node_strs_n:1174,_node_util:1174,_ns_step_tim:1174,_ns_time:1174,_ns_tune_count:1174,_num_nod:1174,_num_work:1174,_observed_config:1174,_output_queu:1174,_paramet:1316,_percent_mem_inc_per_sf:1174,_percent_mem_inc_per_unit_da_dim:1174,_percent_util_inc_per_unit_da_dim:1174,_ret_fn:1174,_safety_factor:1174,_save_dir:1174,_shift_da_split:1174,_shift_n:1174,_slice:1174,_step:[1307,1311],_sum_unify_arrai:1174,_timeout:1174,_tune:1174,_tune_da:1174,_tune_n:1174,_tune_step:1174,_unit_da_tune_count:1174,_unroll_step:1320,_with_node_mappig:1174,_worker:1174,_worker_class:1174,_worker_fn:1174,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,953,962,968,1174,1303,1304,1307,1311],abil:1274,abl:[40,41],about:[874,875,876],abov:[43,868,872,894,895,1230,1232],above_height:[40,41],abs:[306,458,595,732,894,898,1027,1174],absolut:[40,41,894,896,1027,1028],abstractmethod:1174,accept:[15,43,878,890,1274],access:[40,41,43,1317],accord:[40,41,874,875,1027,1043,1061,1095,1096,1115,1120],accordingli:[894,898,908,909,910],accur:[59,406,456,457,953,965,966,967,968,1003,1122,1282,1284,1285,1287,1288,1290],aco:[816,1155],acosh:[816,1155],across:[40,41,953,962,963,972,973,975,976,977,978,979,985,995,996,1027,1032,1034,1035,1174,1218,1222],act:43,activ:[1248,1249,1250,1251,1252,1253,1254,1274,1278,1279],actual:1317,adam:[1122,1124,1125,1129,1274,1307,1309,1316],adam_step:1122,adam_upd:1122,adapt:[1122,1130,1307,1310],add:[40,41,43,1174,1268,1269,1270,1271,1272,1273,1274,1305,1306,1317],added:[43,1027,1105,1106,1313,1314],adding:[43,1027,1037],addit:[40,41,43,1027,1051,1052,1053,1272,1273,1291,1301],addition:43,address:43,adher:43,adjac:[1027,1030],adopt:[43,1027,1044],affect:[1027,1030],affin:[1305,1306],after:[878,892,1027,1078,1122,1125,1126,1127,1129,1130,1131,1138,1139,1272,1273,1307,1308,1309,1310,1311,1312,1320],after_1:[1027,1043,1120],after_n:[1027,1043,1120],again:43,against:[40,41,901,902,1145,1148,1237,1239,1240,1241,1242,1243,1244,1245],agnost:[43,1274,1316,1317],aim:1320,algebra:1145,algorithm:[1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298,1320],align:[40,41,43,1027,1037],aliv:[953,987,989,993,1027,1063,1087,1090],all:[15,16,17,18,19,40,41,43,118,248,443,574,710,868,872,894,898,899,900,908,951,952,953,962,987,993,1027,1028,1029,1034,1035,1044,1063,1069,1090,1104,1145,1150,1170,1171,1172,1173,1174,1218,1219,1220,1226,1227,1230,1231,1234,1237,1239,1240,1241,1242,1243,1244,1245,1255,1265,1274,1317,1320],all_depth:[40,41],all_equ:1027,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1218,all_tru:[40,41],alloc:[43,868,872,953,1174],allow:[1027,1079,1080,1081,1303,1304],allow_dupl:[1027,1081],alon:[953,992,1002,1174,1274],along:[40,41,43,506,894,898,899,900,901,902,904,905,906,907,908,909,910,953,976,977,978,979,982,983,984,985,997,1027,1042,1047,1048,1061,1078,1079,1080,1092,1103,1107,1110,1117,1145,1148,1170,1171,1172,1173,1174,1230,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245],alongsid:[1316,1317],alpha:[1247,1249],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,878,881,953,1174],also:[40,41,43,1027,1030,1122,1125,1170,1171,1172,1173,1218,1219,1220,1226,1227,1255,1264,1274,1291,1301,1316],altern:1316,alwai:[40,41,43,1122,1128,1133],among:[40,41],amount:[953,999,1174,1274],angl:[878,883,1155,1156,1160],ani:[15,16,17,18,19,40,41,43,118,248,443,574,710,878,887,908,951,952,953,955,958,962,963,965,974,975,978,979,984,1027,1029,1030,1033,1050,1051,1052,1053,1054,1055,1068,1076,1081,1105,1106,1122,1126,1174,1218,1219,1222,1226,1227,1228,1229,1230,1234,1274,1280,1281,1303,1304,1316,1317,1320],anoth:[40,41,43,1003,1009,1274],another_backend:43,anyth:[43,1320],anywai:43,apart:43,api:[1274,1275],appear:[43,1027,1056],append:[40,41,894,895,1174],appli:[15,18,19,40,41,894,897,1027,1051,1052,1053,1122,1129,1130,1152,1153,1154,1170,1171,1172,1218,1222,1225,1227,1247,1248,1249,1250,1251,1252,1253,1254,1255,1264,1266,1267,1272,1273,1274,1277,1278,1279,1305,1306],applic:[1218,1222,1227,1255,1266,1267,1274,1320],appropri:[901,902],approxim:[43,878,879,882,883,888,889,891,912,937,1247,1248],arang:[138,306,458,506,595,732,1027,1079,1080],arbitrari:[40,41,953,982,983,985,1174],arc:[1155,1160],arcco:[1155,1156],arctan:[1155,1159],area:[878,879,1274],arg:[15,16,17,40,41,43,59,63,953,962,975,979,985,997,1027,1051,1052,1053,1096,1174,1280,1281,1303,1304],arg_nam:1027,arg_stateful_idx:[1303,1304],argmax:[111,242,436,567,703,901],argmin:[138,458,595,732,1027],args_clon:1174,args_dist:1174,args_to_ivi:[15,1274],args_to_n:[15,1274],args_uni:1174,argsort:[114,245,439,570,706,904],argument:[15,16,17,18,19,40,41,42,43,59,63,951,952,953,962,963,975,979,985,1027,1030,1031,1038,1050,1081,1096,1155,1156,1174,1218,1222,1280,1281,1303,1304],aris:[1274,1320],arithmet:[43,1237,1240,1243,1245],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:506,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,138,306,458,506,595,732,868,869,870,871,872,873,874,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,910,930,931,937,953,971,972,973,976,977,978,979,982,983,984,985,987,989,993,997,998,1003,1007,1013,1018,1019,1027,1028,1029,1030,1032,1034,1035,1036,1037,1039,1040,1041,1042,1043,1045,1046,1047,1048,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1063,1066,1068,1069,1070,1071,1072,1073,1074,1076,1077,1078,1079,1080,1082,1083,1084,1085,1087,1088,1089,1090,1092,1093,1094,1095,1096,1101,1103,1104,1107,1108,1109,1110,1112,1113,1114,1115,1117,1118,1119,1120,1121,1122,1124,1125,1128,1129,1133,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1174,1218,1220,1227,1230,1231,1232,1233,1234,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1291,1299,1300,1302,1307,1311,1316,1317],arrang:[1027,1051],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,400,401,402,403,404,405,406,408,409,867,868,869,870,871,872,873,874,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,910],array_api_methods_to_test:43,array_builtin:[43,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950],array_equ:[306,732,1027],array_lik:[506,1027,1033],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1027],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1274],arraywithgener:[22,1274],arraywithgradi:[24,1274],arraywithimag:[26,1274],arraywithlinalg:[28,1274],arraywithlog:[30,1274],arraywithmath:[32,1274],arraywithmeta:[34,1274],arraywithrandom:[36,1274],arraywithreduct:[38,1274],arriv:[40,41,42],articl:1274,arxiv:1274,as_arrai:[40,41,1027,1066,1101],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[456,458,466,953,971,1003,1010,1011,1012,1013],as_tensor:458,as_vari:[40,41],as_zero:[40,41],asarrai:[458,1027],ascend:[904,905],asin:[816,1155],asinh:[88,411,542,678,878],aspect:[1138,1143],assert:[40,41,1027,1036,1174],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1027,associ:[43,1145,1151],assum:[878,882,891,1317,1320],astyp:[458,1003],asynchron:[40,41,42],at_dev:[40,42,953,966,967],at_kei:[40,41],at_key_chain:[40,41],at_nod:1174,atan2:[816,1155],atan:[816,1155],atanh:[816,1155],attent:[43,1255,1266,1267,1291,1302],attribut:[0,6,40,41,874,875,876,1027,1121],audienc:[1274,1317],author:1274,automat:43,avail:[40,41,43,953,988,990,991,1000,1027,1052,1174],averag:[1122,1124,1125,1129,1170,1171,1172,1237,1240],average_across_step:[1170,1171,1172],avoid:[43,953,1174,1317],axes:[40,41,43,458,487,499,500,894,898,899,900,901,902,906,907,908,909,910,953,997,1027,1032,1043,1056,1109,1115,1120,1145,1148,1174,1237,1239,1240,1241,1242,1243,1244,1245],axes_length:[40,41,1027,1051,1052,1053],axi:[40,41,458,460,464,465,471,479,480,481,485,486,488,894,895,898,899,900,901,902,904,905,906,907,908,909,910,953,955,958,965,976,977,978,979,982,983,984,985,997,1027,1032,1042,1043,1046,1047,1048,1056,1061,1078,1079,1080,1092,1103,1104,1107,1109,1110,1117,1120,1174,1230,1236,1237,1239,1240,1241,1242,1243,1244,1245,1247,1252,1268,1270,1271],axis0:[40,41,1027,1109],axis1:[40,41,894,895,1027,1109],axis2:[894,895],back:[43,1303,1304,1307,1311],backend:[15,17,19,40,41,400,401,402,403,404,405,406,408,409,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,506,507,953,988,991,1000,1003,1009,1017,1026,1027,1071,1075,1122,1125,1127,1129,1130,1131,1136,1174,1274,1275,1280,1281,1307,1308,1309,1310,1311,1312,1316,1317,1320],backend_nam:43,background:[1274,1317],backprop:1320,backward:[908,909,910,1316],band:[1027,1059],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,406,456,457,458,481,878,888,889,912,937,953,955,956,957,958,959,960,962,963,965,966,967,968,1003,1027,1064,1080,1097,1106,1122,1174,1237,1238,1274,1277,1278,1279,1282,1284,1285,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1320],basi:43,batch:[40,41,894,897,898,953,995,996,1027,1059,1069,1138,1142,1170,1171,1172,1173,1174,1255,1264,1272,1273,1305,1306],batch_shap:[458,473,1027,1069,1088,1138,1139,1140,1141,1142,1143,1144,1145,1151,1230,1231,1255,1265,1266,1267,1291,1300],batch_siz:[506,507,1174,1230,1231,1255,1256,1257,1258,1259,1260,1261,1262],bayesian:1320,becaus:[43,1027,1030],becom:[43,1027,1039,1155,1160,1320],been:[1027,1051,1052,1053,1230,1231],befor:[40,41,43,953,997,1170,1171,1172,1174,1218,1227,1237,1239,1240,1241,1242,1243,1244,1245,1255,1266,1267,1320],before_1:[1027,1043,1120],before_n:[1027,1043,1120],begin:[1218,1219,1226,1317],behaviour:[43,1320],behind:[1122,1125,1127,1129,1130,1131,1274],being:[40,41,43,1027,1030,1091,1099,1174],believ:43,belong:[40,41],below:[43,868,872,894,895,1274,1317,1320],below_depth:[40,41],benefit:1274,bernoul:[1255,1263,1291,1299],best:[43,1027,1081,1274],beta1:[1122,1124,1125,1129,1307,1308,1309],beta2:[1122,1124,1125,1129,1307,1308,1309],beta:[1272,1273],between:[40,41,42,874,875,1027,1030,1145,1150,1218,1222,1230,1232,1268,1270,1271,1307,1309],bia:[1255,1264,1265,1291,1292,1293,1294,1295,1296,1297,1298,1301],bias_initi:[1291,1292,1293,1294,1295,1296,1297,1298,1301],bilinear:[1138,1139],bilinear_resampl:[172,359,495,635,802,1138],bilinearli:[1138,1139],binari:[878,880,1268,1269],binary_cross_entropi:1268,bit:[406,874,875,876,1003,1014,1138,1140,1144,1274],bitwis:[878,880],bitwise_and:[88,225,411,542,678,878],bitwise_oper:[0,7,8],block:[1274,1317],bool:[15,18,19,40,41,42,43,878,884,885,886,887,890,894,897,898,901,902,904,905,906,907,908,909,910,912,931,951,952,953,971,984,988,992,997,1000,1002,1003,1013,1027,1029,1034,1035,1047,1050,1054,1055,1059,1066,1068,1076,1081,1101,1103,1117,1118,1119,1122,1125,1126,1127,1128,1129,1130,1131,1133,1145,1148,1170,1171,1172,1173,1174,1218,1219,1220,1222,1226,1227,1230,1231,1237,1239,1240,1241,1242,1243,1244,1245,1247,1248,1255,1263,1280,1281,1291,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312],both:[43,1027,1046],bottom:1274,boundari:[40,41,1230,1234],branch:[43,951,952],brittl:43,broadcast:[40,41,43,878,880,886,887,894,898,901,902,908,909,910,912,930,931,937,1027,1037,1054,1083,1084,1085,1092,1145,1148,1155,1160,1163,1237,1239,1240,1241,1242,1243,1244,1245],broadcast_to:[306,732,1027],build:[1174,1274,1291,1302,1303,1304],build_mod:[1291,1302,1303,1304],builder:[43,1274],built:[953,1027,1030,1174,1291,1302,1303,1304],builtin:43,builtin_ab:[261,912],builtin_add:[261,912],builtin_and:[261,912],builtin_bool:[261,912],builtin_contain:[261,912],builtin_deepcopi:[261,912],builtin_dir:[261,912],builtin_eq:[261,912],builtin_float:[261,912],builtin_floordiv:[261,912],builtin_g:[261,912],builtin_getattr:[261,912],builtin_getattribut:[261,912],builtin_getitem:[261,912],builtin_gt:[261,912],builtin_int:[261,912],builtin_invert:[261,912],builtin_l:[261,912],builtin_lt:[261,583,719,912],builtin_mul:[261,912],builtin_n:[261,912],builtin_neg:[261,912],builtin_or:[261,912],builtin_po:[261,912],builtin_pow:[43,261,912],builtin_radd:[261,912],builtin_rand:[261,912],builtin_rfloordiv:[261,912],builtin_rmul:[261,912],builtin_ror:[261,912],builtin_rpow:[261,912],builtin_rsub:[261,912],builtin_rtruediv:[261,912],builtin_rxor:[261,912],builtin_setitem:[261,912],builtin_some_op:43,builtin_sub:[261,912],builtin_truediv:[261,912],builtin_xor:[261,912],busi:43,bypass:1317,cach:[953,969,1027,1038],cache_fn:1027,calcul:[40,41,42,43,878,879,882,883,888,889,891,892,912,930,937,1155,1163],call:[43,953,997,1027,1091,1099,1116,1122,1126,1174,1218,1219,1222,1226,1291,1302,1303,1304,1307,1311,1317,1320],callabl:[40,41,951,952,953,962,963,997,1027,1038,1050,1052,1081,1116,1170,1171,1172,1173,1174,1218,1222,1223,1224,1226,1227,1255,1266],can:[43,953,995,996,997,1027,1093,1138,1140,1174,1274,1316,1317,1320],cancel_join_thread:1174,cannot:43,captur:1274,cast:[40,41,138,306,458,595,732,1003,1027,1042,1138,1140,1144],catch_except:[1027,1050],categori:43,caus:43,ceil:[88,225,411,542,678,878,1027,1030],cell:[1255,1265,1291,1300],certain:[40,41,1027,1030,1079,1080],chain:[40,41,1170,1171,1172,1313,1314],chang:[43,953,1027,1093,1174,1218,1220,1227,1274,1316],channel:[1027,1059,1138,1140,1141,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301],check:[15,16,17,18,19,40,41,43,953,992,1002,1003,1008,1017,1026,1027,1036,1055,1068,1076,1108,1118,1122,1128,1174,1218,1219,1226,1274,1317],check_nest:[1218,1226],check_shap:[40,41],check_submod_ret:[1303,1304],check_typ:[40,41],choic:[1274,1317],choleski:[806,1145],choos:[878,890,1027,1119,1145,1150,1155,1160,1274],choose_random_framework:59,chosen:[40,41,1027,1030,1119],chunk:[953,995,996,997,1174],chunk_siz:[953,997,1174],circl:[1155,1156,1158],clark:1274,clear:[43,953,969,1174],clear_framework_stack:59,clear_mem_on_dev:[456,724,953],click:1274,clip:[40,41,306,458,732,1027,1040,1041,1083,1085,1274],clip_matrix_norm:1027,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1027],clipped_delta:1174,clone:[40,41,953,972,973,974,975,1174],clone_arrai:1174,clone_it:1174,clone_nest:1174,clonedit:1174,cloneditem:1174,clonednest:1174,close:[43,1138,1143,1155,1158,1174,1320],closest:[878,881,1003,1008],closest_valid_dtyp:1003,code:[40,41,42,43,506,1274,1275,1316,1317],codebas:[953,995,996,1174,1274,1317,1320],codomain:[878,879,882,883,889,891,892],colab:1274,collect:[15,40,41,456,458,490,495,499,503,504,506,912,951,953,1003,1027,1122,1138,1145,1152,1155,1174,1218,1230,1237,1247,1255,1268,1272,1277,1291,1305,1307],color:[40,41,42,1318,1319],column:[1027,1069],combin:[40,41,42,1138,1143,1274,1320],combined_batch_s:1174,come:1317,command:1274,comment:43,commit:1320,common:[40,41,43,1155,1160],common_key_chain:[40,41],commun:[43,1274,1317],communuti:43,compar:[40,41,904,905,912,930,1027,1029,1034,1035],comparison_oper:[0,9,10],compat:[43,878,880,886,887,894,898,908,909,910,912,930,931,937,1027,1054,1093,1155,1163,1274,1320],compil:[306,458,732,1303,1304,1307,1308,1309,1310,1311,1312],compile_on_next_step:[1303,1304,1307,1308,1309,1310,1311,1312],complet:[40,41,43,1145,1150,1174],complex:[1317,1320],compliant:[878,890],compon:[1027,1046],composit:43,comput:[40,41,878,880,886,887,890,894,896,898,906,907,912,931,953,997,1027,1040,1041,1047,1048,1054,1082,1122,1124,1125,1126,1127,1129,1130,1131,1133,1135,1138,1141,1145,1146,1147,1148,1149,1150,1152,1153,1154,1155,1156,1158,1159,1160,1164,1165,1166,1168,1218,1222,1237,1238,1239,1240,1241,1242,1243,1244,1245,1255,1256,1257,1258,1259,1260,1261,1262,1264,1266,1268,1269,1270,1271],concat:[40,41,953,982,983,984,985,997,1027,1059,1174],concaten:[40,41,138,306,458,595,732,1027,1059,1174,1274],concatten:[40,41,953,982,983,984,985,997,1174],condit:[458,951,952,1027,1119,1218,1226],conditon:[1218,1226],config:[40,41,1174],config_list:1174,configur:[40,41],conflict:43,conform:43,conjunct:1317,connect:[1291,1301,1302],consid:[40,41,878,890,1145,1150,1316,1320],consist:[40,41,953,985,1174,1237,1238,1303,1304,1317],constant:[953,962,963,1027,1043,1174,1218,1222,1268,1269,1270,1271,1272,1273,1282,1283,1287,1290,1303,1304,1305,1306,1317],constant_kwarg:1174,constant_pad:[306,458,595,732,1027],constitu:[40,41],construct:[1027,1110,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1316],constructor:[40,41,42,1027,1031,1313,1314],consum:[953,1174],cont_feat_dim:[1255,1266],contaienr:[40,41],contain:[15,18,19,42,43,868,870,872,873,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,898,906,907,908,909,910,912,930,931,937,953,972,976,997,1003,1007,1027,1028,1032,1039,1040,1041,1044,1054,1068,1083,1085,1094,1105,1106,1122,1124,1125,1127,1129,1130,1131,1155,1163,1170,1171,1172,1173,1174,1230,1231,1237,1239,1240,1241,1243,1245,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[458,732,1027],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[458,1027,1086,1255,1266,1291,1302],context_dim:[1291,1302],contextmanag:[59,60],continu:[43,1174,1317],contract:[40,41,1237,1238],contribut:[1274,1275],contributor:[43,1274],control:1274,conv1d:[203,389,520,857,1255,1274,1291],conv1d_transpos:[203,389,520,857,1255],conv1dtranspos:[1274,1291],conv2d:[203,389,520,660,857,1255,1274,1291],conv2d_transpos:[203,389,520,857,1255],conv2dtranspos:[1274,1291],conv3d:[203,389,520,660,857,1255,1274,1291],conv3d_transpos:[203,389,520,857,1255],conv3dtranspos:[1274,1291],convent:[40,41,1237,1238],conver:[953,969,980,992,999,1002,1174],convers:[16,17,18,19,40,41,1174,1274],convert:[15,16,17,18,19,40,41,43,953,980,981,1003,1009,1015,1016,1027,1102,1113,1114,1138,1140,1144,1145,1151,1174,1218,1220,1227,1274,1281],convert_dtyp:1003,convolut:[1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298],cool:43,cooler:43,coordin:[1027,1084,1155,1156,1158,1160],copi:[40,41,43,506,1027,1045,1174,1218,1220],copy_arrai:[458,732,1027],copy_nest:1218,core:[456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,506,507,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,955,956,957,958,959,960,962,963,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1274],corner:43,correct:[43,1274,1317],correctli:[40,41,43,901,902,1145,1148,1155,1160,1237,1239,1240,1241,1242,1243,1244,1245],correspond:[40,41,43,912,937,1027,1042,1230,1231],cos:[88,411,542,678,878,1027,1059,1155,1156,1168,1317],cosh:[88,411,542,678,816,878,1155],cosin:[878,882,883,1155,1156,1157,1162],cost:[1122,1124,1125,1127,1129,1130,1131,1170,1171,1172,1173],cost_fn:[1170,1173],could:1320,count:[40,41,899,900,908,909,910,1174,1237,1242,1244],cours:43,cprint:1318,cpu:[40,41,43,953,990,992,998,999,1002,1027,1030,1033,1061,1062,1069,1079,1080,1088,1089,1095,1096,1121,1174,1230,1231,1232,1233,1234,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1313,1314,1316,1317],creat:[40,41,868,869,870,871,873,953,962,963,1027,1030,1033,1060,1061,1062,1069,1079,1080,1088,1089,1095,1096,1112,1121,1122,1135,1174,1230,1231,1232,1233,1234,1274,1275,1280,1281,1282,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1316,1320],create_if_abs:[40,41],create_vari:1282,creation:[40,41,42,43],creation_funct:[400,401,402,403,404,405,868,869,870,871,872,873],crop:[1138,1142],crop_siz:[1138,1142],cross:[306,732,1027,1268,1269,1270,1271],cross_entropi:1268,cuda:[40,41,953,962,981,998,1027,1030,1033,1061,1062,1069,1079,1080,1088,1089,1095,1096,1121,1174,1230,1231,1232,1233,1234,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1313,1314],cumprod:[138,306,458,732,1027],cumsum:[732,1027],cumul:[1027,1047,1048],current:[40,41,42,43,953,962,986,987,989,993,1003,1009,1017,1026,1027,1049,1063,1071,1075,1087,1090,1174,1218,1219,1226,1274,1320],current_framework:59,current_framework_str:[458,732,1027,1174],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1255,1256,1257,1258,1259,1260,1261],d_out:[1255,1256,1257,1258,1259,1260,1261],da_can_termin:1174,da_dim_s:[953,1174],da_direct:1174,da_tune_step:[953,1174],dai:1320,daniel:1274,data:[40,41,42,43,868,869,870,871,872,873,875,876,878,879,880,881,882,883,884,885,886,887,889,890,891,892,894,895,898,899,900,904,905,908,909,910,912,930,931,937,953,955,956,957,958,959,960,965,966,967,981,1003,1007,1008,1009,1013,1014,1015,1016,1017,1018,1019,1026,1027,1030,1033,1054,1060,1069,1076,1089,1093,1104,1108,1121,1122,1128,1136,1155,1163,1174,1255,1264,1274],data_format:[1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298],data_type_funct:[406,408,409,874,875,876],dataset:[40,41],datatyp:[40,41,1003,1008,1018,1019],dcdw:[1122,1124,1125,1127,1129,1130],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1122,1129,1130,1307,1309,1310],decay_lambda:[1122,1129,1130,1307,1309,1310],decid:[40,41,1320],decompos:[1145,1146,1150],decomposit:[894,897,1145,1146,1150],decor:43,decrement:[1027,1072],dedic:[1122,1136,1280,1281],deep:[40,41,1274],deep_copi:[40,41],deeper:[953,975,979,985,1174,1218,1227,1274],deepli:[1218,1220],def:[43,60,84,221,407,538,674,954,961,964,1004,1005,1006,1123,1174,1178,1185,1274,1283,1286,1289,1316,1317,1320],default_dev:43,default_devic:953,default_dtyp:[43,1003],default_float_dtyp:1003,default_int_dtyp:1003,default_key_color:[40,41,42],default_nod:1174,default_rng:506,default_v:[1027,1050],defaultdevic:[953,954],defaultdtyp:[1003,1004],defaultfloatdtyp:[1003,1005],defaultintdtyp:[1003,1006],defer:43,defin:[43,1027,1046,1088,1121,1230,1232],definit:43,degre:[1155,1168],del:1174,delai:43,delet:43,delta:[1122,1124,1174],delta_dim_s:1174,delta_percent_mem:1174,delta_sf:1174,delta_util:1174,demo:1274,denomin:[1027,1058,1065,1098,1105,1106,1272,1273,1305,1306],denot:43,dens:[1291,1301],depend:[43,878,879,882,883,888,889,891,894,897,904,905,912,937,1027,1119,1274],depth:[40,41,458,482,953,975,979,985,1027,1067,1088,1174,1218,1227,1303,1304],depth_cutoff:[40,41],depthwis:[1255,1262,1291,1298],depthwise_conv2d:[203,389,520,660,857,1255],depthwiseconv2d:[1274,1291],deriv:[868,871,1122,1124,1125,1127,1129,1130,1131,1218,1220,1227,1274,1303,1307,1311,1313],descend:[894,897,904,905],descent:[1122,1127,1307,1312],describ:[40,41,1237,1238],descript:[894,898],design:[1274,1275],desir:[40,41,953,998,1003,1007,1027,1030,1033,1069,1070,1089,1121,1138,1143,1174,1237,1239,1240,1241,1243,1245],desired_aspect_ratio:[495,498,1138,1143],desired_percent_increas:1174,det:[428,559,695],detail:1320,detect:[40,41,1218,1219,1226],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,878,879,880,882,883,884,885,889,891,892,894,895,896,898,908,909,910,912,937,953,988,990,991,1000,1003,1007,1008,1014,1017,1018,1019,1026,1027,1029,1030,1033,1034,1035,1068,1071,1075,1076,1108,1118,1122,1128,1155,1163,1170,1171,1172,1173,1174,1255,1266],dev:[40,41,42,43,131,300,400,403,456,458,459,461,471,472,473,480,481,482,483,484,489,506,507,588,724,868,871,953,956,957,959,960,962,963,966,967,969,970,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,992,993,994,995,996,997,998,999,1002,1027,1030,1033,1061,1062,1069,1079,1080,1088,1089,1095,1096,1121,1122,1137,1230,1231,1232,1233,1234,1280,1281,1282,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1313,1314],dev_clon:[40,41,953],dev_clone_arrai:953,dev_clone_it:953,dev_clone_nest:953,dev_dist:[40,41,953],dev_dist_arrai:953,dev_dist_it:953,dev_dist_nest:953,dev_from_str:[43,131,300,456,588,724,953],dev_mapp:953,dev_str:[40,41],dev_to_str:[131,300,456,588,724,953],dev_unifi:953,dev_unify_arrai:953,dev_unify_it:953,dev_unify_nest:953,dev_util:953,devclonedit:953,devcloneditem:953,devclonednest:953,devdistit:953,devdistitem:953,devdistnest:953,develop:[43,1274,1317,1320],deviat:[40,41,1230,1233,1237,1243,1272,1273,1305,1306],devic:[21,40,41,43,400,401,402,405,457,458,470,868,869,870,871,872,873,955,956,957,958,959,960,962,963,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1027,1030,1033,1060,1061,1062,1069,1079,1080,1088,1089,1095,1096,1121,1122,1137,1230,1231,1232,1233,1234,1274,1280,1281,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1313,1314],devmanag:[953,961],devmapp:[953,963],devmappermultiproc:953,diag:[894,897],diagon:[105,235,428,559,695,868,872,894,1027,1069],dict:[15,16,17,18,19,40,41,42,953,955,958,962,963,965,975,976,977,978,979,1027,1051,1052,1053,1081,1170,1171,1172,1174,1218,1220,1221,1222,1225,1227,1280,1281],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,874,875,953,972,973,976,977,1145,1150,1174,1255,1264,1274,1317,1320],differenti:[1274,1317],dilat:[1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298],dim:[40,41,43,894,897,1027,1088,1138,1139,1143,1174,1291,1302],dim_siz:[40,41,953,1174],dimens:[40,41,42,868,872,894,895,897,898,899,900,901,902,908,909,910,953,984,1027,1037,1042,1046,1051,1052,1053,1056,1059,1066,1078,1088,1092,1093,1103,1104,1107,1115,1117,1138,1142,1145,1148,1170,1171,1172,1173,1174,1230,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1252,1255,1256,1257,1258,1259,1260,1261,1262,1265,1268,1270,1271,1291,1292,1293,1294,1295,1296,1297,1298,1301,1302],dimension:[40,41,506,894,897,898,908,909,910,1027,1103,1104],direct:1174,directli:[43,1218,1227,1317,1320],directori:[1027,1100,1111],discord:43,discret:[1268,1270],discuss:43,disk:[40,41,1138,1140],distanc:[1027,1030],distribut:[40,41,953,972,976,977,978,979,1174,1230,1231,1232,1233,1234,1255,1263,1291,1299,1303,1304],distribute_nest:1174,distributedarrai:[40,41],distrubt:[1268,1270],dive:[1274,1317],divid:[40,41,1027,1103,1105,1155],dividend:[1155,1163],divis:[1027,1058,1065,1098,1105,1106,1122,1124,1125,1129,1155,1163,1307,1308,1309],divisor:[1122,1124,1125,1129,1155,1163,1307,1308,1309],doc:1274,docstr:43,document:43,doe:[40,41,43,1027,1030,1103,1316],doesn:[1145,1150,1274],doing:43,domain:[878,879,882,883,889,891,892,1155,1156],don:[43,1274],done:43,door:1320,dot:[1145,1147,1255,1266,1267,1291,1302],down:1316,downscal:[1027,1040,1041],drag:[1274,1320],draw:[1230,1231,1233,1234],drawn:[1230,1231,1232,1233,1234],drop:[1274,1320],dropout:[1255,1274,1291,1302],dropout_r:[1291,1302],ds_tune_step:953,dtype:[40,41,43,138,306,400,401,402,403,405,406,408,409,458,459,461,462,470,473,489,595,732,868,869,870,871,873,874,875,876,901,902,1007,1008,1009,1010,1011,1012,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1030,1033,1060,1069,1088,1089,1121],dtype_bit:[138,306,458,595,732,1003],dtype_from_str:[43,138,306,458,595,732,1003],dtype_in:[458,467,468,469,1003,1009,1014,1015,1016,1017,1018,1019,1026],dtype_to_str:[138,306,458,595,732,1003],duplic:[40,41,43],dure:[40,41,43,951,952,1027,1116,1122,1124,1125,1129,1170,1171,1172,1173,1303,1304,1307,1308,1309,1311],dynam:[43,458,463,951,952],each:[40,41,42,43,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,897,912,931,937,953,962,963,972,973,974,975,976,977,978,984,996,997,1027,1028,1029,1043,1054,1092,1103,1107,1110,1120,1122,1125,1127,1129,1130,1131,1138,1141,1155,1158,1163,1165,1166,1174,1218,1222,1230,1231,1237,1238,1255,1256,1257,1258,1259,1260,1261,1262,1263,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1317],eager:1317,easi:1320,easili:1274,econom:1320,ecosystem:1274,edg:[1027,1039,1043,1120],effect:[1122,1131],effective_grad:[1122,1131],effici:1320,einop:[40,41,1027,1051,1052,1053],einops_rearrang:[40,41,1027],einops_reduc:[40,41,1027],einops_repeat:[40,41,1027],einstein:[40,41,1237,1238],einsum:[40,41,189,377,508,650,837,1237],either:[40,41,43,878,889,891,1027,1050,1081,1084,1086,1170,1171,1172,1173,1174,1291,1302,1303,1304,1317],eleg:1174,element:[40,41,43,506,868,872,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,899,900,906,907,908,909,910,912,930,931,937,953,974,978,984,1003,1007,1027,1028,1030,1032,1034,1035,1039,1040,1041,1047,1048,1054,1057,1058,1069,1070,1083,1085,1092,1094,1103,1114,1119,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1174,1237,1238,1240,1242,1244,1247,1248,1249,1250,1251,1252,1253,1254,1255,1263,1291,1299],elementwis:[40,41,912,930],elementwise_affin:[1305,1306],elementwise_funct:[878,879,880,881,882,883,884,885,886,887,888,889,890,891,892],elemtn:[1230,1231],elif:1174,els:[43,1027,1036,1050,1055,1174],elsewher:[1027,1119],emphas:1274,empti:[40,41,77,214,400,531,667,868,908,909,910,1145,1150,1174],enabl:[40,41,42,43,1274],encapsul:[874,876],encod:[1027,1059,1138,1140],end:[1027,1030,1274,1317],engag:43,ensur:43,entir:[40,41,908,909,910,953,997,1174,1274,1291,1300],entri:[40,41,1027,1079,1080,1103,1104],entropi:[1268,1269,1270,1271],enumer:1174,environ:1274,eps:[406,874,875],epsilon:[1122,1124,1125,1129,1268,1269,1270,1271,1272,1273,1305,1306,1307,1308,1309],equal:[40,41,88,411,542,678,878,884,894,895,904,905,1027,1029,1034,1035,1043,1103,1120,1155,1168,1230,1234],equality_matrix:[1027,1029],equat:[40,41,1237,1238],equival:[878,890,894,898,1027,1030,1155,1168],erf:[504,816,1155],error:[40,41,43,953,1027,1104,1155,1164,1174,1247,1248,1303,1304,1307,1311],essenti:43,etc:[40,41,43,953,998,1027,1030,1033,1061,1062,1069,1079,1080,1088,1089,1095,1096,1121,1174,1230,1231,1232,1233,1234,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1313,1314,1320],euclidean:[894,898],euler:867,evalu:[40,41,878,888,889,908,909,910,1027,1084,1218,1219,1226],even:[43,1320],evenli:[40,41,1027,1030,1079,1080,1103],everi:[43,1027,1029,1320],exact:[40,41],exampl:[43,951,952,1027,1039,1107,1145,1150,1274,1316,1317,1320],example_input:[458,463,951,952],exc_tb:1174,exc_typ:1174,exc_val:1174,exce:[1027,1085],except:[40,41,44,47,908,909,910,1027,1030,1036,1042,1050,1116,1174],excess_s:1174,excit:[1274,1317],exclud:[59,61,1027,1030,1230,1234],exclus:[40,41,458,465,478,490,492,1027,1047,1076,1122,1128,1230,1232],execut:[43,1027,1116,1317],execute_with_gradi:[169,354,490,630,796,1122,1274,1316],exist:[40,41,1027,1050,1174,1274,1307,1311,1320],exp:[816,1155],expand:[40,41,1027,1056,1059],expand_dim:[40,41,306,732,1027,1174],expect:[1027,1031],explain:[43,1317],explicitli:[43,1291,1300,1302,1303,1304,1317],expon:[43,912,937,1027,1106],exponenti:[43,912,937,1155,1164,1165],expos:[1027,1033,1044],express:[878,882,891,1027,1084],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1122,1126],eye:[1145,1147],fabian:1274,fabio:1274,factor:[894,897,953,962,995,996,997,1122,1124,1125,1129,1130,1174,1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298,1307,1308,1309,1310],fail:43,falck:1274,fall:[1303,1304,1307,1311],fallback_to_non_compil:[1303,1304,1307,1311],fals:[15,18,19,40,41,42,59,66,67,68,69,70,456,458,465,466,478,485,488,490,491,492,499,500,878,884,885,890,894,898,901,902,904,905,906,907,908,909,910,953,971,984,992,997,1002,1003,1010,1011,1012,1013,1027,1029,1047,1050,1055,1059,1066,1076,1081,1101,1103,1117,1119,1122,1125,1126,1127,1128,1129,1130,1131,1145,1148,1170,1171,1172,1173,1174,1218,1219,1220,1222,1226,1227,1237,1239,1240,1241,1242,1243,1244,1245,1280,1281,1303,1304,1307,1308,1309,1310,1311,1312],fan_in:1282,fan_mod:1282,fan_out:1282,far:[1218,1219,1226,1316],faster:[951,952],favourit:[1274,1316],feasibl:1320,feat_dim:[1255,1266,1267],fed:[953,997,1174],feed:[953,997,1174],few:43,field:1320,file:[40,41,43,1027,1100,1111,1303,1304],filepath:[40,41],fill:[40,41,868,869,870,871,873,1027,1060,1089,1230,1232],fill_valu:[458,470,1027,1060],filter:[1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298,1320],filter_s:[1291,1292,1293],filter_shap:[1291,1294,1295,1296,1297,1298],find:[40,41,43,1320],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,220,221,406,407,537,538,673,674,874],finish:[1274,1320],finit:[878,884],first:[40,41,43,506,878,880,886,887,894,895,897,912,930,951,952,953,984,1027,1034,1042,1046,1054,1079,1080,1107,1109,1122,1126,1170,1171,1172,1173,1174,1218,1219,1226,1230,1236,1237,1242,1244,1291,1302,1303,1304,1307,1311,1317,1320],firstlayersiren:[1274,1282],firstli:[1317,1320],fist:[953,997,1174],fit:[40,41,456,458,490,495,499,503,504,506,1027,1092,1138,1143],fix:43,fkt:1320,flag:[40,41,43,1122,1128],flat:[40,41,43,1027,1092,1095],flat_list:[40,41],flatten:[40,41,894,898,901,902,1027,1059,1092,1237,1239,1240,1241,1243,1245],flatten_key_chain:[40,41,1303,1304],flexibl:[1274,1317],flip:[40,41,109,240,434,565,701,899],float32:[43,458,473,1003,1007,1015,1016,1027,1030,1033,1069,1089,1121],float_dtyp:[1003,1011,1021],float_img_to_uint8_img:1138,floor:[306,458,732,1027,1058,1174],floormod:[306,458,732,1027],fluid:1320,folder:[43,1274],follow:[40,41,43,874,876,894,898,953,997,1027,1072,1073,1074,1105,1106,1122,1125,1127,1129,1130,1131,1174,1218,1222,1227,1255,1266,1267,1274,1291,1301,1307,1311],followng:[874,875],fomaml_step:1170,forget:[1122,1124,1125,1129,1307,1308,1309],fork:[1027,1086,1274,1275],forkserv:[1027,1086,1174],form:[15,16,17,18,19,40,41,868,872,894,895,1027,1033,1122,1125,1127,1129,1130,1131,1218,1220,1227,1255],format:[40,41,43,953,971,1003,1007,1009,1013,1027,1030,1033,1069,1089,1121,1174,1237,1238,1274,1316,1317],format_fn:[40,41],format_key_chain:[40,41],forward:[1303,1304,1307,1311,1316],found:[40,41,42],fourier:[1027,1059],fourier_encod:1027,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,110,112,115,117,119,120,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,360,361,362,364,365,366,367,369,370,373,374,375,376,378,379,380,381,382,383,384,385,388,390,391,392,393,394,395,396,401,402,403,404,405,407,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,429,430,431,432,433,435,437,440,442,444,445,457,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,491,492,493,494,496,497,498,500,501,502,505,507,509,510,511,512,513,514,515,518,519,521,522,523,524,525,526,527,532,533,534,535,536,538,539,540,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,560,561,562,563,564,566,568,571,573,575,576,584,589,590,591,592,593,594,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,631,632,633,634,636,637,638,640,641,642,646,647,648,649,651,652,653,654,655,656,657,661,662,663,668,669,670,671,672,674,675,676,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,696,697,698,699,700,702,704,707,709,711,712,720,725,726,727,728,729,730,731,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,797,798,799,800,801,803,804,805,807,808,809,810,811,812,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,834,835,836,838,839,840,841,842,843,844,847,848,849,850,851,852,853,855,856,858,859,860,861,862,863,864,869,870,871,872,873,875,876,879,880,881,882,883,884,885,886,887,888,889,890,891,892,895,896,897,898,900,902,905,906,907,909,910,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1248,1249,1250,1251,1252,1253,1254,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1273,1274,1278,1279,1280,1281,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1304,1306,1307,1308,1309,1310,1311,1312,1314,1315,1316,1317,1319,1320],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1174,framewrk:[1027,1086],free:43,freed:43,freeli:43,frequenc:[1027,1059],from:[40,41,42,43,868,871,878,892,894,895,899,900,906,907,908,909,910,953,962,963,997,1003,1009,1027,1050,1061,1062,1069,1093,1104,1112,1119,1122,1125,1129,1138,1142,1145,1150,1170,1171,1172,1173,1174,1218,1220,1227,1230,1231,1232,1233,1234,1237,1242,1244,1255,1263,1266,1274,1280,1281,1291,1299,1302,1307,1311,1316,1317],from_cal:[1303,1304],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,138,306,458,595,732,874,875,1027,1145,1150,1274],full_matric:[894,897],fulli:[43,1274,1291,1301,1302,1316],func:[40,41,458,463,490,491,951,952,953,997,1027,1038,1122,1126,1174],further:[43,1320],furthermor:1320,futur:1320,gain:1282,gamma:[1272,1273],gather:[40,41,138,306,458,595,732,1027,1062],gather_nd:[40,41,138,306,458,595,732,1027],gauss:[1155,1164],gaussian:[1247,1248],geglu:[1274,1277],gelu:[387,517,846,1247,1274,1277],gener:[23,40,41,43,456,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,506,951,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1128,1230,1232,1234,1235,1274,1307,1311],geometr:[1027,1059],get:[40,41,43,874,875,876,953,962,963,971,986,987,992,996,999,1002,1003,1013,1014,1027,1031,1063,1064,1065,1091,1174,1274,1291,1300,1320],get_all_arrays_in_memori:1027,get_all_arrays_on_dev:953,get_framework:59,get_initial_st:[1291,1300],get_min_bas:1027,get_min_denomin:1027,get_mod_kei:[1303,1304],get_num_dim:[458,732,1027],get_referrers_recurs:1027,getfullargspec:1174,gist:1274,give:[43,1027,1093,1317],given:[40,41,43,868,869,899,900,953,986,992,995,996,997,999,1002,1003,1007,1027,1030,1033,1039,1047,1048,1062,1079,1080,1089,1092,1095,1096,1103,1110,1115,1117,1121,1122,1124,1125,1127,1129,1130,1131,1145,1147,1151,1155,1156,1174,1218,1223,1224,1230,1233,1234,1236,1237,1240,1242,1243,1244,1245,1255,1256,1257,1258,1259,1260,1261,1262,1280,1281,1320],global:[40,41,42,953,962,963,970,995,996,997,1003,1010,1011,1012,1027,1049,1064,1065,1091,1097,1098,1099,1105,1106,1122,1137,1174,1272,1273,1305,1306],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1274,1282,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301],good:43,googl:1274,got:[43,1274],gpu0:43,gpu2:43,gpu:[953,988,991,1174],gpu_is_avail:[456,953,1174],grad:[1274,1307,1311,1316],gradient:[25,40,41,491,492,493,494,953,997,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1141,1170,1171,1172,1173,1274,1307,1308,1309,1310,1311,1312,1316,1320],gradient_descent_upd:[1122,1170,1171,1172,1173],gradient_imag:[172,359,495,635,802,1138],gradienttrack:[1122,1123],graph:[1122,1125,1127,1129,1130,1131,1303,1304],greater:[40,41,1027,1030,1057,1104,1230,1234],green:[40,41,42,1318,1319],grid:[1027,1084],group:[1138,1143],guid:[43,1274,1275,1320],gym:1274,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1320,half:[1027,1030,1174,1230,1234],hand:1274,handl:[40,41,42,43,951,952,953,969,971,980,981,992,999,1002,1122,1125,1127,1129,1130,1131,1174,1307,1308,1309,1310,1311,1312],happen:43,has:[40,41,43,894,896,901,902,1027,1107,1145,1150,1155,1159],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1027],hasattr:1174,have:[40,41,43,868,869,870,871,872,873,874,875,878,879,880,881,882,883,884,885,886,887,889,890,891,892,894,895,897,898,899,900,901,902,904,905,908,909,910,912,930,931,937,1027,1042,1046,1051,1052,1053,1054,1060,1107,1122,1128,1136,1155,1163,1174,1274,1316,1317],haven:43,hdf5:[40,41,1303,1304],head:[1255,1266,1291,1302],head_dim:[1291,1302],height:[1138,1143],height_cutoff:[40,41],help:[43,59,406,456,457,953,965,966,967,968,1003,1122,1274,1282,1284,1285,1287,1288,1290],here:[43,1274],hidden:[1255,1265,1291,1300],hierarch:[1027,1044],hierarchi:[40,41],high:[40,41,506,1230,1232,1234],higher:[894,897,1122,1125,1127,1129,1130,1131],highest:[1230,1232],highest_util:1174,highest_util_nod:1174,highli:1274,highlight:1320,hint:43,hkt:1320,hold:[1003,1007,1027,1030,1033,1095,1096],host:1274,hot:[1027,1088],hour:43,how:[1274,1291,1302,1303,1304,1317,1320],howev:[43,1317],http:1320,hyperbol:[878,879,883,1155,1157,1161,1162,1167,1169,1247,1254],hypothet:[43,1320],icon:1274,idea:1274,ident:[40,41,43,138,306,458,595,732,1027],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[867,874,875,878,892],if_exist:[40,41],ignor:[40,41,1307,1311],ignore_key_error:[40,41],ignore_miss:[1307,1311],ignore_non:[40,41],iii:43,iinfo:[83,220,406,537,673,874],imag:[27,496,497,498,1027,1078,1139,1140,1141,1142,1143,1144,1255,1256,1257,1258,1259,1261,1262,1274,1320],image_dim:[1138,1142],imkkhk:1320,immedi:[1274,1317,1320],implement:[43,878,879,882,883,888,889,891,904,905,912,937,1274,1317,1320],in_featur:[1255,1264],inadvert:43,includ:[40,41,43,894,898,908,909,910,1027,1030,1068,1105,1106,1118,1218,1219,1230,1234,1291,1301,1302,1305,1306,1316],include_deriv:[1218,1220,1227],include_empti:[40,41],include_inf:[40,41,1027,1068,1118],include_nest:[1218,1219],include_self:[40,41],inclus:[43,1230,1232],incom:[1255,1264],increas:[953,975,979,985,1027,1043,1056,1120,1174,1218,1227],increasingli:1320,increment:[1027,1073,1174],inde:1274,indent:[40,41,42],independ:[1230,1231],index:[40,41,458,506,901,902,904,905,1027,1032,1061,1062,1084,1104,1107,1218,1221,1223,1224,1225,1228],index_nest:1218,indic:[40,41,458,471,472,482,483,484,894,898,901,902,904,905,1027,1032,1061,1062,1070,1088,1095,1096,1218,1219,1221,1223,1224,1225,1226,1228,1229,1230,1231,1247,1252,1255,1256,1257,1258,1259,1260,1261,1262,1272,1273,1291,1292,1293,1294,1295,1296,1297,1298,1303,1304],indices_wher:[138,306,458,732,1027],indistinguish:[878,892],inevit:1320,inf:[40,41,894,898,1027,1068,1077,1118,1155,1159],infer:[868,871,906,907,951,952,1027,1066,1069,1093,1101,1138,1142,1145,1150,1317,1320],infin:[878,879,881,882,883,884,889,891,892,894,898,908,909,910,1027,1077],infinit:[878,892],inform:[874,875,876,1122,1133],init_c:[1255,1265],init_h:[1255,1265],init_on_first_step:[1307,1311],initi:[40,41,42,43,59,406,456,457,953,965,966,967,968,1003,1122,1174,1255,1265,1274,1284,1285,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1307,1311],initialz:[1303,1304],inner:[1170,1171,1172,1173],inner_batch_fn:[1170,1171,1172],inner_batch_shap:[1255,1264],inner_cost_fn:[1170,1171,1172],inner_grad_step:[1170,1171,1172,1173],inner_learning_r:[1170,1171,1172,1173],inner_optimization_step:[1170,1171,1172,1173],inner_v:[1170,1171,1172],innermost:[868,872,894,895],inp:1174,inplac:[40,41,1027,1036,1071,1075,1108,1122,1125,1127,1129,1130,1131,1280,1281,1307,1308,1309,1310,1311,1312],inplace_arrays_support:[458,1027],inplace_decr:[138,306,458,595,732,1027],inplace_incr:[138,306,458,595,732,1027],inplace_oper:[0,11,12],inplace_upd:[40,41,138,306,458,595,732,1027,1280,1281],inplace_variables_support:[458,1027],input:[15,18,19,40,41,42,43,868,871,872,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,897,898,899,900,901,902,904,905,906,907,908,909,910,951,952,953,962,963,970,971,972,975,976,979,985,997,998,1003,1007,1008,1010,1011,1012,1013,1014,1018,1019,1027,1028,1029,1032,1034,1035,1036,1037,1039,1040,1041,1042,1043,1045,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1066,1068,1069,1070,1072,1073,1074,1076,1077,1078,1082,1083,1084,1085,1092,1094,1101,1102,1104,1107,1108,1109,1110,1112,1113,1114,1115,1117,1118,1120,1122,1126,1128,1133,1137,1138,1139,1140,1141,1142,1144,1145,1148,1150,1152,1153,1154,1155,1157,1159,1161,1162,1163,1167,1168,1169,1170,1171,1172,1173,1174,1230,1231,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1272,1273,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1305,1306,1317],input_ax:[953,997,1174],input_channel:[1291,1292,1293,1294,1295,1296,1297,1300,1301],input_queu:1174,inputs_split:1174,insert:[901,902,1027,1056],insid:43,inspect:1174,inspir:1320,instal:1274,instanc:[15,16,17,18,19,40,41,43,506,912,930,931,937,953,962,1174,1280,1281,1313,1314],instead:[40,41,43,506,1237,1239,1240,1241,1242,1243,1244,1245,1320],int32:43,int64:[1003,1007,1027,1030,1033,1069,1089,1121],int_dtyp:[1003,1012,1022],integ:[40,41,506,874,876,878,880,881,894,898,908,909,910,1003,1019,1027,1030,1057,1094,1103,1230,1232,1235],integr:1274,intend:43,inter:1274,interact:1274,interchang:[40,41,1027,1109],interest:1274,interfac:[1027,1033,1317],intermedi:[40,41],intern:[40,41,953,1122,1136,1174,1218,1219,1226,1227,1282,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1313,1314],interpol:[1027,1078],intersect:[1155,1156],interv:[40,41,908,909,910,1027,1030,1039,1079,1080,1155,1158,1230,1234],introduc:1320,inv:[806,1145,1320],invalid:[908,909,910],invalid_dtyp:1003,invers:[878,879,1145,1147,1149,1155,1156,1157,1158,1159,1161,1320],invert:[1145,1147,1149],invest:1320,investig:43,invoc:[951,952],irrespect:1274,is_al:1174,is_arrai:[138,306,458,595,732,1027,1174],is_float_dtyp:1003,is_int_dtyp:1003,is_mean:1174,is_sum:1174,is_vari:[169,354,490,630,796,1122],isfinit:[88,225,411,542,678,878],isinf:[306,595,732,1027],isinst:1174,isnan:[88,225,411,542,678,878],isnumer:1174,issu:[1274,1275],issue_numb:43,item:[15,19,40,41,912,924,925,953,962,963,965,972,974,976,978,984,1003,1010,1027,1044,1067,1105,1106,1174,1218,1222,1223,1224,1227,1228,1229,1274,1303,1304,1316],iter:[15,16,17,18,19,40,41,42,951,952,953,956,957,959,960,962,963,966,967,974,976,977,978,979,984,997,1027,1029,1037,1042,1043,1069,1084,1089,1092,1093,1096,1101,1103,1107,1110,1115,1120,1174,1218,1219,1220,1222,1226,1227],iterbal:[953,974,978,984,1174],its:[506,953,997,1027,1069,1093,1109,1115,1174,1274],itself:[43,1218,1227],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,400,401,402,403,404,405,406,408,409,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,867,868,869,870,871,872,873,874,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,910,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,955,956,957,958,959,960,962,963,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1284,1285,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1318,1319],ivy_backend:[40,41],ivy_bay:1320,ivy_test:43,ivyfcmodel:1316,ivyh:[40,41,42],ivymodul:[200,854],jame:1274,jax:[43,1122,1128,1274,1320],jax_concat:1274,jnp:1274,join:[40,41,1027,1042,1107,1174],journal:1274,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1274,1291,1300,1320],kaimingnorm:[1282,1286],kalman:1320,kalman_filt:1320,kalman_filter_step:1320,kalman_filter_upd:1320,keep:[40,41,953,998,1027,1117,1174,1274,1275,1320],keep_inner_v:[1170,1171,1172],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1170,1171,1172],keepdim:[40,41,458,488,499,500,894,898,901,902,906,907,908,909,910,1027,1117,1145,1148,1237,1239,1240,1241,1242,1243,1244,1245],kei:[15,16,17,40,41,42,43,912,917,953,965,1027,1044,1170,1171,1172,1174,1218,1221,1225,1255,1266,1267,1274,1280,1281,1291,1302,1307,1311],kept:[40,41,42,1170,1171,1172],kera:1320,kernel:[1255,1265],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,953,962,963,975,979,985,1027,1031,1051,1052,1053,1081,1174,1218,1222,1303,1304],keyword_color_dict:[40,41,42],kind:[874,875,876,1320],kwarg:[15,16,17,40,41,42,59,63,953,962,975,979,985,1027,1081,1174,1280,1281,1303,1304],kwarg_stateful_idx:[1303,1304],kwargs_clon:1174,kwargs_dist:1174,kwargs_uni:1174,label:[43,1268,1269,1270,1271],lamb:[1122,1129,1274,1307],lamb_upd:1122,lambda:[1174,1307,1310,1312,1316],lar:[1122,1129,1130,1274,1307],larger:[874,875,1027,1039],largest:[40,41,874,875,876,1027,1057],lars_upd:1122,last:[40,41,894,895,897,899,900,904,905,908,909,910,1027,1030,1046,1078,1103,1107,1145,1148,1237,1242,1244,1247,1252,1255,1265,1291,1301],later:[40,41,1027,1038],latest:[1291,1300],layer:[1122,1125,1127,1129,1131,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1272,1273,1274,1282,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1313,1314,1320],layer_norm:1272,layernorm:[1274,1305],layerwis:[1122,1130,1307,1310],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1218,1219,1226],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1247,1248,1249],leaky_relu:[846,1247],learn:[906,907,1122,1125,1127,1129,1130,1131,1145,1150,1170,1171,1172,1173,1230,1236,1274,1307,1308,1309,1310,1311,1312,1317,1320],learnabl:[1272,1273,1305,1306],least:43,leav:[15,18,19,40,41,1218,1219,1220,1226,1227],left:[40,41,43,901,902,1145,1148,1237,1239,1240,1241,1242,1243,1244,1245,1274],leftmost:[40,41],len:1174,length:[40,41,42,1027,1030,1093,1104,1115],lenton2021ivi:1274,lenton:1274,less:[40,41,43,88,225,411,542,678,878,881,889,892,894,898,1174,1230,1234],less_equ:[88,411,542,678,878],less_util_node_str:1174,let:[1317,1320],level:1274,librari:[878,890,1274,1316,1320],lightweight:1274,like:[43,1122,1128,1230,1234,1274,1316,1317,1320],likewis:43,limit:[40,41,42,43,874,875,876,1027,1039,1040,1041],linalg:[29,1146,1147,1148,1149,1150,1151,1274],line:43,linear0:[1274,1316],linear1:1274,linear2:1316,linear:[1027,1059,1078,1145,1247,1248,1249,1250,1255,1263,1274,1291,1292,1293,1294,1295,1296,1297,1298,1316],linear_algebra:[499,500,501,502,894,895,896,897,898],linear_resampl:[138,306,458,595,732,1027],linearli:[1027,1059],link:[43,1274],linspac:[138,306,458,595,732,1027,1030],list:[15,18,19,40,41,400,401,402,405,868,869,870,873,899,900,908,909,910,953,962,963,972,973,975,976,977,979,982,983,997,1027,1030,1033,1035,1084,1102,1103,1112,1117,1170,1171,1172,1174,1218,1219,1220,1222,1226,1227,1255,1256,1257,1258,1259,1260,1261,1262,1274,1275,1280,1281,1291,1292,1293,1294,1295,1296,1297,1298],list_join:[40,41,42],list_stack:[40,41],liter:[894,898],littl:1317,load:[40,41],loaded_kwarg:1174,loader:1274,local:43,local_set:[1027,1067],locat:[43,1027,1077,1230,1231],log1p:[88,411,542,678,878],log2:[88,411,542,678,878],log:[816,878,888,894,896,1027,1080,1155,1174,1268,1269,1270,1271],logarithm:[878,888,889,894,896,1155,1166],logdet:[894,896],logic:[31,878,890,908,909,910,1153,1154,1274],logical_and:[368,813,1152],logical_not:[88,225,411,542,678,878],logical_or:[368,813,1152],logit:[1268,1271],logspac:[138,306,458,595,732,1027],look:[43,1317,1320],loop:[1170,1171,1172,1173],loss:[1269,1270,1271,1274,1316],loss_fn:[1274,1316],lot:1317,low:[40,41,506,1230,1232,1234],lower:[40,41,43,868,872,1027,1083,1230,1234],lower_depth:[1303,1304],lowest:[15,18,19,40,41,1218,1227,1230,1232],lstm:[1255,1265,1274,1291],lstm_updat:[43,1255],machin:[874,875,876,906,907,1145,1150,1230,1236,1274,1317,1320],made:43,mai:[878,887,890,904,905,1027,1030,1050,1054,1274,1317,1320],main:[868,872,894,895,1027,1069,1274],mainli:1274,maintain:[43,904,905],make:[43,506,953,1174,1274,1317],maml:[1170,1171,1172],maml_step:1170,manag:[953,1174],manhattan:[894,898],mani:[40,41,43,1027,1103,1274],manipulation_funct:[899,900],manner:[15,18,19,40,41,43,1218,1227],manual:[1218,1219,1226,1320],map:[40,41,42,953,962,1027,1077,1174,1218,1223,1224,1227,1291,1302,1316],map_cont:[40,41],map_nest_at_index:1218,map_nest_at_indic:1218,map_sequ:[40,41],mapper:[953,962,963,1174],mark:43,mask:[1255,1266,1267],master:43,match:[40,41,1027,1081],match_kwarg:1027,math:[33,505,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1174,1274],mathbb:[1145,1151],mathbf:[1145,1151],mathemat:[867,894,898],matmul:[43,306,458,595,732,1027,1320],matplotlib:1317,matric:[868,872,894,895,1255,1264],matrix:[40,41,868,872,894,895,1027,1029,1040,1082,1145,1146,1147,1148,1149,1150,1151,1255,1264,1291,1301],matrix_norm:[40,41,176,363,499,639,806,1145],matter:1274,max:[40,41,406,874,875,876,1027,1040,1041,1052,1083,1095,1096,1174,1237,1239,1307,1309],max_batch_s:[40,41],max_chunk_s:[953,997,1174],max_depth:[40,41,953,957,960,967,975,979,985,1027,1067,1174,1218,1227],max_dev_dim_step_ratio:953,max_freq:[1027,1059],max_length:[40,41],max_node_dim_step_ratio:1174,max_norm:[40,41,1027,1040,1041],max_split_factor_step_s:[953,1174],max_trust_ratio:[1122,1129,1307,1309],maxim:[1274,1317,1320],maximis:1274,maximum:[40,41,42,732,901,902,953,975,979,985,997,1027,1039,1040,1041,1059,1122,1129,1174,1218,1227,1237,1239],mayb:[15,18,19],mdi:1174,mean:[40,41,506,953,982,983,984,985,997,1027,1052,1170,1171,1172,1173,1174,1218,1222,1230,1233,1237,1240,1243,1245,1282,1316,1320],measur:[1255,1266,1291,1302],mech:1274,mechan:[1274,1320],medic:1320,member:43,memori:[953,969,992,997,999,1002,1174,1255,1265,1274],mention:43,merg:43,merge_with_upstream:43,meshgrid:[306,458,732,1027],messag:[1318,1319],meta:[35,1171,1172,1173,1274],method:[40,41,42,43,506,1027,1033,1044,1084,1095,1096,1122,1129,1130,1174,1218,1219,1226,1227,1274,1291,1302,1303,1304,1317],might:[1027,1050,1320],min:[40,41,116,406,441,572,708,874,875,876,894,898,906,1027,1052,1085,1095,1096,1105,1145,1150,1174,1237,1241],min_bas:[1027,1106],min_denomin:[1027,1105],min_dev_dim_s:953,min_node_dim_s:1174,min_sf_tune_step:[953,1174],min_unit_dev_tune_step:953,min_unit_node_tune_step:1174,mind:1274,mini:[1272,1273,1305,1306],minimum:[40,41,732,906,907,953,1003,1007,1027,1030,1032,1033,1039,1064,1065,1097,1098,1105,1106,1174,1237,1241],miss:[1307,1311],ml_framework:[1027,1030,1145,1150],mod:[1027,1058],mod_depth:[1303,1304],mod_height:[1303,1304],mod_with_top_mod_key_chain:[1303,1304],mode:[40,41,499,501,894,897,951,952,953,982,983,984,985,997,1145,1150,1174,1317],model:[1274,1316],modul:[40,41,42,59,1027,1086,1174,1274,1275,1277,1278,1279,1280,1281,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1305,1306,1313,1314,1320],moment:[1122,1124,1125,1129,1307,1308,1309],more:[43,899,900,1027,1107,1174,1274,1317,1320],more_util_node_str:1174,most:[40,41,43,1145,1150,1274,1320],move:[40,41,43,953,998,1174],much:[43,1274,1320],multi:[506,1027,1086,1255,1266,1291,1302],multi_head_attent:1255,multi_index_nest:1218,multi_map:[40,41],multi_nod:1174,multidev:[953,964,965,966,985],multidevcontain:[40,41],multidevic:[953,962],multidevit:[953,956,959,962,963,967],multidevitem:[953,955,958],multidevnest:[953,957,960],multiheadattent:[1274,1291],multinod:[1174,1178],multinodecontain:1174,multinodeit:1174,multinodeitem:1174,multinodenest:1174,multinomi:[182,372,506,645,830,1230],multipl:[40,41,908,909,910,1027,1081,1103,1145,1147,1237,1239,1240,1241,1242,1243,1245,1272,1273,1291,1301,1317],multipli:[40,41,1027,1047,1237,1242],multiprocess:[40,41,42,458,732,953,962,1027,1174],must:[40,41,42,43,868,869,870,871,872,873,878,879,880,881,882,883,884,886,887,889,890,891,892,894,895,898,899,900,904,905,906,907,908,909,910,912,930,931,937,953,982,983,984,985,997,1027,1030,1042,1044,1046,1054,1083,1085,1096,1107,1155,1160,1163,1174,1230,1235,1307,1311],mutabl:[1218,1220,1227],mutlidevic:[953,962],mutlinod:1174,mw_tm1:[1122,1125,1129],mx_concat:1274,mxn:[868,872,894,895],mxnet:[43,1274,1320],my_func:43,mymodel:1274,name:[43,951,952,1316],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1317],nan:[40,41,43,867,878,879,881,882,883,884,885,889,891,892,908,909,910,1027,1068,1118],nativ:[15,17,18,19,40,41,43,953,969,971,980,981,992,999,1002,1003,1008,1015,1016,1174,1274,1275,1280,1281],native_modul:[1280,1281],native_module_class:[1280,1281],nativearrai:[15,18,19,43,868,871,872,874,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,896,897,898,899,900,901,902,904,905,906,907,908,909,910,912,930,931,937,953,971,997,998,1003,1007,1013,1018,1019,1027,1028,1029,1030,1032,1033,1034,1035,1037,1039,1040,1041,1042,1043,1045,1046,1047,1048,1051,1052,1053,1054,1056,1057,1058,1059,1061,1062,1066,1068,1069,1070,1077,1078,1079,1080,1082,1083,1084,1085,1088,1089,1092,1093,1094,1095,1096,1101,1103,1104,1107,1109,1110,1112,1113,1114,1115,1117,1118,1119,1120,1121,1174,1218,1220,1227],natur:[878,888,894,896,1155,1166,1320],ncdhw:[1255,1260,1261,1291,1296,1297],nchw:[1255,1258,1259,1262,1291,1294,1295,1298],ncw:[1255,1256,1257,1291,1292,1293],ndarrai:[43,400,401,402,403,404,405,406,408,409,506,1027,1113],ndhwc:[1255,1260,1261,1291,1296,1297],nearest:[1027,1094],need:[43,1027,1040,1041,1255,1257,1259,1261,1274,1291,1293,1295,1297,1320],neg:[40,41,878,884,894,898,899,900,908,909,910,1237,1242,1244,1247,1249],negative_slop:1282,neither:1174,nest:[15,16,17,18,19,40,41,42,953,975,979,985,1027,1033,1112,1170,1171,1172,1174,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1303,1304,1307,1308,1309,1310,1311,1312],nested_indices_wher:1218,nested_map:[1174,1218],network:[1255,1264,1274,1275,1277,1291,1303,1304,1320],neural:[1255,1274,1277,1291,1316],never:43,new_node_percent_mem:1174,new_node_util:1174,new_node_utils_kei:1174,new_std:[1272,1273,1305,1306],newli:[43,951,952,1027,1037,1038],newlin:[40,41,42],newshap:[1027,1037,1093],next:[874,875,1174,1303,1304,1307,1308,1309,1310,1311,1312],nhwc:[1255,1258,1259,1262,1291,1294,1295,1298],node:[40,41,1218,1219,1226],node_clon:1174,node_dist:1174,node_dist_arrai:1174,node_dist_it:1174,node_in:1174,node_mapp:1174,node_str:1174,node_to_str:1174,node_util:1174,nodedistit:1174,nodedistitem:1174,nodedistnest:1174,nodemanag:[1174,1185],nodemapp:1174,nodemappermultiproc:1174,noinspect:[43,954,1004,1005,1006,1123,1174],non:[40,41,878,890,894,898,908,909,910,951,952,1003,1017,1303,1304,1307,1311,1317],none:[40,41,42,43,59,61,64,400,401,402,403,405,456,458,459,461,463,470,471,472,473,480,481,482,483,484,485,486,487,489,499,500,506,507,868,869,870,871,873,874,875,876,894,898,899,900,901,902,906,907,908,909,910,951,952,953,962,963,969,970,995,996,997,998,1003,1010,1011,1012,1027,1030,1033,1049,1050,1055,1060,1061,1062,1067,1069,1071,1072,1073,1074,1075,1079,1080,1086,1088,1089,1092,1095,1096,1097,1098,1103,1104,1105,1106,1115,1116,1121,1122,1125,1127,1129,1130,1131,1137,1138,1142,1145,1148,1150,1170,1171,1172,1173,1174,1218,1219,1222,1226,1227,1230,1231,1232,1233,1234,1237,1239,1240,1241,1242,1243,1244,1245,1255,1257,1259,1261,1264,1265,1266,1267,1272,1273,1280,1281,1282,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314],norm:[40,41,894,898,1027,1040,1041,1145,1148,1273,1274,1306,1307,1309],normal:[1230,1233,1272,1273,1305,1306],normalized_idx:[1272,1273],normalized_shap:[1305,1306],notat:[40,41,1237,1238],note:[43,1145,1150],noth:[40,41,1317],notimplementederror:1174,now:[40,41,43,953,998,1027,1028,1174,1274,1291,1302,1303,1304,1316,1317,1320],np_concat:1274,np_finfo:406,ns_tune_step:1174,num:[458,480,481,1027,1079,1080],num_arrai:[40,41],num_arrays_in_memori:1027,num_arrays_on_dev:953,num_band:[1027,1059],num_channel:[1291,1298],num_chunk:1174,num_chunks_floor:1174,num_class:[1230,1231],num_cpu_cor:953,num_gpu:[131,456,953,1174],num_head:[1255,1266,1291,1302],num_kei:[1255,1266,1267],num_lay:[1291,1300],num_or_size_split:[40,41,458,485,1027,1103],num_output:1174,num_queri:[1255,1266,1267],num_sampl:[458,479,506,507,1027,1078,1138,1139,1230,1231],num_task:[1170,1171,1172,1173],number:[40,41,42,867,874,875,876,878,881,894,896,897,908,909,910,951,952,953,989,990,991,1003,1014,1018,1019,1027,1030,1039,1043,1056,1059,1066,1069,1078,1079,1080,1083,1087,1092,1103,1110,1114,1118,1120,1170,1171,1172,1173,1174,1230,1231,1235,1237,1239,1240,1241,1243,1245,1255,1266,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1317,1320],numer:[43,878,881,884,885,886,890,912,931,937,1027,1064,1065,1097,1098,1105,1106,1155,1163,1282],numhead:[1255,1266],numpi:[40,41,43,400,401,402,403,404,405,406,408,409,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,894,897,1027,1113,1145,1150,1237,1238,1274,1316,1317,1320],nwc:[1255,1256,1257,1291,1292,1293],obj:[40,41],object:[40,41,42,59,406,874,875,953,1003,1007,1027,1030,1033,1122,1218,1221,1223,1224,1225,1228,1229,1230,1236,1282,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1303,1304],object_in:[458,461,1027,1033],observ:1174,obvious:43,occupi:[874,875,876,1027,1095,1096],off:[894,895,1027,1030],offer:1274,offset:[894,895,1272,1273],often:1317,old:[40,41],on_init:[1291,1302,1303,1304],onc:[43,953,997,1174,1230,1231,1274],one:[40,41,43,894,898,899,900,901,902,953,982,983,984,985,997,1003,1009,1027,1069,1081,1088,1095,1096,1104,1107,1145,1148,1174,1237,1238,1239,1240,1241,1242,1243,1244,1245,1274,1317,1320],one_hot:[138,458,595,732,1027],onearrai:[1027,1056],ones:[40,41,77,214,400,531,667,868,871,1027,1069,1088,1274],ones_lik:[77,214,400,531,667,868],ongo:43,onli:[40,41,43,506,878,890,899,900,953,1145,1150,1174,1218,1219,1220,1226,1307,1308,1309,1310,1311,1312,1316,1317],onlin:[43,1274],onto:[953,982,983,998,1174,1218,1222,1227],oom:[953,1174],open:[1027,1030,1230,1234,1274,1320],opencv:1317,oper:[40,41,1027,1036,1051,1052,1053,1079,1080,1108,1122,1125,1127,1129,1130,1131,1152,1153,1154,1255,1256,1257,1258,1259,1260,1261,1262,1264,1274,1275],operand:[40,41,878,879,881,882,883,889,891,892,1237,1238],oppos:[1027,1059],optim:[953,1122,1125,1127,1129,1130,1131,1170,1171,1172,1173,1174,1274,1308,1309,1310,1312,1316,1320],optimizer_upd:1122,option:[15,18,19,40,41,42,43,400,401,402,403,405,868,869,870,871,873,894,898,899,900,901,902,906,907,908,909,910,951,952,953,962,963,971,975,976,977,978,979,982,983,984,985,992,995,996,997,998,1002,1003,1008,1013,1017,1026,1027,1029,1030,1032,1033,1040,1041,1042,1047,1049,1050,1059,1060,1061,1062,1066,1068,1069,1076,1078,1079,1080,1081,1084,1086,1088,1089,1092,1095,1096,1099,1101,1103,1104,1105,1106,1107,1115,1117,1118,1121,1122,1125,1127,1128,1129,1130,1131,1133,1138,1142,1145,1148,1150,1170,1171,1172,1173,1174,1218,1219,1220,1222,1226,1227,1230,1231,1237,1239,1240,1241,1242,1243,1244,1245,1247,1248,1252,1255,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1280,1281,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1317],ord:[894,897,898],order:[40,41,42,43,894,898,899,900,904,905,1122,1125,1127,1129,1130,1131,1145,1148,1170,1171,1172,1313,1314],ordered_node_util_kei:1174,org:1320,organ:43,origin:[40,41,42,1027,1093,1121,1145,1148],other:[40,41,43,912,914,915,920,922,923,927,929,930,931,932,933,935,937,938,939,940,941,942,944,945,946,948,949,950,951,952,1027,1029,1030,1069,1122,1126,1230,1234,1274,1316,1317,1320],other_i:[43,912,931,937],otherwis:[15,16,17,18,19,40,41,878,884,885,894,898,901,902,908,909,910,953,970,1003,1010,1011,1012,1027,1036,1115,1116,1119,1122,1128,1133,1137,1170,1171,1172,1174,1237,1239,1240,1241,1243,1245],our:[43,1274,1320],out:[43,506,868,870,872,873,874,875,876,878,879,880,881,882,883,884,885,886,888,889,890,891,892,894,895,896,898,899,900,901,902,904,905,908,909,910,912,931,1027,1030,1155,1159,1255,1263,1265,1274,1291,1299],out_feat_dim:[1255,1266],out_featur:[1255,1263,1264],out_i:[878,884,885],outdat:1320,outer:[1170,1171,1172,1173],outer_batch_fn:[1170,1171,1172],outer_batch_shap:[1255,1264],outer_cost_fn:[1170,1171,1172],outer_v:[1170,1171,1172],outlin:1317,output:[40,41,43,868,869,870,871,873,899,900,953,962,963,997,1027,1030,1038,1060,1069,1092,1110,1122,1126,1155,1160,1174,1230,1232,1233,1234,1255,1257,1259,1261,1263,1265,1266,1267,1274,1291,1292,1293,1294,1295,1296,1297,1299,1300,1301,1302],output_ax:[953,997,1174],output_axi:1174,output_channel:[1291,1292,1293,1294,1295,1296,1297,1300,1301],output_queu:1174,output_shap:[1255,1257,1259,1261,1291,1293,1295,1297],outsid:[1027,1039],over:[40,41,894,898,908,909,910,1145,1148,1230,1234,1237,1239,1240,1241,1243,1245,1272,1273,1305,1306],overal:1317,overflow:[1027,1030],overhead:1317,overrid:[1027,1088,1121],overriden:[1307,1311],overwrit:[40,41,953,997,1174],overwrite_at_key_chain:[40,41],own:[1274,1317,1320],packag:[43,1317],pad:[1027,1043,1059,1120,1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298],pad_width:[458,1027,1043,1120],page:1274,pair:[1255,1267],parallel:[953,962,963,1174],parallelis:[953,962,963,1174],param:[40,41,42,458,471,472,868,869,871,901,902,906,907,953,997,1027,1028,1061,1062,1088,1089,1174,1303,1304,1316],paramet:[15,16,17,18,19,40,41,42,43,868,869,871,878,887,894,895,897,906,907,912,930,931,937,951,952,953,962,963,969,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,992,995,996,997,998,999,1002,1003,1007,1008,1009,1013,1014,1015,1016,1017,1018,1019,1026,1027,1029,1030,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1045,1046,1047,1048,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1066,1068,1069,1070,1072,1073,1074,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1089,1092,1093,1094,1095,1096,1097,1098,1099,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1133,1135,1136,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1280,1281,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1316],parameter:[1230,1233,1234],pardo:1274,pars:[1027,1044],part:[868,872,1122,1125,1127,1129,1130,1131,1155,1159,1274,1303,1304,1317],partial:[40,41,43,1303,1304],particl:1320,particular:[43,1320],pass:[40,41,42,43,953,962,997,1003,1008,1027,1038,1122,1136,1170,1171,1172,1174,1280,1281,1303,1304,1307,1311,1313,1314],pattern:[40,41,1027,1051,1052,1053],peopl:43,per:[953,1174,1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298],percent_used_mem_on_dev:953,percent_used_mem_on_nod:1174,percentag:[953,992,1174],perf_count:1174,perform:[40,41,43,908,909,910,953,1027,1032,1047,1051,1052,1053,1072,1073,1074,1078,1079,1080,1122,1125,1127,1129,1130,1131,1138,1139,1170,1171,1172,1173,1174,1218,1223,1224,1237,1239,1240,1241,1242,1243,1244,1245,1247,1252,1255,1263,1265],period:43,permissable_step:1174,permit:43,permut:[506,1027,1109,1115],perpendicular:[1027,1046],person:[43,1274],physci:1320,pickl:[40,41,1174],pickle_filepath:[40,41],pinv:[363,806,1145],pip:1274,pipelin:1316,pkk:1320,pkkm1:1320,pkm1km1:1320,place:[40,41,43,868,869,870,871,873,953,998,1027,1056,1060,1072,1073,1074,1174,1307,1308,1309,1310,1311,1312],placehold:[43,1218,1227],pleas:[43,506,1145,1150],point:[43,867,868,869,870,873,874,875,878,879,881,882,883,889,891,892,894,898,1003,1018,1027,1030,1155,1163],popul:[40,41,1230,1231],popular:1320,population_s:[506,507,1230,1231],portabl:[1274,1275],posit:[15,16,17,874,875,878,884,908,909,910,953,975,979,985,1027,1028,1030,1056,1059,1174,1230,1235,1280,1281],possibi:[40,41],possibl:[43,1027,1081,1112,1138,1143,1320],post:[1272,1273],post_shap:[40,41],power:[43,912,937,943,1027,1064,1097,1106,1282],practic:1274,pre:[953,1174,1274],pre_shap:[40,41],precis:[874,875,878,892],pred:[1268,1269,1270,1271],predict:[1268,1269,1270,1271,1320],preprint:1274,present:[40,41],preserv:[40,41,42,899,900,1122,1133],preserve_typ:[40,41,490,493,1122,1133],press:1274,prevent:[43,1122,1124,1125,1129,1174,1307,1308,1309],prevet:43,previou:[1122,1125,1129],previous:[1027,1038],prime:1274,print:[40,41,42,953,993,1027,1090,1274,1316],print_all_arrays_in_memori:1027,print_all_arrays_on_dev:953,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1307,1311],prob:[506,507,1230,1231,1255,1263,1291,1299],probabl:[1230,1231,1255,1263,1291,1299],problem:[43,1320],process:[43,953,962,963,992,1002,1027,1086,1174],process_specif:[953,992,1002,1174],prod:[40,41,1027,1052],produc:[953,962,963,1174],product:[40,41,1027,1046,1047,1082,1237,1238,1255,1266,1267,1291,1302],profil:[131,300,456,588,724,953,1174],progress:43,project:[1274,1316,1317,1320],promot:[43,878,879,880,882,883,889,891,892,894,898,912,937,1155,1163],prompt:1274,properli:43,properti:[40,41,406,953,965,1174,1303,1304,1307,1308,1309,1310,1312],provid:[40,41,43,899,900,901,902,908,909,910,951,952,953,970,1003,1010,1011,1012,1017,1026,1027,1050,1088,1096,1121,1122,1125,1127,1129,1130,1131,1137,1174,1274,1291,1300,1307,1308,1309,1310,1311,1312,1317],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1145,1149],pull:[1274,1275],pure:[40,41,1274,1320],purpos:[43,1320],put:1174,pybroadexcept:1174,pyprotectedmemb:1174,pyshadowingbuiltin:43,pyshadowingnam:[954,1004,1005,1006,1123,1174],python:[40,41,953,992,1002,1027,1030,1174,1274],pytorch:[1122,1125,1127,1129,1130,1131,1145,1150,1274,1307,1308,1309,1310,1311,1312,1316,1317,1320],pyunresolvedrefer:1174,quadrant:[1155,1160],qualiti:43,queri:[40,41,912,926,947,953,986,996,1174,1255,1266,1267,1291,1302],query_dim:[1291,1302],query_kei:[40,41],queue:[40,41,42,953,962,963,1027,1091,1099,1174],queue_class:[953,962,963,1174],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1027,1174],quick:[506,1274],quickli:[43,1316],radian:[878,882,891,1155,1156,1158,1160,1168],rai:[1155,1156],rais:[40,41,43,908,909,910,912,937,1027,1036,1064,1097,1104,1106,1116,1174,1303,1304,1307,1311],ram:[953,992,999,1002,1174],randint:[182,372,506,645,830,1230],random:[37,40,41,507,1231,1232,1233,1234,1235,1236,1274],random_crop:1138,random_norm:[182,372,506,645,830,1230],random_uniform:[182,372,506,645,830,1230],randomli:[506,1138,1142,1255,1263,1291,1299],rang:[506,1027,1030,1079,1080,1155,1160,1174,1274,1316,1320],rank:[894,898,908,909,910,1027,1043,1117,1120],rate:[1122,1125,1127,1129,1130,1131,1170,1171,1172,1173,1291,1302,1307,1308,1309,1310,1311,1312],rather:[40,41,43,953,997,1027,1030,1076,1122,1128,1174],ratio:[953,1122,1129,1138,1143,1174,1307,1309],raw:[40,41,1145,1150],raw_delta:1174,reach:[43,953,975,979,985,1174,1218,1227],read:[40,41],readi:[1174,1316],real:[1155,1156,1159],realiti:1317,rearrang:[40,41,1027,1051,1053],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1170,1172],receiv:[43,953,962,963,1027,1031,1081,1174,1291,1301],receivess:[953,1174],receivng:[1170,1173],recev:[1170,1171,1172],recognit:1320,recommend:[878,890,1274],rectifi:[1247,1249,1250],recurr:[1255,1265],recurrent_bia:[1255,1265],recurrent_kernel:[1255,1265],recurs:[40,41,1218,1219,1220,1226,1227],redefin:43,reduc:[40,41,901,902,908,909,910,953,997,1027,1052,1145,1150,1174,1237,1239,1240,1241,1242,1243,1244,1245],reduce_max:[40,41,189,377,508,650,837,1237],reduce_mean:[40,41,189,377,508,650,837,1237,1274,1316],reduce_min:[40,41,189,377,508,650,837,1237],reduce_prod:[40,41,189,377,508,650,837,1237],reduce_std:[40,41,377,1237],reduce_sum:[40,41,189,377,508,650,837,1174,1237],reduce_var:[40,41,189,377,508,650,837,1237],reduct:[39,40,41,458,483,484,908,909,910,1027,1052,1095,1096,1238,1239,1240,1241,1242,1243,1244,1245,1274],refactor:43,refer:[43,878,888,908,909,910,1122,1124,1125,1145,1151,1291,1301,1320],reflect:43,reflected_oper:[0,13,14],regard:[953,1174],regardless:[40,41,951,952],register_paramet:1316,reimplement:1320,rel:[894,895,899,900,904,905,1122,1125,1127,1129,1130,1131],rel_slice_obj:1174,relat:43,relev:[1307,1308,1309,1310,1311,1312],relu:[846,1247,1248,1249,1274,1316],remain:[43,1027,1093,1218,1222],remaind:[40,41,1027,1058,1103],remov:[40,41,43,894,895,901,902,1027,1104,1170,1171,1172],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,899,900],rep:[1027,1110],repeat:[40,41,43,306,732,1027,1053,1110,1174,1317],repeated_config_check:[953,1174],repeatedli:[1218,1225],repetit:[40,41,1027,1092,1110],replac:[40,41,43,506,507,1027,1039,1095,1096,1230,1231],repo:[43,1274],repositori:43,repres:[43,878,879,883,894,896,1003,1009,1014,1255,1264],represent:[40,41,42,43,867,874,875,876,878,880,953,980,981,1003,1009,1015,1016,1027,1102,1112,1174],reptil:[1170,1173],reptile_step:1170,request:[1274,1275],requir:[43,878,892,951,952,1003,1007,1027,1030,1033,1280,1281],resampl:[1027,1078],reserv:43,reshap:[40,41,43,506,732,1027],reshape_lik:[40,41],respect:[878,880,886,887,912,931,1027,1054,1122,1124,1125,1126,1127,1129,1130,1131,1145,1150,1155,1163,1170,1171,1172,1173],respond:43,respons:[43,1174],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,898,901,902,908,909,910,912,930,931,937,953,962,1027,1030,1054,1095,1096,1107,1145,1148,1152,1153,1154,1155,1163,1174,1237,1239,1240,1241,1242,1243,1244,1245,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1274],ret:1174,ret_dict:1174,ret_fn:[953,962,963,1174],retain:[1122,1126],retain_grad:[490,491,1122,1126],retreiv:1174,retrn:[1027,1102],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1170,1171,1172,1173],return_sequ:[1291,1300],return_st:[1291,1300],rev:[1027,1050],revers:[40,41,899,900,1027,1050,1115],review:43,right:[40,41,43],rk_e:1320,robot:1274,ronald:1274,root:[43,878,892],round:[306,458,732,878,881,892,1027,1030,1174],row:[1027,1069,1230,1231],rule:[43,912,937,1027,1030,1155,1163],run:[43,953,962,1122,1124,1125,1129,1170,1171,1172,1173,1174,1274,1275,1291,1302,1303,1304],safe:[953,962,1174],safety_factor:[953,1174],same:[15,16,17,40,41,43,868,871,872,878,881,894,895,897,899,900,901,902,904,905,953,962,963,997,998,1003,1007,1027,1028,1042,1057,1058,1061,1062,1088,1094,1095,1096,1107,1121,1122,1128,1133,1155,1159,1170,1171,1172,1174,1237,1238,1255,1256,1257,1258,1259,1260,1261,1262,1274,1291,1292,1293,1294,1295,1296,1297,1298,1316,1320],same_arrai:[40,41],sampl:[1027,1078,1138,1139,1230,1231,1233,1234,1255,1263,1274,1291,1299],satisfi:[1027,1033,1145,1147,1151],save:[40,41,1027,1100,1111,1138,1140,1303,1304],save_dir:[456,457,953,968,1174],save_weight:[1303,1304],scalar:[894,898,1027,1039,1088,1114,1118],scale:[953,995,996,1122,1130,1174,1255,1263,1266,1267,1272,1273,1291,1299,1302,1307,1310],scaled_dot_product_attent:1255,scatter:[1027,1088,1095,1096],scatter_flat:[138,306,458,595,732,1027],scatter_nd:[138,306,458,595,732,1027],scene:[1122,1125,1127,1129,1130,1131],schemat:1274,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[901,902],second:[40,41,878,880,886,887,894,895,953,984,1027,1034,1046,1054,1091,1099,1109,1122,1124,1125,1129,1170,1172,1174,1307,1308,1309],secondli:1320,sector:[878,879],see:[43,59,406,456,457,506,878,880,886,894,898,908,909,910,912,930,931,937,953,965,966,967,968,1003,1027,1030,1079,1080,1122,1155,1163,1274,1282,1284,1285,1287,1288,1290],seed:[40,41,182,506,830,1230],seed_valu:[40,41,506,1230,1235],seem:1274,seen_set:[1027,1067],select:[1027,1033,1104,1317,1320],self:[40,41,43,59,406,456,457,912,931,937,953,965,966,967,968,1003,1122,1174,1274,1282,1284,1285,1287,1288,1290,1307,1311,1316,1320],self_i:[912,931],sent:1174,seper:[43,1027,1059],seq:[40,41,42,1237,1238,1303,1304],sequenc:[15,16,17,40,41,42,43,506,951,952,953,962,963,972,973,974,975,976,977,978,979,982,983,997,1003,1007,1027,1030,1033,1035,1037,1042,1043,1069,1081,1084,1089,1092,1093,1096,1103,1107,1110,1115,1120,1122,1126,1138,1142,1143,1145,1148,1174,1218,1229,1230,1232,1234,1237,1239,1240,1241,1242,1243,1244,1245,1255,1256,1257,1258,1259,1260,1261,1262,1272,1273,1280,1281,1291,1292,1293,1294,1295,1296,1297,1298,1300,1303,1304,1305,1306,1307,1311,1313,1314],sequenti:1274,seri:43,set:[15,18,19,40,41,901,902,904,905,953,982,983,995,996,997,1027,1029,1049,1069,1097,1098,1099,1100,1122,1125,1127,1128,1129,1130,1131,1145,1148,1174,1218,1219,1226,1228,1229,1230,1231,1235,1237,1239,1240,1241,1242,1243,1244,1245,1274,1291,1300,1307,1308,1309,1310,1311,1312,1317,1320],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:953,set_default_dtyp:1003,set_default_float_dtyp:1003,set_default_int_dtyp:1003,set_default_nod:1174,set_exception_debug_mod:44,set_framework:[40,41,43,59,1174,1274,1316,1317,1320],set_ivy_backend:[40,41],set_min_bas:1027,set_min_denomin:1027,set_nest_at_index:1218,set_nest_at_indic:1218,set_queue_timeout:1027,set_split_factor:[953,1174],set_stat:[1307,1308,1309,1310,1311,1312],set_tmp_dir:1027,set_with_grad:1122,setter:1174,sever:1320,sgd:[1274,1307],shape0:1174,shape:[40,41,43,400,401,402,405,458,470,484,506,732,868,869,870,871,872,873,894,895,899,900,901,902,904,905,953,965,1003,1007,1027,1028,1037,1042,1043,1056,1057,1058,1060,1062,1066,1069,1088,1089,1092,1093,1094,1095,1096,1102,1104,1107,1120,1121,1138,1142,1145,1147,1150,1155,1159,1160,1174,1230,1232,1233,1234,1237,1238,1255,1257,1259,1261,1291,1293,1294,1295,1296,1297,1298,1305,1306],shape_slic:[40,41],shape_to_tupl:1027,share:[40,41,1274,1317],shift:1174,should:[40,41,42,43,506,868,872,878,879,880,881,882,883,884,885,886,889,890,891,892,894,895,898,901,902,912,930,931,937,951,952,953,1027,1037,1038,1044,1088,1093,1122,1125,1127,1129,1130,1131,1155,1163,1174,1237,1238,1274],show:[40,41,1274,1320],show_mod_in_top_mod:[1303,1304],show_structur:[1303,1304],show_sub_contain:[40,41],show_v:[1303,1304],show_v_in_top_v:[1303,1304],shown:[40,41],shp:1174,shuffl:[40,41,182,506,830,1230],shuffle_h5_fil:[40,41],side:43,sigmoid:[846,1247,1274,1316],sign:[894,896],signatur:[43,59,406,456,457,458,490,495,499,503,504,506,953,965,966,967,968,1003,1122,1282,1284,1285,1287,1288,1290],signific:1320,similar:[43,1255,1266,1291,1302],similarli:[1145,1150],simpl:[43,1027,1055,1274,1317,1320],simpler:43,simplest:1317,simpli:[40,41,43,1274,1317,1320],simultan:1274,sin:[88,225,411,542,678,878,1027,1059,1155,1168,1317],sinco:1317,sine:[878,879,891,1155,1158,1167],singl:[40,41,951,952,953,962,963,982,983,984,985,1027,1104,1114,1118,1138,1143,1174,1230,1233,1234,1237,1239,1240,1241,1242,1243,1244,1245,1274,1317,1320],singleton:[894,898,908,909,910],singular:[894,897],sinh:[816,1155],siren:[1274,1282],situat:43,size:[40,41,42,458,483,894,895,897,901,902,908,909,910,953,976,977,978,979,995,996,997,1027,1030,1037,1079,1080,1095,1103,1138,1142,1145,1148,1174,1230,1231,1233,1234,1237,1239,1240,1241,1242,1243,1244,1245,1291,1292,1293],size_ordered_arrai:[40,41],skew:[1145,1151],skinv:1320,skip:[40,41],slice:[40,41,1027,1061,1062,1174,1218,1225],slice_kei:[40,41],slice_obj:[40,41,1174],slice_via_kei:[40,41],slide:[1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298],slodget:894,slogdet:[235,428,559,695],slope:[1247,1249],small:[1268,1269,1270,1271,1272,1273,1274,1305,1306,1317],smaller:[1027,1039],smallest:[40,41,874,875,876,878,881,1027,1032],smallest_norm:[406,874,875],softmax:[198,517,846,1247,1255,1266,1267],softplu:[846,1247],solut:43,solv:1320,some:[40,41,43,1027,1030,1122,1124,1125,1127,1129,1130,1131,1136,1255,1263,1274,1291,1299,1317,1320],some_backend:43,some_namespac:43,someth:[43,1320],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,894,897,905,1174],sort_by_kei:[40,41],sorting_funct:[904,905],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,400,401,402,403,404,405,406,408,409,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,504,505,506,507,868,869,870,871,872,873,874,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,896,897,898,899,900,901,902,904,905,906,907,908,909,910,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,955,956,957,958,959,960,962,963,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1277,1278,1279,1280,1281,1282,1284,1285,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1318,1319,1320],space:[1027,1030,1059,1079,1080],spars:[1268,1271],sparse_cross_entropi:1268,spawn:[1027,1086],special:[43,878,879,881,882,883,889,891,892],specif:[40,41,43,878,890,953,995,1027,1044,1051,1052,1053,1086,1170,1171,1172,1173,1174,1230,1236,1274,1303,1304,1316,1317],specifc:[1230,1231],specifi:[40,41,43,868,869,870,872,873,894,895,898,899,900,901,902,904,905,908,909,910,953,972,973,974,975,976,977,978,979,982,983,987,989,993,996,997,998,1003,1007,1009,1027,1030,1032,1033,1039,1042,1043,1060,1061,1062,1068,1079,1080,1107,1117,1120,1145,1148,1174,1218,1223,1224,1228,1229,1237,1238,1239,1240,1241,1242,1243,1244,1245],sphinx:43,split:[40,41,138,306,458,595,732,953,962,976,977,978,979,995,996,997,1027,1081,1174],split_arg:1174,split_factor:[953,962,1174],split_func_cal:[953,1174],split_siz:1174,spread:[953,985,1174],sqrt:[88,225,411,542,678,878,894,898],squar:[878,892,894,896,1027,1069,1145,1147],squeez:[138,306,458,595,732,1027],stabil:[904,905,1027,1105,1106],stabl:[904,905,1027,1064,1065,1097,1098,1105,1106],stable_divid:1027,stable_pow:1027,stack:[40,41,306,732,868,872,894,895,1027,1138,1143,1218,1219,1226,1291,1300],stack_imag:[172,359,495,635,802,1138],stacked_dim_s:1174,stage:43,standard:[40,41,874,875,1230,1233,1237,1243,1272,1273,1274,1275,1305,1306],start:[40,41,43,456,457,458,459,480,481,506,953,968,1027,1030,1079,1080,1174,1274,1317],starting_index:[40,41],starting_split_factor:[953,1174],state:[1174,1255,1265,1274,1277,1278,1279,1280,1281,1282,1284,1285,1287,1288,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1316],statement:1317,static_argnam:[458,463,951,952],static_argnum:[458,463,951,952],statistical_funct:[906,907],std:[506,1230,1233],step:[40,41,458,459,953,1027,1030,1079,1080,1122,1124,1125,1127,1129,1130,1131,1170,1171,1172,1173,1174,1274,1307,1308,1309,1310,1311,1312,1316,1320],stephen:1274,stick:1274,still:[40,41,43],stochast:[1307,1312],stop:[40,41,456,457,458,459,480,481,953,968,997,1027,1030,1079,1080,1122,1125,1127,1129,1130,1131,1133,1170,1171,1172,1173,1174,1307,1308,1309,1310,1311,1312],stop_gradi:[40,41,354,490,630,796,953,997,1122,1125,1127,1129,1130,1131,1170,1171,1172,1173,1174,1307,1308,1309,1310,1311,1312],stopiter:1174,store:[40,41,1027,1059,1103,1122,1136,1303,1304],store_var:[1303,1304],str:[15,16,17,40,41,42,43,400,401,402,403,405,406,408,409,868,871,874,875,876,951,952,953,962,963,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,997,1003,1008,1009,1014,1015,1016,1017,1018,1019,1026,1027,1033,1049,1051,1052,1053,1084,1086,1089,1095,1096,1145,1148,1150,1170,1171,1172,1173,1174,1218,1222,1237,1238,1280,1281,1291,1302,1303,1304],str_to_nod:1174,straight:1317,strength:[1274,1320],stride:[1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298],string:[40,41,43,953,969,971,980,981,986,992,998,999,1002,1003,1007,1013,1015,1016,1017,1026,1027,1030,1033,1049,1069,1089,1121,1174,1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298,1303,1304],structur:[40,41,42,43,1027,1044],structural_diff:[40,41],style:43,sub:[40,41,43,894,895,953,976,977,982,983,984,985,1027,1103,1170,1171,1172,1173,1174],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1174,sub_mod:[1303,1304],sub_modul:[1313,1314],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1274,1275,1305,1306,1313,1314],subsequ:43,subset:43,substr:[40,41],suffici:[1145,1150],suggest:1274,suitabl:[1138,1143],sum:[40,41,458,483,484,894,898,953,982,983,984,985,997,1027,1048,1052,1095,1096,1174,1237,1238,1244],summat:[40,41,1237,1238],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,110,112,115,117,119,120,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,360,361,362,364,365,366,367,369,370,373,374,375,376,378,379,380,381,382,383,384,385,388,390,391,392,393,394,395,396,401,402,403,404,405,407,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,429,430,431,432,433,435,437,440,442,444,445,457,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,491,492,493,494,496,497,498,500,501,502,505,507,509,510,511,512,513,514,515,518,519,521,522,523,524,525,526,527,532,533,534,535,536,538,539,540,543,544,545,546,547,548,549,550,551,552,553,554,555,556,557,560,561,562,563,564,566,568,571,573,575,576,584,589,590,591,592,593,594,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,631,632,633,634,636,637,638,640,641,642,646,647,648,649,651,652,653,654,655,656,657,661,662,663,668,669,670,671,672,674,675,676,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,696,697,698,699,700,702,704,707,709,711,712,720,725,726,727,728,729,730,731,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,797,798,799,800,801,803,804,805,807,808,809,810,811,812,814,815,817,818,819,820,821,822,823,824,825,826,827,828,829,831,832,833,834,835,836,838,839,840,841,842,843,844,847,848,849,850,851,852,853,855,856,858,859,860,861,862,863,864,869,870,871,872,873,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,895,896,897,898,900,902,905,907,909,910,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,952,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1153,1154,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1171,1172,1173,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1231,1232,1233,1234,1235,1236,1238,1239,1240,1241,1242,1243,1244,1245,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1269,1270,1271,1273,1274,1278,1279,1281,1283,1284,1285,1286,1287,1288,1289,1290,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1304,1306,1307,1308,1309,1310,1311,1312,1314,1315,1316,1317,1319,1320],supports_inplac:1027,suppos:1320,sure:43,svd:[105,235,428,559,695,894],swap:[40,41,1027,1109],swapax:[40,41,595,732,1027,1320],symmetr:[1145,1151],syntax:[456,458,490,495,499,503,504,506],tab:1274,take:[43,1027,1078],taken:[43,894,895,1237,1239,1240,1241,1243,1245],tan:[816,1155,1159],tangent:[1155,1159,1160,1161,1168,1169,1247,1254],tanh:[816,846,1155,1247],target:[40,41,953,969,972,973,974,975,976,977,978,979,982,983,984,985,998,1174,1274],target_dict:[40,41],task:[43,1170,1171,1172,1173],team:[43,1320],templat:1274,temporari:[1027,1100,1111],tensor:[40,41,43,458,483,484,953,971,1003,1013,1027,1030,1032,1037,1079,1080,1083,1085,1088,1089,1093,1095,1096,1103,1121,1174,1230,1231,1232,1255,1263,1265,1274,1291,1299,1301,1307,1308,1309,1310,1311,1312,1316,1317],tensorflow:[43,1145,1150,1255,1257,1259,1261,1274,1291,1293,1295,1297,1317,1320],term:[40,41,43,1255,1265,1274,1291,1301],termcolor:[40,41,42],termin:[40,41,42,1174],test:[43,878,884,885,908,909,910,1003,1018,1019],test_array_api:43,tf_concat:1274,than:[40,41,43,874,875,878,881,889,892,894,898,899,900,953,997,1027,1030,1039,1057,1076,1083,1104,1107,1122,1128,1174,1230,1234,1274,1317],thei:[40,41,43,1155,1160,1170,1171,1172,1230,1231,1274,1313,1314,1317],them:[1274,1320],themselv:[1218,1219],therefor:43,thi:[40,41,42,43,878,890,894,896,901,902,953,975,979,985,992,997,1002,1027,1030,1059,1091,1093,1099,1122,1125,1127,1128,1129,1130,1131,1136,1145,1148,1174,1218,1222,1227,1237,1239,1240,1241,1242,1243,1244,1245,1255,1264,1274,1303,1304,1307,1308,1309,1310,1311,1312,1316,1317,1320],thing:[43,1274],those:[40,41,43,894,897,1027,1039,1122,1136,1174],though:43,thought:43,threshold:[1027,1083,1085],through:[40,41,43],tick:43,tickbox:43,tile:[306,595,732,1027],time:[43,1027,1110,1122,1125,1129,1170,1171,1172,1173,1174,1230,1231,1255,1265,1291,1302,1303,1304,1320],timeout:[40,41,42,953,962,963,1027,1091,1099,1174],timestep:[1255,1265,1291,1300],titl:[43,1274],tmp_dir:1027,tmp_dr:[1027,1100],to_appli:[40,41],to_clon:[953,1174],to_dev:[40,41,131,300,456,588,724,953],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[953,1174],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1274],to_ivy_modul:[200,854,1274,1280],to_json:[40,41],to_kv_fn:[1255,1266],to_kv_v:[1255,1266],to_list:[40,41,458,732,1027],to_multi_dev:[40,41],to_mut:[1218,1220,1227],to_n:[15,40,41,1274],to_nod:1174,to_numpi:[40,41,458,732,1027,1274,1316],to_out_fn:[1255,1266],to_out_v:[1255,1266],to_q_fn:[1255,1266],to_q_v:[1255,1266],to_raw:[40,41],to_scalar:[458,732,1027],todo:[1174,1274,1275],togeth:[40,41,1313,1314],tool:[1274,1317],top_mod:[1303,1304],topic:1320,torch:[43,951,952,1274,1316,1317,1320],torch_concat:1274,torchfcmodel:1316,total:[40,41,42,953,999,1174],total_mem_on_dev:953,total_mem_on_nod:1174,tpu:[953,1000,1174],tpu_is_avail:[456,588,724,953,1174],trace:[40,41,1027,1076],track:[43,953,1174,1218,1227,1303,1304],track_submod_call_ord:[1303,1304],track_submod_ret:[1303,1304],trail:[1305,1306],train:[1122,1124,1125,1129,1274,1275],trainabl:[1122,1128,1274,1275,1280,1281,1303,1304,1313],trainer:1274,tran:1320,transform:[1255,1263,1264],transpos:[40,41,138,306,458,732,953,984,1027,1174,1255,1257,1259,1261,1291,1293,1295,1297],travers:[15,18,19,40,41,1218,1227],treat:[40,41,951,952],tri:[40,41],triangular:[868,872],trigonometr:[1155,1156,1159],tril:[77,214,400,531,667,868],trim_kei:[40,41],trust:[1122,1129,1307,1309],truth:[878,886,887,912,930,931,1027,1054,1152,1153,1154],try_else_non:1027,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[953,1174],tune_dev_alloc:953,tune_dev_split:953,tune_node_alloc:1174,tune_node_split:1174,tune_step:[953,1174],tupl:[15,16,17,18,19,40,41,43,400,401,402,405,868,869,870,873,894,897,898,899,900,906,907,908,909,910,951,952,1027,1043,1059,1060,1102,1120,1174,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1232,1237,1239,1240,1241,1242,1243,1244,1245],tutori:43,two:[40,41,868,872,894,895,896,897,1027,1030,1034,1046,1082,1109,1145,1148],type:[15,18,40,41,42,43,59,408,409,456,457,868,869,870,871,872,873,875,876,878,879,880,881,882,883,884,885,886,887,889,890,891,892,894,895,898,899,900,904,905,908,909,910,912,930,931,937,953,965,966,967,968,980,981,985,997,1003,1007,1008,1009,1013,1014,1015,1016,1017,1018,1019,1026,1027,1028,1030,1033,1042,1044,1054,1057,1058,1060,1069,1076,1088,1089,1094,1108,1118,1121,1122,1128,1133,1155,1163,1174,1274,1282,1284,1285,1287,1288,1290,1303,1304,1317],types_to_iteratively_nest:[40,41,42],uint8:[1138,1140,1144],uint8_img_to_float_img:1138,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[878,880],underwai:43,unecessari:43,unfairli:43,unif:1174,unifi:[40,41,953,982,983,984,985,997,1174,1274],uniform:[40,41,1230,1231,1233,1234,1282,1284,1285,1288,1289],uniformli:[1230,1232,1234],unify_arrai:1174,unify_it:1174,unify_nest:1174,uniniti:[868,869],union:[15,18,19,40,41,43,400,401,402,403,405,406,408,409,868,869,870,871,872,873,874,875,876,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,894,896,897,898,899,900,901,902,904,905,906,907,908,909,910,912,930,931,937,951,952,953,971,976,977,978,979,997,998,1003,1007,1008,1009,1013,1014,1015,1016,1017,1018,1019,1026,1027,1028,1029,1030,1032,1033,1034,1035,1037,1039,1040,1041,1042,1043,1045,1046,1047,1048,1051,1052,1053,1054,1056,1057,1058,1059,1060,1061,1062,1066,1068,1069,1070,1077,1078,1079,1080,1082,1083,1084,1085,1088,1089,1092,1093,1094,1095,1096,1101,1102,1103,1104,1107,1109,1110,1112,1113,1114,1115,1117,1118,1119,1120,1121,1174,1218,1219,1220,1226,1227],uniqu:[953,962,963,1170,1171,1172,1173,1174,1218,1222],unique_kwarg:1174,unit:[43,953,1155,1156,1158,1174,1247,1248,1249,1250],unitari:[894,897],unless:[1027,1088,1121],unlik:[953,1174],unnorm:[1230,1231],unpack:[1027,1117],unrol:[1255,1265],unset:1317,unset_debug_mod:44,unset_default_devic:953,unset_default_dtyp:1003,unset_default_float_dtyp:1003,unset_default_int_dtyp:1003,unset_framework:[59,1317],unset_with_grad:1122,unstack:[40,41,138,306,458,595,732,1027],until:43,unus:[951,952],updat:[40,41,458,483,484,953,962,1027,1074,1095,1096,1122,1124,1125,1127,1129,1130,1131,1170,1171,1172,1174,1218,1223,1224,1228,1229,1255,1265,1274,1275,1280,1281,1307,1308,1309,1310,1311,1312,1317,1320],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1230,1234],upper_depth:[1303,1304],upstream:43,usabl:[1274,1320],usag:[953,997,1174],use:[40,41,42,43,506,953,962,963,988,1000,1027,1092,1105,1106,1145,1150,1174,1255,1266,1272,1273,1274,1305,1306,1317,1320],used:[40,41,43,506,894,895,953,962,992,995,996,1002,1003,1014,1027,1064,1065,1081,1095,1096,1097,1098,1121,1122,1129,1130,1145,1148,1170,1171,1172,1173,1174,1218,1227,1291,1302,1307,1309,1310,1316,1317],used_dev:[953,962],used_mem_on_dev:953,used_mem_on_nod:1174,used_node_str:1174,used_node_strs_dict:1174,useful:[40,41,953,997,1174,1255,1264,1274,1317],user:[1274,1291,1302,1303,1304,1317,1320],uses:1274,using:[40,41,43,1122,1124,1125,1218,1221,1225,1237,1238,1255,1263,1267,1274,1291,1299,1316,1317,1320],util:[953,986,1174],utility_funct:[908,909,910],v_with_top_v_key_chain:[1303,1304],val:[40,41,458,475,476,477,912,947,1027,1072,1073,1074,1097,1098],valid:[908,909,910,1003,1008,1027,1105,1106,1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298],valid_dtyp:1003,valu:[40,41,458,878,881,886,887,894,896,897,898,901,902,904,905,906,907,912,930,931,953,965,996,997,1027,1028,1030,1032,1039,1040,1041,1043,1044,1050,1054,1059,1060,1061,1062,1077,1079,1080,1083,1085,1091,1092,1093,1094,1095,1096,1097,1098,1099,1115,1118,1119,1120,1122,1126,1129,1138,1144,1152,1153,1154,1155,1164,1165,1166,1170,1171,1172,1174,1218,1222,1223,1224,1228,1229,1230,1233,1234,1237,1239,1241,1255,1266,1267,1272,1273,1291,1302,1305,1306,1307,1309],value_is_nan:1027,vanilla:[1170,1172],var_shap:1282,variabl:[15,16,17,18,19,40,41,354,490,630,796,1027,1036,1072,1073,1074,1075,1076,1108,1122,1125,1126,1127,1128,1129,1130,1131,1133,1136,1170,1171,1172,1173,1255,1266,1272,1273,1280,1281,1282,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314],variable_data:[490,796,1122],varianc:[40,41,1237,1245,1320],varieti:1317,variou:[43,1274],vector:[40,41,499,502,894,897,898,1027,1041,1046,1145,1151,1255,1264,1291,1301],vector_norm:[40,41,105,235,428,559,695,894],vector_to_skew_symmetric_matrix:[176,363,499,639,806,1145],verbos:1319,veri:[43,1274],verifi:43,version:43,via:[1218,1219,1226,1317],view:[1138,1143],vision:1274,visual:1317,volum:[1255,1260],vw_tm1:[1122,1125,1129],wai:[1317,1320],wait:[40,41,42,43],want:[43,1274,1317,1320],warn:[59,66,67,68,69,70],warp:[495,496,1138,1139],watch:1316,websit:43,weight:[1122,1124,1125,1127,1129,1130,1131,1255,1264,1265,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1303,1304,1307,1309,1310],weight_initi:[1291,1292,1293,1294,1295,1296,1297,1298,1300,1301],weights_path:[1303,1304],well:[40,41,1027,1068],were:[40,41,1174],what:[43,1274],when:[40,41,42,43,894,897,953,1027,1038,1106,1119,1174,1274,1303,1304,1317,1320],where:[40,41,43,306,458,732,878,888,894,897,908,909,910,912,937,1027,1030,1037,1039,1043,1056,1070,1077,1088,1120,1218,1219,1226,1230,1231],wherea:43,wherebi:[1218,1227],whether:[15,18,19,40,41,42,878,885,908,909,910,951,952,953,971,984,988,992,997,1000,1002,1003,1013,1017,1018,1019,1026,1027,1029,1034,1035,1047,1050,1055,1059,1066,1068,1071,1075,1076,1081,1101,1108,1117,1118,1122,1125,1126,1127,1128,1129,1130,1131,1133,1170,1171,1172,1173,1174,1218,1219,1220,1222,1226,1227,1230,1231,1247,1248,1255,1263,1274,1280,1281,1291,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312],which:[40,41,42,43,506,868,869,870,871,872,873,874,875,876,894,895,898,899,900,901,902,904,905,906,907,908,909,910,951,952,953,962,963,971,976,977,978,979,982,983,984,985,987,989,993,995,996,997,1003,1008,1013,1017,1026,1027,1030,1033,1042,1044,1046,1047,1048,1050,1060,1061,1062,1063,1069,1070,1078,1079,1080,1087,1088,1089,1090,1092,1095,1096,1103,1107,1117,1119,1121,1122,1125,1126,1127,1129,1130,1131,1133,1135,1136,1138,1140,1145,1148,1155,1160,1174,1218,1222,1223,1224,1228,1229,1230,1231,1232,1233,1234,1237,1239,1240,1241,1242,1243,1244,1245,1247,1252,1255,1266,1267,1274,1280,1281,1291,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1311,1313,1314,1316,1317],whilst:43,whitespac:[40,41,42],who:43,whose:[43,868,872,878,879,882,883,891,894,895,899,900,912,930,937,1027,1033,1038,1237,1238,1239,1240,1241,1243,1245],why:[1274,1275],width:[1138,1143],wiki:1320,wikipedia:1320,window:[1138,1143,1255,1256,1257,1258,1259,1260,1261,1262,1291,1292,1293,1294,1295,1296,1297,1298],wise:[40,41,43,878,880,886,887,890,912,930,931,937,1027,1039,1054,1057,1058,1083,1085,1094,1122,1125,1127,1129,1131,1152,1153,1154,1155,1156,1158,1159,1160,1163,1164,1165,1166,1168,1247,1248,1249,1250,1251,1252,1253,1254],wish:1317,with_bia:[1291,1301],with_cal:[1027,1050],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1122,1132],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1174,with_partial_v:[1303,1304],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,458,485,1027,1103,1174],with_to_kv_fn:[1291,1302],with_to_out_fn:[1291,1302],with_to_q_fn:[1291,1302],within:[15,18,19,43,894,897,1027,1030,1230,1234],without:[40,41,43,1027,1091,1093,1099,1218,1220,1317],wonder:1274,word:[15,16,17,1027,1030,1230,1234,1280,1281],work:[43,1316],worker:[953,962,963,1174],worker_class:[953,962,963,1174],worker_kwarg:1174,would:[43,1247,1252,1274,1317,1320],wrap:[15,40,41,42,43,456,458,490,495,499,503,504,506,1027,1038,1122,1136,1274],wrapper:43,write:[40,41,43,1274,1275,1320],written:[43,1274,1320],ws_new:[1122,1125,1127,1129,1130,1131],x1_i:[878,880,886,887,1027,1054,1155,1163],x2_i:[878,880,886,887,1027,1054,1155,1163],x_feat_dim:[1255,1266],x_i:[878,879,881,882,883,884,885,889,890,891,892],x_in:[1274,1316],x_inv:[1145,1147],x_max:[458,1027,1039],x_min:[458,1027,1039],x_sub:1174,xkk:1320,xkkm1:1320,xkm1km1:1320,xs0:1174,xs_t:1174,year:[1274,1320],yet:[1218,1227,1320],yield:[1027,1119],you:[43,1274,1316,1317,1320],your:[1274,1275,1316,1317,1320],your_awesome_project:1317,yourself:[43,1274],yourslef:43,youtub:43,zero:[40,41,77,214,400,531,667,868,869,872,878,890,894,898,908,909,910,1027,1043,1088,1095,1096,1120,1121,1122,1124,1125,1129,1130,1255,1263,1274,1282,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1307,1308,1309,1310],zero_pad:[306,458,595,732,1027],zeros_lik:[138,306,458,595,732,1027],zip:1174,zk_e:1320},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1050,"function":[77,83,88,104,109,111,113,114,116,118,214,220,225,234,240,242,244,245,247,248,400,406,411,427,434,436,438,439,441,443,531,537,542,558,565,567,569,570,572,574,667,673,678,694,701,703,705,706,708,710,868,874,878,893,899,901,903,904,906,908],Ones:1287,Using:1317,abs:[307,596,733,1028],aco:[817,1156],acosh:[818,1157],activ:[198,387,517,659,846,1247,1277],adam:1308,adam_step:1124,adam_upd:1125,algebra:[105,176,235,363,428,499,559,639,695,806,894],all:[119,249,444,575,711,909],all_equ:1029,all_nested_indic:1219,ani:[120,250,445,576,712,910],api:[0,43,75,122,212,252,398,447,529,578,665,714,866],arang:[139,308,459,597,734,1030],arg_nam:1031,argmax:[112,243,437,568,704,902],argmin:[140,460,598,735,1032],args_to_ivi:16,args_to_n:17,argsort:[115,246,440,571,707,905],arithmet:[1,123,253,448,579,715],arrai:[0,3,43,75,121,122,124,141,212,251,252,254,261,309,398,446,447,449,461,529,577,578,580,599,665,713,714,716,736,866,912,1033],array_equ:[310,737,1034],arrays_equ:1035,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[819,1158],asinh:[89,412,543,679,879],assert_supports_inplac:1036,atan2:[821,1160],atan:[820,1159],atanh:[822,1161],attribut:[5,125,255,450,581,717],backend:[43,73],bilinear_resampl:[173,360,496,636,803,1139],binary_cross_entropi:1269,bitwis:[7,126,256,451,582,718],bitwise_and:[90,226,413,544,680,880],broadcast_to:[311,738,1037],builder:51,builtin:[121,251,261,446,577,713,912],builtin_ab:[262,913],builtin_add:[263,914],builtin_and:[264,915],builtin_bool:[265,916],builtin_contain:[266,917],builtin_deepcopi:[267,918],builtin_dir:[268,919],builtin_eq:[269,920],builtin_float:[270,921],builtin_floordiv:[271,922],builtin_g:[272,923],builtin_getattr:[273,924],builtin_getattribut:[274,925],builtin_getitem:[275,926],builtin_gt:[276,927],builtin_int:[277,928],builtin_invert:[278,929],builtin_l:[279,930],builtin_lt:[280,584,720,931],builtin_mul:[281,932],builtin_n:[282,933],builtin_neg:[283,934],builtin_or:[284,935],builtin_po:[285,936],builtin_pow:[286,937],builtin_radd:[287,938],builtin_rand:[288,939],builtin_rfloordiv:[289,940],builtin_rmul:[290,941],builtin_ror:[291,942],builtin_rpow:[292,943],builtin_rsub:[293,944],builtin_rtruediv:[294,945],builtin_rxor:[295,946],builtin_setitem:[296,947],builtin_sub:[297,948],builtin_truediv:[298,949],builtin_xor:[299,950],cache_fn:1038,cast:[142,312,462,600,739,1007],ceil:[91,227,414,545,681,881],choleski:[807,1146],choose_random_framework:61,citat:1274,clear_framework_stack:62,clear_mem_on_dev:[726,969],clip:[313,740,1039],clip_matrix_norm:1040,clip_vector_norm:1041,clone:1189,clone_arrai:1190,clone_it:1191,clone_nest:1192,clonedit:1176,cloneditem:1175,clonednest:1177,closest_valid_dtyp:1008,code:1320,comparison:[9,127,257,452,583,719],compil:[314,463,741,951,952],concaten:[143,315,464,601,742,1042],constant:[76,213,399,530,666,867],constant_pad:[316,602,743,1043],contain:[40,41],container_typ:[744,1044],content:1274,contribut:43,conv1d:[204,390,521,858,1256,1292],conv1d_transpos:[205,391,522,859,1257],conv1dtranspos:1293,conv2d:[206,392,523,661,860,1258,1294],conv2d_transpos:[207,393,524,861,1259],conv2dtranspos:1295,conv3d:[208,394,525,662,862,1260,1296],conv3d_transpos:[209,395,526,863,1261],conv3dtranspos:1297,convers:15,convert:[200,854,1280],convert_dtyp:1009,copy_arrai:[745,1045],copy_nest:1220,core:[130,260,455,587,723,911],cos:[92,415,546,682,882],cosh:[93,416,547,683,823,883,1162],cprint:1319,creat:43,creation:[77,214,400,531,667,868],cross:[317,746,1046],cross_entropi:1270,cumprod:[144,318,465,747,1047],cumsum:[748,1048],current_framework:63,current_framework_str:[749,1049],data:[83,87,220,224,406,410,537,541,673,677,874,877],debug_mod:45,debugg:44,default_devic:970,default_dtyp:1010,default_float_dtyp:1011,default_int_dtyp:1012,default_nod:1193,depthwise_conv2d:[210,396,527,663,864,1262],depthwiseconv2d:1298,design:43,det:[429,560,696],dev:[133,302,590,727,971],dev_clon:972,dev_clone_arrai:973,dev_clone_it:974,dev_clone_nest:975,dev_dist:976,dev_dist_arrai:977,dev_dist_it:978,dev_dist_nest:979,dev_from_str:[134,303,591,728,980],dev_to_str:[135,304,592,729,981],dev_unifi:982,dev_unify_arrai:983,dev_unify_it:984,dev_unify_nest:985,dev_util:986,devclonedit:956,devcloneditem:955,devclonednest:957,devdistit:959,devdistitem:958,devdistnest:960,devic:[20,131,300,456,588,724,953],devmapp:962,devmappermultiproc:963,diagon:[106,236,430,561,697,895],distribute_nest:1194,divid:1163,document:1274,dropout:[1263,1299],dtype:[145,319,466,603,750,1003,1013],dtype_bit:[146,320,467,604,751,1014],dtype_from_str:[147,321,468,605,752,1015],dtype_to_str:[148,322,469,606,753,1016],ecosystem:52,einops_rearrang:1051,einops_reduc:1052,einops_repeat:1053,einsum:[190,378,509,651,838,1238],elementwis:[88,225,411,542,678,878],empti:[78,215,401,532,668,869],equal:[94,417,548,684,1054],erf:[505,824,1164],execute_with_gradi:[170,355,491,631,797,1126],exist:1055,exp:[825,1165],expand_dim:[323,754,1056],finfo:[85,222,408,539,675,875],firstlayersiren:1284,flip:[110,241,435,566,702,900],float_img_to_uint8_img:1140,floor:[324,755,1057],floormod:[325,756,1058],fomaml_step:1171,fork:43,fourier_encod:1059,framework:59,full:[149,326,470,607,757,1060],func:72,gather:[150,327,471,608,758,1061],gather_nd:[151,328,472,609,759,1062],geglu:1278,gelu:[388,518,847,1248,1279],gener:[22,138,306,458,595,732,1027],get_all_arrays_in_memori:1063,get_all_arrays_on_dev:987,get_framework:64,get_min_bas:1064,get_min_denomin:1065,get_num_dim:[760,1066],get_referrers_recurs:1067,glorotuniform:1285,gpu_is_avail:[988,1195],gradient:[24,169,354,490,630,796,1122],gradient_descent_upd:1127,gradient_imag:[174,361,497,637,804,1141],gym:53,handler:59,has_nan:1068,ident:[152,329,473,610,761,1069],iinfo:[86,223,409,540,676,876],imag:[26,172,359,495,635,802,1138],index_nest:1221,indices_wher:[153,330,474,762,1070],initi:1282,inplac:[11,128,258,453,585,721],inplace_arrays_support:1071,inplace_decr:[154,331,475,611,763,1072],inplace_incr:[155,332,476,612,764,1073],inplace_upd:[156,333,477,613,765,1074],inplace_variables_support:1075,inv:[808,1147],invalid_dtyp:1017,is_arrai:[157,334,478,614,766,1076],is_float_dtyp:1018,is_int_dtyp:1019,is_vari:[171,356,492,632,798,1128],isfinit:[95,228,418,549,685,884],isinf:[335,615,767,1077],isnan:[96,229,419,550,686,885],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,865,1316,1317,1320],ivymodul:[201,855],jax:74,keep:43,lamb:1309,lamb_upd:1129,lar:1310,lars_upd:1130,layer:[203,389,520,660,857,1255,1291],layer_norm:1273,layernorm:1306,leaky_relu:[848,1249],less:[97,230,420,551,687,886],less_equ:[98,421,552,688,887],linalg:[28,1145],linear:[105,176,235,363,428,499,559,639,695,806,894,1264,1301],linear_resampl:[158,336,479,616,768,1078],linspac:[159,337,480,617,769,1079],list:43,log1p:[99,422,553,689,888],log2:[100,423,554,690,889],log:[826,1166],logic:[30,180,368,503,643,813,1152],logical_and:[369,814,1153],logical_not:[101,231,424,555,691,890],logical_or:[370,815,1154],logspac:[160,338,481,618,770,1080],loss:1268,lstm:1300,lstm_updat:1265,maml_step:1172,manipul:[109,240,434,565,701,899],map:1222,map_nest_at_index:1223,map_nest_at_indic:1224,match_kwarg:1081,math:[32,181,371,504,644,816,1155],matmul:[339,619,771,1082],matrix_norm:[177,364,500,640,809,1148],maximum:[772,1083],mech:54,memori:55,meshgrid:[340,773,1084],meta:[34,1170],method:[104,234,427,558,694,893],min:[117,442,573,709,907],minimum:[774,1085],model:56,modul:[1303,1304,1316],multi:1174,multi_head_attent:1266,multi_index_nest:1225,multidevcontain:42,multidevit:966,multidevitem:965,multidevnest:967,multiheadattent:1302,multinodeit:1180,multinodeitem:1179,multinodenest:1181,multinomi:[183,373,507,646,831,1231],multiprocess:[775,1086],mxnet:211,nativ:1316,nest:1218,nested_indices_wher:1226,nested_map:1227,network:1316,next:1274,node:[1174,1196],node_dist:1197,node_dist_arrai:1198,node_dist_it:1199,node_str:1200,node_to_str:1201,node_util:1202,nodedistit:1183,nodedistitem:1182,nodedistnest:1184,nodemapp:1186,nodemappermultiproc:1187,norm:[1272,1305],num_arrays_in_memori:1087,num_arrays_on_dev:989,num_cpu_cor:990,num_gpu:[136,991,1203],numpi:397,nutshel:1274,one_hot:[161,482,620,776,1088],ones:[79,216,402,533,669,870,1089],ones_lik:[80,217,403,534,670,871],oper:[1,3,7,9,11,13,43,123,124,126,127,128,129,253,254,256,257,258,259,448,449,451,452,453,454,579,580,582,583,585,586,715,716,718,719,721,722],optim:[1307,1311],optimizer_upd:1131,overview:1274,percent_used_mem_on_dev:992,percent_used_mem_on_nod:1204,pinv:[365,810,1149],portabl:1320,print_all_arrays_in_memori:1090,print_all_arrays_on_dev:993,profil:[132,301,457,589,725,968,1188],pull:43,queue_timeout:1091,randint:[184,374,647,832,1232],random:[36,182,372,506,645,830,1230],random_crop:1142,random_norm:[185,375,648,833,1233],random_uniform:[186,376,649,834,1234],reduce_max:[191,379,510,652,839,1239],reduce_mean:[192,380,511,653,840,1240],reduce_min:[193,381,512,654,841,1241],reduce_prod:[194,382,513,655,842,1242],reduce_std:[383,1243],reduce_sum:[195,384,514,656,843,1244],reduce_var:[196,385,515,657,844,1245],reduct:[38,189,377,508,650,837,1237],reflect:[13,129,259,454,586,722],relu:[849,1250],repeat:[341,777,1092],reptile_step:1173,request:43,reshap:[778,1093],robot:57,round:[342,779,1094],run:1317,scaled_dot_product_attent:1267,scatter_flat:[162,343,483,621,780,1095],scatter_nd:[163,344,484,622,781,1096],search:[111,242,436,567,703,901],seed:[187,835,1235],sequenti:[1313,1314],set:[113,244,438,569,705,903],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:994,set_default_dtyp:1020,set_default_float_dtyp:1021,set_default_int_dtyp:1022,set_default_nod:1205,set_exception_debug_mod:48,set_framework:65,set_min_bas:1097,set_min_denomin:1098,set_nest_at_index:1228,set_nest_at_indic:1229,set_queue_timeout:1099,set_split_factor:[995,1206],set_tmp_dir:1100,set_with_grad:1132,sgd:1312,shape:[782,1101],shape_to_tupl:1102,shuffl:[188,836,1236],sigmoid:[850,1251],signatur:[104,234,427,558,694,893],sin:[102,232,425,556,692,891],sinh:[827,1167],siren:1288,slodget:896,slogdet:[237,431,562,698],softmax:[199,519,851,1252],softplu:[852,1253],sort:[114,245,439,570,706,904],sparse_cross_entropi:1271,split:[164,345,485,623,783,1103],split_factor:[996,1207],split_func_cal:[997,1208],sqrt:[103,233,426,557,693,892],squeez:[165,346,486,624,784,1104],stable_divid:1105,stable_pow:1106,stack:[347,785,1107],stack_imag:[175,362,498,638,805,1143],standard:43,statist:[116,247,441,572,708,906],stop_gradi:[357,493,633,799,1133],str_to_nod:1209,submodul:43,supports_inplac:1108,svd:[107,238,432,563,699,897],swapax:[625,786,1109],tan:[828,1168],tanh:[829,853,1169,1254],tensorflow:528,tile:[348,626,787,1110],tmp_dir:1111,to_dev:[137,305,593,730,998],to_ivi:18,to_ivy_modul:[202,856,1281],to_list:[788,1112],to_n:19,to_nod:1210,to_numpi:[789,1113],to_scalar:[790,1114],todo:43,torch:664,total_mem_on_dev:999,total_mem_on_nod:1211,tpu_is_avail:[594,731,1000,1212],train:1316,trainabl:1316,transpos:[166,349,487,791,1115],tree:1274,tril:[81,218,404,535,671,872],try_else_non:1116,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,220,224,406,410,537,541,673,677,874,877],uint8_img_to_float_img:1144,unifi:1213,unify_arrai:1214,unify_it:1215,unify_nest:1216,unset_debug_mod:49,unset_default_devic:1001,unset_default_dtyp:1023,unset_default_float_dtyp:1024,unset_default_int_dtyp:1025,unset_framework:71,unset_with_grad:1134,unstack:[167,350,488,627,792,1117],updat:43,used_mem_on_dev:1002,used_mem_on_nod:1217,util:[118,248,443,574,710,908],valid_dtyp:1026,value_is_nan:1118,variabl:[358,494,634,800,1135],variable_data:[801,1136],vector_norm:[108,239,433,564,700,898],vector_to_skew_symmetric_matrix:[179,367,502,642,812,1151],verbos:1318,vision:58,where:[351,793,1119,1274],why:1320,with_grad:1137,wrapper:72,write:1317,your:43,zero:[82,219,405,536,672,873,1290],zero_pad:[352,628,794,1120],zeros_lik:[168,353,489,629,795,1121]}})
Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[862,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[399,0,0,"-"],creation_functions:[400,0,0,"-"],data_type_functions:[406,0,0,"-"],data_types:[410,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[401,2,1,""],ones:[402,2,1,""],ones_like:[403,2,1,""],tril:[404,2,1,""],zeros:[405,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[406,1,1,""],finfo:[408,2,1,""],iinfo:[409,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[406,3,1,""],bits:[406,3,1,""],eps:[406,3,1,""],max:[406,3,1,""],min:[406,3,1,""],smallest_normal:[406,3,1,""]},"ivy.functional.backends.numpy.core":{device:[455,0,0,"-"],general:[457,0,0,"-"],gradients:[489,0,0,"-"],image:[494,0,0,"-"],linear_algebra:[498,0,0,"-"],logic:[502,0,0,"-"],math:[503,0,0,"-"],random:[505,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[456,1,1,""],clear_mem_on_dev:[455,2,1,""],dev:[455,2,1,""],dev_from_str:[455,2,1,""],dev_to_str:[455,2,1,""],gpu_is_available:[455,2,1,""],num_gpus:[455,2,1,""],to_dev:[455,2,1,""],tpu_is_available:[455,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[456,3,1,""],start:[456,3,1,""],stop:[456,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[457,2,1,""],arange:[458,2,1,""],argmin:[459,2,1,""],array:[460,2,1,""],asarray:[457,2,1,""],astype:[457,2,1,""],cast:[461,2,1,""],clip:[457,2,1,""],compile:[462,2,1,""],concatenate:[463,2,1,""],constant_pad:[457,2,1,""],container_types:[457,2,1,""],copy_array:[457,2,1,""],cumprod:[464,2,1,""],current_framework_str:[457,2,1,""],dtype:[465,2,1,""],dtype_bits:[466,2,1,""],dtype_from_str:[467,2,1,""],dtype_to_str:[468,2,1,""],floor:[457,2,1,""],floormod:[457,2,1,""],full:[469,2,1,""],gather:[470,2,1,""],gather_nd:[471,2,1,""],get_num_dims:[457,2,1,""],identity:[472,2,1,""],indices_where:[473,2,1,""],inplace_arrays_supported:[457,2,1,""],inplace_decrement:[474,2,1,""],inplace_increment:[475,2,1,""],inplace_update:[476,2,1,""],inplace_variables_supported:[457,2,1,""],is_array:[477,2,1,""],linear_resample:[478,2,1,""],linspace:[479,2,1,""],logspace:[480,2,1,""],matmul:[457,2,1,""],meshgrid:[457,2,1,""],multiprocessing:[457,2,1,""],one_hot:[481,2,1,""],round:[457,2,1,""],scatter_flat:[482,2,1,""],scatter_nd:[483,2,1,""],shape:[457,2,1,""],split:[484,2,1,""],squeeze:[485,2,1,""],to_list:[457,2,1,""],to_numpy:[457,2,1,""],to_scalar:[457,2,1,""],transpose:[486,2,1,""],unstack:[487,2,1,""],where:[457,2,1,""],zero_pad:[457,2,1,""],zeros_like:[488,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[490,2,1,""],is_variable:[491,2,1,""],stop_gradient:[492,2,1,""],variable:[493,2,1,""],variable_data:[489,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[495,2,1,""],gradient_image:[496,2,1,""],stack_images:[497,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[499,2,1,""],qr:[500,2,1,""],vector_to_skew_symmetric_matrix:[501,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[504,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[506,2,1,""],randint:[505,2,1,""],random_normal:[505,2,1,""],random_uniform:[505,2,1,""],seed:[505,2,1,""],shuffle:[505,2,1,""]},"ivy.functional.ivy":{array_api:[863,0,0,"-"],core:[908,0,0,"-"],nn:[1243,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[864,0,0,"-"],creation_functions:[865,0,0,"-"],data_type_functions:[871,0,0,"-"],data_types:[874,0,0,"-"],elementwise_functions:[875,0,0,"-"],function_and_method_signatures:[890,0,0,"-"],linear_algebra:[891,0,0,"-"],manipulation_functions:[896,0,0,"-"],searching_functions:[898,0,0,"-"],set_functions:[900,0,0,"-"],sorting_functions:[901,0,0,"-"],statistical_functions:[903,0,0,"-"],utility_functions:[905,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[864,4,1,""],nan:[864,4,1,""],pi:[864,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[866,2,1,""],ones:[867,2,1,""],ones_like:[868,2,1,""],tril:[869,2,1,""],zeros:[870,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[872,2,1,""],iinfo:[873,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[876,2,1,""],bitwise_and:[877,2,1,""],ceil:[878,2,1,""],cos:[879,2,1,""],cosh:[880,2,1,""],isfinite:[881,2,1,""],isnan:[882,2,1,""],less:[883,2,1,""],less_equal:[884,2,1,""],log1p:[885,2,1,""],log2:[886,2,1,""],logical_not:[887,2,1,""],sin:[888,2,1,""],sqrt:[889,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[892,2,1,""],slodget:[893,2,1,""],svd:[894,2,1,""],vector_norm:[895,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[897,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[899,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[902,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[904,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[906,2,1,""],any:[907,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[909,0,0,"-"],compilation:[948,0,0,"-"],device:[950,0,0,"-"],dtype:[1000,0,0,"-"],general:[1024,0,0,"-"],gradients:[1119,0,0,"-"],image:[1135,0,0,"-"],linalg:[1142,0,0,"-"],logic:[1149,0,0,"-"],math:[1152,0,0,"-"],meta:[1167,0,0,"-"],multi_node:[1171,0,0,"-"],nest:[1215,0,0,"-"],random:[1227,0,0,"-"],reductions:[1234,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[910,2,1,""],builtin_add:[911,2,1,""],builtin_and:[912,2,1,""],builtin_bool:[913,2,1,""],builtin_contains:[914,2,1,""],builtin_deepcopy:[915,2,1,""],builtin_dir:[916,2,1,""],builtin_eq:[917,2,1,""],builtin_float:[918,2,1,""],builtin_floordiv:[919,2,1,""],builtin_ge:[920,2,1,""],builtin_getattr:[921,2,1,""],builtin_getattribute:[922,2,1,""],builtin_getitem:[923,2,1,""],builtin_gt:[924,2,1,""],builtin_int:[925,2,1,""],builtin_invert:[926,2,1,""],builtin_le:[927,2,1,""],builtin_lt:[928,2,1,""],builtin_mul:[929,2,1,""],builtin_ne:[930,2,1,""],builtin_neg:[931,2,1,""],builtin_or:[932,2,1,""],builtin_pos:[933,2,1,""],builtin_pow:[934,2,1,""],builtin_radd:[935,2,1,""],builtin_rand:[936,2,1,""],builtin_rfloordiv:[937,2,1,""],builtin_rmul:[938,2,1,""],builtin_ror:[939,2,1,""],builtin_rpow:[940,2,1,""],builtin_rsub:[941,2,1,""],builtin_rtruediv:[942,2,1,""],builtin_rxor:[943,2,1,""],builtin_setitem:[944,2,1,""],builtin_sub:[945,2,1,""],builtin_truediv:[946,2,1,""],builtin_xor:[947,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[949,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[950,1,1,""],DevClonedItem:[952,1,1,""],DevClonedIter:[953,1,1,""],DevClonedNest:[954,1,1,""],DevDistItem:[955,1,1,""],DevDistIter:[956,1,1,""],DevDistNest:[957,1,1,""],DevManager:[950,1,1,""],DevMapper:[959,1,1,""],DevMapperMultiProc:[960,1,1,""],MultiDev:[950,1,1,""],MultiDevItem:[962,1,1,""],MultiDevIter:[963,1,1,""],MultiDevNest:[964,1,1,""],Profiler:[965,1,1,""],clear_mem_on_dev:[966,2,1,""],default_device:[967,2,1,""],dev:[968,2,1,""],dev_clone:[969,2,1,""],dev_clone_array:[970,2,1,""],dev_clone_iter:[971,2,1,""],dev_clone_nest:[972,2,1,""],dev_dist:[973,2,1,""],dev_dist_array:[974,2,1,""],dev_dist_iter:[975,2,1,""],dev_dist_nest:[976,2,1,""],dev_from_str:[977,2,1,""],dev_to_str:[978,2,1,""],dev_unify:[979,2,1,""],dev_unify_array:[980,2,1,""],dev_unify_iter:[981,2,1,""],dev_unify_nest:[982,2,1,""],dev_util:[983,2,1,""],get_all_arrays_on_dev:[984,2,1,""],gpu_is_available:[985,2,1,""],num_arrays_on_dev:[986,2,1,""],num_cpu_cores:[987,2,1,""],num_gpus:[988,2,1,""],percent_used_mem_on_dev:[989,2,1,""],print_all_arrays_on_dev:[990,2,1,""],set_default_device:[991,2,1,""],set_split_factor:[992,2,1,""],split_factor:[993,2,1,""],split_func_call:[994,2,1,""],to_dev:[995,2,1,""],total_mem_on_dev:[996,2,1,""],tpu_is_available:[997,2,1,""],unset_default_device:[998,2,1,""],used_mem_on_dev:[999,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[950,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[950,3,1,""],da_tune_step:[950,3,1,""],dim_size:[950,3,1,""],ds_tune_step:[950,3,1,""],map:[950,3,1,""],repeated_config_check:[950,3,1,""],tune_step:[950,3,1,""],tuned:[950,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[959,3,1,""],map:[959,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[960,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[950,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[962,3,1,""],items:[962,3,1,""],keys:[962,3,1,""],shape:[962,3,1,""],values:[962,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[963,3,1,""],at_dev:[963,3,1,""],at_devs:[963,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[964,3,1,""],at_dev:[964,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[965,3,1,""],start:[965,3,1,""],stop:[965,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[1000,1,1,""],DefaultFloatDtype:[1000,1,1,""],DefaultIntDtype:[1000,1,1,""],astype:[1000,2,1,""],cast:[1004,2,1,""],closest_valid_dtype:[1005,2,1,""],convert_dtype:[1006,2,1,""],default_dtype:[1007,2,1,""],default_float_dtype:[1008,2,1,""],default_int_dtype:[1009,2,1,""],dtype:[1010,2,1,""],dtype_bits:[1011,2,1,""],dtype_from_str:[1012,2,1,""],dtype_to_str:[1013,2,1,""],invalid_dtype:[1014,2,1,""],is_float_dtype:[1015,2,1,""],is_int_dtype:[1016,2,1,""],set_default_dtype:[1017,2,1,""],set_default_float_dtype:[1018,2,1,""],set_default_int_dtype:[1019,2,1,""],unset_default_dtype:[1020,2,1,""],unset_default_float_dtype:[1021,2,1,""],unset_default_int_dtype:[1022,2,1,""],valid_dtype:[1023,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[1000,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[1000,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[1000,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1047,2,1,""],abs:[1025,2,1,""],all_equal:[1026,2,1,""],arange:[1027,2,1,""],arg_names:[1028,2,1,""],argmin:[1029,2,1,""],array:[1030,2,1,""],array_equal:[1031,2,1,""],arrays_equal:[1032,2,1,""],asarray:[1024,2,1,""],assert_supports_inplace:[1033,2,1,""],broadcast_to:[1034,2,1,""],cache_fn:[1035,2,1,""],clip:[1036,2,1,""],clip_matrix_norm:[1037,2,1,""],clip_vector_norm:[1038,2,1,""],concatenate:[1039,2,1,""],constant_pad:[1040,2,1,""],container_types:[1041,2,1,""],copy_array:[1042,2,1,""],cross:[1043,2,1,""],cumprod:[1044,2,1,""],cumsum:[1045,2,1,""],current_framework_str:[1046,2,1,""],einops_rearrange:[1048,2,1,""],einops_reduce:[1049,2,1,""],einops_repeat:[1050,2,1,""],equal:[1051,2,1,""],exists:[1052,2,1,""],expand_dims:[1053,2,1,""],floor:[1054,2,1,""],floormod:[1055,2,1,""],fourier_encode:[1056,2,1,""],full:[1057,2,1,""],gather:[1058,2,1,""],gather_nd:[1059,2,1,""],get_all_arrays_in_memory:[1060,2,1,""],get_min_base:[1061,2,1,""],get_min_denominator:[1062,2,1,""],get_num_dims:[1063,2,1,""],get_referrers_recursive:[1064,2,1,""],has_nans:[1065,2,1,""],identity:[1066,2,1,""],indices_where:[1067,2,1,""],inplace_arrays_supported:[1068,2,1,""],inplace_decrement:[1069,2,1,""],inplace_increment:[1070,2,1,""],inplace_update:[1071,2,1,""],inplace_variables_supported:[1072,2,1,""],is_array:[1073,2,1,""],isinf:[1074,2,1,""],linear_resample:[1075,2,1,""],linspace:[1076,2,1,""],logspace:[1077,2,1,""],match_kwargs:[1078,2,1,""],matmul:[1079,2,1,""],maximum:[1080,2,1,""],meshgrid:[1081,2,1,""],minimum:[1082,2,1,""],multiprocessing:[1083,2,1,""],num_arrays_in_memory:[1084,2,1,""],one_hot:[1085,2,1,""],ones:[1086,2,1,""],print_all_arrays_in_memory:[1087,2,1,""],queue_timeout:[1088,2,1,""],repeat:[1089,2,1,""],reshape:[1090,2,1,""],round:[1091,2,1,""],scatter_flat:[1092,2,1,""],scatter_nd:[1093,2,1,""],set_min_base:[1094,2,1,""],set_min_denominator:[1095,2,1,""],set_queue_timeout:[1096,2,1,""],set_tmp_dir:[1097,2,1,""],shape:[1098,2,1,""],shape_to_tuple:[1099,2,1,""],split:[1100,2,1,""],squeeze:[1101,2,1,""],stable_divide:[1102,2,1,""],stable_pow:[1103,2,1,""],stack:[1104,2,1,""],supports_inplace:[1105,2,1,""],swapaxes:[1106,2,1,""],tile:[1107,2,1,""],tmp_dir:[1108,2,1,""],to_list:[1109,2,1,""],to_numpy:[1110,2,1,""],to_scalar:[1111,2,1,""],transpose:[1112,2,1,""],try_else_none:[1113,2,1,""],unstack:[1114,2,1,""],value_is_nan:[1115,2,1,""],where:[1116,2,1,""],zero_pad:[1117,2,1,""],zeros_like:[1118,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1119,1,1,""],adam_step:[1121,2,1,""],adam_update:[1122,2,1,""],execute_with_gradients:[1123,2,1,""],gradient_descent_update:[1124,2,1,""],is_variable:[1125,2,1,""],lamb_update:[1126,2,1,""],lars_update:[1127,2,1,""],optimizer_update:[1128,2,1,""],set_with_grads:[1129,2,1,""],stop_gradient:[1130,2,1,""],unset_with_grads:[1131,2,1,""],variable:[1132,2,1,""],variable_data:[1133,2,1,""],with_grads:[1134,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1119,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1136,2,1,""],float_img_to_uint8_img:[1137,2,1,""],gradient_image:[1138,2,1,""],random_crop:[1139,2,1,""],stack_images:[1140,2,1,""],uint8_img_to_float_img:[1141,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1143,2,1,""],inv:[1144,2,1,""],matrix_norm:[1145,2,1,""],pinv:[1146,2,1,""],qr:[1147,2,1,""],vector_to_skew_symmetric_matrix:[1148,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1150,2,1,""],logical_or:[1151,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1153,2,1,""],acosh:[1154,2,1,""],asin:[1155,2,1,""],atan2:[1157,2,1,""],atan:[1156,2,1,""],atanh:[1158,2,1,""],cosh:[1159,2,1,""],divide:[1160,2,1,""],erf:[1161,2,1,""],exp:[1162,2,1,""],log:[1163,2,1,""],sinh:[1164,2,1,""],tan:[1165,2,1,""],tanh:[1166,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1168,2,1,""],maml_step:[1169,2,1,""],reptile_step:[1170,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1171,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1216,2,1,""],copy_nest:[1217,2,1,""],index_nest:[1218,2,1,""],map:[1219,2,1,""],map_nest_at_index:[1220,2,1,""],map_nest_at_indices:[1221,2,1,""],multi_index_nest:[1222,2,1,""],nested_indices_where:[1223,2,1,""],nested_map:[1224,2,1,""],set_nest_at_index:[1225,2,1,""],set_nest_at_indices:[1226,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1228,2,1,""],randint:[1229,2,1,""],random_normal:[1230,2,1,""],random_uniform:[1231,2,1,""],seed:[1232,2,1,""],shuffle:[1233,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1235,2,1,""],reduce_max:[1236,2,1,""],reduce_mean:[1237,2,1,""],reduce_min:[1238,2,1,""],reduce_prod:[1239,2,1,""],reduce_std:[1240,2,1,""],reduce_sum:[1241,2,1,""],reduce_var:[1242,2,1,""]},"ivy.functional.ivy.nn":{activations:[1244,0,0,"-"],layers:[1252,0,0,"-"],losses:[1265,0,0,"-"],norms:[1269,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1245,2,1,""],leaky_relu:[1246,2,1,""],relu:[1247,2,1,""],sigmoid:[1248,2,1,""],softmax:[1249,2,1,""],softplus:[1250,2,1,""],tanh:[1251,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1253,2,1,""],conv1d_transpose:[1254,2,1,""],conv2d:[1255,2,1,""],conv2d_transpose:[1256,2,1,""],conv3d:[1257,2,1,""],conv3d_transpose:[1258,2,1,""],depthwise_conv2d:[1259,2,1,""],dropout:[1260,2,1,""],linear:[1261,2,1,""],lstm_update:[1262,2,1,""],multi_head_attention:[1263,2,1,""],scaled_dot_product_attention:[1264,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1266,2,1,""],cross_entropy:[1267,2,1,""],sparse_cross_entropy:[1268,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1270,2,1,""]},"ivy.stateful":{activations:[1274,0,0,"-"],converters:[1277,0,0,"-"],initializers:[1279,0,0,"-"],layers:[1288,0,0,"-"],module:[1300,0,0,"-"],norms:[1302,0,0,"-"],optimizers:[1304,0,0,"-"],sequential:[1310,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1275,1,1,""],GELU:[1276,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1275,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1276,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1278,2,1,""]},"ivy.stateful.initializers":{Constant:[1279,1,1,""],FirstLayerSiren:[1281,1,1,""],GlorotUniform:[1282,1,1,""],KaimingNormal:[1279,1,1,""],Ones:[1284,1,1,""],Siren:[1285,1,1,""],Uniform:[1279,1,1,""],Zeros:[1287,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1279,3,1,""],create_variables:[1279,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1281,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1282,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1279,3,1,""],create_variables:[1279,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1284,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1285,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1279,3,1,""],create_variables:[1279,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1287,3,1,""]},"ivy.stateful.layers":{Conv1D:[1289,1,1,""],Conv1DTranspose:[1290,1,1,""],Conv2D:[1291,1,1,""],Conv2DTranspose:[1292,1,1,""],Conv3D:[1293,1,1,""],Conv3DTranspose:[1294,1,1,""],DepthwiseConv2D:[1295,1,1,""],Dropout:[1296,1,1,""],LSTM:[1297,1,1,""],Linear:[1298,1,1,""],MultiHeadAttention:[1299,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1289,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1290,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1291,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1292,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1293,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1294,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1295,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1296,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1297,3,1,""],get_initial_state:[1297,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1298,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1299,3,1,""]},"ivy.stateful.module":{Module:[1301,1,1,""]},"ivy.stateful.module.Module":{__init__:[1301,3,1,""],build:[1301,3,1,""],build_mode:[1301,3,1,""],built:[1301,3,1,""],check_submod_rets:[1301,3,1,""],get_mod_key:[1301,3,1,""],mod_depth:[1301,3,1,""],mod_height:[1301,3,1,""],mod_with_top_mod_key_chain:[1301,3,1,""],save_weights:[1301,3,1,""],show_mod_in_top_mod:[1301,3,1,""],show_structure:[1301,3,1,""],show_v_in_top_v:[1301,3,1,""],sub_mods:[1301,3,1,""],track_submod_call_order:[1301,3,1,""],track_submod_rets:[1301,3,1,""],v_with_top_v_key_chains:[1301,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1303,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1303,3,1,""]},"ivy.stateful.optimizers":{Adam:[1305,1,1,""],LAMB:[1306,1,1,""],LARS:[1307,1,1,""],Optimizer:[1308,1,1,""],SGD:[1309,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1305,3,1,""],set_state:[1305,3,1,""],state:[1305,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1306,3,1,""],set_state:[1306,3,1,""],state:[1306,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1307,3,1,""],set_state:[1307,3,1,""],state:[1307,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1308,3,1,""],set_state:[1308,3,1,""],step:[1308,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1309,3,1,""],set_state:[1309,3,1,""],state:[1309,3,1,""]},"ivy.stateful.sequential":{Sequential:[1311,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1311,3,1,""]},"ivy.verbosity":{cprint:[1316,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1315,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1304,1305,1306],"02886":1271,"100":[1171,1271,1313],"141592653589793":864,"2021":1271,"2102":1271,"360":[1152,1165],"718281828459045":864,"754":[864,871,872,875,889],"999":[1119,1121,1122,1126,1304,1305,1306],"abstract":[950,965,1271,1304,1308],"boolean":[40,41,875,877,887,909,927,950,985,997,1000,1014,1023,1024,1026,1031,1032,1065,1067,1068,1072,1073,1074,1105,1115,1119,1125,1149,1150,1151,1167,1168,1169,1171],"break":43,"case":[15,18,19,40,41,42,43,875,876,878,879,880,886,888,889,950,989,996,999,1024,1027,1090,1092,1093,1142,1145,1147,1171,1215,1218,1222,1271,1288,1299,1300,1301,1304,1308,1317],"catch":[1024,1047],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,406,455,456,871,873,950,952,953,954,955,956,957,959,960,962,963,964,965,977,978,1000,1024,1028,1078,1119,1133,1171,1215,1217,1224,1265,1267,1268,1271,1274,1275,1276,1277,1278,1279,1281,1282,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313,1317],"default":[15,18,19,40,41,42,43,865,866,867,868,869,870,891,892,895,896,897,898,899,901,902,903,904,905,906,907,948,949,950,959,960,967,968,972,973,974,975,976,979,980,981,982,989,992,993,994,999,1000,1007,1008,1009,1010,1024,1026,1027,1029,1037,1038,1039,1040,1043,1044,1045,1056,1057,1058,1063,1065,1066,1075,1077,1078,1081,1083,1086,1088,1089,1092,1093,1096,1098,1100,1102,1103,1112,1114,1115,1119,1122,1124,1125,1126,1127,1128,1130,1134,1142,1145,1147,1167,1168,1169,1170,1171,1215,1216,1217,1219,1223,1224,1227,1228,1230,1231,1234,1236,1237,1238,1239,1240,1241,1242,1244,1245,1249,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1277,1278,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311],"final":[40,41,43,1024,1056,1076,1077,1171,1288,1299,1314],"float":[40,41,42,43,864,865,866,867,870,871,872,875,876,878,879,880,886,888,889,891,895,909,927,928,934,950,959,960,983,989,992,996,999,1000,1008,1015,1024,1027,1037,1038,1040,1056,1057,1061,1062,1077,1094,1095,1096,1102,1103,1119,1121,1122,1124,1126,1127,1128,1135,1137,1141,1152,1160,1167,1168,1169,1170,1171,1227,1230,1231,1244,1246,1252,1260,1263,1264,1265,1266,1267,1268,1269,1270,1288,1296,1299,1302,1303,1304,1305,1306,1307,1308,1309],"function":[15,40,41,43,401,402,403,404,405,408,409,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,864,866,867,868,869,870,872,873,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,893,894,895,897,899,902,904,906,907,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,952,953,954,955,956,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1274,1275,1276,1304,1307,1308,1309,1313,1314,1317],"import":[43,1271,1314,1317],"int":[40,41,42,43,400,401,402,404,405,505,865,866,867,869,870,871,872,873,891,892,895,896,897,898,899,901,902,903,904,905,906,907,909,927,928,934,948,949,950,972,973,974,975,976,979,980,981,982,987,988,994,1000,1009,1011,1016,1024,1029,1034,1039,1040,1044,1045,1048,1049,1050,1053,1056,1057,1058,1063,1066,1075,1076,1077,1085,1086,1089,1090,1092,1093,1098,1099,1100,1101,1104,1106,1107,1112,1114,1117,1119,1121,1122,1126,1135,1139,1140,1142,1145,1167,1168,1169,1170,1171,1215,1224,1227,1228,1229,1231,1232,1234,1236,1237,1238,1239,1240,1241,1242,1244,1249,1252,1253,1254,1255,1256,1257,1258,1259,1263,1265,1267,1268,1269,1270,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1302,1303],"long":[43,1252,1262],"new":[40,41,43,505,865,866,867,868,870,875,885,1000,1004,1024,1025,1034,1048,1049,1050,1053,1056,1057,1058,1059,1086,1090,1092,1093,1094,1095,1102,1103,1104,1119,1122,1124,1126,1127,1128,1135,1137,1139,1141,1152,1154,1158,1159,1164,1166,1171,1215,1225,1226,1227,1228,1269,1270,1271,1277,1278,1288,1298,1302,1303,1304,1305,1306,1307,1308,1309,1314,1317],"public":[1024,1041],"return":[15,16,17,18,19,40,41,42,43,505,865,866,867,868,869,870,875,876,877,878,879,880,881,882,883,884,886,887,888,889,891,892,893,894,895,898,899,901,902,903,904,905,906,907,909,927,928,934,948,949,950,959,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,985,986,988,989,993,994,995,996,997,999,1000,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1023,1024,1025,1026,1027,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1063,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1089,1090,1091,1092,1093,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1130,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1215,1216,1217,1219,1223,1224,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1277,1278,1288,1297,1298,1304,1308,1313,1314,1317],"short":[43,1252,1262,1271,1317],"static":[40,41,948,949],"super":1171,"true":[40,41,42,457,462,489,492,505,506,875,881,882,887,891,894,895,898,899,901,902,905,906,907,948,949,950,1024,1026,1033,1035,1052,1056,1065,1067,1115,1116,1119,1122,1124,1125,1126,1127,1128,1130,1142,1145,1167,1168,1169,1170,1171,1215,1216,1223,1227,1228,1234,1236,1237,1238,1239,1240,1241,1242,1244,1245,1252,1260,1265,1266,1267,1268,1288,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],"try":[40,41,1024,1113,1171],"var":[40,41,1167,1168,1169,1317],"while":[40,41,42,875,887,1171],AND:[875,877,905,906,1149,1150],But:1317,For:[43,875,876,878,879,880,886,888,889,1024,1027,1036,1104,1119,1125,1133,1142,1147,1152,1153,1271,1277,1278,1314,1317],Its:[1152,1156],NOT:[875,887],Not:864,One:[40,41,43,1024,1049,1090,1227,1229,1317],Ones:[1271,1279],PRs:43,Such:[1024,1041],That:1314,The:[15,16,17,18,19,40,41,42,43,865,869,875,876,877,878,879,880,881,882,883,884,886,887,888,889,891,892,893,894,895,896,897,901,902,905,906,907,909,927,928,934,948,949,950,959,960,966,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,989,992,993,994,995,996,999,1000,1004,1005,1006,1011,1012,1013,1014,1023,1024,1027,1030,1031,1034,1035,1037,1038,1039,1040,1042,1043,1046,1047,1051,1056,1058,1059,1066,1069,1070,1071,1073,1075,1077,1079,1081,1083,1086,1089,1090,1092,1093,1094,1095,1096,1099,1100,1101,1102,1103,1104,1107,1115,1118,1119,1121,1122,1124,1126,1127,1128,1130,1133,1135,1137,1139,1141,1142,1145,1147,1152,1153,1155,1156,1160,1161,1162,1163,1165,1167,1168,1169,1170,1171,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1230,1231,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1271,1277,1278,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1299,1300,1301,1302,1303,1304,1306,1307,1308,1314,1317],There:[43,1271,1314],These:[43,1271],Use:43,Used:[1215,1216,1223,1300,1301],Using:[1271,1272,1317],With:[40,41,898,899,1142,1145,1234,1236,1237,1238,1239,1240,1241,1242,1271,1313,1317],__array__:[1024,1030],__call__:[1288,1299,1300,1301],__del__:1171,__dict__:[1171,1314],__enter__:1171,__exit__:1171,__getitem__:1171,__getstate__:1171,__init__:[40,41,42,43,59,60,84,221,406,407,455,456,537,672,950,951,958,959,960,961,962,963,964,965,1000,1001,1002,1003,1119,1120,1171,1175,1182,1271,1274,1275,1276,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313,1317],__iter__:1171,__len__:1171,__next__:1171,__pow__:43,__repr__:1171,_assign_vari:1313,_axi:1171,_base:[1215,1216,1223],_compute_node_da_ratio:1171,_compute_node_strs_da:1171,_concat_unify_arrai:1171,_counter:1171,_cur_framework:[43,1171],_da_direct:1171,_da_directions_flip:1171,_da_step_tim:1171,_da_tim:1171,_da_tune_count:1171,_data:1171,_delta_da_dim_s:1171,_delta_sf:1171,_dict:1171,_dim_siz:1171,_first_da_tune_step:1171,_first_ns_tune_step:1171,_fn:1171,_forward:[1271,1313],_get_kalman_param:1317,_get_prior:1317,_get_some_model:1317,_handle_flat_arrays_in_out:43,_index:[1215,1216,1223],_input_queu:1171,_length:1171,_max_depth:1171,_max_node_dim_step_ratio:1171,_max_node_dim_step_s:1171,_max_split_factor_step_s:1171,_mean_unify_arrai:1171,_min_bas:[1024,1103,1269,1270,1302,1303],_min_denomin:[1024,1102],_min_node_dim_s:1171,_min_sf_tune_step:1171,_min_unit_node_tune_step:1171,_model:1317,_native_wrapp:43,_node_mapp:1171,_node_percent_mem:1171,_node_str:1171,_node_str_da_ratio:1171,_node_strs_da:1171,_node_strs_kei:1171,_node_strs_n:1171,_node_util:1171,_ns_step_tim:1171,_ns_time:1171,_ns_tune_count:1171,_num_nod:1171,_num_work:1171,_observed_config:1171,_output_queu:1171,_paramet:1313,_percent_mem_inc_per_sf:1171,_percent_mem_inc_per_unit_da_dim:1171,_percent_util_inc_per_unit_da_dim:1171,_ret_fn:1171,_safety_factor:1171,_save_dir:1171,_shift_da_split:1171,_shift_n:1171,_slice:1171,_step:[1304,1308],_sum_unify_arrai:1171,_timeout:1171,_tune:1171,_tune_da:1171,_tune_n:1171,_tune_step:1171,_unit_da_tune_count:1171,_unroll_step:1317,_with_node_mappig:1171,_worker:1171,_worker_class:1171,_worker_fn:1171,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,950,959,965,1171,1300,1301,1304,1308],abil:1271,abl:[40,41],about:[871,872,873],abov:[43,865,869,891,892,1227,1229],above_height:[40,41],abs:[306,457,593,729,891,895,1024,1171],absolut:[40,41,891,893,1024,1025],abstractmethod:1171,accept:[15,43,875,887,1271],access:[40,41,43,1314],accord:[40,41,871,872,1024,1040,1058,1092,1093,1112,1117],accordingli:[891,895,905,906,907],accur:[59,406,455,456,950,962,963,964,965,1000,1119,1279,1281,1282,1284,1285,1287],aco:[813,1152],acosh:[813,1152],across:[40,41,950,959,960,969,970,972,973,974,975,976,982,992,993,1024,1029,1031,1032,1171,1215,1219],act:43,activ:[1245,1246,1247,1248,1249,1250,1251,1271,1275,1276],actual:1314,adam:[1119,1121,1122,1126,1271,1304,1306,1313],adam_step:1119,adam_upd:1119,adapt:[1119,1127,1304,1307],add:[40,41,43,1171,1265,1266,1267,1268,1269,1270,1271,1302,1303,1314],added:[43,1024,1102,1103,1310,1311],adding:[43,1024,1034],addit:[40,41,43,1024,1048,1049,1050,1269,1270,1288,1298],addition:43,address:43,adher:43,adjac:[1024,1027],adopt:[43,1024,1041],affect:[1024,1027],affin:[1302,1303],after:[875,889,1024,1075,1119,1122,1123,1124,1126,1127,1128,1135,1136,1269,1270,1304,1305,1306,1307,1308,1309,1317],after_1:[1024,1040,1117],after_n:[1024,1040,1117],again:43,against:[40,41,898,899,1142,1145,1234,1236,1237,1238,1239,1240,1241,1242],agnost:[43,1271,1313,1314],aim:1317,algebra:1142,algorithm:[1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295,1317],align:[40,41,43,1024,1034],aliv:[950,984,986,990,1024,1060,1084,1087],all:[15,16,17,18,19,40,41,43,118,248,442,572,707,865,869,891,895,896,897,905,948,949,950,959,984,990,1024,1025,1026,1031,1032,1041,1060,1066,1087,1101,1142,1147,1167,1168,1169,1170,1171,1215,1216,1217,1223,1224,1227,1228,1231,1234,1236,1237,1238,1239,1240,1241,1242,1252,1262,1271,1314,1317],all_depth:[40,41],all_equ:1024,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1215,all_tru:[40,41],alloc:[43,865,869,950,1171],allow:[1024,1076,1077,1078,1300,1301],allow_dupl:[1024,1078],alon:[950,989,999,1171,1271],along:[40,41,43,505,891,895,896,897,898,899,901,902,903,904,905,906,907,950,973,974,975,976,979,980,981,982,994,1024,1039,1044,1045,1058,1075,1076,1077,1089,1100,1104,1107,1114,1142,1145,1167,1168,1169,1170,1171,1227,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242],alongsid:[1313,1314],alpha:[1244,1246],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,875,878,950,1171],also:[40,41,43,1024,1027,1119,1122,1167,1168,1169,1170,1215,1216,1217,1223,1224,1252,1261,1271,1288,1298,1313],altern:1313,alwai:[40,41,43,1119,1125,1130],among:[40,41],amount:[950,996,1171,1271],angl:[875,880,1152,1153,1157],ani:[15,16,17,18,19,40,41,43,118,248,442,572,707,875,884,905,948,949,950,952,955,959,960,962,971,972,975,976,981,1024,1026,1027,1030,1047,1048,1049,1050,1051,1052,1065,1073,1078,1102,1103,1119,1123,1171,1215,1216,1219,1223,1224,1225,1226,1227,1231,1271,1277,1278,1300,1301,1313,1314,1317],anoth:[40,41,43,1000,1006,1271],another_backend:43,anyth:[43,1317],anywai:43,apart:43,api:[1271,1272],appear:[43,1024,1053],append:[40,41,891,892,1171],appli:[15,18,19,40,41,891,894,1024,1048,1049,1050,1119,1126,1127,1149,1150,1151,1167,1168,1169,1215,1219,1222,1224,1244,1245,1246,1247,1248,1249,1250,1251,1252,1261,1263,1264,1269,1270,1271,1274,1275,1276,1302,1303],applic:[1215,1219,1224,1252,1263,1264,1271,1317],appropri:[898,899],approxim:[43,875,876,879,880,885,886,888,909,934,1244,1245],arang:[138,306,457,505,593,729,1024,1076,1077],arbitrari:[40,41,950,979,980,982,1171],arc:[1152,1157],arcco:[1152,1153],arctan:[1152,1156],area:[875,876,1271],arg:[15,16,17,40,41,43,59,63,950,959,972,976,982,994,1024,1048,1049,1050,1093,1171,1277,1278,1300,1301],arg_nam:1024,arg_stateful_idx:[1300,1301],argmax:[111,242,435,565,700,898],argmin:[138,457,593,729,1024],args_clon:1171,args_dist:1171,args_to_ivi:[15,1271],args_to_n:[15,1271],args_uni:1171,argsort:[114,245,438,568,703,901],argument:[15,16,17,18,19,40,41,42,43,59,63,948,949,950,959,960,972,976,982,1024,1027,1028,1035,1047,1078,1093,1152,1153,1171,1215,1219,1277,1278,1300,1301],aris:[1271,1317],arithmet:[43,1234,1237,1240,1242],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:505,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,138,306,457,505,593,729,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,893,894,895,896,897,898,899,901,902,903,904,905,906,907,927,928,934,950,968,969,970,973,974,975,976,979,980,981,982,984,986,990,994,995,1000,1004,1010,1015,1016,1024,1025,1026,1027,1029,1031,1032,1033,1034,1036,1037,1038,1039,1040,1042,1043,1044,1045,1048,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1060,1063,1065,1066,1067,1068,1069,1070,1071,1073,1074,1075,1076,1077,1079,1080,1081,1082,1084,1085,1086,1087,1089,1090,1091,1092,1093,1098,1100,1101,1104,1105,1106,1107,1109,1110,1111,1112,1114,1115,1116,1117,1118,1119,1121,1122,1125,1126,1130,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1171,1215,1217,1224,1227,1228,1229,1230,1231,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1288,1296,1297,1299,1304,1308,1313,1314],arrang:[1024,1048],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,400,401,402,403,404,405,406,408,409,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,893,894,895,896,897,898,899,901,902,903,904,905,906,907],array_api_methods_to_test:43,array_builtin:[43,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947],array_equ:[306,729,1024],array_lik:[505,1024,1030],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1024],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1271],arraywithgener:[22,1271],arraywithgradi:[24,1271],arraywithimag:[26,1271],arraywithlinalg:[28,1271],arraywithlog:[30,1271],arraywithmath:[32,1271],arraywithmeta:[34,1271],arraywithrandom:[36,1271],arraywithreduct:[38,1271],arriv:[40,41,42],articl:1271,arxiv:1271,as_arrai:[40,41,1024,1063,1098],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[455,457,465,950,968,1000,1007,1008,1009,1010],as_tensor:457,as_vari:[40,41],as_zero:[40,41],asarrai:[457,1024],ascend:[901,902],asin:[813,1152],asinh:[88,411,541,676,875],aspect:[1135,1140],assert:[40,41,1024,1033,1171],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1024,associ:[43,1142,1148],assum:[875,879,888,1314,1317],astyp:[457,1000],asynchron:[40,41,42],at_dev:[40,42,950,963,964],at_kei:[40,41],at_key_chain:[40,41],at_nod:1171,atan2:[813,1152],atan:[813,1152],atanh:[813,1152],attent:[43,1252,1263,1264,1288,1299],attribut:[0,6,40,41,871,872,873,1024,1118],audienc:[1271,1314],author:1271,automat:43,avail:[40,41,43,950,985,987,988,997,1024,1049,1171],averag:[1119,1121,1122,1126,1167,1168,1169,1234,1237],average_across_step:[1167,1168,1169],avoid:[43,950,1171,1314],axes:[40,41,43,457,486,498,499,891,895,896,897,898,899,903,904,905,906,907,950,994,1024,1029,1040,1053,1106,1112,1117,1142,1145,1171,1234,1236,1237,1238,1239,1240,1241,1242],axes_length:[40,41,1024,1048,1049,1050],axi:[40,41,457,459,463,464,470,478,479,480,484,485,487,891,892,895,896,897,898,899,901,902,903,904,905,906,907,950,952,955,962,973,974,975,976,979,980,981,982,994,1024,1029,1039,1040,1043,1044,1045,1053,1058,1075,1076,1077,1089,1100,1101,1104,1106,1107,1114,1117,1171,1227,1233,1234,1236,1237,1238,1239,1240,1241,1242,1244,1249,1265,1267,1268],axis0:[40,41,1024,1106],axis1:[40,41,891,892,1024,1106],axis2:[891,892],back:[43,1300,1301,1304,1308],backend:[15,17,19,40,41,400,401,402,403,404,405,406,408,409,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,503,504,505,506,950,985,988,997,1000,1006,1014,1023,1024,1068,1072,1119,1122,1124,1126,1127,1128,1133,1171,1271,1272,1277,1278,1304,1305,1306,1307,1308,1309,1313,1314,1317],backend_nam:43,background:[1271,1314],backprop:1317,backward:[905,906,907,1313],band:[1024,1056],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,406,455,456,457,480,875,885,886,909,934,950,952,953,954,955,956,957,959,960,962,963,964,965,1000,1024,1061,1077,1094,1103,1119,1171,1234,1235,1271,1274,1275,1276,1279,1281,1282,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1317],basi:43,batch:[40,41,891,894,895,950,992,993,1024,1056,1066,1135,1139,1167,1168,1169,1170,1171,1252,1261,1269,1270,1302,1303],batch_shap:[457,472,1024,1066,1085,1135,1136,1137,1138,1139,1140,1141,1142,1148,1227,1228,1252,1262,1263,1264,1288,1297],batch_siz:[505,506,1171,1227,1228,1252,1253,1254,1255,1256,1257,1258,1259],bayesian:1317,becaus:[43,1024,1027],becom:[43,1024,1036,1152,1157,1317],been:[1024,1048,1049,1050,1227,1228],befor:[40,41,43,950,994,1167,1168,1169,1171,1215,1224,1234,1236,1237,1238,1239,1240,1241,1242,1252,1263,1264,1317],before_1:[1024,1040,1117],before_n:[1024,1040,1117],begin:[1215,1216,1223,1314],behaviour:[43,1317],behind:[1119,1122,1124,1126,1127,1128,1271],being:[40,41,43,1024,1027,1088,1096,1171],believ:43,belong:[40,41],below:[43,865,869,891,892,1271,1314,1317],below_depth:[40,41],benefit:1271,bernoul:[1252,1260,1288,1296],best:[43,1024,1078,1271],beta1:[1119,1121,1122,1126,1304,1305,1306],beta2:[1119,1121,1122,1126,1304,1305,1306],beta:[1269,1270],between:[40,41,42,871,872,1024,1027,1142,1147,1215,1219,1227,1229,1265,1267,1268,1304,1306],bia:[1252,1261,1262,1288,1289,1290,1291,1292,1293,1294,1295,1298],bias_initi:[1288,1289,1290,1291,1292,1293,1294,1295,1298],bilinear:[1135,1136],bilinear_resampl:[172,359,494,633,799,1135],bilinearli:[1135,1136],binari:[875,877,1265,1266],binary_cross_entropi:1265,bit:[406,871,872,873,1000,1011,1135,1137,1141,1271],bitwis:[875,877],bitwise_and:[88,225,411,541,676,875],bitwise_oper:[0,7,8],block:[1271,1314],bool:[15,18,19,40,41,42,43,875,881,882,883,884,887,891,894,895,898,899,901,902,903,904,905,906,907,909,928,948,949,950,968,981,985,989,994,997,999,1000,1010,1024,1026,1031,1032,1044,1047,1051,1052,1056,1063,1065,1073,1078,1098,1100,1114,1115,1116,1119,1122,1123,1124,1125,1126,1127,1128,1130,1142,1145,1167,1168,1169,1170,1171,1215,1216,1217,1219,1223,1224,1227,1228,1234,1236,1237,1238,1239,1240,1241,1242,1244,1245,1252,1260,1277,1278,1288,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],both:[43,1024,1043],bottom:1271,boundari:[40,41,1227,1231],branch:[43,948,949],brittl:43,broadcast:[40,41,43,875,877,883,884,891,895,898,899,905,906,907,909,927,928,934,1024,1034,1051,1080,1081,1082,1089,1142,1145,1152,1157,1160,1234,1236,1237,1238,1239,1240,1241,1242],broadcast_to:[306,729,1024],build:[1171,1271,1288,1299,1300,1301],build_mod:[1288,1299,1300,1301],builder:[43,1271],built:[950,1024,1027,1171,1288,1299,1300,1301],builtin:43,builtin_ab:[261,909],builtin_add:[261,909],builtin_and:[261,909],builtin_bool:[261,909],builtin_contain:[261,909],builtin_deepcopi:[261,909],builtin_dir:[261,909],builtin_eq:[261,909],builtin_float:[261,909],builtin_floordiv:[261,909],builtin_g:[261,909],builtin_getattr:[261,909],builtin_getattribut:[261,909],builtin_getitem:[261,909],builtin_gt:[261,909],builtin_int:[261,909],builtin_invert:[261,909],builtin_l:[261,909],builtin_lt:[261,581,716,909],builtin_mul:[261,909],builtin_n:[261,909],builtin_neg:[261,909],builtin_or:[261,909],builtin_po:[261,909],builtin_pow:[43,261,909],builtin_radd:[261,909],builtin_rand:[261,909],builtin_rfloordiv:[261,909],builtin_rmul:[261,909],builtin_ror:[261,909],builtin_rpow:[261,909],builtin_rsub:[261,909],builtin_rtruediv:[261,909],builtin_rxor:[261,909],builtin_setitem:[261,909],builtin_some_op:43,builtin_sub:[261,909],builtin_truediv:[261,909],builtin_xor:[261,909],busi:43,bypass:1314,cach:[950,966,1024,1035],cache_fn:1024,calcul:[40,41,42,43,875,876,879,880,885,886,888,889,909,927,934,1152,1160],call:[43,950,994,1024,1088,1096,1113,1119,1123,1171,1215,1216,1219,1223,1288,1299,1300,1301,1304,1308,1314,1317],callabl:[40,41,948,949,950,959,960,994,1024,1035,1047,1049,1078,1113,1167,1168,1169,1170,1171,1215,1219,1220,1221,1223,1224,1252,1263],can:[43,950,992,993,994,1024,1090,1135,1137,1171,1271,1313,1314,1317],cancel_join_thread:1171,cannot:43,captur:1271,cast:[40,41,138,306,457,593,729,1000,1024,1039,1135,1137,1141],catch_except:[1024,1047],categori:43,caus:43,ceil:[88,225,411,541,676,875,1024,1027],cell:[1252,1262,1288,1297],certain:[40,41,1024,1027,1076,1077],chain:[40,41,1167,1168,1169,1310,1311],chang:[43,950,1024,1090,1171,1215,1217,1224,1271,1313],channel:[1024,1056,1135,1137,1138,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298],check:[15,16,17,18,19,40,41,43,950,989,999,1000,1005,1014,1023,1024,1033,1052,1065,1073,1105,1115,1119,1125,1171,1215,1216,1223,1271,1314],check_nest:[1215,1223],check_shap:[40,41],check_submod_ret:[1300,1301],check_typ:[40,41],choic:[1271,1314],choleski:[803,1142],choos:[875,887,1024,1116,1142,1147,1152,1157,1271],choose_random_framework:59,chosen:[40,41,1024,1027,1116],chunk:[950,992,993,994,1171],chunk_siz:[950,994,1171],circl:[1152,1153,1155],clark:1271,clear:[43,950,966,1171],clear_framework_stack:59,clear_mem_on_dev:[455,721,950],click:1271,clip:[40,41,306,457,729,1024,1037,1038,1080,1082,1271],clip_matrix_norm:1024,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1024],clipped_delta:1171,clone:[40,41,950,969,970,971,972,1171],clone_arrai:1171,clone_it:1171,clone_nest:1171,clonedit:1171,cloneditem:1171,clonednest:1171,close:[43,1135,1140,1152,1155,1171,1317],closest:[875,878,1000,1005],closest_valid_dtyp:1000,code:[40,41,42,43,505,1271,1272,1313,1314],codebas:[950,992,993,1171,1271,1314,1317],codomain:[875,876,879,880,886,888,889],colab:1271,collect:[15,40,41,455,457,489,494,498,502,503,505,909,948,950,1000,1024,1119,1135,1142,1149,1152,1171,1215,1227,1234,1244,1252,1265,1269,1274,1288,1302,1304],color:[40,41,42,1315,1316],column:[1024,1066],combin:[40,41,42,1135,1140,1271,1317],combined_batch_s:1171,come:1314,command:1271,comment:43,commit:1317,common:[40,41,43,1152,1157],common_key_chain:[40,41],commun:[43,1271,1314],communuti:43,compar:[40,41,901,902,909,927,1024,1026,1031,1032],comparison_oper:[0,9,10],compat:[43,875,877,883,884,891,895,905,906,907,909,927,928,934,1024,1051,1090,1152,1160,1271,1317],compil:[306,457,729,1300,1301,1304,1305,1306,1307,1308,1309],compile_on_next_step:[1300,1301,1304,1305,1306,1307,1308,1309],complet:[40,41,43,1142,1147,1171],complex:[1314,1317],compliant:[875,887],compon:[1024,1043],composit:43,comput:[40,41,875,877,883,884,887,891,893,895,903,904,909,928,950,994,1024,1037,1038,1044,1045,1051,1079,1119,1121,1122,1123,1124,1126,1127,1128,1130,1132,1135,1138,1142,1143,1144,1145,1146,1147,1149,1150,1151,1152,1153,1155,1156,1157,1161,1162,1163,1165,1215,1219,1234,1235,1236,1237,1238,1239,1240,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1261,1263,1265,1266,1267,1268],concat:[40,41,950,979,980,981,982,994,1024,1056,1171],concaten:[40,41,138,306,457,593,729,1024,1056,1171,1271],concatten:[40,41,950,979,980,981,982,994,1171],condit:[457,948,949,1024,1116,1215,1223],conditon:[1215,1223],config:[40,41,1171],config_list:1171,configur:[40,41],conflict:43,conform:43,conjunct:1314,connect:[1288,1298,1299],consid:[40,41,875,887,1142,1147,1313,1317],consist:[40,41,950,982,1171,1234,1235,1300,1301,1314],constant:[950,959,960,1024,1040,1171,1215,1219,1265,1266,1267,1268,1269,1270,1279,1280,1284,1287,1300,1301,1302,1303,1314],constant_kwarg:1171,constant_pad:[306,457,593,729,1024],constitu:[40,41],construct:[1024,1107,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313],constructor:[40,41,42,1024,1028,1310,1311],consum:[950,1171],cont_feat_dim:[1252,1263],contaienr:[40,41],contain:[15,18,19,42,43,865,867,869,870,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,895,903,904,905,906,907,909,927,928,934,950,969,973,994,1000,1004,1024,1025,1029,1036,1037,1038,1041,1051,1065,1080,1082,1091,1102,1103,1119,1121,1122,1124,1126,1127,1128,1152,1160,1167,1168,1169,1170,1171,1227,1228,1234,1236,1237,1238,1240,1242,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[457,729,1024],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[457,1024,1083,1252,1263,1288,1299],context_dim:[1288,1299],contextmanag:[59,60],continu:[43,1171,1314],contract:[40,41,1234,1235],contribut:[1271,1272],contributor:[43,1271],control:1271,conv1d:[203,389,519,854,1252,1271,1288],conv1d_transpos:[203,389,519,854,1252],conv1dtranspos:[1271,1288],conv2d:[203,389,519,658,854,1252,1271,1288],conv2d_transpos:[203,389,519,854,1252],conv2dtranspos:[1271,1288],conv3d:[203,389,519,658,854,1252,1271,1288],conv3d_transpos:[203,389,519,854,1252],conv3dtranspos:[1271,1288],convent:[40,41,1234,1235],conver:[950,966,977,989,996,999,1171],convers:[16,17,18,19,40,41,1171,1271],convert:[15,16,17,18,19,40,41,43,950,977,978,1000,1006,1012,1013,1024,1099,1110,1111,1135,1137,1141,1142,1148,1171,1215,1217,1224,1271,1278],convert_dtyp:1000,convolut:[1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295],cool:43,cooler:43,coordin:[1024,1081,1152,1153,1155,1157],copi:[40,41,43,505,1024,1042,1171,1215,1217],copy_arrai:[457,729,1024],copy_nest:1215,core:[455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,503,504,505,506,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,952,953,954,955,956,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1271],corner:43,correct:[43,1271,1314],correctli:[40,41,43,898,899,1142,1145,1152,1157,1234,1236,1237,1238,1239,1240,1241,1242],correspond:[40,41,43,909,934,1024,1039,1227,1228],cos:[88,411,541,676,875,1024,1056,1152,1153,1165,1314],cosh:[88,411,541,676,813,875,1152],cosin:[875,879,880,1152,1153,1154,1159],cost:[1119,1121,1122,1124,1126,1127,1128,1167,1168,1169,1170],cost_fn:[1167,1170],could:1317,count:[40,41,896,897,905,906,907,1171,1234,1239,1241],cours:43,cprint:1315,cpu:[40,41,43,950,987,989,995,996,999,1024,1027,1030,1058,1059,1066,1076,1077,1085,1086,1092,1093,1118,1171,1227,1228,1229,1230,1231,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1310,1311,1313,1314],creat:[40,41,865,866,867,868,870,950,959,960,1024,1027,1030,1057,1058,1059,1066,1076,1077,1085,1086,1092,1093,1109,1118,1119,1132,1171,1227,1228,1229,1230,1231,1271,1272,1277,1278,1279,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313,1317],create_if_abs:[40,41],create_vari:1279,creation:[40,41,42,43],creation_funct:[400,401,402,403,404,405,865,866,867,868,869,870],crop:[1135,1139],crop_siz:[1135,1139],cross:[306,729,1024,1265,1266,1267,1268],cross_entropi:1265,cuda:[40,41,950,959,978,995,1024,1027,1030,1058,1059,1066,1076,1077,1085,1086,1092,1093,1118,1171,1227,1228,1229,1230,1231,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1310,1311],cumprod:[138,306,457,729,1024],cumsum:[729,1024],cumul:[1024,1044,1045],current:[40,41,42,43,950,959,983,984,986,990,1000,1006,1014,1023,1024,1046,1060,1068,1072,1084,1087,1171,1215,1216,1223,1271,1317],current_framework:59,current_framework_str:[457,729,1024,1171],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1252,1253,1254,1255,1256,1257,1258],d_out:[1252,1253,1254,1255,1256,1257,1258],da_can_termin:1171,da_dim_s:[950,1171],da_direct:1171,da_tune_step:[950,1171],dai:1317,daniel:1271,data:[40,41,42,43,865,866,867,868,869,870,872,873,875,876,877,878,879,880,881,882,883,884,886,887,888,889,891,892,895,896,897,901,902,905,906,907,909,927,928,934,950,952,953,954,955,956,957,962,963,964,978,1000,1004,1005,1006,1010,1011,1012,1013,1014,1015,1016,1023,1024,1027,1030,1051,1057,1066,1073,1086,1090,1101,1105,1118,1119,1125,1133,1152,1160,1171,1252,1261,1271],data_format:[1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295],data_type_funct:[406,408,409,871,872,873],dataset:[40,41],datatyp:[40,41,1000,1005,1015,1016],dcdw:[1119,1121,1122,1124,1126,1127],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1119,1126,1127,1304,1306,1307],decay_lambda:[1119,1126,1127,1304,1306,1307],decid:[40,41,1317],decompos:[1142,1143,1147],decomposit:[891,894,1142,1143,1147],decor:43,decrement:[1024,1069],dedic:[1119,1133,1277,1278],deep:[40,41,1271],deep_copi:[40,41],deeper:[950,972,976,982,1171,1215,1224,1271],deepli:[1215,1217],def:[43,60,84,221,407,537,672,951,958,961,1001,1002,1003,1120,1171,1175,1182,1271,1280,1283,1286,1313,1314,1317],default_dev:43,default_devic:950,default_dtyp:[43,1000],default_float_dtyp:1000,default_int_dtyp:1000,default_key_color:[40,41,42],default_nod:1171,default_rng:505,default_v:[1024,1047],defaultdevic:[950,951],defaultdtyp:[1000,1001],defaultfloatdtyp:[1000,1002],defaultintdtyp:[1000,1003],defer:43,defin:[43,1024,1043,1085,1118,1227,1229],definit:43,degre:[1152,1165],del:1171,delai:43,delet:43,delta:[1119,1121,1171],delta_dim_s:1171,delta_percent_mem:1171,delta_sf:1171,delta_util:1171,demo:1271,denomin:[1024,1055,1062,1095,1102,1103,1269,1270,1302,1303],denot:43,dens:[1288,1298],depend:[43,875,876,879,880,885,886,888,891,894,901,902,909,934,1024,1116,1271],depth:[40,41,457,481,950,972,976,982,1024,1064,1085,1171,1215,1224,1300,1301],depth_cutoff:[40,41],depthwis:[1252,1259,1288,1295],depthwise_conv2d:[203,389,519,658,854,1252],depthwiseconv2d:[1271,1288],deriv:[865,868,1119,1121,1122,1124,1126,1127,1128,1215,1217,1224,1271,1300,1304,1308,1310],descend:[891,894,901,902],descent:[1119,1124,1304,1309],describ:[40,41,1234,1235],descript:[891,895],design:[1271,1272],desir:[40,41,950,995,1000,1004,1024,1027,1030,1066,1067,1086,1118,1135,1140,1171,1234,1236,1237,1238,1240,1242],desired_aspect_ratio:[494,497,1135,1140],desired_percent_increas:1171,detail:1317,detect:[40,41,1215,1216,1223],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,875,876,877,879,880,881,882,886,888,889,891,892,893,895,905,906,907,909,934,950,985,987,988,997,1000,1004,1005,1011,1014,1015,1016,1023,1024,1026,1027,1030,1031,1032,1065,1068,1072,1073,1105,1115,1119,1125,1152,1160,1167,1168,1169,1170,1171,1252,1263],dev:[40,41,42,43,131,300,400,403,455,457,458,460,470,471,472,479,480,481,482,483,488,505,506,586,721,865,868,950,953,954,956,957,959,960,963,964,966,967,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,986,989,990,991,992,993,994,995,996,999,1024,1027,1030,1058,1059,1066,1076,1077,1085,1086,1092,1093,1118,1119,1134,1227,1228,1229,1230,1231,1277,1278,1279,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1310,1311],dev_clon:[40,41,950],dev_clone_arrai:950,dev_clone_it:950,dev_clone_nest:950,dev_dist:[40,41,950],dev_dist_arrai:950,dev_dist_it:950,dev_dist_nest:950,dev_from_str:[43,131,300,455,586,721,950],dev_mapp:950,dev_str:[40,41],dev_to_str:[131,300,455,586,721,950],dev_unifi:950,dev_unify_arrai:950,dev_unify_it:950,dev_unify_nest:950,dev_util:950,devclonedit:950,devcloneditem:950,devclonednest:950,devdistit:950,devdistitem:950,devdistnest:950,develop:[43,1271,1314,1317],deviat:[40,41,1227,1230,1234,1240,1269,1270,1302,1303],devic:[21,40,41,43,400,401,402,405,456,457,469,865,866,867,868,869,870,952,953,954,955,956,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1024,1027,1030,1057,1058,1059,1066,1076,1077,1085,1086,1092,1093,1118,1119,1134,1227,1228,1229,1230,1231,1271,1277,1278,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1310,1311],devmanag:[950,958],devmapp:[950,960],devmappermultiproc:950,diag:[891,894],diagon:[105,235,428,558,693,865,869,891,1024,1066],dict:[15,16,17,18,19,40,41,42,950,952,955,959,960,962,972,973,974,975,976,1024,1048,1049,1050,1078,1167,1168,1169,1171,1215,1217,1218,1219,1222,1224,1277,1278],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,871,872,950,969,970,973,974,1142,1147,1171,1252,1261,1271,1314,1317],differenti:[1271,1314],dilat:[1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295],dim:[40,41,43,891,894,1024,1085,1135,1136,1140,1171,1288,1299],dim_siz:[40,41,950,1171],dimens:[40,41,42,865,869,891,892,894,895,896,897,898,899,905,906,907,950,981,1024,1034,1039,1043,1048,1049,1050,1053,1056,1063,1075,1085,1089,1090,1100,1101,1104,1112,1114,1135,1139,1142,1145,1167,1168,1169,1170,1171,1227,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1249,1252,1253,1254,1255,1256,1257,1258,1259,1262,1265,1267,1268,1288,1289,1290,1291,1292,1293,1294,1295,1298,1299],dimension:[40,41,505,891,894,895,905,906,907,1024,1100,1101],direct:1171,directli:[43,1215,1224,1314,1317],directori:[1024,1097,1108],discord:43,discret:[1265,1267],discuss:43,disk:[40,41,1135,1137],distanc:[1024,1027],distribut:[40,41,950,969,973,974,975,976,1171,1227,1228,1229,1230,1231,1252,1260,1288,1296,1300,1301],distribute_nest:1171,distributedarrai:[40,41],distrubt:[1265,1267],dive:[1271,1314],divid:[40,41,1024,1100,1102,1152],dividend:[1152,1160],divis:[1024,1055,1062,1095,1102,1103,1119,1121,1122,1126,1152,1160,1304,1305,1306],divisor:[1119,1121,1122,1126,1152,1160,1304,1305,1306],doc:1271,docstr:43,document:43,doe:[40,41,43,1024,1027,1100,1313],doesn:[1142,1147,1271],doing:43,domain:[875,876,879,880,886,888,889,1152,1153],don:[43,1271],done:43,door:1317,dot:[1142,1144,1252,1263,1264,1288,1299],down:1313,downscal:[1024,1037,1038],drag:[1271,1317],draw:[1227,1228,1230,1231],drawn:[1227,1228,1229,1230,1231],drop:[1271,1317],dropout:[1252,1271,1288,1299],dropout_r:[1288,1299],ds_tune_step:950,dtype:[40,41,43,138,306,400,401,402,403,405,406,408,409,457,458,460,461,469,472,488,593,729,865,866,867,868,870,871,872,873,898,899,1004,1005,1006,1007,1008,1009,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1027,1030,1057,1066,1085,1086,1118],dtype_bit:[138,306,457,593,729,1000],dtype_from_str:[43,138,306,457,593,729,1000],dtype_in:[457,466,467,468,1000,1006,1011,1012,1013,1014,1015,1016,1023],dtype_to_str:[138,306,457,593,729,1000],duplic:[40,41,43],dure:[40,41,43,948,949,1024,1113,1119,1121,1122,1126,1167,1168,1169,1170,1300,1301,1304,1305,1306,1308],dynam:[43,457,462,948,949],each:[40,41,42,43,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,894,909,928,934,950,959,960,969,970,971,972,973,974,975,981,993,994,1024,1025,1026,1040,1051,1089,1100,1104,1107,1117,1119,1122,1124,1126,1127,1128,1135,1138,1152,1155,1160,1162,1163,1171,1215,1219,1227,1228,1234,1235,1252,1253,1254,1255,1256,1257,1258,1259,1260,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1299,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1314],eager:1314,easi:1317,easili:1271,econom:1317,ecosystem:1271,edg:[1024,1036,1040,1117],effect:[1119,1128],effective_grad:[1119,1128],effici:1317,einop:[40,41,1024,1048,1049,1050],einops_rearrang:[40,41,1024],einops_reduc:[40,41,1024],einops_repeat:[40,41,1024],einstein:[40,41,1234,1235],einsum:[40,41,189,377,507,648,834,1234],either:[40,41,43,875,886,888,1024,1047,1078,1081,1083,1167,1168,1169,1170,1171,1288,1299,1300,1301,1314],eleg:1171,element:[40,41,43,505,865,869,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,896,897,903,904,905,906,907,909,927,928,934,950,971,975,981,1000,1004,1024,1025,1027,1029,1031,1032,1036,1037,1038,1044,1045,1051,1054,1055,1066,1067,1080,1082,1089,1091,1100,1111,1116,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1171,1234,1235,1237,1239,1241,1244,1245,1246,1247,1248,1249,1250,1251,1252,1260,1288,1296],elementwis:[40,41,909,927],elementwise_affin:[1302,1303],elementwise_funct:[875,876,877,878,879,880,881,882,883,884,885,886,887,888,889],elemtn:[1227,1228],elif:1171,els:[43,1024,1033,1047,1052,1171],elsewher:[1024,1116],emphas:1271,empti:[40,41,77,214,400,530,665,865,905,906,907,1142,1147,1171],enabl:[40,41,42,43,1271],encapsul:[871,873],encod:[1024,1056,1135,1137],end:[1024,1027,1271,1314],engag:43,ensur:43,entir:[40,41,905,906,907,950,994,1171,1271,1288,1297],entri:[40,41,1024,1076,1077,1100,1101],entropi:[1265,1266,1267,1268],enumer:1171,environ:1271,eps:[406,871,872],epsilon:[1119,1121,1122,1126,1265,1266,1267,1268,1269,1270,1302,1303,1304,1305,1306],equal:[40,41,88,411,541,676,875,881,891,892,901,902,1024,1026,1031,1032,1040,1100,1117,1152,1165,1227,1231],equality_matrix:[1024,1026],equat:[40,41,1234,1235],equival:[875,887,891,895,1024,1027,1152,1165],erf:[503,813,1152],error:[40,41,43,950,1024,1101,1152,1161,1171,1244,1245,1300,1301,1304,1308],essenti:43,etc:[40,41,43,950,995,1024,1027,1030,1058,1059,1066,1076,1077,1085,1086,1092,1093,1118,1171,1227,1228,1229,1230,1231,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1310,1311,1317],euclidean:[891,895],euler:864,evalu:[40,41,875,885,886,905,906,907,1024,1081,1215,1216,1223],even:[43,1317],evenli:[40,41,1024,1027,1076,1077,1100],everi:[43,1024,1026,1317],exact:[40,41],exampl:[43,948,949,1024,1036,1104,1142,1147,1271,1313,1314,1317],example_input:[457,462,948,949],exc_tb:1171,exc_typ:1171,exc_val:1171,exce:[1024,1082],except:[40,41,44,47,905,906,907,1024,1027,1033,1039,1047,1113,1171],excess_s:1171,excit:[1271,1314],exclud:[59,61,1024,1027,1227,1231],exclus:[40,41,457,464,477,489,491,1024,1044,1073,1119,1125,1227,1229],execut:[43,1024,1113,1314],execute_with_gradi:[169,354,489,628,793,1119,1271,1313],exist:[40,41,1024,1047,1171,1271,1304,1308,1317],exp:[813,1152],expand:[40,41,1024,1053,1056],expand_dim:[40,41,306,729,1024,1171],expect:[1024,1028],explain:[43,1314],explicitli:[43,1288,1297,1299,1300,1301,1314],expon:[43,909,934,1024,1103],exponenti:[43,909,934,1152,1161,1162],expos:[1024,1030,1041],express:[875,879,888,1024,1081],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1119,1123],eye:[1142,1144],fabian:1271,fabio:1271,factor:[891,894,950,959,992,993,994,1119,1121,1122,1126,1127,1171,1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295,1304,1305,1306,1307],fail:43,falck:1271,fall:[1300,1301,1304,1308],fallback_to_non_compil:[1300,1301,1304,1308],fals:[15,18,19,40,41,42,59,66,67,68,69,70,455,457,464,465,477,484,487,489,490,491,498,499,875,881,882,887,891,895,898,899,901,902,903,904,905,906,907,950,968,981,989,994,999,1000,1007,1008,1009,1010,1024,1026,1044,1047,1052,1056,1063,1073,1078,1098,1100,1114,1116,1119,1122,1123,1124,1125,1126,1127,1128,1142,1145,1167,1168,1169,1170,1171,1215,1216,1217,1219,1223,1224,1234,1236,1237,1238,1239,1240,1241,1242,1277,1278,1300,1301,1304,1305,1306,1307,1308,1309],fan_in:1279,fan_mod:1279,fan_out:1279,far:[1215,1216,1223,1313],faster:[948,949],favourit:[1271,1313],feasibl:1317,feat_dim:[1252,1263,1264],fed:[950,994,1171],feed:[950,994,1171],few:43,field:1317,file:[40,41,43,1024,1097,1108,1300,1301],filepath:[40,41],fill:[40,41,865,866,867,868,870,1024,1057,1086,1227,1229],fill_valu:[457,469,1024,1057],filter:[1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295,1317],filter_s:[1288,1289,1290],filter_shap:[1288,1291,1292,1293,1294,1295],find:[40,41,43,1317],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,220,221,406,407,536,537,671,672,871],finish:[1271,1317],finit:[875,881],first:[40,41,43,505,875,877,883,884,891,892,894,909,927,948,949,950,981,1024,1031,1039,1043,1051,1076,1077,1104,1106,1119,1123,1167,1168,1169,1170,1171,1215,1216,1223,1227,1233,1234,1239,1241,1288,1299,1300,1301,1304,1308,1314,1317],firstlayersiren:[1271,1279],firstli:[1314,1317],fist:[950,994,1171],fit:[40,41,455,457,489,494,498,502,503,505,1024,1089,1135,1140],fix:43,fkt:1317,flag:[40,41,43,1119,1125],flat:[40,41,43,1024,1089,1092],flat_list:[40,41],flatten:[40,41,891,895,898,899,1024,1056,1089,1234,1236,1237,1238,1240,1242],flatten_key_chain:[40,41,1300,1301],flexibl:[1271,1314],flip:[40,41,109,240,433,563,698,896],float32:[43,457,472,1000,1004,1012,1013,1024,1027,1030,1066,1086,1118],float_dtyp:[1000,1008,1018],float_img_to_uint8_img:1135,floor:[306,457,729,1024,1055,1171],floormod:[306,457,729,1024],fluid:1317,folder:[43,1271],follow:[40,41,43,871,873,891,895,950,994,1024,1069,1070,1071,1102,1103,1119,1122,1124,1126,1127,1128,1171,1215,1219,1224,1252,1263,1264,1271,1288,1298,1304,1308],followng:[871,872],fomaml_step:1167,forget:[1119,1121,1122,1126,1304,1305,1306],fork:[1024,1083,1271,1272],forkserv:[1024,1083,1171],form:[15,16,17,18,19,40,41,865,869,891,892,1024,1030,1119,1122,1124,1126,1127,1128,1215,1217,1224,1252],format:[40,41,43,950,968,1000,1004,1006,1010,1024,1027,1030,1066,1086,1118,1171,1234,1235,1271,1313,1314],format_fn:[40,41],format_key_chain:[40,41],forward:[1300,1301,1304,1308,1313],found:[40,41,42],fourier:[1024,1056],fourier_encod:1024,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,110,112,115,117,119,120,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,360,361,362,364,365,366,367,369,370,373,374,375,376,378,379,380,381,382,383,384,385,388,390,391,392,393,394,395,396,401,402,403,404,405,407,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,429,430,431,432,434,436,439,441,443,444,456,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,495,496,497,499,500,501,504,506,508,509,510,511,512,513,514,517,518,520,521,522,523,524,525,526,531,532,533,534,535,537,538,539,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,559,560,561,562,564,566,569,571,573,574,582,587,588,589,590,591,592,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,629,630,631,632,634,635,636,638,639,640,644,645,646,647,649,650,651,652,653,654,655,659,660,661,666,667,668,669,670,672,673,674,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,694,695,696,697,699,701,704,706,708,709,717,722,723,724,725,726,727,728,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,794,795,796,797,798,800,801,802,804,805,806,807,808,809,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,828,829,830,831,832,833,835,836,837,838,839,840,841,844,845,846,847,848,849,850,852,853,855,856,857,858,859,860,861,866,867,868,869,870,872,873,876,877,878,879,880,881,882,883,884,885,886,887,888,889,892,893,894,895,897,899,902,903,904,906,907,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1270,1271,1275,1276,1277,1278,1280,1281,1282,1283,1284,1285,1286,1287,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1303,1304,1305,1306,1307,1308,1309,1311,1312,1313,1314,1316,1317],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1171,framewrk:[1024,1083],free:43,freed:43,freeli:43,frequenc:[1024,1056],from:[40,41,42,43,865,868,875,889,891,892,896,897,903,904,905,906,907,950,959,960,994,1000,1006,1024,1047,1058,1059,1066,1090,1101,1109,1116,1119,1122,1126,1135,1139,1142,1147,1167,1168,1169,1170,1171,1215,1217,1224,1227,1228,1229,1230,1231,1234,1239,1241,1252,1260,1263,1271,1277,1278,1288,1296,1299,1304,1308,1313,1314],from_cal:[1300,1301],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,138,306,457,593,729,871,872,1024,1142,1147,1271],full_matric:[891,894],fulli:[43,1271,1288,1298,1299,1313],func:[40,41,457,462,489,490,948,949,950,994,1024,1035,1119,1123,1171],further:[43,1317],furthermor:1317,futur:1317,gain:1279,gamma:[1269,1270],gather:[40,41,138,306,457,593,729,1024,1059],gather_nd:[40,41,138,306,457,593,729,1024],gauss:[1152,1161],gaussian:[1244,1245],geglu:[1271,1274],gelu:[387,516,843,1244,1271,1274],gener:[23,40,41,43,455,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,505,948,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1125,1227,1229,1231,1232,1271,1304,1308],geometr:[1024,1056],get:[40,41,43,871,872,873,950,959,960,968,983,984,989,993,996,999,1000,1010,1011,1024,1028,1060,1061,1062,1088,1171,1271,1288,1297,1317],get_all_arrays_in_memori:1024,get_all_arrays_on_dev:950,get_framework:59,get_initial_st:[1288,1297],get_min_bas:1024,get_min_denomin:1024,get_mod_kei:[1300,1301],get_num_dim:[457,729,1024],get_referrers_recurs:1024,getfullargspec:1171,gist:1271,give:[43,1024,1090,1314],given:[40,41,43,865,866,896,897,950,983,989,992,993,994,996,999,1000,1004,1024,1027,1030,1036,1044,1045,1059,1076,1077,1086,1089,1092,1093,1100,1107,1112,1114,1118,1119,1121,1122,1124,1126,1127,1128,1142,1144,1148,1152,1153,1171,1215,1220,1221,1227,1230,1231,1233,1234,1237,1239,1240,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1277,1278,1317],global:[40,41,42,950,959,960,967,992,993,994,1000,1007,1008,1009,1024,1046,1061,1062,1088,1094,1095,1096,1102,1103,1119,1134,1171,1269,1270,1302,1303],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1271,1279,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298],good:43,googl:1271,got:[43,1271],gpu0:43,gpu2:43,gpu:[950,985,988,1171],gpu_is_avail:[455,950,1171],grad:[1271,1304,1308,1313],gradient:[25,40,41,490,491,492,493,950,994,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1138,1167,1168,1169,1170,1271,1304,1305,1306,1307,1308,1309,1313,1317],gradient_descent_upd:[1119,1167,1168,1169,1170],gradient_imag:[172,359,494,633,799,1135],gradienttrack:[1119,1120],graph:[1119,1122,1124,1126,1127,1128,1300,1301],greater:[40,41,1024,1027,1054,1101,1227,1231],green:[40,41,42,1315,1316],grid:[1024,1081],group:[1135,1140],guid:[43,1271,1272,1317],gym:1271,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1317,half:[1024,1027,1171,1227,1231],hand:1271,handl:[40,41,42,43,948,949,950,966,968,977,978,989,996,999,1119,1122,1124,1126,1127,1128,1171,1304,1305,1306,1307,1308,1309],happen:43,has:[40,41,43,891,893,898,899,1024,1104,1142,1147,1152,1156],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1024],hasattr:1171,have:[40,41,43,865,866,867,868,869,870,871,872,875,876,877,878,879,880,881,882,883,884,886,887,888,889,891,892,894,895,896,897,898,899,901,902,905,906,907,909,927,928,934,1024,1039,1043,1048,1049,1050,1051,1057,1104,1119,1125,1133,1152,1160,1171,1271,1313,1314],haven:43,hdf5:[40,41,1300,1301],head:[1252,1263,1288,1299],head_dim:[1288,1299],height:[1135,1140],height_cutoff:[40,41],help:[43,59,406,455,456,950,962,963,964,965,1000,1119,1271,1279,1281,1282,1284,1285,1287],here:[43,1271],hidden:[1252,1262,1288,1297],hierarch:[1024,1041],hierarchi:[40,41],high:[40,41,505,1227,1229,1231],higher:[891,894,1119,1122,1124,1126,1127,1128],highest:[1227,1229],highest_util:1171,highest_util_nod:1171,highli:1271,highlight:1317,hint:43,hkt:1317,hold:[1000,1004,1024,1027,1030,1092,1093],host:1271,hot:[1024,1085],hour:43,how:[1271,1288,1299,1300,1301,1314,1317],howev:[43,1314],http:1317,hyperbol:[875,876,880,1152,1154,1158,1159,1164,1166,1244,1251],hypothet:[43,1317],icon:1271,idea:1271,ident:[40,41,43,138,306,457,593,729,1024],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[864,871,872,875,889],if_exist:[40,41],ignor:[40,41,1304,1308],ignore_key_error:[40,41],ignore_miss:[1304,1308],ignore_non:[40,41],iii:43,iinfo:[83,220,406,536,671,871],imag:[27,495,496,497,1024,1075,1136,1137,1138,1139,1140,1141,1252,1253,1254,1255,1256,1258,1259,1271,1317],image_dim:[1135,1139],imkkhk:1317,immedi:[1271,1314,1317],implement:[43,875,876,879,880,885,886,888,901,902,909,934,1271,1314,1317],in_featur:[1252,1261],inadvert:43,includ:[40,41,43,891,895,905,906,907,1024,1027,1065,1102,1103,1115,1215,1216,1227,1231,1288,1298,1299,1302,1303,1313],include_deriv:[1215,1217,1224],include_empti:[40,41],include_inf:[40,41,1024,1065,1115],include_nest:[1215,1216],include_self:[40,41],inclus:[43,1227,1229],incom:[1252,1261],increas:[950,972,976,982,1024,1040,1053,1117,1171,1215,1224],increasingli:1317,increment:[1024,1070,1171],inde:1271,indent:[40,41,42],independ:[1227,1228],index:[40,41,457,505,898,899,901,902,1024,1029,1058,1059,1081,1101,1104,1215,1218,1220,1221,1222,1225],index_nest:1215,indic:[40,41,457,470,471,481,482,483,891,895,898,899,901,902,1024,1029,1058,1059,1067,1085,1092,1093,1215,1216,1218,1220,1221,1222,1223,1225,1226,1227,1228,1244,1249,1252,1253,1254,1255,1256,1257,1258,1259,1269,1270,1288,1289,1290,1291,1292,1293,1294,1295,1300,1301],indices_wher:[138,306,457,729,1024],indistinguish:[875,889],inevit:1317,inf:[40,41,891,895,1024,1065,1074,1115,1152,1156],infer:[865,868,903,904,948,949,1024,1063,1066,1090,1098,1135,1139,1142,1147,1314,1317],infin:[875,876,878,879,880,881,886,888,889,891,895,905,906,907,1024,1074],infinit:[875,889],inform:[871,872,873,1119,1130],init_c:[1252,1262],init_h:[1252,1262],init_on_first_step:[1304,1308],initi:[40,41,42,43,59,406,455,456,950,962,963,964,965,1000,1119,1171,1252,1262,1271,1281,1282,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1304,1308],initialz:[1300,1301],inner:[1167,1168,1169,1170],inner_batch_fn:[1167,1168,1169],inner_batch_shap:[1252,1261],inner_cost_fn:[1167,1168,1169],inner_grad_step:[1167,1168,1169,1170],inner_learning_r:[1167,1168,1169,1170],inner_optimization_step:[1167,1168,1169,1170],inner_v:[1167,1168,1169],innermost:[865,869,891,892],inp:1171,inplac:[40,41,1024,1033,1068,1072,1105,1119,1122,1124,1126,1127,1128,1277,1278,1304,1305,1306,1307,1308,1309],inplace_arrays_support:[457,1024],inplace_decr:[138,306,457,593,729,1024],inplace_incr:[138,306,457,593,729,1024],inplace_oper:[0,11,12],inplace_upd:[40,41,138,306,457,593,729,1024,1277,1278],inplace_variables_support:[457,1024],input:[15,18,19,40,41,42,43,865,868,869,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,894,895,896,897,898,899,901,902,903,904,905,906,907,948,949,950,959,960,967,968,969,972,973,976,982,994,995,1000,1004,1005,1007,1008,1009,1010,1011,1015,1016,1024,1025,1026,1029,1031,1032,1033,1034,1036,1037,1038,1039,1040,1042,1044,1045,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1063,1065,1066,1067,1069,1070,1071,1073,1074,1075,1079,1080,1081,1082,1089,1091,1098,1099,1101,1104,1105,1106,1107,1109,1110,1111,1112,1114,1115,1117,1119,1123,1125,1130,1134,1135,1136,1137,1138,1139,1141,1142,1145,1147,1149,1150,1151,1152,1154,1156,1158,1159,1160,1164,1165,1166,1167,1168,1169,1170,1171,1227,1228,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1269,1270,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1302,1303,1314],input_ax:[950,994,1171],input_channel:[1288,1289,1290,1291,1292,1293,1294,1297,1298],input_queu:1171,inputs_split:1171,insert:[898,899,1024,1053],insid:43,inspect:1171,inspir:1317,instal:1271,instanc:[15,16,17,18,19,40,41,43,505,909,927,928,934,950,959,1171,1277,1278,1310,1311],instead:[40,41,43,505,1234,1236,1237,1238,1239,1240,1241,1242,1317],int32:43,int64:[1000,1004,1024,1027,1030,1066,1086,1118],int_dtyp:[1000,1009,1019],integ:[40,41,505,871,873,875,877,878,891,895,905,906,907,1000,1016,1024,1027,1054,1091,1100,1227,1229,1232],integr:1271,intend:43,inter:1271,interact:1271,interchang:[40,41,1024,1106],interest:1271,interfac:[1024,1030,1314],intermedi:[40,41],intern:[40,41,950,1119,1133,1171,1215,1216,1223,1224,1279,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1310,1311],interpol:[1024,1075],intersect:[1152,1153],interv:[40,41,905,906,907,1024,1027,1036,1076,1077,1152,1155,1227,1231],introduc:1317,inv:[803,1142,1317],invalid:[905,906,907],invalid_dtyp:1000,invers:[875,876,1142,1144,1146,1152,1153,1154,1155,1156,1158,1317],invert:[1142,1144,1146],invest:1317,investig:43,invoc:[948,949],irrespect:1271,is_al:1171,is_arrai:[138,306,457,593,729,1024,1171],is_float_dtyp:1000,is_int_dtyp:1000,is_mean:1171,is_sum:1171,is_vari:[169,354,489,628,793,1119],isfinit:[88,225,411,541,676,875],isinf:[306,593,729,1024],isinst:1171,isnan:[88,225,411,541,676,875],isnumer:1171,issu:[1271,1272],issue_numb:43,item:[15,19,40,41,909,921,922,950,959,960,962,969,971,973,975,981,1000,1007,1024,1041,1064,1102,1103,1171,1215,1219,1220,1221,1224,1225,1226,1271,1300,1301,1313],iter:[15,16,17,18,19,40,41,42,948,949,950,953,954,956,957,959,960,963,964,971,973,974,975,976,981,994,1024,1026,1034,1039,1040,1066,1081,1086,1089,1090,1093,1098,1100,1104,1107,1112,1117,1171,1215,1216,1217,1219,1223,1224],iterbal:[950,971,975,981,1171],its:[505,950,994,1024,1066,1090,1106,1112,1171,1271],itself:[43,1215,1224],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,400,401,402,403,404,405,406,408,409,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,864,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,893,894,895,896,897,898,899,901,902,903,904,905,906,907,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,952,953,954,955,956,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1274,1275,1276,1277,1278,1279,1281,1282,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1315,1316],ivy_backend:[40,41],ivy_bay:1317,ivy_test:43,ivyfcmodel:1313,ivyh:[40,41,42],ivymodul:[200,851],jame:1271,jax:[43,1119,1125,1271,1317],jax_concat:1271,jnp:1271,join:[40,41,1024,1039,1104,1171],journal:1271,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1271,1288,1297,1317],kaimingnorm:[1279,1283],kalman:1317,kalman_filt:1317,kalman_filter_step:1317,kalman_filter_upd:1317,keep:[40,41,950,995,1024,1114,1171,1271,1272,1317],keep_inner_v:[1167,1168,1169],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1167,1168,1169],keepdim:[40,41,457,487,498,499,891,895,898,899,903,904,905,906,907,1024,1114,1142,1145,1234,1236,1237,1238,1239,1240,1241,1242],kei:[15,16,17,40,41,42,43,909,914,950,962,1024,1041,1167,1168,1169,1171,1215,1218,1222,1252,1263,1264,1271,1277,1278,1288,1299,1304,1308],kept:[40,41,42,1167,1168,1169],kera:1317,kernel:[1252,1262],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,950,959,960,972,976,982,1024,1028,1048,1049,1050,1078,1171,1215,1219,1300,1301],keyword_color_dict:[40,41,42],kind:[871,872,873,1317],kwarg:[15,16,17,40,41,42,59,63,950,959,972,976,982,1024,1078,1171,1277,1278,1300,1301],kwarg_stateful_idx:[1300,1301],kwargs_clon:1171,kwargs_dist:1171,kwargs_uni:1171,label:[43,1265,1266,1267,1268],lamb:[1119,1126,1271,1304],lamb_upd:1119,lambda:[1171,1304,1307,1309,1313],lar:[1119,1126,1127,1271,1304],larger:[871,872,1024,1036],largest:[40,41,871,872,873,1024,1054],lars_upd:1119,last:[40,41,891,892,894,896,897,901,902,905,906,907,1024,1027,1043,1075,1100,1104,1142,1145,1234,1239,1241,1244,1249,1252,1262,1288,1298],later:[40,41,1024,1035],latest:[1288,1297],layer:[1119,1122,1124,1126,1128,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1269,1270,1271,1279,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1310,1311,1317],layer_norm:1269,layernorm:[1271,1302],layerwis:[1119,1127,1304,1307],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1215,1216,1223],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1244,1245,1246],leaky_relu:[843,1244],learn:[903,904,1119,1122,1124,1126,1127,1128,1142,1147,1167,1168,1169,1170,1227,1233,1271,1304,1305,1306,1307,1308,1309,1314,1317],learnabl:[1269,1270,1302,1303],least:43,leav:[15,18,19,40,41,1215,1216,1217,1223,1224],left:[40,41,43,898,899,1142,1145,1234,1236,1237,1238,1239,1240,1241,1242,1271],leftmost:[40,41],len:1171,length:[40,41,42,1024,1027,1090,1101,1112],lenton2021ivi:1271,lenton:1271,less:[40,41,43,88,225,411,541,676,875,878,886,889,891,895,1171,1227,1231],less_equ:[88,411,541,676,875],less_util_node_str:1171,let:[1314,1317],level:1271,librari:[875,887,1271,1313,1317],lightweight:1271,like:[43,1119,1125,1227,1231,1271,1313,1314,1317],likewis:43,limit:[40,41,42,43,871,872,873,1024,1036,1037,1038],linalg:[29,1143,1144,1145,1146,1147,1148,1271],line:43,linear0:[1271,1313],linear1:1271,linear2:1313,linear:[1024,1056,1075,1142,1244,1245,1246,1247,1252,1260,1271,1288,1289,1290,1291,1292,1293,1294,1295,1313],linear_algebra:[498,499,500,501,891,892,893,894,895],linear_resampl:[138,306,457,593,729,1024],linearli:[1024,1056],link:[43,1271],linspac:[138,306,457,593,729,1024,1027],list:[15,18,19,40,41,400,401,402,405,865,866,867,870,896,897,905,906,907,950,959,960,969,970,972,973,974,976,979,980,994,1024,1027,1030,1032,1081,1099,1100,1109,1114,1167,1168,1169,1171,1215,1216,1217,1219,1223,1224,1252,1253,1254,1255,1256,1257,1258,1259,1271,1272,1277,1278,1288,1289,1290,1291,1292,1293,1294,1295],list_join:[40,41,42],list_stack:[40,41],liter:[891,895],littl:1314,load:[40,41],loaded_kwarg:1171,loader:1271,local:43,local_set:[1024,1064],locat:[43,1024,1074,1227,1228],log1p:[88,411,541,676,875],log2:[88,411,541,676,875],log:[813,875,885,891,893,1024,1077,1152,1171,1265,1266,1267,1268],logarithm:[875,885,886,891,893,1152,1163],logdet:[891,893],logic:[31,875,887,905,906,907,1150,1151,1271],logical_and:[368,810,1149],logical_not:[88,225,411,541,676,875],logical_or:[368,810,1149],logit:[1265,1268],logspac:[138,306,457,593,729,1024],look:[43,1314,1317],loop:[1167,1168,1169,1170],loss:[1266,1267,1268,1271,1313],loss_fn:[1271,1313],lot:1314,low:[40,41,505,1227,1229,1231],lower:[40,41,43,865,869,1024,1080,1227,1231],lower_depth:[1300,1301],lowest:[15,18,19,40,41,1215,1224,1227,1229],lstm:[1252,1262,1271,1288],lstm_updat:[43,1252],machin:[871,872,873,903,904,1142,1147,1227,1233,1271,1314,1317],made:43,mai:[875,884,887,901,902,1024,1027,1047,1051,1271,1314,1317],main:[865,869,891,892,1024,1066,1271],mainli:1271,maintain:[43,901,902],make:[43,505,950,1171,1271,1314],maml:[1167,1168,1169],maml_step:1167,manag:[950,1171],manhattan:[891,895],mani:[40,41,43,1024,1100,1271],manipulation_funct:[896,897],manner:[15,18,19,40,41,43,1215,1224],manual:[1215,1216,1223,1317],map:[40,41,42,950,959,1024,1074,1171,1215,1220,1221,1224,1288,1299,1313],map_cont:[40,41],map_nest_at_index:1215,map_nest_at_indic:1215,map_sequ:[40,41],mapper:[950,959,960,1171],mark:43,mask:[1252,1263,1264],master:43,match:[40,41,1024,1078],match_kwarg:1024,math:[33,504,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1171,1271],mathbb:[1142,1148],mathbf:[1142,1148],mathemat:[864,891,895],matmul:[43,306,457,593,729,1024,1317],matplotlib:1314,matric:[865,869,891,892,1252,1261],matrix:[40,41,865,869,891,892,1024,1026,1037,1079,1142,1143,1144,1145,1146,1147,1148,1252,1261,1288,1298],matrix_norm:[40,41,176,363,498,637,803,1142],matter:1271,max:[40,41,406,871,872,873,1024,1037,1038,1049,1080,1092,1093,1171,1234,1236,1304,1306],max_batch_s:[40,41],max_chunk_s:[950,994,1171],max_depth:[40,41,950,954,957,964,972,976,982,1024,1064,1171,1215,1224],max_dev_dim_step_ratio:950,max_freq:[1024,1056],max_length:[40,41],max_node_dim_step_ratio:1171,max_norm:[40,41,1024,1037,1038],max_split_factor_step_s:[950,1171],max_trust_ratio:[1119,1126,1304,1306],maxim:[1271,1314,1317],maximis:1271,maximum:[40,41,42,729,898,899,950,972,976,982,994,1024,1036,1037,1038,1056,1119,1126,1171,1215,1224,1234,1236],mayb:[15,18,19],mdi:1171,mean:[40,41,505,950,979,980,981,982,994,1024,1049,1167,1168,1169,1170,1171,1215,1219,1227,1230,1234,1237,1240,1242,1279,1313,1317],measur:[1252,1263,1288,1299],mech:1271,mechan:[1271,1317],medic:1317,member:43,memori:[950,966,989,994,996,999,1171,1252,1262,1271],mention:43,merg:43,merge_with_upstream:43,meshgrid:[306,457,729,1024],messag:[1315,1316],meta:[35,1168,1169,1170,1271],method:[40,41,42,43,505,1024,1030,1041,1081,1092,1093,1119,1126,1127,1171,1215,1216,1223,1224,1271,1288,1299,1300,1301,1314],might:[1024,1047,1317],min:[40,41,116,406,440,570,705,871,872,873,891,895,903,1024,1049,1082,1092,1093,1102,1142,1147,1171,1234,1238],min_bas:[1024,1103],min_denomin:[1024,1102],min_dev_dim_s:950,min_node_dim_s:1171,min_sf_tune_step:[950,1171],min_unit_dev_tune_step:950,min_unit_node_tune_step:1171,mind:1271,mini:[1269,1270,1302,1303],minimum:[40,41,729,903,904,950,1000,1004,1024,1027,1029,1030,1036,1061,1062,1094,1095,1102,1103,1171,1234,1238],miss:[1304,1308],ml_framework:[1024,1027,1142,1147],mod:[1024,1055],mod_depth:[1300,1301],mod_height:[1300,1301],mod_with_top_mod_key_chain:[1300,1301],mode:[40,41,498,500,891,894,948,949,950,979,980,981,982,994,1142,1147,1171,1314],model:[1271,1313],modul:[40,41,42,59,1024,1083,1171,1271,1272,1274,1275,1276,1277,1278,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1302,1303,1310,1311,1317],moment:[1119,1121,1122,1126,1304,1305,1306],more:[43,896,897,1024,1104,1171,1271,1314,1317],more_util_node_str:1171,most:[40,41,43,1142,1147,1271,1317],move:[40,41,43,950,995,1171],much:[43,1271,1317],multi:[505,1024,1083,1252,1263,1288,1299],multi_head_attent:1252,multi_index_nest:1215,multi_map:[40,41],multi_nod:1171,multidev:[950,961,962,963,982],multidevcontain:[40,41],multidevic:[950,959],multidevit:[950,953,956,959,960,964],multidevitem:[950,952,955],multidevnest:[950,954,957],multiheadattent:[1271,1288],multinod:[1171,1175],multinodecontain:1171,multinodeit:1171,multinodeitem:1171,multinodenest:1171,multinomi:[182,372,505,643,827,1227],multipl:[40,41,905,906,907,1024,1078,1100,1142,1144,1234,1236,1237,1238,1239,1240,1242,1269,1270,1288,1298,1314],multipli:[40,41,1024,1044,1234,1239],multiprocess:[40,41,42,457,729,950,959,1024,1171],must:[40,41,42,43,865,866,867,868,869,870,875,876,877,878,879,880,881,883,884,886,887,888,889,891,892,895,896,897,901,902,903,904,905,906,907,909,927,928,934,950,979,980,981,982,994,1024,1027,1039,1041,1043,1051,1080,1082,1093,1104,1152,1157,1160,1171,1227,1232,1304,1308],mutabl:[1215,1217,1224],mutlidevic:[950,959],mutlinod:1171,mw_tm1:[1119,1122,1126],mx_concat:1271,mxn:[865,869,891,892],mxnet:[43,1271,1317],my_func:43,mymodel:1271,name:[43,948,949,1313],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1314],nan:[40,41,43,864,875,876,878,879,880,881,882,886,888,889,905,906,907,1024,1065,1115],nativ:[15,17,18,19,40,41,43,950,966,968,977,978,989,996,999,1000,1005,1012,1013,1171,1271,1272,1277,1278],native_modul:[1277,1278],native_module_class:[1277,1278],nativearrai:[15,18,19,43,865,868,869,871,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,893,894,895,896,897,898,899,901,902,903,904,905,906,907,909,927,928,934,950,968,994,995,1000,1004,1010,1015,1016,1024,1025,1026,1027,1029,1030,1031,1032,1034,1036,1037,1038,1039,1040,1042,1043,1044,1045,1048,1049,1050,1051,1053,1054,1055,1056,1058,1059,1063,1065,1066,1067,1074,1075,1076,1077,1079,1080,1081,1082,1085,1086,1089,1090,1091,1092,1093,1098,1100,1101,1104,1106,1107,1109,1110,1111,1112,1114,1115,1116,1117,1118,1171,1215,1217,1224],natur:[875,885,891,893,1152,1163,1317],ncdhw:[1252,1257,1258,1288,1293,1294],nchw:[1252,1255,1256,1259,1288,1291,1292,1295],ncw:[1252,1253,1254,1288,1289,1290],ndarrai:[43,400,401,402,403,404,405,406,408,409,505,1024,1110],ndhwc:[1252,1257,1258,1288,1293,1294],nearest:[1024,1091],need:[43,1024,1037,1038,1252,1254,1256,1258,1271,1288,1290,1292,1294,1317],neg:[40,41,875,881,891,895,896,897,905,906,907,1234,1239,1241,1244,1246],negative_slop:1279,neither:1171,nest:[15,16,17,18,19,40,41,42,950,972,976,982,1024,1030,1109,1167,1168,1169,1171,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1300,1301,1304,1305,1306,1307,1308,1309],nested_indices_wher:1215,nested_map:[1171,1215],network:[1252,1261,1271,1272,1274,1288,1300,1301,1317],neural:[1252,1271,1274,1288,1313],never:43,new_node_percent_mem:1171,new_node_util:1171,new_node_utils_kei:1171,new_std:[1269,1270,1302,1303],newli:[43,948,949,1024,1034,1035],newlin:[40,41,42],newshap:[1024,1034,1090],next:[871,872,1171,1300,1301,1304,1305,1306,1307,1308,1309],nhwc:[1252,1255,1256,1259,1288,1291,1292,1295],node:[40,41,1215,1216,1223],node_clon:1171,node_dist:1171,node_dist_arrai:1171,node_dist_it:1171,node_in:1171,node_mapp:1171,node_str:1171,node_to_str:1171,node_util:1171,nodedistit:1171,nodedistitem:1171,nodedistnest:1171,nodemanag:[1171,1182],nodemapp:1171,nodemappermultiproc:1171,noinspect:[43,951,1001,1002,1003,1120,1171],non:[40,41,875,887,891,895,905,906,907,948,949,1000,1014,1300,1301,1304,1308,1314],none:[40,41,42,43,59,61,64,400,401,402,403,405,455,457,458,460,462,469,470,471,472,479,480,481,482,483,484,485,486,488,498,499,505,506,865,866,867,868,870,871,872,873,891,895,896,897,898,899,903,904,905,906,907,948,949,950,959,960,966,967,992,993,994,995,1000,1007,1008,1009,1024,1027,1030,1046,1047,1052,1057,1058,1059,1064,1066,1068,1069,1070,1071,1072,1076,1077,1083,1085,1086,1089,1092,1093,1094,1095,1100,1101,1102,1103,1112,1113,1118,1119,1122,1124,1126,1127,1128,1134,1135,1139,1142,1145,1147,1167,1168,1169,1170,1171,1215,1216,1219,1223,1224,1227,1228,1229,1230,1231,1234,1236,1237,1238,1239,1240,1241,1242,1252,1254,1256,1258,1261,1262,1263,1264,1269,1270,1277,1278,1279,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311],norm:[40,41,891,895,1024,1037,1038,1142,1145,1270,1271,1303,1304,1306],normal:[1227,1230,1269,1270,1302,1303],normalized_idx:[1269,1270],normalized_shap:[1302,1303],notat:[40,41,1234,1235],note:[43,1142,1147],noth:[40,41,1314],notimplementederror:1171,now:[40,41,43,950,995,1024,1025,1171,1271,1288,1299,1300,1301,1313,1314,1317],np_concat:1271,np_finfo:406,ns_tune_step:1171,num:[457,479,480,1024,1076,1077],num_arrai:[40,41],num_arrays_in_memori:1024,num_arrays_on_dev:950,num_band:[1024,1056],num_channel:[1288,1295],num_chunk:1171,num_chunks_floor:1171,num_class:[1227,1228],num_cpu_cor:950,num_gpu:[131,455,950,1171],num_head:[1252,1263,1288,1299],num_kei:[1252,1263,1264],num_lay:[1288,1297],num_or_size_split:[40,41,457,484,1024,1100],num_output:1171,num_queri:[1252,1263,1264],num_sampl:[457,478,505,506,1024,1075,1135,1136,1227,1228],num_task:[1167,1168,1169,1170],number:[40,41,42,864,871,872,873,875,878,891,893,894,905,906,907,948,949,950,986,987,988,1000,1011,1015,1016,1024,1027,1036,1040,1053,1056,1063,1066,1075,1076,1077,1080,1084,1089,1100,1107,1111,1115,1117,1167,1168,1169,1170,1171,1227,1228,1232,1234,1236,1237,1238,1240,1242,1252,1263,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1314,1317],numer:[43,875,878,881,882,883,887,909,928,934,1024,1061,1062,1094,1095,1102,1103,1152,1160,1279],numhead:[1252,1263],numpi:[40,41,43,400,401,402,403,404,405,406,408,409,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,891,894,1024,1110,1142,1147,1234,1235,1271,1313,1314,1317],nwc:[1252,1253,1254,1288,1289,1290],obj:[40,41],object:[40,41,42,59,406,871,872,950,1000,1004,1024,1027,1030,1119,1215,1218,1220,1221,1222,1225,1226,1227,1233,1279,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1300,1301],object_in:[457,460,1024,1030],observ:1171,obvious:43,occupi:[871,872,873,1024,1092,1093],off:[891,892,1024,1027],offer:1271,offset:[891,892,1269,1270],often:1314,old:[40,41],on_init:[1288,1299,1300,1301],onc:[43,950,994,1171,1227,1228,1271],one:[40,41,43,891,895,896,897,898,899,950,979,980,981,982,994,1000,1006,1024,1066,1078,1085,1092,1093,1101,1104,1142,1145,1171,1234,1235,1236,1237,1238,1239,1240,1241,1242,1271,1314,1317],one_hot:[138,457,593,729,1024],onearrai:[1024,1053],ones:[40,41,77,214,400,530,665,865,868,1024,1066,1085,1271],ones_lik:[77,214,400,530,665,865],ongo:43,onli:[40,41,43,505,875,887,896,897,950,1142,1147,1171,1215,1216,1217,1223,1304,1305,1306,1307,1308,1309,1313,1314],onlin:[43,1271],onto:[950,979,980,995,1171,1215,1219,1224],oom:[950,1171],open:[1024,1027,1227,1231,1271,1317],opencv:1314,oper:[40,41,1024,1033,1048,1049,1050,1076,1077,1105,1119,1122,1124,1126,1127,1128,1149,1150,1151,1252,1253,1254,1255,1256,1257,1258,1259,1261,1271,1272],operand:[40,41,875,876,878,879,880,886,888,889,1234,1235],oppos:[1024,1056],optim:[950,1119,1122,1124,1126,1127,1128,1167,1168,1169,1170,1171,1271,1305,1306,1307,1309,1313,1317],optimizer_upd:1119,option:[15,18,19,40,41,42,43,400,401,402,403,405,865,866,867,868,870,891,895,896,897,898,899,903,904,905,906,907,948,949,950,959,960,968,972,973,974,975,976,979,980,981,982,989,992,993,994,995,999,1000,1005,1010,1014,1023,1024,1026,1027,1029,1030,1037,1038,1039,1044,1046,1047,1056,1057,1058,1059,1063,1065,1066,1073,1075,1076,1077,1078,1081,1083,1085,1086,1089,1092,1093,1096,1098,1100,1101,1102,1103,1104,1112,1114,1115,1118,1119,1122,1124,1125,1126,1127,1128,1130,1135,1139,1142,1145,1147,1167,1168,1169,1170,1171,1215,1216,1217,1219,1223,1224,1227,1228,1234,1236,1237,1238,1239,1240,1241,1242,1244,1245,1249,1252,1260,1261,1263,1264,1265,1266,1267,1268,1269,1270,1277,1278,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1314],ord:[891,894,895],order:[40,41,42,43,891,895,896,897,901,902,1119,1122,1124,1126,1127,1128,1142,1145,1167,1168,1169,1310,1311],ordered_node_util_kei:1171,org:1317,organ:43,origin:[40,41,42,1024,1090,1118,1142,1145],other:[40,41,43,909,911,912,917,919,920,924,926,927,928,929,930,932,934,935,936,937,938,939,941,942,943,945,946,947,948,949,1024,1026,1027,1066,1119,1123,1227,1231,1271,1313,1314,1317],other_i:[43,909,928,934],otherwis:[15,16,17,18,19,40,41,875,881,882,891,895,898,899,905,906,907,950,967,1000,1007,1008,1009,1024,1033,1112,1113,1116,1119,1125,1130,1134,1167,1168,1169,1171,1234,1236,1237,1238,1240,1242],our:[43,1271,1317],out:[43,505,865,867,869,870,871,872,873,875,876,877,878,879,880,881,882,883,885,886,887,888,889,891,892,893,895,896,897,898,899,901,902,905,906,907,909,928,1024,1027,1152,1156,1252,1260,1262,1271,1288,1296],out_feat_dim:[1252,1263],out_featur:[1252,1260,1261],out_i:[875,881,882],outdat:1317,outer:[1167,1168,1169,1170],outer_batch_fn:[1167,1168,1169],outer_batch_shap:[1252,1261],outer_cost_fn:[1167,1168,1169],outer_v:[1167,1168,1169],outlin:1314,output:[40,41,43,865,866,867,868,870,896,897,950,959,960,994,1024,1027,1035,1057,1066,1089,1107,1119,1123,1152,1157,1171,1227,1229,1230,1231,1252,1254,1256,1258,1260,1262,1263,1264,1271,1288,1289,1290,1291,1292,1293,1294,1296,1297,1298,1299],output_ax:[950,994,1171],output_axi:1171,output_channel:[1288,1289,1290,1291,1292,1293,1294,1297,1298],output_queu:1171,output_shap:[1252,1254,1256,1258,1288,1290,1292,1294],outsid:[1024,1036],over:[40,41,891,895,905,906,907,1142,1145,1227,1231,1234,1236,1237,1238,1240,1242,1269,1270,1302,1303],overal:1314,overflow:[1024,1027],overhead:1314,overrid:[1024,1085,1118],overriden:[1304,1308],overwrit:[40,41,950,994,1171],overwrite_at_key_chain:[40,41],own:[1271,1314,1317],packag:[43,1314],pad:[1024,1040,1056,1117,1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295],pad_width:[457,1024,1040,1117],page:1271,pair:[1252,1264],parallel:[950,959,960,1171],parallelis:[950,959,960,1171],param:[40,41,42,457,470,471,865,866,868,898,899,903,904,950,994,1024,1025,1058,1059,1085,1086,1171,1300,1301,1313],paramet:[15,16,17,18,19,40,41,42,43,865,866,868,875,884,891,892,894,903,904,909,927,928,934,948,949,950,959,960,966,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,989,992,993,994,995,996,999,1000,1004,1005,1006,1010,1011,1012,1013,1014,1015,1016,1023,1024,1026,1027,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1042,1043,1044,1045,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1063,1065,1066,1067,1069,1070,1071,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1086,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1130,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1277,1278,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313],parameter:[1227,1230,1231],pardo:1271,pars:[1024,1041],part:[865,869,1119,1122,1124,1126,1127,1128,1152,1156,1271,1300,1301,1314],partial:[40,41,43,1300,1301],particl:1317,particular:[43,1317],pass:[40,41,42,43,950,959,994,1000,1005,1024,1035,1119,1133,1167,1168,1169,1171,1277,1278,1300,1301,1304,1308,1310,1311],pattern:[40,41,1024,1048,1049,1050],peopl:43,per:[950,1171,1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295],percent_used_mem_on_dev:950,percent_used_mem_on_nod:1171,percentag:[950,989,1171],perf_count:1171,perform:[40,41,43,905,906,907,950,1024,1029,1044,1048,1049,1050,1069,1070,1071,1075,1076,1077,1119,1122,1124,1126,1127,1128,1135,1136,1167,1168,1169,1170,1171,1215,1220,1221,1234,1236,1237,1238,1239,1240,1241,1242,1244,1249,1252,1260,1262],period:43,permissable_step:1171,permit:43,permut:[505,1024,1106,1112],perpendicular:[1024,1043],person:[43,1271],physci:1317,pickl:[40,41,1171],pickle_filepath:[40,41],pinv:[363,803,1142],pip:1271,pipelin:1313,pkk:1317,pkkm1:1317,pkm1km1:1317,place:[40,41,43,865,866,867,868,870,950,995,1024,1053,1057,1069,1070,1071,1171,1304,1305,1306,1307,1308,1309],placehold:[43,1215,1224],pleas:[43,505,1142,1147],point:[43,864,865,866,867,870,871,872,875,876,878,879,880,886,888,889,891,895,1000,1015,1024,1027,1152,1160],popul:[40,41,1227,1228],popular:1317,population_s:[505,506,1227,1228],portabl:[1271,1272],posit:[15,16,17,871,872,875,881,905,906,907,950,972,976,982,1024,1025,1027,1053,1056,1171,1227,1232,1277,1278],possibi:[40,41],possibl:[43,1024,1078,1109,1135,1140,1317],post:[1269,1270],post_shap:[40,41],power:[43,909,934,940,1024,1061,1094,1103,1279],practic:1271,pre:[950,1171,1271],pre_shap:[40,41],precis:[871,872,875,889],pred:[1265,1266,1267,1268],predict:[1265,1266,1267,1268,1317],preprint:1271,present:[40,41],preserv:[40,41,42,896,897,1119,1130],preserve_typ:[40,41,489,492,1119,1130],press:1271,prevent:[43,1119,1121,1122,1126,1171,1304,1305,1306],prevet:43,previou:[1119,1122,1126],previous:[1024,1035],prime:1271,print:[40,41,42,950,990,1024,1087,1271,1313],print_all_arrays_in_memori:1024,print_all_arrays_on_dev:950,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1304,1308],prob:[505,506,1227,1228,1252,1260,1288,1296],probabl:[1227,1228,1252,1260,1288,1296],problem:[43,1317],process:[43,950,959,960,989,999,1024,1083,1171],process_specif:[950,989,999,1171],prod:[40,41,1024,1049],produc:[950,959,960,1171],product:[40,41,1024,1043,1044,1079,1234,1235,1252,1263,1264,1288,1299],profil:[131,300,455,586,721,950,1171],progress:43,project:[1271,1313,1314,1317],promot:[43,875,876,877,879,880,886,888,889,891,895,909,934,1152,1160],prompt:1271,properli:43,properti:[40,41,406,950,962,1171,1300,1301,1304,1305,1306,1307,1309],provid:[40,41,43,896,897,898,899,905,906,907,948,949,950,967,1000,1007,1008,1009,1014,1023,1024,1047,1085,1093,1118,1119,1122,1124,1126,1127,1128,1134,1171,1271,1288,1297,1304,1305,1306,1307,1308,1309,1314],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1142,1146],pull:[1271,1272],pure:[40,41,1271,1317],purpos:[43,1317],put:1171,pybroadexcept:1171,pyprotectedmemb:1171,pyshadowingbuiltin:43,pyshadowingnam:[951,1001,1002,1003,1120,1171],python:[40,41,950,989,999,1024,1027,1171,1271],pytorch:[1119,1122,1124,1126,1127,1128,1142,1147,1271,1304,1305,1306,1307,1308,1309,1313,1314,1317],pyunresolvedrefer:1171,quadrant:[1152,1157],qualiti:43,queri:[40,41,909,923,944,950,983,993,1171,1252,1263,1264,1288,1299],query_dim:[1288,1299],query_kei:[40,41],queue:[40,41,42,950,959,960,1024,1088,1096,1171],queue_class:[950,959,960,1171],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1024,1171],quick:[505,1271],quickli:[43,1313],radian:[875,879,888,1152,1153,1155,1157,1165],rai:[1152,1153],rais:[40,41,43,905,906,907,909,934,1024,1033,1061,1094,1101,1103,1113,1171,1300,1301,1304,1308],ram:[950,989,996,999,1171],randint:[182,372,505,643,827,1227],random:[37,40,41,506,1228,1229,1230,1231,1232,1233,1271],random_crop:1135,random_norm:[182,372,505,643,827,1227],random_uniform:[182,372,505,643,827,1227],randomli:[505,1135,1139,1252,1260,1288,1296],rang:[505,1024,1027,1076,1077,1152,1157,1171,1271,1313,1317],rank:[891,895,905,906,907,1024,1040,1114,1117],rate:[1119,1122,1124,1126,1127,1128,1167,1168,1169,1170,1288,1299,1304,1305,1306,1307,1308,1309],rather:[40,41,43,950,994,1024,1027,1073,1119,1125,1171],ratio:[950,1119,1126,1135,1140,1171,1304,1306],raw:[40,41,1142,1147],raw_delta:1171,reach:[43,950,972,976,982,1171,1215,1224],read:[40,41],readi:[1171,1313],real:[1152,1153,1156],realiti:1314,rearrang:[40,41,1024,1048,1050],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1167,1169],receiv:[43,950,959,960,1024,1028,1078,1171,1288,1298],receivess:[950,1171],receivng:[1167,1170],recev:[1167,1168,1169],recognit:1317,recommend:[875,887,1271],rectifi:[1244,1246,1247],recurr:[1252,1262],recurrent_bia:[1252,1262],recurrent_kernel:[1252,1262],recurs:[40,41,1215,1216,1217,1223,1224],redefin:43,reduc:[40,41,898,899,905,906,907,950,994,1024,1049,1142,1147,1171,1234,1236,1237,1238,1239,1240,1241,1242],reduce_max:[40,41,189,377,507,648,834,1234],reduce_mean:[40,41,189,377,507,648,834,1234,1271,1313],reduce_min:[40,41,189,377,507,648,834,1234],reduce_prod:[40,41,189,377,507,648,834,1234],reduce_std:[40,41,377,1234],reduce_sum:[40,41,189,377,507,648,834,1171,1234],reduce_var:[40,41,189,377,507,648,834,1234],reduct:[39,40,41,457,482,483,905,906,907,1024,1049,1092,1093,1235,1236,1237,1238,1239,1240,1241,1242,1271],refactor:43,refer:[43,875,885,905,906,907,1119,1121,1122,1142,1148,1288,1298,1317],reflect:43,reflected_oper:[0,13,14],regard:[950,1171],regardless:[40,41,948,949],register_paramet:1313,reimplement:1317,rel:[891,892,896,897,901,902,1119,1122,1124,1126,1127,1128],rel_slice_obj:1171,relat:43,relev:[1304,1305,1306,1307,1308,1309],relu:[843,1244,1245,1246,1271,1313],remain:[43,1024,1090,1215,1219],remaind:[40,41,1024,1055,1100],remov:[40,41,43,891,892,898,899,1024,1101,1167,1168,1169],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,896,897],rep:[1024,1107],repeat:[40,41,43,306,729,1024,1050,1107,1171,1314],repeated_config_check:[950,1171],repeatedli:[1215,1222],repetit:[40,41,1024,1089,1107],replac:[40,41,43,505,506,1024,1036,1092,1093,1227,1228],repo:[43,1271],repositori:43,repres:[43,875,876,880,891,893,1000,1006,1011,1252,1261],represent:[40,41,42,43,864,871,872,873,875,877,950,977,978,1000,1006,1012,1013,1024,1099,1109,1171],reptil:[1167,1170],reptile_step:1167,request:[1271,1272],requir:[43,875,889,948,949,1000,1004,1024,1027,1030,1277,1278],resampl:[1024,1075],reserv:43,reshap:[40,41,43,505,729,1024],reshape_lik:[40,41],respect:[875,877,883,884,909,928,1024,1051,1119,1121,1122,1123,1124,1126,1127,1128,1142,1147,1152,1160,1167,1168,1169,1170],respond:43,respons:[43,1171],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,895,898,899,905,906,907,909,927,928,934,950,959,1024,1027,1051,1092,1093,1104,1142,1145,1149,1150,1151,1152,1160,1171,1234,1236,1237,1238,1239,1240,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1271],ret:1171,ret_dict:1171,ret_fn:[950,959,960,1171],retain:[1119,1123],retain_grad:[489,490,1119,1123],retreiv:1171,retrn:[1024,1099],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1167,1168,1169,1170],return_sequ:[1288,1297],return_st:[1288,1297],rev:[1024,1047],revers:[40,41,896,897,1024,1047,1112],review:43,right:[40,41,43],rk_e:1317,robot:1271,ronald:1271,root:[43,875,889],round:[306,457,729,875,878,889,1024,1027,1171],row:[1024,1066,1227,1228],rule:[43,909,934,1024,1027,1152,1160],run:[43,950,959,1119,1121,1122,1126,1167,1168,1169,1170,1171,1271,1272,1288,1299,1300,1301],safe:[950,959,1171],safety_factor:[950,1171],same:[15,16,17,40,41,43,865,868,869,875,878,891,892,894,896,897,898,899,901,902,950,959,960,994,995,1000,1004,1024,1025,1039,1054,1055,1058,1059,1085,1091,1092,1093,1104,1118,1119,1125,1130,1152,1156,1167,1168,1169,1171,1234,1235,1252,1253,1254,1255,1256,1257,1258,1259,1271,1288,1289,1290,1291,1292,1293,1294,1295,1313,1317],same_arrai:[40,41],sampl:[1024,1075,1135,1136,1227,1228,1230,1231,1252,1260,1271,1288,1296],satisfi:[1024,1030,1142,1144,1148],save:[40,41,1024,1097,1108,1135,1137,1300,1301],save_dir:[455,456,950,965,1171],save_weight:[1300,1301],scalar:[891,895,1024,1036,1085,1111,1115],scale:[950,992,993,1119,1127,1171,1252,1260,1263,1264,1269,1270,1288,1296,1299,1304,1307],scaled_dot_product_attent:1252,scatter:[1024,1085,1092,1093],scatter_flat:[138,306,457,593,729,1024],scatter_nd:[138,306,457,593,729,1024],scene:[1119,1122,1124,1126,1127,1128],schemat:1271,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[898,899],second:[40,41,875,877,883,884,891,892,950,981,1024,1031,1043,1051,1088,1096,1106,1119,1121,1122,1126,1167,1169,1171,1304,1305,1306],secondli:1317,sector:[875,876],see:[43,59,406,455,456,505,875,877,883,891,895,905,906,907,909,927,928,934,950,962,963,964,965,1000,1024,1027,1076,1077,1119,1152,1160,1271,1279,1281,1282,1284,1285,1287],seed:[40,41,182,505,827,1227],seed_valu:[40,41,505,1227,1232],seem:1271,seen_set:[1024,1064],select:[1024,1030,1101,1314,1317],self:[40,41,43,59,406,455,456,909,928,934,950,962,963,964,965,1000,1119,1171,1271,1279,1281,1282,1284,1285,1287,1304,1308,1313,1317],self_i:[909,928],sent:1171,seper:[43,1024,1056],seq:[40,41,42,1234,1235,1300,1301],sequenc:[15,16,17,40,41,42,43,505,948,949,950,959,960,969,970,971,972,973,974,975,976,979,980,994,1000,1004,1024,1027,1030,1032,1034,1039,1040,1066,1078,1081,1086,1089,1090,1093,1100,1104,1107,1112,1117,1119,1123,1135,1139,1140,1142,1145,1171,1215,1226,1227,1229,1231,1234,1236,1237,1238,1239,1240,1241,1242,1252,1253,1254,1255,1256,1257,1258,1259,1269,1270,1277,1278,1288,1289,1290,1291,1292,1293,1294,1295,1297,1300,1301,1302,1303,1304,1308,1310,1311],sequenti:1271,seri:43,set:[15,18,19,40,41,898,899,901,902,950,979,980,992,993,994,1024,1026,1046,1066,1094,1095,1096,1097,1119,1122,1124,1125,1126,1127,1128,1142,1145,1171,1215,1216,1223,1225,1226,1227,1228,1232,1234,1236,1237,1238,1239,1240,1241,1242,1271,1288,1297,1304,1305,1306,1307,1308,1309,1314,1317],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:950,set_default_dtyp:1000,set_default_float_dtyp:1000,set_default_int_dtyp:1000,set_default_nod:1171,set_exception_debug_mod:44,set_framework:[40,41,43,59,1171,1271,1313,1314,1317],set_ivy_backend:[40,41],set_min_bas:1024,set_min_denomin:1024,set_nest_at_index:1215,set_nest_at_indic:1215,set_queue_timeout:1024,set_split_factor:[950,1171],set_stat:[1304,1305,1306,1307,1308,1309],set_tmp_dir:1024,set_with_grad:1119,setter:1171,sever:1317,sgd:[1271,1304],shape0:1171,shape:[40,41,43,400,401,402,405,457,469,483,505,729,865,866,867,868,869,870,891,892,896,897,898,899,901,902,950,962,1000,1004,1024,1025,1034,1039,1040,1053,1054,1055,1057,1059,1063,1066,1085,1086,1089,1090,1091,1092,1093,1099,1101,1104,1117,1118,1135,1139,1142,1144,1147,1152,1156,1157,1171,1227,1229,1230,1231,1234,1235,1252,1254,1256,1258,1288,1290,1291,1292,1293,1294,1295,1302,1303],shape_slic:[40,41],shape_to_tupl:1024,share:[40,41,1271,1314],shift:1171,should:[40,41,42,43,505,865,869,875,876,877,878,879,880,881,882,883,886,887,888,889,891,892,895,898,899,909,927,928,934,948,949,950,1024,1034,1035,1041,1085,1090,1119,1122,1124,1126,1127,1128,1152,1160,1171,1234,1235,1271],show:[40,41,1271,1317],show_mod_in_top_mod:[1300,1301],show_structur:[1300,1301],show_sub_contain:[40,41],show_v:[1300,1301],show_v_in_top_v:[1300,1301],shown:[40,41],shp:1171,shuffl:[40,41,182,505,827,1227],shuffle_h5_fil:[40,41],side:43,sigmoid:[843,1244,1271,1313],sign:[891,893],signatur:[43,59,406,455,456,457,489,494,498,502,503,505,950,962,963,964,965,1000,1119,1279,1281,1282,1284,1285,1287],signific:1317,similar:[43,1252,1263,1288,1299],similarli:[1142,1147],simpl:[43,1024,1052,1271,1314,1317],simpler:43,simplest:1314,simpli:[40,41,43,1271,1314,1317],simultan:1271,sin:[88,225,411,541,676,875,1024,1056,1152,1165,1314],sinco:1314,sine:[875,876,888,1152,1155,1164],singl:[40,41,948,949,950,959,960,979,980,981,982,1024,1101,1111,1115,1135,1140,1171,1227,1230,1231,1234,1236,1237,1238,1239,1240,1241,1242,1271,1314,1317],singleton:[891,895,905,906,907],singular:[891,894],sinh:[813,1152],siren:[1271,1279],situat:43,size:[40,41,42,457,482,891,892,894,898,899,905,906,907,950,973,974,975,976,992,993,994,1024,1027,1034,1076,1077,1092,1100,1135,1139,1142,1145,1171,1227,1228,1230,1231,1234,1236,1237,1238,1239,1240,1241,1242,1288,1289,1290],size_ordered_arrai:[40,41],skew:[1142,1148],skinv:1317,skip:[40,41],slice:[40,41,1024,1058,1059,1171,1215,1222],slice_kei:[40,41],slice_obj:[40,41,1171],slice_via_kei:[40,41],slide:[1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295],slodget:891,slogdet:[235,428,558,693],slope:[1244,1246],small:[1265,1266,1267,1268,1269,1270,1271,1302,1303,1314],smaller:[1024,1036],smallest:[40,41,871,872,873,875,878,1024,1029],smallest_norm:[406,871,872],softmax:[198,516,843,1244,1252,1263,1264],softplu:[843,1244],solut:43,solv:1317,some:[40,41,43,1024,1027,1119,1121,1122,1124,1126,1127,1128,1133,1252,1260,1271,1288,1296,1314,1317],some_backend:43,some_namespac:43,someth:[43,1317],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,891,894,902,1171],sort_by_kei:[40,41],sorting_funct:[901,902],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,400,401,402,403,404,405,406,408,409,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,503,504,505,506,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,893,894,895,896,897,898,899,901,902,903,904,905,906,907,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,952,953,954,955,956,957,959,960,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1244,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1274,1275,1276,1277,1278,1279,1281,1282,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1315,1316,1317],space:[1024,1027,1056,1076,1077],spars:[1265,1268],sparse_cross_entropi:1265,spawn:[1024,1083],special:[43,875,876,878,879,880,886,888,889],specif:[40,41,43,875,887,950,992,1024,1041,1048,1049,1050,1083,1167,1168,1169,1170,1171,1227,1233,1271,1300,1301,1313,1314],specifc:[1227,1228],specifi:[40,41,43,865,866,867,869,870,891,892,895,896,897,898,899,901,902,905,906,907,950,969,970,971,972,973,974,975,976,979,980,984,986,990,993,994,995,1000,1004,1006,1024,1027,1029,1030,1036,1039,1040,1057,1058,1059,1065,1076,1077,1104,1114,1117,1142,1145,1171,1215,1220,1221,1225,1226,1234,1235,1236,1237,1238,1239,1240,1241,1242],sphinx:43,split:[40,41,138,306,457,593,729,950,959,973,974,975,976,992,993,994,1024,1078,1171],split_arg:1171,split_factor:[950,959,1171],split_func_cal:[950,1171],split_siz:1171,spread:[950,982,1171],sqrt:[88,225,411,541,676,875,891,895],squar:[875,889,891,893,1024,1066,1142,1144],squeez:[138,306,457,593,729,1024],stabil:[901,902,1024,1102,1103],stabl:[901,902,1024,1061,1062,1094,1095,1102,1103],stable_divid:1024,stable_pow:1024,stack:[40,41,306,729,865,869,891,892,1024,1135,1140,1215,1216,1223,1288,1297],stack_imag:[172,359,494,633,799,1135],stacked_dim_s:1171,stage:43,standard:[40,41,871,872,1227,1230,1234,1240,1269,1270,1271,1272,1302,1303],start:[40,41,43,455,456,457,458,479,480,505,950,965,1024,1027,1076,1077,1171,1271,1314],starting_index:[40,41],starting_split_factor:[950,1171],state:[1171,1252,1262,1271,1274,1275,1276,1277,1278,1279,1281,1282,1284,1285,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1313],statement:1314,static_argnam:[457,462,948,949],static_argnum:[457,462,948,949],statistical_funct:[903,904],std:[505,1227,1230],step:[40,41,457,458,950,1024,1027,1076,1077,1119,1121,1122,1124,1126,1127,1128,1167,1168,1169,1170,1171,1271,1304,1305,1306,1307,1308,1309,1313,1317],stephen:1271,stick:1271,still:[40,41,43],stochast:[1304,1309],stop:[40,41,455,456,457,458,479,480,950,965,994,1024,1027,1076,1077,1119,1122,1124,1126,1127,1128,1130,1167,1168,1169,1170,1171,1304,1305,1306,1307,1308,1309],stop_gradi:[40,41,354,489,628,793,950,994,1119,1122,1124,1126,1127,1128,1167,1168,1169,1170,1171,1304,1305,1306,1307,1308,1309],stopiter:1171,store:[40,41,1024,1056,1100,1119,1133,1300,1301],store_var:[1300,1301],str:[15,16,17,40,41,42,43,400,401,402,403,405,406,408,409,865,868,871,872,873,948,949,950,959,960,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,994,1000,1005,1006,1011,1012,1013,1014,1015,1016,1023,1024,1030,1046,1048,1049,1050,1081,1083,1086,1092,1093,1142,1145,1147,1167,1168,1169,1170,1171,1215,1219,1234,1235,1277,1278,1288,1299,1300,1301],str_to_nod:1171,straight:1314,strength:[1271,1317],stride:[1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295],string:[40,41,43,950,966,968,977,978,983,989,995,996,999,1000,1004,1010,1012,1013,1014,1023,1024,1027,1030,1046,1066,1086,1118,1171,1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295,1300,1301],structur:[40,41,42,43,1024,1041],structural_diff:[40,41],style:43,sub:[40,41,43,891,892,950,973,974,979,980,981,982,1024,1100,1167,1168,1169,1170,1171],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1171,sub_mod:[1300,1301],sub_modul:[1310,1311],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1271,1272,1302,1303,1310,1311],subsequ:43,subset:43,substr:[40,41],suffici:[1142,1147],suggest:1271,suitabl:[1135,1140],sum:[40,41,457,482,483,891,895,950,979,980,981,982,994,1024,1045,1049,1092,1093,1171,1234,1235,1241],summat:[40,41,1234,1235],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,110,112,115,117,119,120,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,236,237,238,239,241,243,246,249,250,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,301,302,303,304,305,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,355,356,357,358,360,361,362,364,365,366,367,369,370,373,374,375,376,378,379,380,381,382,383,384,385,388,390,391,392,393,394,395,396,401,402,403,404,405,407,408,409,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,429,430,431,432,434,436,439,441,443,444,456,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,495,496,497,499,500,501,504,506,508,509,510,511,512,513,514,517,518,520,521,522,523,524,525,526,531,532,533,534,535,537,538,539,542,543,544,545,546,547,548,549,550,551,552,553,554,555,556,559,560,561,562,564,566,569,571,573,574,582,587,588,589,590,591,592,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,629,630,631,632,634,635,636,638,639,640,644,645,646,647,649,650,651,652,653,654,655,659,660,661,666,667,668,669,670,672,673,674,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,694,695,696,697,699,701,704,706,708,709,717,722,723,724,725,726,727,728,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,794,795,796,797,798,800,801,802,804,805,806,807,808,809,811,812,814,815,816,817,818,819,820,821,822,823,824,825,826,828,829,830,831,832,833,835,836,837,838,839,840,841,844,845,846,847,848,849,850,852,853,855,856,857,858,859,860,861,866,867,868,869,870,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,892,893,894,895,897,899,902,904,906,907,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,949,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1150,1151,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1226,1228,1229,1230,1231,1232,1233,1235,1236,1237,1238,1239,1240,1241,1242,1245,1246,1247,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1266,1267,1268,1270,1271,1275,1276,1278,1280,1281,1282,1283,1284,1285,1286,1287,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1303,1304,1305,1306,1307,1308,1309,1311,1312,1313,1314,1316,1317],supports_inplac:1024,suppos:1317,sure:43,svd:[105,235,428,558,693,891],swap:[40,41,1024,1106],swapax:[40,41,593,729,1024,1317],symmetr:[1142,1148],syntax:[455,457,489,494,498,502,503,505],tab:1271,take:[43,1024,1075],taken:[43,891,892,1234,1236,1237,1238,1240,1242],tan:[813,1152,1156],tangent:[1152,1156,1157,1158,1165,1166,1244,1251],tanh:[813,843,1152,1244],target:[40,41,950,966,969,970,971,972,973,974,975,976,979,980,981,982,995,1171,1271],target_dict:[40,41],task:[43,1167,1168,1169,1170],team:[43,1317],templat:1271,temporari:[1024,1097,1108],tensor:[40,41,43,457,482,483,950,968,1000,1010,1024,1027,1029,1034,1076,1077,1080,1082,1085,1086,1090,1092,1093,1100,1118,1171,1227,1228,1229,1252,1260,1262,1271,1288,1296,1298,1304,1305,1306,1307,1308,1309,1313,1314],tensorflow:[43,1142,1147,1252,1254,1256,1258,1271,1288,1290,1292,1294,1314,1317],term:[40,41,43,1252,1262,1271,1288,1298],termcolor:[40,41,42],termin:[40,41,42,1171],test:[43,875,881,882,905,906,907,1000,1015,1016],test_array_api:43,tf_concat:1271,than:[40,41,43,871,872,875,878,886,889,891,895,896,897,950,994,1024,1027,1036,1054,1073,1080,1101,1104,1119,1125,1171,1227,1231,1271,1314],thei:[40,41,43,1152,1157,1167,1168,1169,1227,1228,1271,1310,1311,1314],them:[1271,1317],themselv:[1215,1216],therefor:43,thi:[40,41,42,43,875,887,891,893,898,899,950,972,976,982,989,994,999,1024,1027,1056,1088,1090,1096,1119,1122,1124,1125,1126,1127,1128,1133,1142,1145,1171,1215,1219,1224,1234,1236,1237,1238,1239,1240,1241,1242,1252,1261,1271,1300,1301,1304,1305,1306,1307,1308,1309,1313,1314,1317],thing:[43,1271],those:[40,41,43,891,894,1024,1036,1119,1133,1171],though:43,thought:43,threshold:[1024,1080,1082],through:[40,41,43],tick:43,tickbox:43,tile:[306,593,729,1024],time:[43,1024,1107,1119,1122,1126,1167,1168,1169,1170,1171,1227,1228,1252,1262,1288,1299,1300,1301,1317],timeout:[40,41,42,950,959,960,1024,1088,1096,1171],timestep:[1252,1262,1288,1297],titl:[43,1271],tmp_dir:1024,tmp_dr:[1024,1097],to_appli:[40,41],to_clon:[950,1171],to_dev:[40,41,131,300,455,586,721,950],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[950,1171],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1271],to_ivy_modul:[200,851,1271,1277],to_json:[40,41],to_kv_fn:[1252,1263],to_kv_v:[1252,1263],to_list:[40,41,457,729,1024],to_multi_dev:[40,41],to_mut:[1215,1217,1224],to_n:[15,40,41,1271],to_nod:1171,to_numpi:[40,41,457,729,1024,1271,1313],to_out_fn:[1252,1263],to_out_v:[1252,1263],to_q_fn:[1252,1263],to_q_v:[1252,1263],to_raw:[40,41],to_scalar:[457,729,1024],todo:[1171,1271,1272],togeth:[40,41,1310,1311],tool:[1271,1314],top_mod:[1300,1301],topic:1317,torch:[43,948,949,1271,1313,1314,1317],torch_concat:1271,torchfcmodel:1313,total:[40,41,42,950,996,1171],total_mem_on_dev:950,total_mem_on_nod:1171,tpu:[950,997,1171],tpu_is_avail:[455,586,721,950,1171],trace:[40,41,1024,1073],track:[43,950,1171,1215,1224,1300,1301],track_submod_call_ord:[1300,1301],track_submod_ret:[1300,1301],trail:[1302,1303],train:[1119,1121,1122,1126,1271,1272],trainabl:[1119,1125,1271,1272,1277,1278,1300,1301,1310],trainer:1271,tran:1317,transform:[1252,1260,1261],transpos:[40,41,138,306,457,729,950,981,1024,1171,1252,1254,1256,1258,1288,1290,1292,1294],travers:[15,18,19,40,41,1215,1224],treat:[40,41,948,949],tri:[40,41],triangular:[865,869],trigonometr:[1152,1153,1156],tril:[77,214,400,530,665,865],trim_kei:[40,41],trust:[1119,1126,1304,1306],truth:[875,883,884,909,927,928,1024,1051,1149,1150,1151],try_else_non:1024,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[950,1171],tune_dev_alloc:950,tune_dev_split:950,tune_node_alloc:1171,tune_node_split:1171,tune_step:[950,1171],tupl:[15,16,17,18,19,40,41,43,400,401,402,405,865,866,867,870,891,894,895,896,897,903,904,905,906,907,948,949,1024,1040,1056,1057,1099,1117,1171,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1229,1234,1236,1237,1238,1239,1240,1241,1242],tutori:43,two:[40,41,865,869,891,892,893,894,1024,1027,1031,1043,1079,1106,1142,1145],type:[15,18,40,41,42,43,59,408,409,455,456,865,866,867,868,869,870,872,873,875,876,877,878,879,880,881,882,883,884,886,887,888,889,891,892,895,896,897,901,902,905,906,907,909,927,928,934,950,962,963,964,965,977,978,982,994,1000,1004,1005,1006,1010,1011,1012,1013,1014,1015,1016,1023,1024,1025,1027,1030,1039,1041,1051,1054,1055,1057,1066,1073,1085,1086,1091,1105,1115,1118,1119,1125,1130,1152,1160,1171,1271,1279,1281,1282,1284,1285,1287,1300,1301,1314],types_to_iteratively_nest:[40,41,42],uint8:[1135,1137,1141],uint8_img_to_float_img:1135,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[875,877],underwai:43,unecessari:43,unfairli:43,unif:1171,unifi:[40,41,950,979,980,981,982,994,1171,1271],uniform:[40,41,1227,1228,1230,1231,1279,1281,1282,1285,1286],uniformli:[1227,1229,1231],unify_arrai:1171,unify_it:1171,unify_nest:1171,uniniti:[865,866],union:[15,18,19,40,41,43,400,401,402,403,405,406,408,409,865,866,867,868,869,870,871,872,873,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,891,893,894,895,896,897,898,899,901,902,903,904,905,906,907,909,927,928,934,948,949,950,968,973,974,975,976,994,995,1000,1004,1005,1006,1010,1011,1012,1013,1014,1015,1016,1023,1024,1025,1026,1027,1029,1030,1031,1032,1034,1036,1037,1038,1039,1040,1042,1043,1044,1045,1048,1049,1050,1051,1053,1054,1055,1056,1057,1058,1059,1063,1065,1066,1067,1074,1075,1076,1077,1079,1080,1081,1082,1085,1086,1089,1090,1091,1092,1093,1098,1099,1100,1101,1104,1106,1107,1109,1110,1111,1112,1114,1115,1116,1117,1118,1171,1215,1216,1217,1223,1224],uniqu:[950,959,960,1167,1168,1169,1170,1171,1215,1219],unique_kwarg:1171,unit:[43,950,1152,1153,1155,1171,1244,1245,1246,1247],unitari:[891,894],unless:[1024,1085,1118],unlik:[950,1171],unnorm:[1227,1228],unpack:[1024,1114],unrol:[1252,1262],unset:1314,unset_debug_mod:44,unset_default_devic:950,unset_default_dtyp:1000,unset_default_float_dtyp:1000,unset_default_int_dtyp:1000,unset_framework:[59,1314],unset_with_grad:1119,unstack:[40,41,138,306,457,593,729,1024],until:43,unus:[948,949],updat:[40,41,457,482,483,950,959,1024,1071,1092,1093,1119,1121,1122,1124,1126,1127,1128,1167,1168,1169,1171,1215,1220,1221,1225,1226,1252,1262,1271,1272,1277,1278,1304,1305,1306,1307,1308,1309,1314,1317],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1227,1231],upper_depth:[1300,1301],upstream:43,usabl:[1271,1317],usag:[950,994,1171],use:[40,41,42,43,505,950,959,960,985,997,1024,1089,1102,1103,1142,1147,1171,1252,1263,1269,1270,1271,1302,1303,1314,1317],used:[40,41,43,505,891,892,950,959,989,992,993,999,1000,1011,1024,1061,1062,1078,1092,1093,1094,1095,1118,1119,1126,1127,1142,1145,1167,1168,1169,1170,1171,1215,1224,1288,1299,1304,1306,1307,1313,1314],used_dev:[950,959],used_mem_on_dev:950,used_mem_on_nod:1171,used_node_str:1171,used_node_strs_dict:1171,useful:[40,41,950,994,1171,1252,1261,1271,1314],user:[1271,1288,1299,1300,1301,1314,1317],uses:1271,using:[40,41,43,1119,1121,1122,1215,1218,1222,1234,1235,1252,1260,1264,1271,1288,1296,1313,1314,1317],util:[950,983,1171],utility_funct:[905,906,907],v_with_top_v_key_chain:[1300,1301],val:[40,41,457,474,475,476,909,944,1024,1069,1070,1071,1094,1095],valid:[905,906,907,1000,1005,1024,1102,1103,1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295],valid_dtyp:1000,valu:[40,41,457,875,878,883,884,891,893,894,895,898,899,901,902,903,904,909,927,928,950,962,993,994,1024,1025,1027,1029,1036,1037,1038,1040,1041,1047,1051,1056,1057,1058,1059,1074,1076,1077,1080,1082,1088,1089,1090,1091,1092,1093,1094,1095,1096,1112,1115,1116,1117,1119,1123,1126,1135,1141,1149,1150,1151,1152,1161,1162,1163,1167,1168,1169,1171,1215,1219,1220,1221,1225,1226,1227,1230,1231,1234,1236,1238,1252,1263,1264,1269,1270,1288,1299,1302,1303,1304,1306],value_is_nan:1024,vanilla:[1167,1169],var_shap:1279,variabl:[15,16,17,18,19,40,41,354,489,628,793,1024,1033,1069,1070,1071,1072,1073,1105,1119,1122,1123,1124,1125,1126,1127,1128,1130,1133,1167,1168,1169,1170,1252,1263,1269,1270,1277,1278,1279,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311],variable_data:[489,793,1119],varianc:[40,41,1234,1242,1317],varieti:1314,variou:[43,1271],vector:[40,41,498,501,891,894,895,1024,1038,1043,1142,1148,1252,1261,1288,1298],vector_norm:[40,41,105,235,428,558,693,891],vector_to_skew_symmetric_matrix:[176,363,498,637,803,1142],verbos:1316,veri:[43,1271],verifi:43,version:43,via:[1215,1216,1223,1314],view:[1135,1140],vision:1271,visual:1314,volum:[1252,1257],vw_tm1:[1119,1122,1126],wai:[1314,1317],wait:[40,41,42,43],want:[43,1271,1314,1317],warn:[59,66,67,68,69,70],warp:[494,495,1135,1136],watch:1313,websit:43,weight:[1119,1121,1122,1124,1126,1127,1128,1252,1261,1262,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1300,1301,1304,1306,1307],weight_initi:[1288,1289,1290,1291,1292,1293,1294,1295,1297,1298],weights_path:[1300,1301],well:[40,41,1024,1065],were:[40,41,1171],what:[43,1271],when:[40,41,42,43,891,894,950,1024,1035,1103,1116,1171,1271,1300,1301,1314,1317],where:[40,41,43,306,457,729,875,885,891,894,905,906,907,909,934,1024,1027,1034,1036,1040,1053,1067,1074,1085,1117,1215,1216,1223,1227,1228],wherea:43,wherebi:[1215,1224],whether:[15,18,19,40,41,42,875,882,905,906,907,948,949,950,968,981,985,989,994,997,999,1000,1010,1014,1015,1016,1023,1024,1026,1031,1032,1044,1047,1052,1056,1063,1065,1068,1072,1073,1078,1098,1105,1114,1115,1119,1122,1123,1124,1125,1126,1127,1128,1130,1167,1168,1169,1170,1171,1215,1216,1217,1219,1223,1224,1227,1228,1244,1245,1252,1260,1271,1277,1278,1288,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309],which:[40,41,42,43,505,865,866,867,868,869,870,871,872,873,891,892,895,896,897,898,899,901,902,903,904,905,906,907,948,949,950,959,960,968,973,974,975,976,979,980,981,982,984,986,990,992,993,994,1000,1005,1010,1014,1023,1024,1027,1030,1039,1041,1043,1044,1045,1047,1057,1058,1059,1060,1066,1067,1075,1076,1077,1084,1085,1086,1087,1089,1092,1093,1100,1104,1114,1116,1118,1119,1122,1123,1124,1126,1127,1128,1130,1132,1133,1135,1137,1142,1145,1152,1157,1171,1215,1219,1220,1221,1225,1226,1227,1228,1229,1230,1231,1234,1236,1237,1238,1239,1240,1241,1242,1244,1249,1252,1263,1264,1271,1277,1278,1288,1289,1290,1291,1292,1293,1294,1295,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1308,1310,1311,1313,1314],whilst:43,whitespac:[40,41,42],who:43,whose:[43,865,869,875,876,879,880,888,891,892,896,897,909,927,934,1024,1030,1035,1234,1235,1236,1237,1238,1240,1242],why:[1271,1272],width:[1135,1140],wiki:1317,wikipedia:1317,window:[1135,1140,1252,1253,1254,1255,1256,1257,1258,1259,1288,1289,1290,1291,1292,1293,1294,1295],wise:[40,41,43,875,877,883,884,887,909,927,928,934,1024,1036,1051,1054,1055,1080,1082,1091,1119,1122,1124,1126,1128,1149,1150,1151,1152,1153,1155,1156,1157,1160,1161,1162,1163,1165,1244,1245,1246,1247,1248,1249,1250,1251],wish:1314,with_bia:[1288,1298],with_cal:[1024,1047],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1119,1129],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1171,with_partial_v:[1300,1301],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,457,484,1024,1100,1171],with_to_kv_fn:[1288,1299],with_to_out_fn:[1288,1299],with_to_q_fn:[1288,1299],within:[15,18,19,43,891,894,1024,1027,1227,1231],without:[40,41,43,1024,1088,1090,1096,1215,1217,1314],wonder:1271,word:[15,16,17,1024,1027,1227,1231,1277,1278],work:[43,1313],worker:[950,959,960,1171],worker_class:[950,959,960,1171],worker_kwarg:1171,would:[43,1244,1249,1271,1314,1317],wrap:[15,40,41,42,43,455,457,489,494,498,502,503,505,1024,1035,1119,1133,1271],wrapper:43,write:[40,41,43,1271,1272,1317],written:[43,1271,1317],ws_new:[1119,1122,1124,1126,1127,1128],x1_i:[875,877,883,884,1024,1051,1152,1160],x2_i:[875,877,883,884,1024,1051,1152,1160],x_feat_dim:[1252,1263],x_i:[875,876,878,879,880,881,882,886,887,888,889],x_in:[1271,1313],x_inv:[1142,1144],x_max:[457,1024,1036],x_min:[457,1024,1036],x_sub:1171,xkk:1317,xkkm1:1317,xkm1km1:1317,xs0:1171,xs_t:1171,year:[1271,1317],yet:[1215,1224,1317],yield:[1024,1116],you:[43,1271,1313,1314,1317],your:[1271,1272,1313,1314,1317],your_awesome_project:1314,yourself:[43,1271],yourslef:43,youtub:43,zero:[40,41,77,214,400,530,665,865,866,869,875,887,891,895,905,906,907,1024,1040,1085,1092,1093,1117,1118,1119,1121,1122,1126,1127,1252,1260,1271,1279,1288,1289,1290,1291,1292,1293,1294,1295,1296,1298,1304,1305,1306,1307],zero_pad:[306,457,593,729,1024],zeros_lik:[138,306,457,593,729,1024],zip:1171,zk_e:1317},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1047,"function":[77,83,88,104,109,111,113,114,116,118,214,220,225,234,240,242,244,245,247,248,400,406,411,427,433,435,437,438,440,442,530,536,541,557,563,565,567,568,570,572,665,671,676,692,698,700,702,703,705,707,865,871,875,890,896,898,900,901,903,905],Ones:1284,Using:1314,abs:[307,594,730,1025],aco:[814,1153],acosh:[815,1154],activ:[198,387,516,657,843,1244,1274],adam:1305,adam_step:1121,adam_upd:1122,algebra:[105,176,235,363,428,498,558,637,693,803,891],all:[119,249,443,573,708,906],all_equ:1026,all_nested_indic:1216,ani:[120,250,444,574,709,907],api:[0,43,75,122,212,252,398,446,528,576,663,711,863],arang:[139,308,458,595,731,1027],arg_nam:1028,argmax:[112,243,436,566,701,899],argmin:[140,459,596,732,1029],args_to_ivi:16,args_to_n:17,argsort:[115,246,439,569,704,902],arithmet:[1,123,253,447,577,712],arrai:[0,3,43,75,121,122,124,141,212,251,252,254,261,309,398,445,446,448,460,528,575,576,578,597,663,710,711,713,733,863,909,1030],array_equ:[310,734,1031],arrays_equ:1032,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[816,1155],asinh:[89,412,542,677,876],assert_supports_inplac:1033,atan2:[818,1157],atan:[817,1156],atanh:[819,1158],attribut:[5,125,255,449,579,714],backend:[43,73],bilinear_resampl:[173,360,495,634,800,1136],binary_cross_entropi:1266,bitwis:[7,126,256,450,580,715],bitwise_and:[90,226,413,543,678,877],broadcast_to:[311,735,1034],builder:51,builtin:[121,251,261,445,575,710,909],builtin_ab:[262,910],builtin_add:[263,911],builtin_and:[264,912],builtin_bool:[265,913],builtin_contain:[266,914],builtin_deepcopi:[267,915],builtin_dir:[268,916],builtin_eq:[269,917],builtin_float:[270,918],builtin_floordiv:[271,919],builtin_g:[272,920],builtin_getattr:[273,921],builtin_getattribut:[274,922],builtin_getitem:[275,923],builtin_gt:[276,924],builtin_int:[277,925],builtin_invert:[278,926],builtin_l:[279,927],builtin_lt:[280,582,717,928],builtin_mul:[281,929],builtin_n:[282,930],builtin_neg:[283,931],builtin_or:[284,932],builtin_po:[285,933],builtin_pow:[286,934],builtin_radd:[287,935],builtin_rand:[288,936],builtin_rfloordiv:[289,937],builtin_rmul:[290,938],builtin_ror:[291,939],builtin_rpow:[292,940],builtin_rsub:[293,941],builtin_rtruediv:[294,942],builtin_rxor:[295,943],builtin_setitem:[296,944],builtin_sub:[297,945],builtin_truediv:[298,946],builtin_xor:[299,947],cache_fn:1035,cast:[142,312,461,598,736,1004],ceil:[91,227,414,544,679,878],choleski:[804,1143],choose_random_framework:61,citat:1271,clear_framework_stack:62,clear_mem_on_dev:[723,966],clip:[313,737,1036],clip_matrix_norm:1037,clip_vector_norm:1038,clone:1186,clone_arrai:1187,clone_it:1188,clone_nest:1189,clonedit:1173,cloneditem:1172,clonednest:1174,closest_valid_dtyp:1005,code:1317,comparison:[9,127,257,451,581,716],compil:[314,462,738,948,949],concaten:[143,315,463,599,739,1039],constant:[76,213,399,529,664,864],constant_pad:[316,600,740,1040],contain:[40,41],container_typ:[741,1041],content:1271,contribut:43,conv1d:[204,390,520,855,1253,1289],conv1d_transpos:[205,391,521,856,1254],conv1dtranspos:1290,conv2d:[206,392,522,659,857,1255,1291],conv2d_transpos:[207,393,523,858,1256],conv2dtranspos:1292,conv3d:[208,394,524,660,859,1257,1293],conv3d_transpos:[209,395,525,860,1258],conv3dtranspos:1294,convers:15,convert:[200,851,1277],convert_dtyp:1006,copy_arrai:[742,1042],copy_nest:1217,core:[130,260,454,585,720,908],cos:[92,415,545,680,879],cosh:[93,416,546,681,820,880,1159],cprint:1316,creat:43,creation:[77,214,400,530,665,865],cross:[317,743,1043],cross_entropi:1267,cumprod:[144,318,464,744,1044],cumsum:[745,1045],current_framework:63,current_framework_str:[746,1046],data:[83,87,220,224,406,410,536,540,671,675,871,874],debug_mod:45,debugg:44,default_devic:967,default_dtyp:1007,default_float_dtyp:1008,default_int_dtyp:1009,default_nod:1190,depthwise_conv2d:[210,396,526,661,861,1259],depthwiseconv2d:1295,design:43,dev:[133,302,588,724,968],dev_clon:969,dev_clone_arrai:970,dev_clone_it:971,dev_clone_nest:972,dev_dist:973,dev_dist_arrai:974,dev_dist_it:975,dev_dist_nest:976,dev_from_str:[134,303,589,725,977],dev_to_str:[135,304,590,726,978],dev_unifi:979,dev_unify_arrai:980,dev_unify_it:981,dev_unify_nest:982,dev_util:983,devclonedit:953,devcloneditem:952,devclonednest:954,devdistit:956,devdistitem:955,devdistnest:957,devic:[20,131,300,455,586,721,950],devmapp:959,devmappermultiproc:960,diagon:[106,236,429,559,694,892],distribute_nest:1191,divid:1160,document:1271,dropout:[1260,1296],dtype:[145,319,465,601,747,1000,1010],dtype_bit:[146,320,466,602,748,1011],dtype_from_str:[147,321,467,603,749,1012],dtype_to_str:[148,322,468,604,750,1013],ecosystem:52,einops_rearrang:1048,einops_reduc:1049,einops_repeat:1050,einsum:[190,378,508,649,835,1235],elementwis:[88,225,411,541,676,875],empti:[78,215,401,531,666,866],equal:[94,417,547,682,1051],erf:[504,821,1161],execute_with_gradi:[170,355,490,629,794,1123],exist:1052,exp:[822,1162],expand_dim:[323,751,1053],finfo:[85,222,408,538,673,872],firstlayersiren:1281,flip:[110,241,434,564,699,897],float_img_to_uint8_img:1137,floor:[324,752,1054],floormod:[325,753,1055],fomaml_step:1168,fork:43,fourier_encod:1056,framework:59,full:[149,326,469,605,754,1057],func:72,gather:[150,327,470,606,755,1058],gather_nd:[151,328,471,607,756,1059],geglu:1275,gelu:[388,517,844,1245,1276],gener:[22,138,306,457,593,729,1024],get_all_arrays_in_memori:1060,get_all_arrays_on_dev:984,get_framework:64,get_min_bas:1061,get_min_denomin:1062,get_num_dim:[757,1063],get_referrers_recurs:1064,glorotuniform:1282,gpu_is_avail:[985,1192],gradient:[24,169,354,489,628,793,1119],gradient_descent_upd:1124,gradient_imag:[174,361,496,635,801,1138],gym:53,handler:59,has_nan:1065,ident:[152,329,472,608,758,1066],iinfo:[86,223,409,539,674,873],imag:[26,172,359,494,633,799,1135],index_nest:1218,indices_wher:[153,330,473,759,1067],initi:1279,inplac:[11,128,258,452,583,718],inplace_arrays_support:1068,inplace_decr:[154,331,474,609,760,1069],inplace_incr:[155,332,475,610,761,1070],inplace_upd:[156,333,476,611,762,1071],inplace_variables_support:1072,inv:[805,1144],invalid_dtyp:1014,is_arrai:[157,334,477,612,763,1073],is_float_dtyp:1015,is_int_dtyp:1016,is_vari:[171,356,491,630,795,1125],isfinit:[95,228,418,548,683,881],isinf:[335,613,764,1074],isnan:[96,229,419,549,684,882],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,862,1313,1314,1317],ivymodul:[201,852],jax:74,keep:43,lamb:1306,lamb_upd:1126,lar:1307,lars_upd:1127,layer:[203,389,519,658,854,1252,1288],layer_norm:1270,layernorm:1303,leaky_relu:[845,1246],less:[97,230,420,550,685,883],less_equ:[98,421,551,686,884],linalg:[28,1142],linear:[105,176,235,363,428,498,558,637,693,803,891,1261,1298],linear_resampl:[158,336,478,614,765,1075],linspac:[159,337,479,615,766,1076],list:43,log1p:[99,422,552,687,885],log2:[100,423,553,688,886],log:[823,1163],logic:[30,180,368,502,641,810,1149],logical_and:[369,811,1150],logical_not:[101,231,424,554,689,887],logical_or:[370,812,1151],logspac:[160,338,480,616,767,1077],loss:1265,lstm:1297,lstm_updat:1262,maml_step:1169,manipul:[109,240,433,563,698,896],map:1219,map_nest_at_index:1220,map_nest_at_indic:1221,match_kwarg:1078,math:[32,181,371,503,642,813,1152],matmul:[339,617,768,1079],matrix_norm:[177,364,499,638,806,1145],maximum:[769,1080],mech:54,memori:55,meshgrid:[340,770,1081],meta:[34,1167],method:[104,234,427,557,692,890],min:[117,441,571,706,904],minimum:[771,1082],model:56,modul:[1300,1301,1313],multi:1171,multi_head_attent:1263,multi_index_nest:1222,multidevcontain:42,multidevit:963,multidevitem:962,multidevnest:964,multiheadattent:1299,multinodeit:1177,multinodeitem:1176,multinodenest:1178,multinomi:[183,373,506,644,828,1228],multiprocess:[772,1083],mxnet:211,nativ:1313,nest:1215,nested_indices_wher:1223,nested_map:1224,network:1313,next:1271,node:[1171,1193],node_dist:1194,node_dist_arrai:1195,node_dist_it:1196,node_str:1197,node_to_str:1198,node_util:1199,nodedistit:1180,nodedistitem:1179,nodedistnest:1181,nodemapp:1183,nodemappermultiproc:1184,norm:[1269,1302],num_arrays_in_memori:1084,num_arrays_on_dev:986,num_cpu_cor:987,num_gpu:[136,988,1200],numpi:397,nutshel:1271,one_hot:[161,481,618,773,1085],ones:[79,216,402,532,667,867,1086],ones_lik:[80,217,403,533,668,868],oper:[1,3,7,9,11,13,43,123,124,126,127,128,129,253,254,256,257,258,259,447,448,450,451,452,453,577,578,580,581,583,584,712,713,715,716,718,719],optim:[1304,1308],optimizer_upd:1128,overview:1271,percent_used_mem_on_dev:989,percent_used_mem_on_nod:1201,pinv:[365,807,1146],portabl:1317,print_all_arrays_in_memori:1087,print_all_arrays_on_dev:990,profil:[132,301,456,587,722,965,1185],pull:43,queue_timeout:1088,randint:[184,374,645,829,1229],random:[36,182,372,505,643,827,1227],random_crop:1139,random_norm:[185,375,646,830,1230],random_uniform:[186,376,647,831,1231],reduce_max:[191,379,509,650,836,1236],reduce_mean:[192,380,510,651,837,1237],reduce_min:[193,381,511,652,838,1238],reduce_prod:[194,382,512,653,839,1239],reduce_std:[383,1240],reduce_sum:[195,384,513,654,840,1241],reduce_var:[196,385,514,655,841,1242],reduct:[38,189,377,507,648,834,1234],reflect:[13,129,259,453,584,719],relu:[846,1247],repeat:[341,774,1089],reptile_step:1170,request:43,reshap:[775,1090],robot:57,round:[342,776,1091],run:1314,scaled_dot_product_attent:1264,scatter_flat:[162,343,482,619,777,1092],scatter_nd:[163,344,483,620,778,1093],search:[111,242,435,565,700,898],seed:[187,832,1232],sequenti:[1310,1311],set:[113,244,437,567,702,900],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:991,set_default_dtyp:1017,set_default_float_dtyp:1018,set_default_int_dtyp:1019,set_default_nod:1202,set_exception_debug_mod:48,set_framework:65,set_min_bas:1094,set_min_denomin:1095,set_nest_at_index:1225,set_nest_at_indic:1226,set_queue_timeout:1096,set_split_factor:[992,1203],set_tmp_dir:1097,set_with_grad:1129,sgd:1309,shape:[779,1098],shape_to_tupl:1099,shuffl:[188,833,1233],sigmoid:[847,1248],signatur:[104,234,427,557,692,890],sin:[102,232,425,555,690,888],sinh:[824,1164],siren:1285,slodget:893,slogdet:[237,430,560,695],softmax:[199,518,848,1249],softplu:[849,1250],sort:[114,245,438,568,703,901],sparse_cross_entropi:1268,split:[164,345,484,621,780,1100],split_factor:[993,1204],split_func_cal:[994,1205],sqrt:[103,233,426,556,691,889],squeez:[165,346,485,622,781,1101],stable_divid:1102,stable_pow:1103,stack:[347,782,1104],stack_imag:[175,362,497,636,802,1140],standard:43,statist:[116,247,440,570,705,903],stop_gradi:[357,492,631,796,1130],str_to_nod:1206,submodul:43,supports_inplac:1105,svd:[107,238,431,561,696,894],swapax:[623,783,1106],tan:[825,1165],tanh:[826,850,1166,1251],tensorflow:527,tile:[348,624,784,1107],tmp_dir:1108,to_dev:[137,305,591,727,995],to_ivi:18,to_ivy_modul:[202,853,1278],to_list:[785,1109],to_n:19,to_nod:1207,to_numpi:[786,1110],to_scalar:[787,1111],todo:43,torch:662,total_mem_on_dev:996,total_mem_on_nod:1208,tpu_is_avail:[592,728,997,1209],train:1313,trainabl:1313,transpos:[166,349,486,788,1112],tree:1271,tril:[81,218,404,534,669,869],try_else_non:1113,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,220,224,406,410,536,540,671,675,871,874],uint8_img_to_float_img:1141,unifi:1210,unify_arrai:1211,unify_it:1212,unify_nest:1213,unset_debug_mod:49,unset_default_devic:998,unset_default_dtyp:1020,unset_default_float_dtyp:1021,unset_default_int_dtyp:1022,unset_framework:71,unset_with_grad:1131,unstack:[167,350,487,625,789,1114],updat:43,used_mem_on_dev:999,used_mem_on_nod:1214,util:[118,248,442,572,707,905],valid_dtyp:1023,value_is_nan:1115,variabl:[358,493,632,797,1132],variable_data:[798,1133],vector_norm:[108,239,432,562,697,895],vector_to_skew_symmetric_matrix:[179,367,501,640,809,1148],verbos:1315,vision:58,where:[351,790,1116,1271],why:1317,with_grad:1134,wrapper:72,write:1314,your:43,zero:[82,219,405,535,670,870,1287],zero_pad:[352,626,791,1117],zeros_lik:[168,353,488,627,792,1118]}})
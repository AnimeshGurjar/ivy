Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/empty","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/ones_like","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/equal","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/less_equal","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sin","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/svd","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/searching_functions/argmax","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/statistical_functions/min","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/empty","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/ones_like","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sin","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/det","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/svd","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/searching_functions/argmax","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/empty","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/ones_like","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/equal","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/less_equal","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sin","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/det","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/svd","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/searching_functions/argmax","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/statistical_functions/min","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/empty","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/ones_like","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/equal","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/less_equal","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sin","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/det","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/svd","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/searching_functions/argmax","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/statistical_functions/min","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/empty","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/ones_like","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/equal","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/less_equal","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sin","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/det","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/svd","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/searching_functions/argmax","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/statistical_functions/min","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/empty","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/ones_like","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/less_equal","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sin","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/svd","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/searching_functions/argmax","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/statistical_functions/min","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/empty.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/ones_like.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/equal.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/less_equal.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sin.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/svd.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/searching_functions/argmax.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/statistical_functions/min.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/empty.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/ones_like.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sin.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/det.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/svd.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/searching_functions/argmax.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/empty.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/ones_like.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/equal.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/less_equal.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sin.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/det.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/svd.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/searching_functions/argmax.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/statistical_functions/min.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/empty.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/ones_like.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/less_equal.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sin.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/det.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/svd.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/searching_functions/argmax.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/statistical_functions/min.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/empty.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/ones_like.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/equal.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/less_equal.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sin.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/det.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/svd.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/searching_functions/argmax.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/statistical_functions/min.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/empty.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/ones_like.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/less_equal.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sin.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/svd.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/searching_functions/argmax.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/statistical_functions/min.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[866,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[400,0,0,"-"],creation_functions:[401,0,0,"-"],data_type_functions:[407,0,0,"-"],data_types:[411,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{empty:[402,2,1,""],ones:[403,2,1,""],ones_like:[404,2,1,""],tril:[405,2,1,""],zeros:[406,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[407,1,1,""],finfo:[409,2,1,""],iinfo:[410,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[407,3,1,""],bits:[407,3,1,""],eps:[407,3,1,""],max:[407,3,1,""],min:[407,3,1,""],smallest_normal:[407,3,1,""]},"ivy.functional.backends.numpy.core":{device:[457,0,0,"-"],general:[459,0,0,"-"],gradients:[491,0,0,"-"],image:[496,0,0,"-"],linear_algebra:[500,0,0,"-"],logic:[504,0,0,"-"],math:[505,0,0,"-"],random:[507,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[458,1,1,""],clear_mem_on_dev:[457,2,1,""],dev:[457,2,1,""],dev_from_str:[457,2,1,""],dev_to_str:[457,2,1,""],gpu_is_available:[457,2,1,""],num_gpus:[457,2,1,""],to_dev:[457,2,1,""],tpu_is_available:[457,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[458,3,1,""],start:[458,3,1,""],stop:[458,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[459,2,1,""],arange:[460,2,1,""],argmin:[461,2,1,""],array:[462,2,1,""],asarray:[459,2,1,""],astype:[459,2,1,""],cast:[463,2,1,""],clip:[459,2,1,""],compile:[464,2,1,""],concatenate:[465,2,1,""],constant_pad:[459,2,1,""],container_types:[459,2,1,""],copy_array:[459,2,1,""],cumprod:[466,2,1,""],current_framework_str:[459,2,1,""],dtype:[467,2,1,""],dtype_bits:[468,2,1,""],dtype_from_str:[469,2,1,""],dtype_to_str:[470,2,1,""],floor:[459,2,1,""],floormod:[459,2,1,""],full:[471,2,1,""],gather:[472,2,1,""],gather_nd:[473,2,1,""],get_num_dims:[459,2,1,""],identity:[474,2,1,""],indices_where:[475,2,1,""],inplace_arrays_supported:[459,2,1,""],inplace_decrement:[476,2,1,""],inplace_increment:[477,2,1,""],inplace_update:[478,2,1,""],inplace_variables_supported:[459,2,1,""],is_array:[479,2,1,""],linear_resample:[480,2,1,""],linspace:[481,2,1,""],logspace:[482,2,1,""],matmul:[459,2,1,""],meshgrid:[459,2,1,""],multiprocessing:[459,2,1,""],one_hot:[483,2,1,""],round:[459,2,1,""],scatter_flat:[484,2,1,""],scatter_nd:[485,2,1,""],shape:[459,2,1,""],split:[486,2,1,""],squeeze:[487,2,1,""],to_list:[459,2,1,""],to_numpy:[459,2,1,""],to_scalar:[459,2,1,""],transpose:[488,2,1,""],unstack:[489,2,1,""],where:[459,2,1,""],zero_pad:[459,2,1,""],zeros_like:[490,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[492,2,1,""],is_variable:[493,2,1,""],stop_gradient:[494,2,1,""],variable:[495,2,1,""],variable_data:[491,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[497,2,1,""],gradient_image:[498,2,1,""],stack_images:[499,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[501,2,1,""],qr:[502,2,1,""],vector_to_skew_symmetric_matrix:[503,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[506,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[508,2,1,""],randint:[507,2,1,""],random_normal:[507,2,1,""],random_uniform:[507,2,1,""],seed:[507,2,1,""],shuffle:[507,2,1,""]},"ivy.functional.ivy":{array_api:[867,0,0,"-"],core:[912,0,0,"-"],nn:[1247,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[868,0,0,"-"],creation_functions:[869,0,0,"-"],data_type_functions:[875,0,0,"-"],data_types:[878,0,0,"-"],elementwise_functions:[879,0,0,"-"],function_and_method_signatures:[894,0,0,"-"],linear_algebra:[895,0,0,"-"],manipulation_functions:[900,0,0,"-"],searching_functions:[902,0,0,"-"],set_functions:[904,0,0,"-"],sorting_functions:[905,0,0,"-"],statistical_functions:[907,0,0,"-"],utility_functions:[909,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[868,4,1,""],nan:[868,4,1,""],pi:[868,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{empty:[870,2,1,""],ones:[871,2,1,""],ones_like:[872,2,1,""],tril:[873,2,1,""],zeros:[874,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[876,2,1,""],iinfo:[877,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[880,2,1,""],bitwise_and:[881,2,1,""],ceil:[882,2,1,""],cos:[883,2,1,""],cosh:[884,2,1,""],isfinite:[885,2,1,""],isnan:[886,2,1,""],less:[887,2,1,""],less_equal:[888,2,1,""],log1p:[889,2,1,""],log2:[890,2,1,""],logical_not:[891,2,1,""],sin:[892,2,1,""],sqrt:[893,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[896,2,1,""],slodget:[897,2,1,""],svd:[898,2,1,""],vector_norm:[899,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[901,2,1,""]},"ivy.functional.ivy.array_api.searching_functions":{argmax:[903,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[906,2,1,""]},"ivy.functional.ivy.array_api.statistical_functions":{min:[908,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[910,2,1,""],any:[911,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[913,0,0,"-"],compilation:[952,0,0,"-"],device:[954,0,0,"-"],dtype:[1004,0,0,"-"],general:[1028,0,0,"-"],gradients:[1123,0,0,"-"],image:[1139,0,0,"-"],linalg:[1146,0,0,"-"],logic:[1153,0,0,"-"],math:[1156,0,0,"-"],meta:[1171,0,0,"-"],multi_node:[1175,0,0,"-"],nest:[1219,0,0,"-"],random:[1231,0,0,"-"],reductions:[1238,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[914,2,1,""],builtin_add:[915,2,1,""],builtin_and:[916,2,1,""],builtin_bool:[917,2,1,""],builtin_contains:[918,2,1,""],builtin_deepcopy:[919,2,1,""],builtin_dir:[920,2,1,""],builtin_eq:[921,2,1,""],builtin_float:[922,2,1,""],builtin_floordiv:[923,2,1,""],builtin_ge:[924,2,1,""],builtin_getattr:[925,2,1,""],builtin_getattribute:[926,2,1,""],builtin_getitem:[927,2,1,""],builtin_gt:[928,2,1,""],builtin_int:[929,2,1,""],builtin_invert:[930,2,1,""],builtin_le:[931,2,1,""],builtin_lt:[932,2,1,""],builtin_mul:[933,2,1,""],builtin_ne:[934,2,1,""],builtin_neg:[935,2,1,""],builtin_or:[936,2,1,""],builtin_pos:[937,2,1,""],builtin_pow:[938,2,1,""],builtin_radd:[939,2,1,""],builtin_rand:[940,2,1,""],builtin_rfloordiv:[941,2,1,""],builtin_rmul:[942,2,1,""],builtin_ror:[943,2,1,""],builtin_rpow:[944,2,1,""],builtin_rsub:[945,2,1,""],builtin_rtruediv:[946,2,1,""],builtin_rxor:[947,2,1,""],builtin_setitem:[948,2,1,""],builtin_sub:[949,2,1,""],builtin_truediv:[950,2,1,""],builtin_xor:[951,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[953,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[954,1,1,""],DevClonedItem:[956,1,1,""],DevClonedIter:[957,1,1,""],DevClonedNest:[958,1,1,""],DevDistItem:[959,1,1,""],DevDistIter:[960,1,1,""],DevDistNest:[961,1,1,""],DevManager:[954,1,1,""],DevMapper:[963,1,1,""],DevMapperMultiProc:[964,1,1,""],MultiDev:[954,1,1,""],MultiDevItem:[966,1,1,""],MultiDevIter:[967,1,1,""],MultiDevNest:[968,1,1,""],Profiler:[969,1,1,""],clear_mem_on_dev:[970,2,1,""],default_device:[971,2,1,""],dev:[972,2,1,""],dev_clone:[973,2,1,""],dev_clone_array:[974,2,1,""],dev_clone_iter:[975,2,1,""],dev_clone_nest:[976,2,1,""],dev_dist:[977,2,1,""],dev_dist_array:[978,2,1,""],dev_dist_iter:[979,2,1,""],dev_dist_nest:[980,2,1,""],dev_from_str:[981,2,1,""],dev_to_str:[982,2,1,""],dev_unify:[983,2,1,""],dev_unify_array:[984,2,1,""],dev_unify_iter:[985,2,1,""],dev_unify_nest:[986,2,1,""],dev_util:[987,2,1,""],get_all_arrays_on_dev:[988,2,1,""],gpu_is_available:[989,2,1,""],num_arrays_on_dev:[990,2,1,""],num_cpu_cores:[991,2,1,""],num_gpus:[992,2,1,""],percent_used_mem_on_dev:[993,2,1,""],print_all_arrays_on_dev:[994,2,1,""],set_default_device:[995,2,1,""],set_split_factor:[996,2,1,""],split_factor:[997,2,1,""],split_func_call:[998,2,1,""],to_dev:[999,2,1,""],total_mem_on_dev:[1000,2,1,""],tpu_is_available:[1001,2,1,""],unset_default_device:[1002,2,1,""],used_mem_on_dev:[1003,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[954,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[954,3,1,""],da_tune_step:[954,3,1,""],dim_size:[954,3,1,""],ds_tune_step:[954,3,1,""],map:[954,3,1,""],repeated_config_check:[954,3,1,""],tune_step:[954,3,1,""],tuned:[954,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[963,3,1,""],map:[963,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[964,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[954,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[966,3,1,""],items:[966,3,1,""],keys:[966,3,1,""],shape:[966,3,1,""],values:[966,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[967,3,1,""],at_dev:[967,3,1,""],at_devs:[967,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[968,3,1,""],at_dev:[968,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[969,3,1,""],start:[969,3,1,""],stop:[969,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[1004,1,1,""],DefaultFloatDtype:[1004,1,1,""],DefaultIntDtype:[1004,1,1,""],astype:[1004,2,1,""],cast:[1008,2,1,""],closest_valid_dtype:[1009,2,1,""],convert_dtype:[1010,2,1,""],default_dtype:[1011,2,1,""],default_float_dtype:[1012,2,1,""],default_int_dtype:[1013,2,1,""],dtype:[1014,2,1,""],dtype_bits:[1015,2,1,""],dtype_from_str:[1016,2,1,""],dtype_to_str:[1017,2,1,""],invalid_dtype:[1018,2,1,""],is_float_dtype:[1019,2,1,""],is_int_dtype:[1020,2,1,""],set_default_dtype:[1021,2,1,""],set_default_float_dtype:[1022,2,1,""],set_default_int_dtype:[1023,2,1,""],unset_default_dtype:[1024,2,1,""],unset_default_float_dtype:[1025,2,1,""],unset_default_int_dtype:[1026,2,1,""],valid_dtype:[1027,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[1004,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[1004,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[1004,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1051,2,1,""],abs:[1029,2,1,""],all_equal:[1030,2,1,""],arange:[1031,2,1,""],arg_names:[1032,2,1,""],argmin:[1033,2,1,""],array:[1034,2,1,""],array_equal:[1035,2,1,""],arrays_equal:[1036,2,1,""],asarray:[1028,2,1,""],assert_supports_inplace:[1037,2,1,""],broadcast_to:[1038,2,1,""],cache_fn:[1039,2,1,""],clip:[1040,2,1,""],clip_matrix_norm:[1041,2,1,""],clip_vector_norm:[1042,2,1,""],concatenate:[1043,2,1,""],constant_pad:[1044,2,1,""],container_types:[1045,2,1,""],copy_array:[1046,2,1,""],cross:[1047,2,1,""],cumprod:[1048,2,1,""],cumsum:[1049,2,1,""],current_framework_str:[1050,2,1,""],einops_rearrange:[1052,2,1,""],einops_reduce:[1053,2,1,""],einops_repeat:[1054,2,1,""],equal:[1055,2,1,""],exists:[1056,2,1,""],expand_dims:[1057,2,1,""],floor:[1058,2,1,""],floormod:[1059,2,1,""],fourier_encode:[1060,2,1,""],full:[1061,2,1,""],gather:[1062,2,1,""],gather_nd:[1063,2,1,""],get_all_arrays_in_memory:[1064,2,1,""],get_min_base:[1065,2,1,""],get_min_denominator:[1066,2,1,""],get_num_dims:[1067,2,1,""],get_referrers_recursive:[1068,2,1,""],has_nans:[1069,2,1,""],identity:[1070,2,1,""],indices_where:[1071,2,1,""],inplace_arrays_supported:[1072,2,1,""],inplace_decrement:[1073,2,1,""],inplace_increment:[1074,2,1,""],inplace_update:[1075,2,1,""],inplace_variables_supported:[1076,2,1,""],is_array:[1077,2,1,""],isinf:[1078,2,1,""],linear_resample:[1079,2,1,""],linspace:[1080,2,1,""],logspace:[1081,2,1,""],match_kwargs:[1082,2,1,""],matmul:[1083,2,1,""],maximum:[1084,2,1,""],meshgrid:[1085,2,1,""],minimum:[1086,2,1,""],multiprocessing:[1087,2,1,""],num_arrays_in_memory:[1088,2,1,""],one_hot:[1089,2,1,""],ones:[1090,2,1,""],print_all_arrays_in_memory:[1091,2,1,""],queue_timeout:[1092,2,1,""],repeat:[1093,2,1,""],reshape:[1094,2,1,""],round:[1095,2,1,""],scatter_flat:[1096,2,1,""],scatter_nd:[1097,2,1,""],set_min_base:[1098,2,1,""],set_min_denominator:[1099,2,1,""],set_queue_timeout:[1100,2,1,""],set_tmp_dir:[1101,2,1,""],shape:[1102,2,1,""],shape_to_tuple:[1103,2,1,""],split:[1104,2,1,""],squeeze:[1105,2,1,""],stable_divide:[1106,2,1,""],stable_pow:[1107,2,1,""],stack:[1108,2,1,""],supports_inplace:[1109,2,1,""],swapaxes:[1110,2,1,""],tile:[1111,2,1,""],tmp_dir:[1112,2,1,""],to_list:[1113,2,1,""],to_numpy:[1114,2,1,""],to_scalar:[1115,2,1,""],transpose:[1116,2,1,""],try_else_none:[1117,2,1,""],unstack:[1118,2,1,""],value_is_nan:[1119,2,1,""],where:[1120,2,1,""],zero_pad:[1121,2,1,""],zeros_like:[1122,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1123,1,1,""],adam_step:[1125,2,1,""],adam_update:[1126,2,1,""],execute_with_gradients:[1127,2,1,""],gradient_descent_update:[1128,2,1,""],is_variable:[1129,2,1,""],lamb_update:[1130,2,1,""],lars_update:[1131,2,1,""],optimizer_update:[1132,2,1,""],set_with_grads:[1133,2,1,""],stop_gradient:[1134,2,1,""],unset_with_grads:[1135,2,1,""],variable:[1136,2,1,""],variable_data:[1137,2,1,""],with_grads:[1138,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1123,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1140,2,1,""],float_img_to_uint8_img:[1141,2,1,""],gradient_image:[1142,2,1,""],random_crop:[1143,2,1,""],stack_images:[1144,2,1,""],uint8_img_to_float_img:[1145,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1147,2,1,""],inv:[1148,2,1,""],matrix_norm:[1149,2,1,""],pinv:[1150,2,1,""],qr:[1151,2,1,""],vector_to_skew_symmetric_matrix:[1152,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1154,2,1,""],logical_or:[1155,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1157,2,1,""],acosh:[1158,2,1,""],asin:[1159,2,1,""],atan2:[1161,2,1,""],atan:[1160,2,1,""],atanh:[1162,2,1,""],cosh:[1163,2,1,""],divide:[1164,2,1,""],erf:[1165,2,1,""],exp:[1166,2,1,""],log:[1167,2,1,""],sinh:[1168,2,1,""],tan:[1169,2,1,""],tanh:[1170,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1172,2,1,""],maml_step:[1173,2,1,""],reptile_step:[1174,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1175,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1220,2,1,""],copy_nest:[1221,2,1,""],index_nest:[1222,2,1,""],map:[1223,2,1,""],map_nest_at_index:[1224,2,1,""],map_nest_at_indices:[1225,2,1,""],multi_index_nest:[1226,2,1,""],nested_indices_where:[1227,2,1,""],nested_map:[1228,2,1,""],set_nest_at_index:[1229,2,1,""],set_nest_at_indices:[1230,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1232,2,1,""],randint:[1233,2,1,""],random_normal:[1234,2,1,""],random_uniform:[1235,2,1,""],seed:[1236,2,1,""],shuffle:[1237,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1239,2,1,""],reduce_max:[1240,2,1,""],reduce_mean:[1241,2,1,""],reduce_min:[1242,2,1,""],reduce_prod:[1243,2,1,""],reduce_std:[1244,2,1,""],reduce_sum:[1245,2,1,""],reduce_var:[1246,2,1,""]},"ivy.functional.ivy.nn":{activations:[1248,0,0,"-"],layers:[1256,0,0,"-"],losses:[1269,0,0,"-"],norms:[1273,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1249,2,1,""],leaky_relu:[1250,2,1,""],relu:[1251,2,1,""],sigmoid:[1252,2,1,""],softmax:[1253,2,1,""],softplus:[1254,2,1,""],tanh:[1255,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1257,2,1,""],conv1d_transpose:[1258,2,1,""],conv2d:[1259,2,1,""],conv2d_transpose:[1260,2,1,""],conv3d:[1261,2,1,""],conv3d_transpose:[1262,2,1,""],depthwise_conv2d:[1263,2,1,""],dropout:[1264,2,1,""],linear:[1265,2,1,""],lstm_update:[1266,2,1,""],multi_head_attention:[1267,2,1,""],scaled_dot_product_attention:[1268,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1270,2,1,""],cross_entropy:[1271,2,1,""],sparse_cross_entropy:[1272,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1274,2,1,""]},"ivy.stateful":{activations:[1278,0,0,"-"],converters:[1281,0,0,"-"],initializers:[1283,0,0,"-"],layers:[1292,0,0,"-"],module:[1304,0,0,"-"],norms:[1306,0,0,"-"],optimizers:[1308,0,0,"-"],sequential:[1314,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1279,1,1,""],GELU:[1280,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1279,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1280,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1282,2,1,""]},"ivy.stateful.initializers":{Constant:[1283,1,1,""],FirstLayerSiren:[1285,1,1,""],GlorotUniform:[1286,1,1,""],KaimingNormal:[1283,1,1,""],Ones:[1288,1,1,""],Siren:[1289,1,1,""],Uniform:[1283,1,1,""],Zeros:[1291,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1283,3,1,""],create_variables:[1283,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1285,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1286,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1283,3,1,""],create_variables:[1283,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1288,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1289,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1283,3,1,""],create_variables:[1283,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1291,3,1,""]},"ivy.stateful.layers":{Conv1D:[1293,1,1,""],Conv1DTranspose:[1294,1,1,""],Conv2D:[1295,1,1,""],Conv2DTranspose:[1296,1,1,""],Conv3D:[1297,1,1,""],Conv3DTranspose:[1298,1,1,""],DepthwiseConv2D:[1299,1,1,""],Dropout:[1300,1,1,""],LSTM:[1301,1,1,""],Linear:[1302,1,1,""],MultiHeadAttention:[1303,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1293,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1294,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1295,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1296,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1297,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1298,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1299,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1300,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1301,3,1,""],get_initial_state:[1301,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1302,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1303,3,1,""]},"ivy.stateful.module":{Module:[1305,1,1,""]},"ivy.stateful.module.Module":{__init__:[1305,3,1,""],build:[1305,3,1,""],build_mode:[1305,3,1,""],built:[1305,3,1,""],check_submod_rets:[1305,3,1,""],get_mod_key:[1305,3,1,""],mod_depth:[1305,3,1,""],mod_height:[1305,3,1,""],mod_with_top_mod_key_chain:[1305,3,1,""],save_weights:[1305,3,1,""],show_mod_in_top_mod:[1305,3,1,""],show_structure:[1305,3,1,""],show_v_in_top_v:[1305,3,1,""],sub_mods:[1305,3,1,""],track_submod_call_order:[1305,3,1,""],track_submod_rets:[1305,3,1,""],v_with_top_v_key_chains:[1305,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1307,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1307,3,1,""]},"ivy.stateful.optimizers":{Adam:[1309,1,1,""],LAMB:[1310,1,1,""],LARS:[1311,1,1,""],Optimizer:[1312,1,1,""],SGD:[1313,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1309,3,1,""],set_state:[1309,3,1,""],state:[1309,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1310,3,1,""],set_state:[1310,3,1,""],state:[1310,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1311,3,1,""],set_state:[1311,3,1,""],state:[1311,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1312,3,1,""],set_state:[1312,3,1,""],step:[1312,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1313,3,1,""],set_state:[1313,3,1,""],state:[1313,3,1,""]},"ivy.stateful.sequential":{Sequential:[1315,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1315,3,1,""]},"ivy.verbosity":{cprint:[1320,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1319,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1308,1309,1310],"02886":1275,"100":[1175,1275,1317],"141592653589793":868,"2021":1275,"2102":1275,"360":[1156,1169],"718281828459045":868,"754":[868,875,876,879,893],"999":[1123,1125,1126,1130,1308,1309,1310],"abstract":[954,969,1275,1308,1312],"boolean":[40,41,879,881,891,913,931,954,989,1001,1004,1018,1027,1028,1030,1035,1036,1069,1071,1072,1076,1077,1078,1109,1119,1123,1129,1153,1154,1155,1171,1172,1173,1175],"break":43,"case":[15,18,19,40,41,42,43,879,880,882,883,884,890,892,893,954,993,1000,1003,1028,1031,1094,1096,1097,1146,1149,1151,1175,1219,1222,1226,1275,1292,1303,1304,1305,1308,1312,1321],"catch":[1028,1051],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,407,457,458,875,877,954,956,957,958,959,960,961,963,964,966,967,968,969,981,982,1004,1028,1032,1082,1123,1137,1175,1219,1221,1228,1269,1271,1272,1275,1278,1279,1280,1281,1282,1283,1285,1286,1288,1289,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1317,1321],"default":[15,18,19,40,41,42,43,869,870,871,872,873,874,895,896,899,900,901,902,903,905,906,907,908,909,910,911,952,953,954,963,964,971,972,976,977,978,979,980,983,984,985,986,993,996,997,998,1003,1004,1011,1012,1013,1014,1028,1030,1031,1033,1041,1042,1043,1044,1047,1048,1049,1060,1061,1062,1067,1069,1070,1079,1081,1082,1085,1087,1090,1092,1093,1096,1097,1100,1102,1104,1106,1107,1116,1118,1119,1123,1126,1128,1129,1130,1131,1132,1134,1138,1146,1149,1151,1171,1172,1173,1174,1175,1219,1220,1221,1223,1227,1228,1231,1232,1234,1235,1238,1240,1241,1242,1243,1244,1245,1246,1248,1249,1253,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1281,1282,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315],"final":[40,41,43,1028,1060,1080,1081,1175,1292,1303,1318],"float":[40,41,42,43,868,869,870,871,874,875,876,879,880,882,883,884,890,892,893,895,899,913,931,932,938,954,963,964,987,993,996,1000,1003,1004,1012,1019,1028,1031,1041,1042,1044,1060,1061,1065,1066,1081,1098,1099,1100,1106,1107,1123,1125,1126,1128,1130,1131,1132,1139,1141,1145,1156,1164,1171,1172,1173,1174,1175,1231,1234,1235,1248,1250,1256,1264,1267,1268,1269,1270,1271,1272,1273,1274,1292,1300,1303,1306,1307,1308,1309,1310,1311,1312,1313],"function":[15,40,41,43,402,403,404,405,406,409,410,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,868,870,871,872,873,874,876,877,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,897,898,899,901,903,906,908,910,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,956,957,958,959,960,961,963,964,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1278,1279,1280,1308,1311,1312,1313,1317,1318,1321],"import":[43,1275,1318,1321],"int":[40,41,42,43,401,402,403,405,406,507,869,870,871,873,874,875,876,877,895,896,899,900,901,902,903,905,906,907,908,909,910,911,913,931,932,938,952,953,954,976,977,978,979,980,983,984,985,986,991,992,998,1004,1013,1015,1020,1028,1033,1038,1043,1044,1048,1049,1052,1053,1054,1057,1060,1061,1062,1067,1070,1079,1080,1081,1089,1090,1093,1094,1096,1097,1102,1103,1104,1105,1108,1110,1111,1116,1118,1121,1123,1125,1126,1130,1139,1143,1144,1146,1149,1171,1172,1173,1174,1175,1219,1228,1231,1232,1233,1235,1236,1238,1240,1241,1242,1243,1244,1245,1246,1248,1253,1256,1257,1258,1259,1260,1261,1262,1263,1267,1269,1271,1272,1273,1274,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1306,1307],"long":[43,1256,1266],"new":[40,41,43,507,869,870,871,872,874,879,889,1004,1008,1028,1029,1038,1052,1053,1054,1057,1060,1061,1062,1063,1090,1094,1096,1097,1098,1099,1106,1107,1108,1123,1126,1128,1130,1131,1132,1139,1141,1143,1145,1156,1158,1162,1163,1168,1170,1175,1219,1229,1230,1231,1232,1273,1274,1275,1281,1282,1292,1302,1306,1307,1308,1309,1310,1311,1312,1313,1318,1321],"public":[1028,1045],"return":[15,16,17,18,19,40,41,42,43,507,869,870,871,872,873,874,879,880,881,882,883,884,885,886,887,888,890,891,892,893,895,896,897,898,899,902,903,905,906,907,908,909,910,911,913,931,932,938,952,953,954,963,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,989,990,992,993,997,998,999,1000,1001,1003,1004,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1027,1028,1029,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1067,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1093,1094,1095,1096,1097,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1134,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1219,1220,1221,1223,1227,1228,1231,1232,1233,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1281,1282,1292,1301,1302,1308,1312,1317,1318,1321],"short":[43,1256,1266,1275,1321],"static":[40,41,952,953],"super":1175,"true":[40,41,42,459,464,491,494,507,508,879,885,886,891,895,898,899,902,903,905,906,909,910,911,952,953,954,1028,1030,1037,1039,1056,1060,1069,1071,1119,1120,1123,1126,1128,1129,1130,1131,1132,1134,1146,1149,1171,1172,1173,1174,1175,1219,1220,1227,1231,1232,1238,1240,1241,1242,1243,1244,1245,1246,1248,1249,1256,1264,1269,1270,1271,1272,1292,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313],"try":[40,41,1028,1117,1175],"var":[40,41,1171,1172,1173,1321],"while":[40,41,42,879,891,1175],AND:[879,881,909,910,1153,1154],But:1321,For:[43,879,880,882,883,884,890,892,893,1028,1031,1040,1108,1123,1129,1137,1146,1151,1156,1157,1275,1281,1282,1318,1321],Its:[1156,1160],NOT:[879,891],Not:868,One:[40,41,43,1028,1053,1094,1231,1233,1321],Ones:[1275,1283],PRs:43,Such:[1028,1045],That:1318,The:[15,16,17,18,19,40,41,42,43,869,873,879,880,881,882,883,884,885,886,887,888,890,891,892,893,895,896,897,898,899,900,901,905,906,909,910,911,913,931,932,938,952,953,954,963,964,970,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,993,996,997,998,999,1000,1003,1004,1008,1009,1010,1015,1016,1017,1018,1027,1028,1031,1034,1035,1038,1039,1041,1042,1043,1044,1046,1047,1050,1051,1055,1060,1062,1063,1070,1073,1074,1075,1077,1079,1081,1083,1085,1087,1090,1093,1094,1096,1097,1098,1099,1100,1103,1104,1105,1106,1107,1108,1111,1119,1122,1123,1125,1126,1128,1130,1131,1132,1134,1137,1139,1141,1143,1145,1146,1149,1151,1156,1157,1159,1160,1164,1165,1166,1167,1169,1171,1172,1173,1174,1175,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1234,1235,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1275,1281,1282,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302,1303,1304,1305,1306,1307,1308,1310,1311,1312,1318,1321],There:[43,1275,1318],These:[43,1275],Use:43,Used:[1219,1220,1227,1304,1305],Using:[1275,1276,1321],With:[40,41,902,903,1146,1149,1238,1240,1241,1242,1243,1244,1245,1246,1275,1317,1321],__array__:[1028,1034],__call__:[1292,1303,1304,1305],__del__:1175,__dict__:[1175,1318],__enter__:1175,__exit__:1175,__getitem__:1175,__getstate__:1175,__init__:[40,41,42,43,59,60,84,221,407,408,457,458,539,675,954,955,962,963,964,965,966,967,968,969,1004,1005,1006,1007,1123,1124,1175,1179,1186,1275,1278,1279,1280,1283,1284,1285,1286,1287,1288,1289,1290,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1317,1321],__iter__:1175,__len__:1175,__next__:1175,__pow__:43,__repr__:1175,_assign_vari:1317,_axi:1175,_base:[1219,1220,1227],_compute_node_da_ratio:1175,_compute_node_strs_da:1175,_concat_unify_arrai:1175,_counter:1175,_cur_framework:[43,1175],_da_direct:1175,_da_directions_flip:1175,_da_step_tim:1175,_da_tim:1175,_da_tune_count:1175,_data:1175,_delta_da_dim_s:1175,_delta_sf:1175,_dict:1175,_dim_siz:1175,_first_da_tune_step:1175,_first_ns_tune_step:1175,_fn:1175,_forward:[1275,1317],_get_kalman_param:1321,_get_prior:1321,_get_some_model:1321,_handle_flat_arrays_in_out:43,_index:[1219,1220,1227],_input_queu:1175,_length:1175,_max_depth:1175,_max_node_dim_step_ratio:1175,_max_node_dim_step_s:1175,_max_split_factor_step_s:1175,_mean_unify_arrai:1175,_min_bas:[1028,1107,1273,1274,1306,1307],_min_denomin:[1028,1106],_min_node_dim_s:1175,_min_sf_tune_step:1175,_min_unit_node_tune_step:1175,_model:1321,_native_wrapp:43,_node_mapp:1175,_node_percent_mem:1175,_node_str:1175,_node_str_da_ratio:1175,_node_strs_da:1175,_node_strs_kei:1175,_node_strs_n:1175,_node_util:1175,_ns_step_tim:1175,_ns_time:1175,_ns_tune_count:1175,_num_nod:1175,_num_work:1175,_observed_config:1175,_output_queu:1175,_paramet:1317,_percent_mem_inc_per_sf:1175,_percent_mem_inc_per_unit_da_dim:1175,_percent_util_inc_per_unit_da_dim:1175,_ret_fn:1175,_safety_factor:1175,_save_dir:1175,_shift_da_split:1175,_shift_n:1175,_slice:1175,_step:[1308,1312],_sum_unify_arrai:1175,_timeout:1175,_tune:1175,_tune_da:1175,_tune_n:1175,_tune_step:1175,_unit_da_tune_count:1175,_unroll_step:1321,_with_node_mappig:1175,_worker:1175,_worker_class:1175,_worker_fn:1175,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,954,963,969,1175,1304,1305,1308,1312],abil:1275,abl:[40,41],about:[875,876,877],abov:[43,869,873,895,896,1231,1233],above_height:[40,41],abs:[307,459,596,733,895,899,1028,1175],absolut:[40,41,895,897,1028,1029],abstractmethod:1175,accept:[15,43,879,891,1275],access:[40,41,43,1318],accord:[40,41,875,876,1028,1044,1062,1096,1097,1116,1121],accordingli:[895,899,909,910,911],accur:[59,407,457,458,954,966,967,968,969,1004,1123,1283,1285,1286,1288,1289,1291],aco:[817,1156],acosh:[817,1156],across:[40,41,954,963,964,973,974,976,977,978,979,980,986,996,997,1028,1033,1035,1036,1175,1219,1223],act:43,activ:[1249,1250,1251,1252,1253,1254,1255,1275,1279,1280],actual:1318,adam:[1123,1125,1126,1130,1275,1308,1310,1317],adam_step:1123,adam_upd:1123,adapt:[1123,1131,1308,1311],add:[40,41,43,1175,1269,1270,1271,1272,1273,1274,1275,1306,1307,1318],added:[43,1028,1106,1107,1314,1315],adding:[43,1028,1038],addit:[40,41,43,1028,1052,1053,1054,1273,1274,1292,1302],addition:43,address:43,adher:43,adjac:[1028,1031],adopt:[43,1028,1045],affect:[1028,1031],affin:[1306,1307],after:[879,893,1028,1079,1123,1126,1127,1128,1130,1131,1132,1139,1140,1273,1274,1308,1309,1310,1311,1312,1313,1321],after_1:[1028,1044,1121],after_n:[1028,1044,1121],again:43,against:[40,41,902,903,1146,1149,1238,1240,1241,1242,1243,1244,1245,1246],agnost:[43,1275,1317,1318],aim:1321,algebra:1146,algorithm:[1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299,1321],align:[40,41,43,1028,1038],aliv:[954,988,990,994,1028,1064,1088,1091],all:[15,16,17,18,19,40,41,43,118,249,444,575,711,869,873,895,899,900,901,909,952,953,954,963,988,994,1028,1029,1030,1035,1036,1045,1064,1070,1091,1105,1146,1151,1171,1172,1173,1174,1175,1219,1220,1221,1227,1228,1231,1232,1235,1238,1240,1241,1242,1243,1244,1245,1246,1256,1266,1275,1318,1321],all_depth:[40,41],all_equ:1028,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1219,all_tru:[40,41],alloc:[43,869,873,954,1175],allow:[1028,1080,1081,1082,1304,1305],allow_dupl:[1028,1082],alon:[954,993,1003,1175,1275],along:[40,41,43,507,895,899,900,901,902,903,905,906,907,908,909,910,911,954,977,978,979,980,983,984,985,986,998,1028,1043,1048,1049,1062,1079,1080,1081,1093,1104,1108,1111,1118,1146,1149,1171,1172,1173,1174,1175,1231,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246],alongsid:[1317,1318],alpha:[1248,1250],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,879,882,954,1175],also:[40,41,43,1028,1031,1123,1126,1171,1172,1173,1174,1219,1220,1221,1227,1228,1256,1265,1275,1292,1302,1317],altern:1317,alwai:[40,41,43,1123,1129,1134],among:[40,41],amount:[954,1000,1175,1275],angl:[879,884,1156,1157,1161],ani:[15,16,17,18,19,40,41,43,118,249,444,575,711,879,888,909,952,953,954,956,959,963,964,966,975,976,979,980,985,1028,1030,1031,1034,1051,1052,1053,1054,1055,1056,1069,1077,1082,1106,1107,1123,1127,1175,1219,1220,1223,1227,1228,1229,1230,1231,1235,1275,1281,1282,1304,1305,1317,1318,1321],anoth:[40,41,43,1004,1010,1275],another_backend:43,anyth:[43,1321],anywai:43,apart:43,api:[1275,1276],appear:[43,1028,1057],append:[40,41,895,896,1175],appli:[15,18,19,40,41,895,898,1028,1052,1053,1054,1123,1130,1131,1153,1154,1155,1171,1172,1173,1219,1223,1226,1228,1248,1249,1250,1251,1252,1253,1254,1255,1256,1265,1267,1268,1273,1274,1275,1278,1279,1280,1306,1307],applic:[1219,1223,1228,1256,1267,1268,1275,1321],appropri:[902,903],approxim:[43,879,880,883,884,889,890,892,913,938,1248,1249],arang:[138,307,459,507,596,733,1028,1080,1081],arbitrari:[40,41,954,983,984,986,1175],arc:[1156,1161],arcco:[1156,1157],arctan:[1156,1160],area:[879,880,1275],arg:[15,16,17,40,41,43,59,63,954,963,976,980,986,998,1028,1052,1053,1054,1097,1175,1281,1282,1304,1305],arg_nam:1028,arg_stateful_idx:[1304,1305],argmax:[111,243,437,568,704,902],argmin:[138,459,596,733,1028],args_clon:1175,args_dist:1175,args_to_ivi:[15,1275],args_to_n:[15,1275],args_uni:1175,argsort:[114,246,440,571,707,905],argument:[15,16,17,18,19,40,41,42,43,59,63,952,953,954,963,964,976,980,986,1028,1031,1032,1039,1051,1082,1097,1156,1157,1175,1219,1223,1281,1282,1304,1305],aris:[1275,1321],arithmet:[43,1238,1241,1244,1246],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:507,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,138,307,459,507,596,733,869,870,871,872,873,874,875,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,897,898,899,900,901,902,903,905,906,907,908,909,910,911,931,932,938,954,972,973,974,977,978,979,980,983,984,985,986,988,990,994,998,999,1004,1008,1014,1019,1020,1028,1029,1030,1031,1033,1035,1036,1037,1038,1040,1041,1042,1043,1044,1046,1047,1048,1049,1052,1053,1054,1055,1057,1058,1059,1060,1061,1062,1063,1064,1067,1069,1070,1071,1072,1073,1074,1075,1077,1078,1079,1080,1081,1083,1084,1085,1086,1088,1089,1090,1091,1093,1094,1095,1096,1097,1102,1104,1105,1108,1109,1110,1111,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1125,1126,1129,1130,1134,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1175,1219,1221,1228,1231,1232,1233,1234,1235,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1292,1300,1301,1303,1308,1312,1317,1318],arrang:[1028,1052],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,401,402,403,404,405,406,407,409,410,868,869,870,871,872,873,874,875,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,897,898,899,900,901,902,903,905,906,907,908,909,910,911],array_api_methods_to_test:43,array_builtin:[43,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951],array_equ:[307,733,1028],array_lik:[507,1028,1034],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,1028],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1275],arraywithgener:[22,1275],arraywithgradi:[24,1275],arraywithimag:[26,1275],arraywithlinalg:[28,1275],arraywithlog:[30,1275],arraywithmath:[32,1275],arraywithmeta:[34,1275],arraywithrandom:[36,1275],arraywithreduct:[38,1275],arriv:[40,41,42],articl:1275,arxiv:1275,as_arrai:[40,41,1028,1067,1102],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[457,459,467,954,972,1004,1011,1012,1013,1014],as_tensor:459,as_vari:[40,41],as_zero:[40,41],asarrai:[459,1028],ascend:[905,906],asin:[817,1156],asinh:[88,412,543,679,879],aspect:[1139,1144],assert:[40,41,1028,1037,1175],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:1028,associ:[43,1146,1152],assum:[879,883,892,1318,1321],astyp:[459,1004],asynchron:[40,41,42],at_dev:[40,42,954,967,968],at_kei:[40,41],at_key_chain:[40,41],at_nod:1175,atan2:[817,1156],atan:[817,1156],atanh:[817,1156],attent:[43,1256,1267,1268,1292,1303],attribut:[0,6,40,41,875,876,877,1028,1122],audienc:[1275,1318],author:1275,automat:43,avail:[40,41,43,954,989,991,992,1001,1028,1053,1175],averag:[1123,1125,1126,1130,1171,1172,1173,1238,1241],average_across_step:[1171,1172,1173],avoid:[43,954,1175,1318],axes:[40,41,43,459,488,500,501,895,899,900,901,902,903,907,908,909,910,911,954,998,1028,1033,1044,1057,1110,1116,1121,1146,1149,1175,1238,1240,1241,1242,1243,1244,1245,1246],axes_length:[40,41,1028,1052,1053,1054],axi:[40,41,459,461,465,466,472,480,481,482,486,487,489,895,896,899,900,901,902,903,905,906,907,908,909,910,911,954,956,959,966,977,978,979,980,983,984,985,986,998,1028,1033,1043,1044,1047,1048,1049,1057,1062,1079,1080,1081,1093,1104,1105,1108,1110,1111,1118,1121,1175,1231,1237,1238,1240,1241,1242,1243,1244,1245,1246,1248,1253,1269,1271,1272],axis0:[40,41,1028,1110],axis1:[40,41,895,896,1028,1110],axis2:[895,896],back:[43,1304,1305,1308,1312],backend:[15,17,19,40,41,401,402,403,404,405,406,407,409,410,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,505,506,507,508,954,989,992,1001,1004,1010,1018,1027,1028,1072,1076,1123,1126,1128,1130,1131,1132,1137,1175,1275,1276,1281,1282,1308,1309,1310,1311,1312,1313,1317,1318,1321],backend_nam:43,background:[1275,1318],backprop:1321,backward:[909,910,911,1317],band:[1028,1060],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,407,457,458,459,482,879,889,890,913,938,954,956,957,958,959,960,961,963,964,966,967,968,969,1004,1028,1065,1081,1098,1107,1123,1175,1238,1239,1275,1278,1279,1280,1283,1285,1286,1288,1289,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1321],basi:43,batch:[40,41,895,898,899,954,996,997,1028,1060,1070,1139,1143,1171,1172,1173,1174,1175,1256,1265,1273,1274,1306,1307],batch_shap:[459,474,1028,1070,1089,1139,1140,1141,1142,1143,1144,1145,1146,1152,1231,1232,1256,1266,1267,1268,1292,1301],batch_siz:[507,508,1175,1231,1232,1256,1257,1258,1259,1260,1261,1262,1263],bayesian:1321,becaus:[43,1028,1031],becom:[43,1028,1040,1156,1161,1321],been:[1028,1052,1053,1054,1231,1232],befor:[40,41,43,954,998,1171,1172,1173,1175,1219,1228,1238,1240,1241,1242,1243,1244,1245,1246,1256,1267,1268,1321],before_1:[1028,1044,1121],before_n:[1028,1044,1121],begin:[1219,1220,1227,1318],behaviour:[43,1321],behind:[1123,1126,1128,1130,1131,1132,1275],being:[40,41,43,1028,1031,1092,1100,1175],believ:43,belong:[40,41],below:[43,869,873,895,896,1275,1318,1321],below_depth:[40,41],benefit:1275,bernoul:[1256,1264,1292,1300],best:[43,1028,1082,1275],beta1:[1123,1125,1126,1130,1308,1309,1310],beta2:[1123,1125,1126,1130,1308,1309,1310],beta:[1273,1274],between:[40,41,42,875,876,1028,1031,1146,1151,1219,1223,1231,1233,1269,1271,1272,1308,1310],bia:[1256,1265,1266,1292,1293,1294,1295,1296,1297,1298,1299,1302],bias_initi:[1292,1293,1294,1295,1296,1297,1298,1299,1302],bilinear:[1139,1140],bilinear_resampl:[172,360,496,636,803,1139],bilinearli:[1139,1140],binari:[879,881,1269,1270],binary_cross_entropi:1269,bit:[407,875,876,877,1004,1015,1139,1141,1145,1275],bitwis:[879,881],bitwise_and:[88,225,412,543,679,879],bitwise_oper:[0,7,8],block:[1275,1318],bool:[15,18,19,40,41,42,43,879,885,886,887,888,891,895,898,899,902,903,905,906,907,908,909,910,911,913,932,952,953,954,972,985,989,993,998,1001,1003,1004,1014,1028,1030,1035,1036,1048,1051,1055,1056,1060,1067,1069,1077,1082,1102,1104,1118,1119,1120,1123,1126,1127,1128,1129,1130,1131,1132,1134,1146,1149,1171,1172,1173,1174,1175,1219,1220,1221,1223,1227,1228,1231,1232,1238,1240,1241,1242,1243,1244,1245,1246,1248,1249,1256,1264,1281,1282,1292,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313],both:[43,1028,1047],bottom:1275,boundari:[40,41,1231,1235],branch:[43,952,953],brittl:43,broadcast:[40,41,43,879,881,887,888,895,899,902,903,909,910,911,913,931,932,938,1028,1038,1055,1084,1085,1086,1093,1146,1149,1156,1161,1164,1238,1240,1241,1242,1243,1244,1245,1246],broadcast_to:[307,733,1028],build:[1175,1275,1292,1303,1304,1305],build_mod:[1292,1303,1304,1305],builder:[43,1275],built:[954,1028,1031,1175,1292,1303,1304,1305],builtin:43,builtin_ab:[262,913],builtin_add:[262,913],builtin_and:[262,913],builtin_bool:[262,913],builtin_contain:[262,913],builtin_deepcopi:[262,913],builtin_dir:[262,913],builtin_eq:[262,913],builtin_float:[262,913],builtin_floordiv:[262,913],builtin_g:[262,913],builtin_getattr:[262,913],builtin_getattribut:[262,913],builtin_getitem:[262,913],builtin_gt:[262,913],builtin_int:[262,913],builtin_invert:[262,913],builtin_l:[262,913],builtin_lt:[262,584,720,913],builtin_mul:[262,913],builtin_n:[262,913],builtin_neg:[262,913],builtin_or:[262,913],builtin_po:[262,913],builtin_pow:[43,262,913],builtin_radd:[262,913],builtin_rand:[262,913],builtin_rfloordiv:[262,913],builtin_rmul:[262,913],builtin_ror:[262,913],builtin_rpow:[262,913],builtin_rsub:[262,913],builtin_rtruediv:[262,913],builtin_rxor:[262,913],builtin_setitem:[262,913],builtin_some_op:43,builtin_sub:[262,913],builtin_truediv:[262,913],builtin_xor:[262,913],busi:43,bypass:1318,cach:[954,970,1028,1039],cache_fn:1028,calcul:[40,41,42,43,879,880,883,884,889,890,892,893,913,931,938,1156,1164],call:[43,954,998,1028,1092,1100,1117,1123,1127,1175,1219,1220,1223,1227,1292,1303,1304,1305,1308,1312,1318,1321],callabl:[40,41,952,953,954,963,964,998,1028,1039,1051,1053,1082,1117,1171,1172,1173,1174,1175,1219,1223,1224,1225,1227,1228,1256,1267],can:[43,954,996,997,998,1028,1094,1139,1141,1175,1275,1317,1318,1321],cancel_join_thread:1175,cannot:43,captur:1275,cast:[40,41,138,307,459,596,733,1004,1028,1043,1139,1141,1145],catch_except:[1028,1051],categori:43,caus:43,ceil:[88,225,412,543,679,879,1028,1031],cell:[1256,1266,1292,1301],certain:[40,41,1028,1031,1080,1081],chain:[40,41,1171,1172,1173,1314,1315],chang:[43,954,1028,1094,1175,1219,1221,1228,1275,1317],channel:[1028,1060,1139,1141,1142,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302],check:[15,16,17,18,19,40,41,43,954,993,1003,1004,1009,1018,1027,1028,1037,1056,1069,1077,1109,1119,1123,1129,1175,1219,1220,1227,1275,1318],check_nest:[1219,1227],check_shap:[40,41],check_submod_ret:[1304,1305],check_typ:[40,41],choic:[1275,1318],choleski:[807,1146],choos:[879,891,1028,1120,1146,1151,1156,1161,1275],choose_random_framework:59,chosen:[40,41,1028,1031,1120],chunk:[954,996,997,998,1175],chunk_siz:[954,998,1175],circl:[1156,1157,1159],clark:1275,clear:[43,954,970,1175],clear_framework_stack:59,clear_mem_on_dev:[457,725,954],click:1275,clip:[40,41,307,459,733,1028,1041,1042,1084,1086,1275],clip_matrix_norm:1028,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,1028],clipped_delta:1175,clone:[40,41,954,973,974,975,976,1175],clone_arrai:1175,clone_it:1175,clone_nest:1175,clonedit:1175,cloneditem:1175,clonednest:1175,close:[43,1139,1144,1156,1159,1175,1321],closest:[879,882,1004,1009],closest_valid_dtyp:1004,code:[40,41,42,43,507,1275,1276,1317,1318],codebas:[954,996,997,1175,1275,1318,1321],codomain:[879,880,883,884,890,892,893],colab:1275,collect:[15,40,41,457,459,491,496,500,504,505,507,913,952,954,1004,1028,1123,1139,1146,1153,1156,1175,1219,1231,1238,1248,1256,1269,1273,1278,1292,1306,1308],color:[40,41,42,1319,1320],column:[1028,1070],combin:[40,41,42,1139,1144,1275,1321],combined_batch_s:1175,come:1318,command:1275,comment:43,commit:1321,common:[40,41,43,1156,1161],common_key_chain:[40,41],commun:[43,1275,1318],communuti:43,compar:[40,41,905,906,913,931,1028,1030,1035,1036],comparison_oper:[0,9,10],compat:[43,879,881,887,888,895,899,909,910,911,913,931,932,938,1028,1055,1094,1156,1164,1275,1321],compil:[307,459,733,1304,1305,1308,1309,1310,1311,1312,1313],compile_on_next_step:[1304,1305,1308,1309,1310,1311,1312,1313],complet:[40,41,43,1146,1151,1175],complex:[1318,1321],compliant:[879,891],compon:[1028,1047],composit:43,comput:[40,41,879,881,887,888,891,895,897,899,907,908,913,932,954,998,1028,1041,1042,1048,1049,1055,1083,1123,1125,1126,1127,1128,1130,1131,1132,1134,1136,1139,1142,1146,1147,1148,1149,1150,1151,1153,1154,1155,1156,1157,1159,1160,1161,1165,1166,1167,1169,1219,1223,1238,1239,1240,1241,1242,1243,1244,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1265,1267,1269,1270,1271,1272],concat:[40,41,954,983,984,985,986,998,1028,1060,1175],concaten:[40,41,138,307,459,596,733,1028,1060,1175,1275],concatten:[40,41,954,983,984,985,986,998,1175],condit:[459,952,953,1028,1120,1219,1227],conditon:[1219,1227],config:[40,41,1175],config_list:1175,configur:[40,41],conflict:43,conform:43,conjunct:1318,connect:[1292,1302,1303],consid:[40,41,879,891,1146,1151,1317,1321],consist:[40,41,954,986,1175,1238,1239,1304,1305,1318],constant:[954,963,964,1028,1044,1175,1219,1223,1269,1270,1271,1272,1273,1274,1283,1284,1288,1291,1304,1305,1306,1307,1318],constant_kwarg:1175,constant_pad:[307,459,596,733,1028],constitu:[40,41],construct:[1028,1111,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1317],constructor:[40,41,42,1028,1032,1314,1315],consum:[954,1175],cont_feat_dim:[1256,1267],contaienr:[40,41],contain:[15,18,19,42,43,869,871,873,874,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,899,907,908,909,910,911,913,931,932,938,954,973,977,998,1004,1008,1028,1029,1033,1040,1041,1042,1045,1055,1069,1084,1086,1095,1106,1107,1123,1125,1126,1128,1130,1131,1132,1156,1164,1171,1172,1173,1174,1175,1231,1232,1238,1240,1241,1242,1244,1246,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[459,733,1028],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[459,1028,1087,1256,1267,1292,1303],context_dim:[1292,1303],contextmanag:[59,60],continu:[43,1175,1318],contract:[40,41,1238,1239],contribut:[1275,1276],contributor:[43,1275],control:1275,conv1d:[203,390,521,858,1256,1275,1292],conv1d_transpos:[203,390,521,858,1256],conv1dtranspos:[1275,1292],conv2d:[203,390,521,661,858,1256,1275,1292],conv2d_transpos:[203,390,521,858,1256],conv2dtranspos:[1275,1292],conv3d:[203,390,521,661,858,1256,1275,1292],conv3d_transpos:[203,390,521,858,1256],conv3dtranspos:[1275,1292],convent:[40,41,1238,1239],conver:[954,970,981,993,1000,1003,1175],convers:[16,17,18,19,40,41,1175,1275],convert:[15,16,17,18,19,40,41,43,954,981,982,1004,1010,1016,1017,1028,1103,1114,1115,1139,1141,1145,1146,1152,1175,1219,1221,1228,1275,1282],convert_dtyp:1004,convolut:[1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299],cool:43,cooler:43,coordin:[1028,1085,1156,1157,1159,1161],copi:[40,41,43,507,1028,1046,1175,1219,1221],copy_arrai:[459,733,1028],copy_nest:1219,core:[457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,505,506,507,508,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,956,957,958,959,960,961,963,964,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1275],corner:43,correct:[43,1275,1318],correctli:[40,41,43,902,903,1146,1149,1156,1161,1238,1240,1241,1242,1243,1244,1245,1246],correspond:[40,41,43,913,938,1028,1043,1231,1232],cos:[88,412,543,679,879,1028,1060,1156,1157,1169,1318],cosh:[88,412,543,679,817,879,1156],cosin:[879,883,884,1156,1157,1158,1163],cost:[1123,1125,1126,1128,1130,1131,1132,1171,1172,1173,1174],cost_fn:[1171,1174],could:1321,count:[40,41,900,901,909,910,911,1175,1238,1243,1245],cours:43,cprint:1319,cpu:[40,41,43,954,991,993,999,1000,1003,1028,1031,1034,1062,1063,1070,1080,1081,1089,1090,1096,1097,1122,1175,1231,1232,1233,1234,1235,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1312,1314,1315,1317,1318],creat:[40,41,869,870,871,872,874,954,963,964,1028,1031,1034,1061,1062,1063,1070,1080,1081,1089,1090,1096,1097,1113,1122,1123,1136,1175,1231,1232,1233,1234,1235,1275,1276,1281,1282,1283,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1317,1321],create_if_abs:[40,41],create_vari:1283,creation:[40,41,42,43],creation_funct:[401,402,403,404,405,406,869,870,871,872,873,874],crop:[1139,1143],crop_siz:[1139,1143],cross:[307,733,1028,1269,1270,1271,1272],cross_entropi:1269,cuda:[40,41,954,963,982,999,1028,1031,1034,1062,1063,1070,1080,1081,1089,1090,1096,1097,1122,1175,1231,1232,1233,1234,1235,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1312,1314,1315],cumprod:[138,307,459,733,1028],cumsum:[733,1028],cumul:[1028,1048,1049],current:[40,41,42,43,954,963,987,988,990,994,1004,1010,1018,1027,1028,1050,1064,1072,1076,1088,1091,1175,1219,1220,1227,1275,1321],current_framework:59,current_framework_str:[459,733,1028,1175],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1256,1257,1258,1259,1260,1261,1262],d_out:[1256,1257,1258,1259,1260,1261,1262],da_can_termin:1175,da_dim_s:[954,1175],da_direct:1175,da_tune_step:[954,1175],dai:1321,daniel:1275,data:[40,41,42,43,869,870,871,872,873,874,876,877,879,880,881,882,883,884,885,886,887,888,890,891,892,893,895,896,899,900,901,905,906,909,910,911,913,931,932,938,954,956,957,958,959,960,961,966,967,968,982,1004,1008,1009,1010,1014,1015,1016,1017,1018,1019,1020,1027,1028,1031,1034,1055,1061,1070,1077,1090,1094,1105,1109,1122,1123,1129,1137,1156,1164,1175,1256,1265,1275],data_format:[1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299],data_type_funct:[407,409,410,875,876,877],dataset:[40,41],datatyp:[40,41,1004,1009,1019,1020],dcdw:[1123,1125,1126,1128,1130,1131],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1123,1130,1131,1308,1310,1311],decay_lambda:[1123,1130,1131,1308,1310,1311],decid:[40,41,1321],decompos:[1146,1147,1151],decomposit:[895,898,1146,1147,1151],decor:43,decrement:[1028,1073],dedic:[1123,1137,1281,1282],deep:[40,41,1275],deep_copi:[40,41],deeper:[954,976,980,986,1175,1219,1228,1275],deepli:[1219,1221],def:[43,60,84,221,408,539,675,955,962,965,1005,1006,1007,1124,1175,1179,1186,1275,1284,1287,1290,1317,1318,1321],default_dev:43,default_devic:954,default_dtyp:[43,1004],default_float_dtyp:1004,default_int_dtyp:1004,default_key_color:[40,41,42],default_nod:1175,default_rng:507,default_v:[1028,1051],defaultdevic:[954,955],defaultdtyp:[1004,1005],defaultfloatdtyp:[1004,1006],defaultintdtyp:[1004,1007],defer:43,defin:[43,1028,1047,1089,1122,1231,1233],definit:43,degre:[1156,1169],del:1175,delai:43,delet:43,delta:[1123,1125,1175],delta_dim_s:1175,delta_percent_mem:1175,delta_sf:1175,delta_util:1175,demo:1275,denomin:[1028,1059,1066,1099,1106,1107,1273,1274,1306,1307],denot:43,dens:[1292,1302],depend:[43,879,880,883,884,889,890,892,895,898,905,906,913,938,1028,1120,1275],depth:[40,41,459,483,954,976,980,986,1028,1068,1089,1175,1219,1228,1304,1305],depth_cutoff:[40,41],depthwis:[1256,1263,1292,1299],depthwise_conv2d:[203,390,521,661,858,1256],depthwiseconv2d:[1275,1292],deriv:[869,872,1123,1125,1126,1128,1130,1131,1132,1219,1221,1228,1275,1304,1308,1312,1314],descend:[895,898,905,906],descent:[1123,1128,1308,1313],describ:[40,41,1238,1239],descript:[895,899],design:[1275,1276],desir:[40,41,954,999,1004,1008,1028,1031,1034,1070,1071,1090,1122,1139,1144,1175,1238,1240,1241,1242,1244,1246],desired_aspect_ratio:[496,499,1139,1144],desired_percent_increas:1175,det:[235,429,560,696],detail:1321,detect:[40,41,1219,1220,1227],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,879,880,881,883,884,885,886,890,892,893,895,896,897,899,909,910,911,913,938,954,989,991,992,1001,1004,1008,1009,1015,1018,1019,1020,1027,1028,1030,1031,1034,1035,1036,1069,1072,1076,1077,1109,1119,1123,1129,1156,1164,1171,1172,1173,1174,1175,1256,1267],dev:[40,41,42,43,131,301,401,404,457,459,460,462,472,473,474,481,482,483,484,485,490,507,508,589,725,869,872,954,957,958,960,961,963,964,967,968,970,971,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,990,993,994,995,996,997,998,999,1000,1003,1028,1031,1034,1062,1063,1070,1080,1081,1089,1090,1096,1097,1122,1123,1138,1231,1232,1233,1234,1235,1281,1282,1283,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1312,1314,1315],dev_clon:[40,41,954],dev_clone_arrai:954,dev_clone_it:954,dev_clone_nest:954,dev_dist:[40,41,954],dev_dist_arrai:954,dev_dist_it:954,dev_dist_nest:954,dev_from_str:[43,131,301,457,589,725,954],dev_mapp:954,dev_str:[40,41],dev_to_str:[131,301,457,589,725,954],dev_unifi:954,dev_unify_arrai:954,dev_unify_it:954,dev_unify_nest:954,dev_util:954,devclonedit:954,devcloneditem:954,devclonednest:954,devdistit:954,devdistitem:954,devdistnest:954,develop:[43,1275,1318,1321],deviat:[40,41,1231,1234,1238,1244,1273,1274,1306,1307],devic:[21,40,41,43,401,402,403,406,458,459,471,869,870,871,872,873,874,956,957,958,959,960,961,963,964,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1028,1031,1034,1061,1062,1063,1070,1080,1081,1089,1090,1096,1097,1122,1123,1138,1231,1232,1233,1234,1235,1275,1281,1282,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1312,1314,1315],devmanag:[954,962],devmapp:[954,964],devmappermultiproc:954,diag:[895,898],diagon:[105,235,429,560,696,869,873,895,1028,1070],dict:[15,16,17,18,19,40,41,42,954,956,959,963,964,966,976,977,978,979,980,1028,1052,1053,1054,1082,1171,1172,1173,1175,1219,1221,1222,1223,1226,1228,1281,1282],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,875,876,954,973,974,977,978,1146,1151,1175,1256,1265,1275,1318,1321],differenti:[1275,1318],dilat:[1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299],dim:[40,41,43,895,898,1028,1089,1139,1140,1144,1175,1292,1303],dim_siz:[40,41,954,1175],dimens:[40,41,42,869,873,895,896,898,899,900,901,902,903,909,910,911,954,985,1028,1038,1043,1047,1052,1053,1054,1057,1060,1067,1079,1089,1093,1094,1104,1105,1108,1116,1118,1139,1143,1146,1149,1171,1172,1173,1174,1175,1231,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1253,1256,1257,1258,1259,1260,1261,1262,1263,1266,1269,1271,1272,1292,1293,1294,1295,1296,1297,1298,1299,1302,1303],dimension:[40,41,507,895,898,899,909,910,911,1028,1104,1105],direct:1175,directli:[43,1219,1228,1318,1321],directori:[1028,1101,1112],discord:43,discret:[1269,1271],discuss:43,disk:[40,41,1139,1141],distanc:[1028,1031],distribut:[40,41,954,973,977,978,979,980,1175,1231,1232,1233,1234,1235,1256,1264,1292,1300,1304,1305],distribute_nest:1175,distributedarrai:[40,41],distrubt:[1269,1271],dive:[1275,1318],divid:[40,41,1028,1104,1106,1156],dividend:[1156,1164],divis:[1028,1059,1066,1099,1106,1107,1123,1125,1126,1130,1156,1164,1308,1309,1310],divisor:[1123,1125,1126,1130,1156,1164,1308,1309,1310],doc:1275,docstr:43,document:43,doe:[40,41,43,1028,1031,1104,1317],doesn:[1146,1151,1275],doing:43,domain:[879,880,883,884,890,892,893,1156,1157],don:[43,1275],done:43,door:1321,dot:[1146,1148,1256,1267,1268,1292,1303],down:1317,downscal:[1028,1041,1042],drag:[1275,1321],draw:[1231,1232,1234,1235],drawn:[1231,1232,1233,1234,1235],drop:[1275,1321],dropout:[1256,1275,1292,1303],dropout_r:[1292,1303],ds_tune_step:954,dtype:[40,41,43,138,307,401,402,403,404,406,407,409,410,459,460,462,463,471,474,490,596,733,869,870,871,872,874,875,876,877,902,903,1008,1009,1010,1011,1012,1013,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1031,1034,1061,1070,1089,1090,1122],dtype_bit:[138,307,459,596,733,1004],dtype_from_str:[43,138,307,459,596,733,1004],dtype_in:[459,468,469,470,1004,1010,1015,1016,1017,1018,1019,1020,1027],dtype_to_str:[138,307,459,596,733,1004],duplic:[40,41,43],dure:[40,41,43,952,953,1028,1117,1123,1125,1126,1130,1171,1172,1173,1174,1304,1305,1308,1309,1310,1312],dynam:[43,459,464,952,953],each:[40,41,42,43,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,898,913,932,938,954,963,964,973,974,975,976,977,978,979,985,997,998,1028,1029,1030,1044,1055,1093,1104,1108,1111,1121,1123,1126,1128,1130,1131,1132,1139,1142,1156,1159,1164,1166,1167,1175,1219,1223,1231,1232,1238,1239,1256,1257,1258,1259,1260,1261,1262,1263,1264,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1303,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1318],eager:1318,easi:1321,easili:1275,econom:1321,ecosystem:1275,edg:[1028,1040,1044,1121],effect:[1123,1132],effective_grad:[1123,1132],effici:1321,einop:[40,41,1028,1052,1053,1054],einops_rearrang:[40,41,1028],einops_reduc:[40,41,1028],einops_repeat:[40,41,1028],einstein:[40,41,1238,1239],einsum:[40,41,189,378,509,651,838,1238],either:[40,41,43,879,890,892,1028,1051,1082,1085,1087,1171,1172,1173,1174,1175,1292,1303,1304,1305,1318],eleg:1175,element:[40,41,43,507,869,873,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,900,901,907,908,909,910,911,913,931,932,938,954,975,979,985,1004,1008,1028,1029,1031,1033,1035,1036,1040,1041,1042,1048,1049,1055,1058,1059,1070,1071,1084,1086,1093,1095,1104,1115,1120,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1175,1238,1239,1241,1243,1245,1248,1249,1250,1251,1252,1253,1254,1255,1256,1264,1292,1300],elementwis:[40,41,913,931],elementwise_affin:[1306,1307],elementwise_funct:[879,880,881,882,883,884,885,886,887,888,889,890,891,892,893],elemtn:[1231,1232],elif:1175,els:[43,1028,1037,1051,1056,1175],elsewher:[1028,1120],emphas:1275,empti:[40,41,77,214,401,532,668,869,909,910,911,1146,1151,1175],enabl:[40,41,42,43,1275],encapsul:[875,877],encod:[1028,1060,1139,1141],end:[1028,1031,1275,1318],engag:43,ensur:43,entir:[40,41,909,910,911,954,998,1175,1275,1292,1301],entri:[40,41,1028,1080,1081,1104,1105],entropi:[1269,1270,1271,1272],enumer:1175,environ:1275,eps:[407,875,876],epsilon:[1123,1125,1126,1130,1269,1270,1271,1272,1273,1274,1306,1307,1308,1309,1310],equal:[40,41,88,412,543,679,879,885,895,896,905,906,1028,1030,1035,1036,1044,1104,1121,1156,1169,1231,1235],equality_matrix:[1028,1030],equat:[40,41,1238,1239],equival:[879,891,895,899,1028,1031,1156,1169],erf:[505,817,1156],error:[40,41,43,954,1028,1105,1156,1165,1175,1248,1249,1304,1305,1308,1312],essenti:43,etc:[40,41,43,954,999,1028,1031,1034,1062,1063,1070,1080,1081,1089,1090,1096,1097,1122,1175,1231,1232,1233,1234,1235,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1312,1314,1315,1321],euclidean:[895,899],euler:868,evalu:[40,41,879,889,890,909,910,911,1028,1085,1219,1220,1227],even:[43,1321],evenli:[40,41,1028,1031,1080,1081,1104],everi:[43,1028,1030,1321],exact:[40,41],exampl:[43,952,953,1028,1040,1108,1146,1151,1275,1317,1318,1321],example_input:[459,464,952,953],exc_tb:1175,exc_typ:1175,exc_val:1175,exce:[1028,1086],except:[40,41,44,47,909,910,911,1028,1031,1037,1043,1051,1117,1175],excess_s:1175,excit:[1275,1318],exclud:[59,61,1028,1031,1231,1235],exclus:[40,41,459,466,479,491,493,1028,1048,1077,1123,1129,1231,1233],execut:[43,1028,1117,1318],execute_with_gradi:[169,355,491,631,797,1123,1275,1317],exist:[40,41,1028,1051,1175,1275,1308,1312,1321],exp:[817,1156],expand:[40,41,1028,1057,1060],expand_dim:[40,41,307,733,1028,1175],expect:[1028,1032],explain:[43,1318],explicitli:[43,1292,1301,1303,1304,1305,1318],expon:[43,913,938,1028,1107],exponenti:[43,913,938,1156,1165,1166],expos:[1028,1034,1045],express:[879,883,892,1028,1085],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1123,1127],eye:[1146,1148],fabian:1275,fabio:1275,factor:[895,898,954,963,996,997,998,1123,1125,1126,1130,1131,1175,1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299,1308,1309,1310,1311],fail:43,falck:1275,fall:[1304,1305,1308,1312],fallback_to_non_compil:[1304,1305,1308,1312],fals:[15,18,19,40,41,42,59,66,67,68,69,70,457,459,466,467,479,486,489,491,492,493,500,501,879,885,886,891,895,899,902,903,905,906,907,908,909,910,911,954,972,985,993,998,1003,1004,1011,1012,1013,1014,1028,1030,1048,1051,1056,1060,1067,1077,1082,1102,1104,1118,1120,1123,1126,1127,1128,1129,1130,1131,1132,1146,1149,1171,1172,1173,1174,1175,1219,1220,1221,1223,1227,1228,1238,1240,1241,1242,1243,1244,1245,1246,1281,1282,1304,1305,1308,1309,1310,1311,1312,1313],fan_in:1283,fan_mod:1283,fan_out:1283,far:[1219,1220,1227,1317],faster:[952,953],favourit:[1275,1317],feasibl:1321,feat_dim:[1256,1267,1268],fed:[954,998,1175],feed:[954,998,1175],few:43,field:1321,file:[40,41,43,1028,1101,1112,1304,1305],filepath:[40,41],fill:[40,41,869,870,871,872,874,1028,1061,1090,1231,1233],fill_valu:[459,471,1028,1061],filter:[1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299,1321],filter_s:[1292,1293,1294],filter_shap:[1292,1295,1296,1297,1298,1299],find:[40,41,43,1321],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[83,84,220,221,407,408,538,539,674,675,875],finish:[1275,1321],finit:[879,885],first:[40,41,43,507,879,881,887,888,895,896,898,913,931,952,953,954,985,1028,1035,1043,1047,1055,1080,1081,1108,1110,1123,1127,1171,1172,1173,1174,1175,1219,1220,1227,1231,1237,1238,1243,1245,1292,1303,1304,1305,1308,1312,1318,1321],firstlayersiren:[1275,1283],firstli:[1318,1321],fist:[954,998,1175],fit:[40,41,457,459,491,496,500,504,505,507,1028,1093,1139,1144],fix:43,fkt:1321,flag:[40,41,43,1123,1129],flat:[40,41,43,1028,1093,1096],flat_list:[40,41],flatten:[40,41,895,899,902,903,1028,1060,1093,1238,1240,1241,1242,1244,1246],flatten_key_chain:[40,41,1304,1305],flexibl:[1275,1318],flip:[40,41,109,241,435,566,702,900],float32:[43,459,474,1004,1008,1016,1017,1028,1031,1034,1070,1090,1122],float_dtyp:[1004,1012,1022],float_img_to_uint8_img:1139,floor:[307,459,733,1028,1059,1175],floormod:[307,459,733,1028],fluid:1321,folder:[43,1275],follow:[40,41,43,875,877,895,899,954,998,1028,1073,1074,1075,1106,1107,1123,1126,1128,1130,1131,1132,1175,1219,1223,1228,1256,1267,1268,1275,1292,1302,1308,1312],followng:[875,876],fomaml_step:1171,forget:[1123,1125,1126,1130,1308,1309,1310],fork:[1028,1087,1275,1276],forkserv:[1028,1087,1175],form:[15,16,17,18,19,40,41,869,873,895,896,1028,1034,1123,1126,1128,1130,1131,1132,1219,1221,1228,1256],format:[40,41,43,954,972,1004,1008,1010,1014,1028,1031,1034,1070,1090,1122,1175,1238,1239,1275,1317,1318],format_fn:[40,41],format_key_chain:[40,41],forward:[1304,1305,1308,1312,1317],found:[40,41,42],fourier:[1028,1060],fourier_encod:1028,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,110,112,115,117,119,120,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,236,237,238,239,240,242,244,247,250,251,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,361,362,363,365,366,367,368,370,371,374,375,376,377,379,380,381,382,383,384,385,386,389,391,392,393,394,395,396,397,402,403,404,405,406,408,409,410,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,430,431,432,433,434,436,438,441,443,445,446,458,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,492,493,494,495,497,498,499,501,502,503,506,508,510,511,512,513,514,515,516,519,520,522,523,524,525,526,527,528,533,534,535,536,537,539,540,541,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,561,562,563,564,565,567,569,572,574,576,577,585,590,591,592,593,594,595,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,632,633,634,635,637,638,639,641,642,643,647,648,649,650,652,653,654,655,656,657,658,662,663,664,669,670,671,672,673,675,676,677,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,697,698,699,700,701,703,705,708,710,712,713,721,726,727,728,729,730,731,732,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,798,799,800,801,802,804,805,806,808,809,810,811,812,813,815,816,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,834,835,836,837,839,840,841,842,843,844,845,848,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,870,871,872,873,874,876,877,880,881,882,883,884,885,886,887,888,889,890,891,892,893,896,897,898,899,901,903,906,907,908,910,911,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1249,1250,1251,1252,1253,1254,1255,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1274,1275,1279,1280,1281,1282,1284,1285,1286,1287,1288,1289,1290,1291,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1305,1307,1308,1309,1310,1311,1312,1313,1315,1316,1317,1318,1320,1321],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1175,framewrk:[1028,1087],free:43,freed:43,freeli:43,frequenc:[1028,1060],from:[40,41,42,43,869,872,879,893,895,896,900,901,907,908,909,910,911,954,963,964,998,1004,1010,1028,1051,1062,1063,1070,1094,1105,1113,1120,1123,1126,1130,1139,1143,1146,1151,1171,1172,1173,1174,1175,1219,1221,1228,1231,1232,1233,1234,1235,1238,1243,1245,1256,1264,1267,1275,1281,1282,1292,1300,1303,1308,1312,1317,1318],from_cal:[1304,1305],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,138,307,459,596,733,875,876,1028,1146,1151,1275],full_matric:[895,898],fulli:[43,1275,1292,1302,1303,1317],func:[40,41,459,464,491,492,952,953,954,998,1028,1039,1123,1127,1175],further:[43,1321],furthermor:1321,futur:1321,gain:1283,gamma:[1273,1274],gather:[40,41,138,307,459,596,733,1028,1063],gather_nd:[40,41,138,307,459,596,733,1028],gauss:[1156,1165],gaussian:[1248,1249],geglu:[1275,1278],gelu:[388,518,847,1248,1275,1278],gener:[23,40,41,43,457,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,507,952,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1129,1231,1233,1235,1236,1275,1308,1312],geometr:[1028,1060],get:[40,41,43,875,876,877,954,963,964,972,987,988,993,997,1000,1003,1004,1014,1015,1028,1032,1064,1065,1066,1092,1175,1275,1292,1301,1321],get_all_arrays_in_memori:1028,get_all_arrays_on_dev:954,get_framework:59,get_initial_st:[1292,1301],get_min_bas:1028,get_min_denomin:1028,get_mod_kei:[1304,1305],get_num_dim:[459,733,1028],get_referrers_recurs:1028,getfullargspec:1175,gist:1275,give:[43,1028,1094,1318],given:[40,41,43,869,870,900,901,954,987,993,996,997,998,1000,1003,1004,1008,1028,1031,1034,1040,1048,1049,1063,1080,1081,1090,1093,1096,1097,1104,1111,1116,1118,1122,1123,1125,1126,1128,1130,1131,1132,1146,1148,1152,1156,1157,1175,1219,1224,1225,1231,1234,1235,1237,1238,1241,1243,1244,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1281,1282,1321],global:[40,41,42,954,963,964,971,996,997,998,1004,1011,1012,1013,1028,1050,1065,1066,1092,1098,1099,1100,1106,1107,1123,1138,1175,1273,1274,1306,1307],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1275,1283,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302],good:43,googl:1275,got:[43,1275],gpu0:43,gpu2:43,gpu:[954,989,992,1175],gpu_is_avail:[457,954,1175],grad:[1275,1308,1312,1317],gradient:[25,40,41,492,493,494,495,954,998,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1142,1171,1172,1173,1174,1275,1308,1309,1310,1311,1312,1313,1317,1321],gradient_descent_upd:[1123,1171,1172,1173,1174],gradient_imag:[172,360,496,636,803,1139],gradienttrack:[1123,1124],graph:[1123,1126,1128,1130,1131,1132,1304,1305],greater:[40,41,1028,1031,1058,1105,1231,1235],green:[40,41,42,1319,1320],grid:[1028,1085],group:[1139,1144],guid:[43,1275,1276,1321],gym:1275,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1321,half:[1028,1031,1175,1231,1235],hand:1275,handl:[40,41,42,43,952,953,954,970,972,981,982,993,1000,1003,1123,1126,1128,1130,1131,1132,1175,1308,1309,1310,1311,1312,1313],happen:43,has:[40,41,43,895,897,902,903,1028,1108,1146,1151,1156,1160],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,1028],hasattr:1175,have:[40,41,43,869,870,871,872,873,874,875,876,879,880,881,882,883,884,885,886,887,888,890,891,892,893,895,896,898,899,900,901,902,903,905,906,909,910,911,913,931,932,938,1028,1043,1047,1052,1053,1054,1055,1061,1108,1123,1129,1137,1156,1164,1175,1275,1317,1318],haven:43,hdf5:[40,41,1304,1305],head:[1256,1267,1292,1303],head_dim:[1292,1303],height:[1139,1144],height_cutoff:[40,41],help:[43,59,407,457,458,954,966,967,968,969,1004,1123,1275,1283,1285,1286,1288,1289,1291],here:[43,1275],hidden:[1256,1266,1292,1301],hierarch:[1028,1045],hierarchi:[40,41],high:[40,41,507,1231,1233,1235],higher:[895,898,1123,1126,1128,1130,1131,1132],highest:[1231,1233],highest_util:1175,highest_util_nod:1175,highli:1275,highlight:1321,hint:43,hkt:1321,hold:[1004,1008,1028,1031,1034,1096,1097],host:1275,hot:[1028,1089],hour:43,how:[1275,1292,1303,1304,1305,1318,1321],howev:[43,1318],http:1321,hyperbol:[879,880,884,1156,1158,1162,1163,1168,1170,1248,1255],hypothet:[43,1321],icon:1275,idea:1275,ident:[40,41,43,138,307,459,596,733,1028],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[868,875,876,879,893],if_exist:[40,41],ignor:[40,41,1308,1312],ignore_key_error:[40,41],ignore_miss:[1308,1312],ignore_non:[40,41],iii:43,iinfo:[83,220,407,538,674,875],imag:[27,497,498,499,1028,1079,1140,1141,1142,1143,1144,1145,1256,1257,1258,1259,1260,1262,1263,1275,1321],image_dim:[1139,1143],imkkhk:1321,immedi:[1275,1318,1321],implement:[43,879,880,883,884,889,890,892,905,906,913,938,1275,1318,1321],in_featur:[1256,1265],inadvert:43,includ:[40,41,43,895,899,909,910,911,1028,1031,1069,1106,1107,1119,1219,1220,1231,1235,1292,1302,1303,1306,1307,1317],include_deriv:[1219,1221,1228],include_empti:[40,41],include_inf:[40,41,1028,1069,1119],include_nest:[1219,1220],include_self:[40,41],inclus:[43,1231,1233],incom:[1256,1265],increas:[954,976,980,986,1028,1044,1057,1121,1175,1219,1228],increasingli:1321,increment:[1028,1074,1175],inde:1275,indent:[40,41,42],independ:[1231,1232],index:[40,41,459,507,902,903,905,906,1028,1033,1062,1063,1085,1105,1108,1219,1222,1224,1225,1226,1229],index_nest:1219,indic:[40,41,459,472,473,483,484,485,895,899,902,903,905,906,1028,1033,1062,1063,1071,1089,1096,1097,1219,1220,1222,1224,1225,1226,1227,1229,1230,1231,1232,1248,1253,1256,1257,1258,1259,1260,1261,1262,1263,1273,1274,1292,1293,1294,1295,1296,1297,1298,1299,1304,1305],indices_wher:[138,307,459,733,1028],indistinguish:[879,893],inevit:1321,inf:[40,41,895,899,1028,1069,1078,1119,1156,1160],infer:[869,872,907,908,952,953,1028,1067,1070,1094,1102,1139,1143,1146,1151,1318,1321],infin:[879,880,882,883,884,885,890,892,893,895,899,909,910,911,1028,1078],infinit:[879,893],inform:[875,876,877,1123,1134],init_c:[1256,1266],init_h:[1256,1266],init_on_first_step:[1308,1312],initi:[40,41,42,43,59,407,457,458,954,966,967,968,969,1004,1123,1175,1256,1266,1275,1285,1286,1288,1289,1291,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1308,1312],initialz:[1304,1305],inner:[1171,1172,1173,1174],inner_batch_fn:[1171,1172,1173],inner_batch_shap:[1256,1265],inner_cost_fn:[1171,1172,1173],inner_grad_step:[1171,1172,1173,1174],inner_learning_r:[1171,1172,1173,1174],inner_optimization_step:[1171,1172,1173,1174],inner_v:[1171,1172,1173],innermost:[869,873,895,896],inp:1175,inplac:[40,41,1028,1037,1072,1076,1109,1123,1126,1128,1130,1131,1132,1281,1282,1308,1309,1310,1311,1312,1313],inplace_arrays_support:[459,1028],inplace_decr:[138,307,459,596,733,1028],inplace_incr:[138,307,459,596,733,1028],inplace_oper:[0,11,12],inplace_upd:[40,41,138,307,459,596,733,1028,1281,1282],inplace_variables_support:[459,1028],input:[15,18,19,40,41,42,43,869,872,873,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,898,899,900,901,902,903,905,906,907,908,909,910,911,952,953,954,963,964,971,972,973,976,977,980,986,998,999,1004,1008,1009,1011,1012,1013,1014,1015,1019,1020,1028,1029,1030,1033,1035,1036,1037,1038,1040,1041,1042,1043,1044,1046,1048,1049,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1067,1069,1070,1071,1073,1074,1075,1077,1078,1079,1083,1084,1085,1086,1093,1095,1102,1103,1105,1108,1109,1110,1111,1113,1114,1115,1116,1118,1119,1121,1123,1127,1129,1134,1138,1139,1140,1141,1142,1143,1145,1146,1149,1151,1153,1154,1155,1156,1158,1160,1162,1163,1164,1168,1169,1170,1171,1172,1173,1174,1175,1231,1232,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1273,1274,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1306,1307,1318],input_ax:[954,998,1175],input_channel:[1292,1293,1294,1295,1296,1297,1298,1301,1302],input_queu:1175,inputs_split:1175,insert:[902,903,1028,1057],insid:43,inspect:1175,inspir:1321,instal:1275,instanc:[15,16,17,18,19,40,41,43,507,913,931,932,938,954,963,1175,1281,1282,1314,1315],instead:[40,41,43,507,1238,1240,1241,1242,1243,1244,1245,1246,1321],int32:43,int64:[1004,1008,1028,1031,1034,1070,1090,1122],int_dtyp:[1004,1013,1023],integ:[40,41,507,875,877,879,881,882,895,899,909,910,911,1004,1020,1028,1031,1058,1095,1104,1231,1233,1236],integr:1275,intend:43,inter:1275,interact:1275,interchang:[40,41,1028,1110],interest:1275,interfac:[1028,1034,1318],intermedi:[40,41],intern:[40,41,954,1123,1137,1175,1219,1220,1227,1228,1283,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1314,1315],interpol:[1028,1079],intersect:[1156,1157],interv:[40,41,909,910,911,1028,1031,1040,1080,1081,1156,1159,1231,1235],introduc:1321,inv:[807,1146,1321],invalid:[909,910,911],invalid_dtyp:1004,invers:[879,880,1146,1148,1150,1156,1157,1158,1159,1160,1162,1321],invert:[1146,1148,1150],invest:1321,investig:43,invoc:[952,953],irrespect:1275,is_al:1175,is_arrai:[138,307,459,596,733,1028,1175],is_float_dtyp:1004,is_int_dtyp:1004,is_mean:1175,is_sum:1175,is_vari:[169,355,491,631,797,1123],isfinit:[88,225,412,543,679,879],isinf:[307,596,733,1028],isinst:1175,isnan:[88,225,412,543,679,879],isnumer:1175,issu:[1275,1276],issue_numb:43,item:[15,19,40,41,913,925,926,954,963,964,966,973,975,977,979,985,1004,1011,1028,1045,1068,1106,1107,1175,1219,1223,1224,1225,1228,1229,1230,1275,1304,1305,1317],iter:[15,16,17,18,19,40,41,42,952,953,954,957,958,960,961,963,964,967,968,975,977,978,979,980,985,998,1028,1030,1038,1043,1044,1070,1085,1090,1093,1094,1097,1102,1104,1108,1111,1116,1121,1175,1219,1220,1221,1223,1227,1228],iterbal:[954,975,979,985,1175],its:[507,954,998,1028,1070,1094,1110,1116,1175,1275],itself:[43,1219,1228],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,401,402,403,404,405,406,407,409,410,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,868,869,870,871,872,873,874,875,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,897,898,899,900,901,902,903,905,906,907,908,909,910,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,956,957,958,959,960,961,963,964,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1279,1280,1281,1282,1283,1285,1286,1288,1289,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1319,1320],ivy_backend:[40,41],ivy_bay:1321,ivy_test:43,ivyfcmodel:1317,ivyh:[40,41,42],ivymodul:[200,855],jame:1275,jax:[43,1123,1129,1275,1321],jax_concat:1275,jnp:1275,join:[40,41,1028,1043,1108,1175],journal:1275,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1275,1292,1301,1321],kaimingnorm:[1283,1287],kalman:1321,kalman_filt:1321,kalman_filter_step:1321,kalman_filter_upd:1321,keep:[40,41,954,999,1028,1118,1175,1275,1276,1321],keep_inner_v:[1171,1172,1173],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1171,1172,1173],keepdim:[40,41,459,489,500,501,895,899,902,903,907,908,909,910,911,1028,1118,1146,1149,1238,1240,1241,1242,1243,1244,1245,1246],kei:[15,16,17,40,41,42,43,913,918,954,966,1028,1045,1171,1172,1173,1175,1219,1222,1226,1256,1267,1268,1275,1281,1282,1292,1303,1308,1312],kept:[40,41,42,1171,1172,1173],kera:1321,kernel:[1256,1266],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,954,963,964,976,980,986,1028,1032,1052,1053,1054,1082,1175,1219,1223,1304,1305],keyword_color_dict:[40,41,42],kind:[875,876,877,1321],kwarg:[15,16,17,40,41,42,59,63,954,963,976,980,986,1028,1082,1175,1281,1282,1304,1305],kwarg_stateful_idx:[1304,1305],kwargs_clon:1175,kwargs_dist:1175,kwargs_uni:1175,label:[43,1269,1270,1271,1272],lamb:[1123,1130,1275,1308],lamb_upd:1123,lambda:[1175,1308,1311,1313,1317],lar:[1123,1130,1131,1275,1308],larger:[875,876,1028,1040],largest:[40,41,875,876,877,1028,1058],lars_upd:1123,last:[40,41,895,896,898,900,901,905,906,909,910,911,1028,1031,1047,1079,1104,1108,1146,1149,1238,1243,1245,1248,1253,1256,1266,1292,1302],later:[40,41,1028,1039],latest:[1292,1301],layer:[1123,1126,1128,1130,1132,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1273,1274,1275,1283,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1312,1314,1315,1321],layer_norm:1273,layernorm:[1275,1306],layerwis:[1123,1131,1308,1311],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1219,1220,1227],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1248,1249,1250],leaky_relu:[847,1248],learn:[907,908,1123,1126,1128,1130,1131,1132,1146,1151,1171,1172,1173,1174,1231,1237,1275,1308,1309,1310,1311,1312,1313,1318,1321],learnabl:[1273,1274,1306,1307],least:43,leav:[15,18,19,40,41,1219,1220,1221,1227,1228],left:[40,41,43,902,903,1146,1149,1238,1240,1241,1242,1243,1244,1245,1246,1275],leftmost:[40,41],len:1175,length:[40,41,42,1028,1031,1094,1105,1116],lenton2021ivi:1275,lenton:1275,less:[40,41,43,88,225,412,543,679,879,882,890,893,895,899,1175,1231,1235],less_equ:[88,412,543,679,879],less_util_node_str:1175,let:[1318,1321],level:1275,librari:[879,891,1275,1317,1321],lightweight:1275,like:[43,1123,1129,1231,1235,1275,1317,1318,1321],likewis:43,limit:[40,41,42,43,875,876,877,1028,1040,1041,1042],linalg:[29,1147,1148,1149,1150,1151,1152,1275],line:43,linear0:[1275,1317],linear1:1275,linear2:1317,linear:[1028,1060,1079,1146,1248,1249,1250,1251,1256,1264,1275,1292,1293,1294,1295,1296,1297,1298,1299,1317],linear_algebra:[500,501,502,503,895,896,897,898,899],linear_resampl:[138,307,459,596,733,1028],linearli:[1028,1060],link:[43,1275],linspac:[138,307,459,596,733,1028,1031],list:[15,18,19,40,41,401,402,403,406,869,870,871,874,900,901,909,910,911,954,963,964,973,974,976,977,978,980,983,984,998,1028,1031,1034,1036,1085,1103,1104,1113,1118,1171,1172,1173,1175,1219,1220,1221,1223,1227,1228,1256,1257,1258,1259,1260,1261,1262,1263,1275,1276,1281,1282,1292,1293,1294,1295,1296,1297,1298,1299],list_join:[40,41,42],list_stack:[40,41],liter:[895,899],littl:1318,load:[40,41],loaded_kwarg:1175,loader:1275,local:43,local_set:[1028,1068],locat:[43,1028,1078,1231,1232],log1p:[88,412,543,679,879],log2:[88,412,543,679,879],log:[817,879,889,895,897,1028,1081,1156,1175,1269,1270,1271,1272],logarithm:[879,889,890,895,897,1156,1167],logdet:[895,897],logic:[31,879,891,909,910,911,1154,1155,1275],logical_and:[369,814,1153],logical_not:[88,225,412,543,679,879],logical_or:[369,814,1153],logit:[1269,1272],logspac:[138,307,459,596,733,1028],look:[43,1318,1321],loop:[1171,1172,1173,1174],loss:[1270,1271,1272,1275,1317],loss_fn:[1275,1317],lot:1318,low:[40,41,507,1231,1233,1235],lower:[40,41,43,869,873,1028,1084,1231,1235],lower_depth:[1304,1305],lowest:[15,18,19,40,41,1219,1228,1231,1233],lstm:[1256,1266,1275,1292],lstm_updat:[43,1256],machin:[875,876,877,907,908,1146,1151,1231,1237,1275,1318,1321],made:43,mai:[879,888,891,905,906,1028,1031,1051,1055,1275,1318,1321],main:[869,873,895,896,1028,1070,1275],mainli:1275,maintain:[43,905,906],make:[43,507,954,1175,1275,1318],maml:[1171,1172,1173],maml_step:1171,manag:[954,1175],manhattan:[895,899],mani:[40,41,43,1028,1104,1275],manipulation_funct:[900,901],manner:[15,18,19,40,41,43,1219,1228],manual:[1219,1220,1227,1321],map:[40,41,42,954,963,1028,1078,1175,1219,1224,1225,1228,1292,1303,1317],map_cont:[40,41],map_nest_at_index:1219,map_nest_at_indic:1219,map_sequ:[40,41],mapper:[954,963,964,1175],mark:43,mask:[1256,1267,1268],master:43,match:[40,41,1028,1082],match_kwarg:1028,math:[33,506,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1175,1275],mathbb:[1146,1152],mathbf:[1146,1152],mathemat:[868,895,899],matmul:[43,307,459,596,733,1028,1321],matplotlib:1318,matric:[869,873,895,896,1256,1265],matrix:[40,41,869,873,895,896,1028,1030,1041,1083,1146,1147,1148,1149,1150,1151,1152,1256,1265,1292,1302],matrix_norm:[40,41,176,364,500,640,807,1146],matter:1275,max:[40,41,407,875,876,877,1028,1041,1042,1053,1084,1096,1097,1175,1238,1240,1308,1310],max_batch_s:[40,41],max_chunk_s:[954,998,1175],max_depth:[40,41,954,958,961,968,976,980,986,1028,1068,1175,1219,1228],max_dev_dim_step_ratio:954,max_freq:[1028,1060],max_length:[40,41],max_node_dim_step_ratio:1175,max_norm:[40,41,1028,1041,1042],max_split_factor_step_s:[954,1175],max_trust_ratio:[1123,1130,1308,1310],maxim:[1275,1318,1321],maximis:1275,maximum:[40,41,42,733,902,903,954,976,980,986,998,1028,1040,1041,1042,1060,1123,1130,1175,1219,1228,1238,1240],mayb:[15,18,19],mdi:1175,mean:[40,41,507,954,983,984,985,986,998,1028,1053,1171,1172,1173,1174,1175,1219,1223,1231,1234,1238,1241,1244,1246,1283,1317,1321],measur:[1256,1267,1292,1303],mech:1275,mechan:[1275,1321],medic:1321,member:43,memori:[954,970,993,998,1000,1003,1175,1256,1266,1275],mention:43,merg:43,merge_with_upstream:43,meshgrid:[307,459,733,1028],messag:[1319,1320],meta:[35,1172,1173,1174,1275],method:[40,41,42,43,507,1028,1034,1045,1085,1096,1097,1123,1130,1131,1175,1219,1220,1227,1228,1275,1292,1303,1304,1305,1318],might:[1028,1051,1321],min:[40,41,116,407,442,573,709,875,876,877,895,899,907,1028,1053,1086,1096,1097,1106,1146,1151,1175,1238,1242],min_bas:[1028,1107],min_denomin:[1028,1106],min_dev_dim_s:954,min_node_dim_s:1175,min_sf_tune_step:[954,1175],min_unit_dev_tune_step:954,min_unit_node_tune_step:1175,mind:1275,mini:[1273,1274,1306,1307],minimum:[40,41,733,907,908,954,1004,1008,1028,1031,1033,1034,1040,1065,1066,1098,1099,1106,1107,1175,1238,1242],miss:[1308,1312],ml_framework:[1028,1031,1146,1151],mod:[1028,1059],mod_depth:[1304,1305],mod_height:[1304,1305],mod_with_top_mod_key_chain:[1304,1305],mode:[40,41,500,502,895,898,952,953,954,983,984,985,986,998,1146,1151,1175,1318],model:[1275,1317],modul:[40,41,42,59,1028,1087,1175,1275,1276,1278,1279,1280,1281,1282,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1306,1307,1314,1315,1321],moment:[1123,1125,1126,1130,1308,1309,1310],more:[43,900,901,1028,1108,1175,1275,1318,1321],more_util_node_str:1175,most:[40,41,43,1146,1151,1275,1321],move:[40,41,43,954,999,1175],much:[43,1275,1321],multi:[507,1028,1087,1256,1267,1292,1303],multi_head_attent:1256,multi_index_nest:1219,multi_map:[40,41],multi_nod:1175,multidev:[954,965,966,967,986],multidevcontain:[40,41],multidevic:[954,963],multidevit:[954,957,960,963,964,968],multidevitem:[954,956,959],multidevnest:[954,958,961],multiheadattent:[1275,1292],multinod:[1175,1179],multinodecontain:1175,multinodeit:1175,multinodeitem:1175,multinodenest:1175,multinomi:[182,373,507,646,831,1231],multipl:[40,41,909,910,911,1028,1082,1104,1146,1148,1238,1240,1241,1242,1243,1244,1246,1273,1274,1292,1302,1318],multipli:[40,41,1028,1048,1238,1243],multiprocess:[40,41,42,459,733,954,963,1028,1175],must:[40,41,42,43,869,870,871,872,873,874,879,880,881,882,883,884,885,887,888,890,891,892,893,895,896,899,900,901,905,906,907,908,909,910,911,913,931,932,938,954,983,984,985,986,998,1028,1031,1043,1045,1047,1055,1084,1086,1097,1108,1156,1161,1164,1175,1231,1236,1308,1312],mutabl:[1219,1221,1228],mutlidevic:[954,963],mutlinod:1175,mw_tm1:[1123,1126,1130],mx_concat:1275,mxn:[869,873,895,896],mxnet:[43,1275,1321],my_func:43,mymodel:1275,name:[43,952,953,1317],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1318],nan:[40,41,43,868,879,880,882,883,884,885,886,890,892,893,909,910,911,1028,1069,1119],nativ:[15,17,18,19,40,41,43,954,970,972,981,982,993,1000,1003,1004,1009,1016,1017,1175,1275,1276,1281,1282],native_modul:[1281,1282],native_module_class:[1281,1282],nativearrai:[15,18,19,43,869,872,873,875,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,897,898,899,900,901,902,903,905,906,907,908,909,910,911,913,931,932,938,954,972,998,999,1004,1008,1014,1019,1020,1028,1029,1030,1031,1033,1034,1035,1036,1038,1040,1041,1042,1043,1044,1046,1047,1048,1049,1052,1053,1054,1055,1057,1058,1059,1060,1062,1063,1067,1069,1070,1071,1078,1079,1080,1081,1083,1084,1085,1086,1089,1090,1093,1094,1095,1096,1097,1102,1104,1105,1108,1110,1111,1113,1114,1115,1116,1118,1119,1120,1121,1122,1175,1219,1221,1228],natur:[879,889,895,897,1156,1167,1321],ncdhw:[1256,1261,1262,1292,1297,1298],nchw:[1256,1259,1260,1263,1292,1295,1296,1299],ncw:[1256,1257,1258,1292,1293,1294],ndarrai:[43,401,402,403,404,405,406,407,409,410,507,1028,1114],ndhwc:[1256,1261,1262,1292,1297,1298],nearest:[1028,1095],need:[43,1028,1041,1042,1256,1258,1260,1262,1275,1292,1294,1296,1298,1321],neg:[40,41,879,885,895,899,900,901,909,910,911,1238,1243,1245,1248,1250],negative_slop:1283,neither:1175,nest:[15,16,17,18,19,40,41,42,954,976,980,986,1028,1034,1113,1171,1172,1173,1175,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1304,1305,1308,1309,1310,1311,1312,1313],nested_indices_wher:1219,nested_map:[1175,1219],network:[1256,1265,1275,1276,1278,1292,1304,1305,1321],neural:[1256,1275,1278,1292,1317],never:43,new_node_percent_mem:1175,new_node_util:1175,new_node_utils_kei:1175,new_std:[1273,1274,1306,1307],newli:[43,952,953,1028,1038,1039],newlin:[40,41,42],newshap:[1028,1038,1094],next:[875,876,1175,1304,1305,1308,1309,1310,1311,1312,1313],nhwc:[1256,1259,1260,1263,1292,1295,1296,1299],node:[40,41,1219,1220,1227],node_clon:1175,node_dist:1175,node_dist_arrai:1175,node_dist_it:1175,node_in:1175,node_mapp:1175,node_str:1175,node_to_str:1175,node_util:1175,nodedistit:1175,nodedistitem:1175,nodedistnest:1175,nodemanag:[1175,1186],nodemapp:1175,nodemappermultiproc:1175,noinspect:[43,955,1005,1006,1007,1124,1175],non:[40,41,879,891,895,899,909,910,911,952,953,1004,1018,1304,1305,1308,1312,1318],none:[40,41,42,43,59,61,64,401,402,403,404,406,457,459,460,462,464,471,472,473,474,481,482,483,484,485,486,487,488,490,500,501,507,508,869,870,871,872,874,875,876,877,895,899,900,901,902,903,907,908,909,910,911,952,953,954,963,964,970,971,996,997,998,999,1004,1011,1012,1013,1028,1031,1034,1050,1051,1056,1061,1062,1063,1068,1070,1072,1073,1074,1075,1076,1080,1081,1087,1089,1090,1093,1096,1097,1098,1099,1104,1105,1106,1107,1116,1117,1122,1123,1126,1128,1130,1131,1132,1138,1139,1143,1146,1149,1151,1171,1172,1173,1174,1175,1219,1220,1223,1227,1228,1231,1232,1233,1234,1235,1238,1240,1241,1242,1243,1244,1245,1246,1256,1258,1260,1262,1265,1266,1267,1268,1273,1274,1281,1282,1283,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315],norm:[40,41,895,899,1028,1041,1042,1146,1149,1274,1275,1307,1308,1310],normal:[1231,1234,1273,1274,1306,1307],normalized_idx:[1273,1274],normalized_shap:[1306,1307],notat:[40,41,1238,1239],note:[43,1146,1151],noth:[40,41,1318],notimplementederror:1175,now:[40,41,43,954,999,1028,1029,1175,1275,1292,1303,1304,1305,1317,1318,1321],np_concat:1275,np_finfo:407,ns_tune_step:1175,num:[459,481,482,1028,1080,1081],num_arrai:[40,41],num_arrays_in_memori:1028,num_arrays_on_dev:954,num_band:[1028,1060],num_channel:[1292,1299],num_chunk:1175,num_chunks_floor:1175,num_class:[1231,1232],num_cpu_cor:954,num_gpu:[131,457,954,1175],num_head:[1256,1267,1292,1303],num_kei:[1256,1267,1268],num_lay:[1292,1301],num_or_size_split:[40,41,459,486,1028,1104],num_output:1175,num_queri:[1256,1267,1268],num_sampl:[459,480,507,508,1028,1079,1139,1140,1231,1232],num_task:[1171,1172,1173,1174],number:[40,41,42,868,875,876,877,879,882,895,897,898,909,910,911,952,953,954,990,991,992,1004,1015,1019,1020,1028,1031,1040,1044,1057,1060,1067,1070,1079,1080,1081,1084,1088,1093,1104,1111,1115,1119,1121,1171,1172,1173,1174,1175,1231,1232,1236,1238,1240,1241,1242,1244,1246,1256,1267,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1318,1321],numer:[43,879,882,885,886,887,891,913,932,938,1028,1065,1066,1098,1099,1106,1107,1156,1164,1283],numhead:[1256,1267],numpi:[40,41,43,401,402,403,404,405,406,407,409,410,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,504,505,506,507,508,895,898,1028,1114,1146,1151,1238,1239,1275,1317,1318,1321],nwc:[1256,1257,1258,1292,1293,1294],obj:[40,41],object:[40,41,42,59,407,875,876,954,1004,1008,1028,1031,1034,1123,1219,1222,1224,1225,1226,1229,1230,1231,1237,1283,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1304,1305],object_in:[459,462,1028,1034],observ:1175,obvious:43,occupi:[875,876,877,1028,1096,1097],off:[895,896,1028,1031],offer:1275,offset:[895,896,1273,1274],often:1318,old:[40,41],on_init:[1292,1303,1304,1305],onc:[43,954,998,1175,1231,1232,1275],one:[40,41,43,895,899,900,901,902,903,954,983,984,985,986,998,1004,1010,1028,1070,1082,1089,1096,1097,1105,1108,1146,1149,1175,1238,1239,1240,1241,1242,1243,1244,1245,1246,1275,1318,1321],one_hot:[138,459,596,733,1028],onearrai:[1028,1057],ones:[40,41,77,214,401,532,668,869,872,1028,1070,1089,1275],ones_lik:[77,214,401,532,668,869],ongo:43,onli:[40,41,43,507,879,891,900,901,954,1146,1151,1175,1219,1220,1221,1227,1308,1309,1310,1311,1312,1313,1317,1318],onlin:[43,1275],onto:[954,983,984,999,1175,1219,1223,1228],oom:[954,1175],open:[1028,1031,1231,1235,1275,1321],opencv:1318,oper:[40,41,1028,1037,1052,1053,1054,1080,1081,1109,1123,1126,1128,1130,1131,1132,1153,1154,1155,1256,1257,1258,1259,1260,1261,1262,1263,1265,1275,1276],operand:[40,41,879,880,882,883,884,890,892,893,1238,1239],oppos:[1028,1060],optim:[954,1123,1126,1128,1130,1131,1132,1171,1172,1173,1174,1175,1275,1309,1310,1311,1313,1317,1321],optimizer_upd:1123,option:[15,18,19,40,41,42,43,401,402,403,404,406,869,870,871,872,874,895,899,900,901,902,903,907,908,909,910,911,952,953,954,963,964,972,976,977,978,979,980,983,984,985,986,993,996,997,998,999,1003,1004,1009,1014,1018,1027,1028,1030,1031,1033,1034,1041,1042,1043,1048,1050,1051,1060,1061,1062,1063,1067,1069,1070,1077,1079,1080,1081,1082,1085,1087,1089,1090,1093,1096,1097,1100,1102,1104,1105,1106,1107,1108,1116,1118,1119,1122,1123,1126,1128,1129,1130,1131,1132,1134,1139,1143,1146,1149,1151,1171,1172,1173,1174,1175,1219,1220,1221,1223,1227,1228,1231,1232,1238,1240,1241,1242,1243,1244,1245,1246,1248,1249,1253,1256,1264,1265,1267,1268,1269,1270,1271,1272,1273,1274,1281,1282,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1318],ord:[895,898,899],order:[40,41,42,43,895,899,900,901,905,906,1123,1126,1128,1130,1131,1132,1146,1149,1171,1172,1173,1314,1315],ordered_node_util_kei:1175,org:1321,organ:43,origin:[40,41,42,1028,1094,1122,1146,1149],other:[40,41,43,913,915,916,921,923,924,928,930,931,932,933,934,936,938,939,940,941,942,943,945,946,947,949,950,951,952,953,1028,1030,1031,1070,1123,1127,1231,1235,1275,1317,1318,1321],other_i:[43,913,932,938],otherwis:[15,16,17,18,19,40,41,879,885,886,895,899,902,903,909,910,911,954,971,1004,1011,1012,1013,1028,1037,1116,1117,1120,1123,1129,1134,1138,1171,1172,1173,1175,1238,1240,1241,1242,1244,1246],our:[43,1275,1321],out:[43,507,869,871,873,874,875,876,877,879,880,881,882,883,884,885,886,887,889,890,891,892,893,895,896,897,899,900,901,902,903,905,906,909,910,911,913,932,1028,1031,1156,1160,1256,1264,1266,1275,1292,1300],out_feat_dim:[1256,1267],out_featur:[1256,1264,1265],out_i:[879,885,886],outdat:1321,outer:[1171,1172,1173,1174],outer_batch_fn:[1171,1172,1173],outer_batch_shap:[1256,1265],outer_cost_fn:[1171,1172,1173],outer_v:[1171,1172,1173],outlin:1318,output:[40,41,43,869,870,871,872,874,900,901,954,963,964,998,1028,1031,1039,1061,1070,1093,1111,1123,1127,1156,1161,1175,1231,1233,1234,1235,1256,1258,1260,1262,1264,1266,1267,1268,1275,1292,1293,1294,1295,1296,1297,1298,1300,1301,1302,1303],output_ax:[954,998,1175],output_axi:1175,output_channel:[1292,1293,1294,1295,1296,1297,1298,1301,1302],output_queu:1175,output_shap:[1256,1258,1260,1262,1292,1294,1296,1298],outsid:[1028,1040],over:[40,41,895,899,909,910,911,1146,1149,1231,1235,1238,1240,1241,1242,1244,1246,1273,1274,1306,1307],overal:1318,overflow:[1028,1031],overhead:1318,overrid:[1028,1089,1122],overriden:[1308,1312],overwrit:[40,41,954,998,1175],overwrite_at_key_chain:[40,41],own:[1275,1318,1321],packag:[43,1318],pad:[1028,1044,1060,1121,1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299],pad_width:[459,1028,1044,1121],page:1275,pair:[1256,1268],parallel:[954,963,964,1175],parallelis:[954,963,964,1175],param:[40,41,42,459,472,473,869,870,872,902,903,907,908,954,998,1028,1029,1062,1063,1089,1090,1175,1304,1305,1317],paramet:[15,16,17,18,19,40,41,42,43,869,870,872,879,888,895,896,898,907,908,913,931,932,938,952,953,954,963,964,970,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,993,996,997,998,999,1000,1003,1004,1008,1009,1010,1014,1015,1016,1017,1018,1019,1020,1027,1028,1030,1031,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1046,1047,1048,1049,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1067,1069,1070,1071,1073,1074,1075,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1090,1093,1094,1095,1096,1097,1098,1099,1100,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1134,1136,1137,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1281,1282,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1317],parameter:[1231,1234,1235],pardo:1275,pars:[1028,1045],part:[869,873,1123,1126,1128,1130,1131,1132,1156,1160,1275,1304,1305,1318],partial:[40,41,43,1304,1305],particl:1321,particular:[43,1321],pass:[40,41,42,43,954,963,998,1004,1009,1028,1039,1123,1137,1171,1172,1173,1175,1281,1282,1304,1305,1308,1312,1314,1315],pattern:[40,41,1028,1052,1053,1054],peopl:43,per:[954,1175,1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299],percent_used_mem_on_dev:954,percent_used_mem_on_nod:1175,percentag:[954,993,1175],perf_count:1175,perform:[40,41,43,909,910,911,954,1028,1033,1048,1052,1053,1054,1073,1074,1075,1079,1080,1081,1123,1126,1128,1130,1131,1132,1139,1140,1171,1172,1173,1174,1175,1219,1224,1225,1238,1240,1241,1242,1243,1244,1245,1246,1248,1253,1256,1264,1266],period:43,permissable_step:1175,permit:43,permut:[507,1028,1110,1116],perpendicular:[1028,1047],person:[43,1275],physci:1321,pickl:[40,41,1175],pickle_filepath:[40,41],pinv:[364,807,1146],pip:1275,pipelin:1317,pkk:1321,pkkm1:1321,pkm1km1:1321,place:[40,41,43,869,870,871,872,874,954,999,1028,1057,1061,1073,1074,1075,1175,1308,1309,1310,1311,1312,1313],placehold:[43,1219,1228],pleas:[43,507,1146,1151],point:[43,868,869,870,871,874,875,876,879,880,882,883,884,890,892,893,895,899,1004,1019,1028,1031,1156,1164],popul:[40,41,1231,1232],popular:1321,population_s:[507,508,1231,1232],portabl:[1275,1276],posit:[15,16,17,875,876,879,885,909,910,911,954,976,980,986,1028,1029,1031,1057,1060,1175,1231,1236,1281,1282],possibi:[40,41],possibl:[43,1028,1082,1113,1139,1144,1321],post:[1273,1274],post_shap:[40,41],power:[43,913,938,944,1028,1065,1098,1107,1283],practic:1275,pre:[954,1175,1275],pre_shap:[40,41],precis:[875,876,879,893],pred:[1269,1270,1271,1272],predict:[1269,1270,1271,1272,1321],preprint:1275,present:[40,41],preserv:[40,41,42,900,901,1123,1134],preserve_typ:[40,41,491,494,1123,1134],press:1275,prevent:[43,1123,1125,1126,1130,1175,1308,1309,1310],prevet:43,previou:[1123,1126,1130],previous:[1028,1039],prime:1275,print:[40,41,42,954,994,1028,1091,1275,1317],print_all_arrays_in_memori:1028,print_all_arrays_on_dev:954,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1308,1312],prob:[507,508,1231,1232,1256,1264,1292,1300],probabl:[1231,1232,1256,1264,1292,1300],problem:[43,1321],process:[43,954,963,964,993,1003,1028,1087,1175],process_specif:[954,993,1003,1175],prod:[40,41,1028,1053],produc:[954,963,964,1175],product:[40,41,1028,1047,1048,1083,1238,1239,1256,1267,1268,1292,1303],profil:[131,301,457,589,725,954,1175],progress:43,project:[1275,1317,1318,1321],promot:[43,879,880,881,883,884,890,892,893,895,899,913,938,1156,1164],prompt:1275,properli:43,properti:[40,41,407,954,966,1175,1304,1305,1308,1309,1310,1311,1313],provid:[40,41,43,900,901,902,903,909,910,911,952,953,954,971,1004,1011,1012,1013,1018,1027,1028,1051,1089,1097,1122,1123,1126,1128,1130,1131,1132,1138,1175,1275,1292,1301,1308,1309,1310,1311,1312,1313,1318],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1146,1150],pull:[1275,1276],pure:[40,41,1275,1321],purpos:[43,1321],put:1175,pybroadexcept:1175,pyprotectedmemb:1175,pyshadowingbuiltin:43,pyshadowingnam:[955,1005,1006,1007,1124,1175],python:[40,41,954,993,1003,1028,1031,1175,1275],pytorch:[1123,1126,1128,1130,1131,1132,1146,1151,1275,1308,1309,1310,1311,1312,1313,1317,1318,1321],pyunresolvedrefer:1175,quadrant:[1156,1161],qualiti:43,queri:[40,41,913,927,948,954,987,997,1175,1256,1267,1268,1292,1303],query_dim:[1292,1303],query_kei:[40,41],queue:[40,41,42,954,963,964,1028,1092,1100,1175],queue_class:[954,963,964,1175],queue_load_s:[40,41,42],queue_timeout:[40,41,42,1028,1175],quick:[507,1275],quickli:[43,1317],radian:[879,883,892,1156,1157,1159,1161,1169],rai:[1156,1157],rais:[40,41,43,909,910,911,913,938,1028,1037,1065,1098,1105,1107,1117,1175,1304,1305,1308,1312],ram:[954,993,1000,1003,1175],randint:[182,373,507,646,831,1231],random:[37,40,41,508,1232,1233,1234,1235,1236,1237,1275],random_crop:1139,random_norm:[182,373,507,646,831,1231],random_uniform:[182,373,507,646,831,1231],randomli:[507,1139,1143,1256,1264,1292,1300],rang:[507,1028,1031,1080,1081,1156,1161,1175,1275,1317,1321],rank:[895,899,909,910,911,1028,1044,1118,1121],rate:[1123,1126,1128,1130,1131,1132,1171,1172,1173,1174,1292,1303,1308,1309,1310,1311,1312,1313],rather:[40,41,43,954,998,1028,1031,1077,1123,1129,1175],ratio:[954,1123,1130,1139,1144,1175,1308,1310],raw:[40,41,1146,1151],raw_delta:1175,reach:[43,954,976,980,986,1175,1219,1228],read:[40,41],readi:[1175,1317],real:[1156,1157,1160],realiti:1318,rearrang:[40,41,1028,1052,1054],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1171,1173],receiv:[43,954,963,964,1028,1032,1082,1175,1292,1302],receivess:[954,1175],receivng:[1171,1174],recev:[1171,1172,1173],recognit:1321,recommend:[879,891,1275],rectifi:[1248,1250,1251],recurr:[1256,1266],recurrent_bia:[1256,1266],recurrent_kernel:[1256,1266],recurs:[40,41,1219,1220,1221,1227,1228],redefin:43,reduc:[40,41,902,903,909,910,911,954,998,1028,1053,1146,1151,1175,1238,1240,1241,1242,1243,1244,1245,1246],reduce_max:[40,41,189,378,509,651,838,1238],reduce_mean:[40,41,189,378,509,651,838,1238,1275,1317],reduce_min:[40,41,189,378,509,651,838,1238],reduce_prod:[40,41,189,378,509,651,838,1238],reduce_std:[40,41,378,1238],reduce_sum:[40,41,189,378,509,651,838,1175,1238],reduce_var:[40,41,189,378,509,651,838,1238],reduct:[39,40,41,459,484,485,909,910,911,1028,1053,1096,1097,1239,1240,1241,1242,1243,1244,1245,1246,1275],refactor:43,refer:[43,879,889,909,910,911,1123,1125,1126,1146,1152,1292,1302,1321],reflect:43,reflected_oper:[0,13,14],regard:[954,1175],regardless:[40,41,952,953],register_paramet:1317,reimplement:1321,rel:[895,896,900,901,905,906,1123,1126,1128,1130,1131,1132],rel_slice_obj:1175,relat:43,relev:[1308,1309,1310,1311,1312,1313],relu:[847,1248,1249,1250,1275,1317],remain:[43,1028,1094,1219,1223],remaind:[40,41,1028,1059,1104],remov:[40,41,43,895,896,902,903,1028,1105,1171,1172,1173],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,900,901],rep:[1028,1111],repeat:[40,41,43,307,733,1028,1054,1111,1175,1318],repeated_config_check:[954,1175],repeatedli:[1219,1226],repetit:[40,41,1028,1093,1111],replac:[40,41,43,507,508,1028,1040,1096,1097,1231,1232],repo:[43,1275],repositori:43,repres:[43,879,880,884,895,897,1004,1010,1015,1256,1265],represent:[40,41,42,43,868,875,876,877,879,881,954,981,982,1004,1010,1016,1017,1028,1103,1113,1175],reptil:[1171,1174],reptile_step:1171,request:[1275,1276],requir:[43,879,893,952,953,1004,1008,1028,1031,1034,1281,1282],resampl:[1028,1079],reserv:43,reshap:[40,41,43,507,733,1028],reshape_lik:[40,41],respect:[879,881,887,888,913,932,1028,1055,1123,1125,1126,1127,1128,1130,1131,1132,1146,1151,1156,1164,1171,1172,1173,1174],respond:43,respons:[43,1175],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,899,902,903,909,910,911,913,931,932,938,954,963,1028,1031,1055,1096,1097,1108,1146,1149,1153,1154,1155,1156,1164,1175,1238,1240,1241,1242,1243,1244,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1275],ret:1175,ret_dict:1175,ret_fn:[954,963,964,1175],retain:[1123,1127],retain_grad:[491,492,1123,1127],retreiv:1175,retrn:[1028,1103],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1171,1172,1173,1174],return_sequ:[1292,1301],return_st:[1292,1301],rev:[1028,1051],revers:[40,41,900,901,1028,1051,1116],review:43,right:[40,41,43],rk_e:1321,robot:1275,ronald:1275,root:[43,879,893],round:[307,459,733,879,882,893,1028,1031,1175],row:[1028,1070,1231,1232],rule:[43,913,938,1028,1031,1156,1164],run:[43,954,963,1123,1125,1126,1130,1171,1172,1173,1174,1175,1275,1276,1292,1303,1304,1305],safe:[954,963,1175],safety_factor:[954,1175],same:[15,16,17,40,41,43,869,872,873,879,882,895,896,898,900,901,902,903,905,906,954,963,964,998,999,1004,1008,1028,1029,1043,1058,1059,1062,1063,1089,1095,1096,1097,1108,1122,1123,1129,1134,1156,1160,1171,1172,1173,1175,1238,1239,1256,1257,1258,1259,1260,1261,1262,1263,1275,1292,1293,1294,1295,1296,1297,1298,1299,1317,1321],same_arrai:[40,41],sampl:[1028,1079,1139,1140,1231,1232,1234,1235,1256,1264,1275,1292,1300],satisfi:[1028,1034,1146,1148,1152],save:[40,41,1028,1101,1112,1139,1141,1304,1305],save_dir:[457,458,954,969,1175],save_weight:[1304,1305],scalar:[895,899,1028,1040,1089,1115,1119],scale:[954,996,997,1123,1131,1175,1256,1264,1267,1268,1273,1274,1292,1300,1303,1308,1311],scaled_dot_product_attent:1256,scatter:[1028,1089,1096,1097],scatter_flat:[138,307,459,596,733,1028],scatter_nd:[138,307,459,596,733,1028],scene:[1123,1126,1128,1130,1131,1132],schemat:1275,screen:[40,41],script:43,search:[15,18,19,40,41],searching_funct:[902,903],second:[40,41,879,881,887,888,895,896,954,985,1028,1035,1047,1055,1092,1100,1110,1123,1125,1126,1130,1171,1173,1175,1308,1309,1310],secondli:1321,sector:[879,880],see:[43,59,407,457,458,507,879,881,887,895,899,909,910,911,913,931,932,938,954,966,967,968,969,1004,1028,1031,1080,1081,1123,1156,1164,1275,1283,1285,1286,1288,1289,1291],seed:[40,41,182,507,831,1231],seed_valu:[40,41,507,1231,1236],seem:1275,seen_set:[1028,1068],select:[1028,1034,1105,1318,1321],self:[40,41,43,59,407,457,458,913,932,938,954,966,967,968,969,1004,1123,1175,1275,1283,1285,1286,1288,1289,1291,1308,1312,1317,1321],self_i:[913,932],sent:1175,seper:[43,1028,1060],seq:[40,41,42,1238,1239,1304,1305],sequenc:[15,16,17,40,41,42,43,507,952,953,954,963,964,973,974,975,976,977,978,979,980,983,984,998,1004,1008,1028,1031,1034,1036,1038,1043,1044,1070,1082,1085,1090,1093,1094,1097,1104,1108,1111,1116,1121,1123,1127,1139,1143,1144,1146,1149,1175,1219,1230,1231,1233,1235,1238,1240,1241,1242,1243,1244,1245,1246,1256,1257,1258,1259,1260,1261,1262,1263,1273,1274,1281,1282,1292,1293,1294,1295,1296,1297,1298,1299,1301,1304,1305,1306,1307,1308,1312,1314,1315],sequenti:1275,seri:43,set:[15,18,19,40,41,902,903,905,906,954,983,984,996,997,998,1028,1030,1050,1070,1098,1099,1100,1101,1123,1126,1128,1129,1130,1131,1132,1146,1149,1175,1219,1220,1227,1229,1230,1231,1232,1236,1238,1240,1241,1242,1243,1244,1245,1246,1275,1292,1301,1308,1309,1310,1311,1312,1313,1318,1321],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:954,set_default_dtyp:1004,set_default_float_dtyp:1004,set_default_int_dtyp:1004,set_default_nod:1175,set_exception_debug_mod:44,set_framework:[40,41,43,59,1175,1275,1317,1318,1321],set_ivy_backend:[40,41],set_min_bas:1028,set_min_denomin:1028,set_nest_at_index:1219,set_nest_at_indic:1219,set_queue_timeout:1028,set_split_factor:[954,1175],set_stat:[1308,1309,1310,1311,1312,1313],set_tmp_dir:1028,set_with_grad:1123,setter:1175,sever:1321,sgd:[1275,1308],shape0:1175,shape:[40,41,43,401,402,403,406,459,471,485,507,733,869,870,871,872,873,874,895,896,900,901,902,903,905,906,954,966,1004,1008,1028,1029,1038,1043,1044,1057,1058,1059,1061,1063,1067,1070,1089,1090,1093,1094,1095,1096,1097,1103,1105,1108,1121,1122,1139,1143,1146,1148,1151,1156,1160,1161,1175,1231,1233,1234,1235,1238,1239,1256,1258,1260,1262,1292,1294,1295,1296,1297,1298,1299,1306,1307],shape_slic:[40,41],shape_to_tupl:1028,share:[40,41,1275,1318],shift:1175,should:[40,41,42,43,507,869,873,879,880,881,882,883,884,885,886,887,890,891,892,893,895,896,899,902,903,913,931,932,938,952,953,954,1028,1038,1039,1045,1089,1094,1123,1126,1128,1130,1131,1132,1156,1164,1175,1238,1239,1275],show:[40,41,1275,1321],show_mod_in_top_mod:[1304,1305],show_structur:[1304,1305],show_sub_contain:[40,41],show_v:[1304,1305],show_v_in_top_v:[1304,1305],shown:[40,41],shp:1175,shuffl:[40,41,182,507,831,1231],shuffle_h5_fil:[40,41],side:43,sigmoid:[847,1248,1275,1317],sign:[895,897],signatur:[43,59,407,457,458,459,491,496,500,504,505,507,954,966,967,968,969,1004,1123,1283,1285,1286,1288,1289,1291],signific:1321,similar:[43,1256,1267,1292,1303],similarli:[1146,1151],simpl:[43,1028,1056,1275,1318,1321],simpler:43,simplest:1318,simpli:[40,41,43,1275,1318,1321],simultan:1275,sin:[88,225,412,543,679,879,1028,1060,1156,1169,1318],sinco:1318,sine:[879,880,892,1156,1159,1168],singl:[40,41,952,953,954,963,964,983,984,985,986,1028,1105,1115,1119,1139,1144,1175,1231,1234,1235,1238,1240,1241,1242,1243,1244,1245,1246,1275,1318,1321],singleton:[895,899,909,910,911],singular:[895,898],sinh:[817,1156],siren:[1275,1283],situat:43,size:[40,41,42,459,484,895,896,898,902,903,909,910,911,954,977,978,979,980,996,997,998,1028,1031,1038,1080,1081,1096,1104,1139,1143,1146,1149,1175,1231,1232,1234,1235,1238,1240,1241,1242,1243,1244,1245,1246,1292,1293,1294],size_ordered_arrai:[40,41],skew:[1146,1152],skinv:1321,skip:[40,41],slice:[40,41,1028,1062,1063,1175,1219,1226],slice_kei:[40,41],slice_obj:[40,41,1175],slice_via_kei:[40,41],slide:[1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299],slodget:895,slogdet:[235,429,560,696],slope:[1248,1250],small:[1269,1270,1271,1272,1273,1274,1275,1306,1307,1318],smaller:[1028,1040],smallest:[40,41,875,876,877,879,882,1028,1033],smallest_norm:[407,875,876],softmax:[198,518,847,1248,1256,1267,1268],softplu:[847,1248],solut:43,solv:1321,some:[40,41,43,1028,1031,1123,1125,1126,1128,1130,1131,1132,1137,1256,1264,1275,1292,1300,1318,1321],some_backend:43,some_namespac:43,someth:[43,1321],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,895,898,906,1175],sort_by_kei:[40,41],sorting_funct:[905,906],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,401,402,403,404,405,406,407,409,410,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,494,495,496,497,498,499,500,501,502,503,505,506,507,508,869,870,871,872,873,874,875,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,897,898,899,900,901,902,903,905,906,907,908,909,910,911,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,956,957,958,959,960,961,963,964,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1219,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1248,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1278,1279,1280,1281,1282,1283,1285,1286,1288,1289,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1319,1320,1321],space:[1028,1031,1060,1080,1081],spars:[1269,1272],sparse_cross_entropi:1269,spawn:[1028,1087],special:[43,879,880,882,883,884,890,892,893],specif:[40,41,43,879,891,954,996,1028,1045,1052,1053,1054,1087,1171,1172,1173,1174,1175,1231,1237,1275,1304,1305,1317,1318],specifc:[1231,1232],specifi:[40,41,43,869,870,871,873,874,895,896,899,900,901,902,903,905,906,909,910,911,954,973,974,975,976,977,978,979,980,983,984,988,990,994,997,998,999,1004,1008,1010,1028,1031,1033,1034,1040,1043,1044,1061,1062,1063,1069,1080,1081,1108,1118,1121,1146,1149,1175,1219,1224,1225,1229,1230,1238,1239,1240,1241,1242,1243,1244,1245,1246],sphinx:43,split:[40,41,138,307,459,596,733,954,963,977,978,979,980,996,997,998,1028,1082,1175],split_arg:1175,split_factor:[954,963,1175],split_func_cal:[954,1175],split_siz:1175,spread:[954,986,1175],sqrt:[88,225,412,543,679,879,895,899],squar:[879,893,895,897,1028,1070,1146,1148],squeez:[138,307,459,596,733,1028],stabil:[905,906,1028,1106,1107],stabl:[905,906,1028,1065,1066,1098,1099,1106,1107],stable_divid:1028,stable_pow:1028,stack:[40,41,307,733,869,873,895,896,1028,1139,1144,1219,1220,1227,1292,1301],stack_imag:[172,360,496,636,803,1139],stacked_dim_s:1175,stage:43,standard:[40,41,875,876,1231,1234,1238,1244,1273,1274,1275,1276,1306,1307],start:[40,41,43,457,458,459,460,481,482,507,954,969,1028,1031,1080,1081,1175,1275,1318],starting_index:[40,41],starting_split_factor:[954,1175],state:[1175,1256,1266,1275,1278,1279,1280,1281,1282,1283,1285,1286,1288,1289,1291,1292,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315,1317],statement:1318,static_argnam:[459,464,952,953],static_argnum:[459,464,952,953],statistical_funct:[907,908],std:[507,1231,1234],step:[40,41,459,460,954,1028,1031,1080,1081,1123,1125,1126,1128,1130,1131,1132,1171,1172,1173,1174,1175,1275,1308,1309,1310,1311,1312,1313,1317,1321],stephen:1275,stick:1275,still:[40,41,43],stochast:[1308,1313],stop:[40,41,457,458,459,460,481,482,954,969,998,1028,1031,1080,1081,1123,1126,1128,1130,1131,1132,1134,1171,1172,1173,1174,1175,1308,1309,1310,1311,1312,1313],stop_gradi:[40,41,355,491,631,797,954,998,1123,1126,1128,1130,1131,1132,1171,1172,1173,1174,1175,1308,1309,1310,1311,1312,1313],stopiter:1175,store:[40,41,1028,1060,1104,1123,1137,1304,1305],store_var:[1304,1305],str:[15,16,17,40,41,42,43,401,402,403,404,406,407,409,410,869,872,875,876,877,952,953,954,963,964,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,998,1004,1009,1010,1015,1016,1017,1018,1019,1020,1027,1028,1034,1050,1052,1053,1054,1085,1087,1090,1096,1097,1146,1149,1151,1171,1172,1173,1174,1175,1219,1223,1238,1239,1281,1282,1292,1303,1304,1305],str_to_nod:1175,straight:1318,strength:[1275,1321],stride:[1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299],string:[40,41,43,954,970,972,981,982,987,993,999,1000,1003,1004,1008,1014,1016,1017,1018,1027,1028,1031,1034,1050,1070,1090,1122,1175,1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299,1304,1305],structur:[40,41,42,43,1028,1045],structural_diff:[40,41],style:43,sub:[40,41,43,895,896,954,977,978,983,984,985,986,1028,1104,1171,1172,1173,1174,1175],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1175,sub_mod:[1304,1305],sub_modul:[1314,1315],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1275,1276,1306,1307,1314,1315],subsequ:43,subset:43,substr:[40,41],suffici:[1146,1151],suggest:1275,suitabl:[1139,1144],sum:[40,41,459,484,485,895,899,954,983,984,985,986,998,1028,1049,1053,1096,1097,1175,1238,1239,1245],summat:[40,41,1238,1239],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,81,82,84,85,86,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,106,107,108,110,112,115,117,119,120,132,133,134,135,136,137,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,163,164,165,166,167,168,170,171,173,174,175,177,178,179,183,184,185,186,187,188,190,191,192,193,194,195,196,199,201,202,204,205,206,207,208,209,210,215,216,217,218,219,221,222,223,226,227,228,229,230,231,232,233,236,237,238,239,240,242,244,247,250,251,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,302,303,304,305,306,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,345,346,347,348,349,350,351,352,353,354,356,357,358,359,361,362,363,365,366,367,368,370,371,374,375,376,377,379,380,381,382,383,384,385,386,389,391,392,393,394,395,396,397,402,403,404,405,406,408,409,410,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,430,431,432,433,434,436,438,441,443,445,446,458,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,492,493,494,495,497,498,499,501,502,503,506,508,510,511,512,513,514,515,516,519,520,522,523,524,525,526,527,528,533,534,535,536,537,539,540,541,544,545,546,547,548,549,550,551,552,553,554,555,556,557,558,561,562,563,564,565,567,569,572,574,576,577,585,590,591,592,593,594,595,597,598,599,600,601,602,603,604,605,606,607,608,609,610,611,612,613,614,615,616,617,618,619,620,621,622,623,624,625,626,627,628,629,630,632,633,634,635,637,638,639,641,642,643,647,648,649,650,652,653,654,655,656,657,658,662,663,664,669,670,671,672,673,675,676,677,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,697,698,699,700,701,703,705,708,710,712,713,721,726,727,728,729,730,731,732,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,773,774,775,776,777,778,779,780,781,782,783,784,785,786,787,788,789,790,791,792,793,794,795,796,798,799,800,801,802,804,805,806,808,809,810,811,812,813,815,816,818,819,820,821,822,823,824,825,826,827,828,829,830,832,833,834,835,836,837,839,840,841,842,843,844,845,848,849,850,851,852,853,854,856,857,859,860,861,862,863,864,865,870,871,872,873,874,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,896,897,898,899,901,903,906,908,910,911,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,953,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1151,1152,1154,1155,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1172,1173,1174,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1223,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1239,1240,1241,1242,1243,1244,1245,1246,1249,1250,1251,1252,1253,1254,1255,1256,1257,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1270,1271,1272,1274,1275,1279,1280,1282,1284,1285,1286,1287,1288,1289,1290,1291,1293,1294,1295,1296,1297,1298,1299,1300,1301,1302,1303,1305,1307,1308,1309,1310,1311,1312,1313,1315,1316,1317,1318,1320,1321],supports_inplac:1028,suppos:1321,sure:43,svd:[105,235,429,560,696,895],swap:[40,41,1028,1110],swapax:[40,41,596,733,1028,1321],symmetr:[1146,1152],syntax:[457,459,491,496,500,504,505,507],tab:1275,take:[43,1028,1079],taken:[43,895,896,1238,1240,1241,1242,1244,1246],tan:[817,1156,1160],tangent:[1156,1160,1161,1162,1169,1170,1248,1255],tanh:[817,847,1156,1248],target:[40,41,954,970,973,974,975,976,977,978,979,980,983,984,985,986,999,1175,1275],target_dict:[40,41],task:[43,1171,1172,1173,1174],team:[43,1321],templat:1275,temporari:[1028,1101,1112],tensor:[40,41,43,459,484,485,954,972,1004,1014,1028,1031,1033,1038,1080,1081,1084,1086,1089,1090,1094,1096,1097,1104,1122,1175,1231,1232,1233,1256,1264,1266,1275,1292,1300,1302,1308,1309,1310,1311,1312,1313,1317,1318],tensorflow:[43,1146,1151,1256,1258,1260,1262,1275,1292,1294,1296,1298,1318,1321],term:[40,41,43,1256,1266,1275,1292,1302],termcolor:[40,41,42],termin:[40,41,42,1175],test:[43,879,885,886,909,910,911,1004,1019,1020],test_array_api:43,tf_concat:1275,than:[40,41,43,875,876,879,882,890,893,895,899,900,901,954,998,1028,1031,1040,1058,1077,1084,1105,1108,1123,1129,1175,1231,1235,1275,1318],thei:[40,41,43,1156,1161,1171,1172,1173,1231,1232,1275,1314,1315,1318],them:[1275,1321],themselv:[1219,1220],therefor:43,thi:[40,41,42,43,879,891,895,897,902,903,954,976,980,986,993,998,1003,1028,1031,1060,1092,1094,1100,1123,1126,1128,1129,1130,1131,1132,1137,1146,1149,1175,1219,1223,1228,1238,1240,1241,1242,1243,1244,1245,1246,1256,1265,1275,1304,1305,1308,1309,1310,1311,1312,1313,1317,1318,1321],thing:[43,1275],those:[40,41,43,895,898,1028,1040,1123,1137,1175],though:43,thought:43,threshold:[1028,1084,1086],through:[40,41,43],tick:43,tickbox:43,tile:[307,596,733,1028],time:[43,1028,1111,1123,1126,1130,1171,1172,1173,1174,1175,1231,1232,1256,1266,1292,1303,1304,1305,1321],timeout:[40,41,42,954,963,964,1028,1092,1100,1175],timestep:[1256,1266,1292,1301],titl:[43,1275],tmp_dir:1028,tmp_dr:[1028,1101],to_appli:[40,41],to_clon:[954,1175],to_dev:[40,41,131,301,457,589,725,954],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[954,1175],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1275],to_ivy_modul:[200,855,1275,1281],to_json:[40,41],to_kv_fn:[1256,1267],to_kv_v:[1256,1267],to_list:[40,41,459,733,1028],to_multi_dev:[40,41],to_mut:[1219,1221,1228],to_n:[15,40,41,1275],to_nod:1175,to_numpi:[40,41,459,733,1028,1275,1317],to_out_fn:[1256,1267],to_out_v:[1256,1267],to_q_fn:[1256,1267],to_q_v:[1256,1267],to_raw:[40,41],to_scalar:[459,733,1028],todo:[1175,1275,1276],togeth:[40,41,1314,1315],tool:[1275,1318],top_mod:[1304,1305],topic:1321,torch:[43,952,953,1275,1317,1318,1321],torch_concat:1275,torchfcmodel:1317,total:[40,41,42,954,1000,1175],total_mem_on_dev:954,total_mem_on_nod:1175,tpu:[954,1001,1175],tpu_is_avail:[457,589,725,954,1175],trace:[40,41,1028,1077],track:[43,954,1175,1219,1228,1304,1305],track_submod_call_ord:[1304,1305],track_submod_ret:[1304,1305],trail:[1306,1307],train:[1123,1125,1126,1130,1275,1276],trainabl:[1123,1129,1275,1276,1281,1282,1304,1305,1314],trainer:1275,tran:1321,transform:[1256,1264,1265],transpos:[40,41,138,307,459,733,954,985,1028,1175,1256,1258,1260,1262,1292,1294,1296,1298],travers:[15,18,19,40,41,1219,1228],treat:[40,41,952,953],tri:[40,41],triangular:[869,873],trigonometr:[1156,1157,1160],tril:[77,214,401,532,668,869],trim_kei:[40,41],trust:[1123,1130,1308,1310],truth:[879,887,888,913,931,932,1028,1055,1153,1154,1155],try_else_non:1028,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[954,1175],tune_dev_alloc:954,tune_dev_split:954,tune_node_alloc:1175,tune_node_split:1175,tune_step:[954,1175],tupl:[15,16,17,18,19,40,41,43,401,402,403,406,869,870,871,874,895,898,899,900,901,907,908,909,910,911,952,953,1028,1044,1060,1061,1103,1121,1175,1219,1220,1221,1222,1224,1225,1226,1227,1228,1229,1230,1231,1233,1238,1240,1241,1242,1243,1244,1245,1246],tutori:43,two:[40,41,869,873,895,896,897,898,1028,1031,1035,1047,1083,1110,1146,1149],type:[15,18,40,41,42,43,59,409,410,457,458,869,870,871,872,873,874,876,877,879,880,881,882,883,884,885,886,887,888,890,891,892,893,895,896,899,900,901,905,906,909,910,911,913,931,932,938,954,966,967,968,969,981,982,986,998,1004,1008,1009,1010,1014,1015,1016,1017,1018,1019,1020,1027,1028,1029,1031,1034,1043,1045,1055,1058,1059,1061,1070,1077,1089,1090,1095,1109,1119,1122,1123,1129,1134,1156,1164,1175,1275,1283,1285,1286,1288,1289,1291,1304,1305,1318],types_to_iteratively_nest:[40,41,42],uint8:[1139,1141,1145],uint8_img_to_float_img:1139,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[879,881],underwai:43,unecessari:43,unfairli:43,unif:1175,unifi:[40,41,954,983,984,985,986,998,1175,1275],uniform:[40,41,1231,1232,1234,1235,1283,1285,1286,1289,1290],uniformli:[1231,1233,1235],unify_arrai:1175,unify_it:1175,unify_nest:1175,uniniti:[869,870],union:[15,18,19,40,41,43,401,402,403,404,406,407,409,410,869,870,871,872,873,874,875,876,877,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,895,897,898,899,900,901,902,903,905,906,907,908,909,910,911,913,931,932,938,952,953,954,972,977,978,979,980,998,999,1004,1008,1009,1010,1014,1015,1016,1017,1018,1019,1020,1027,1028,1029,1030,1031,1033,1034,1035,1036,1038,1040,1041,1042,1043,1044,1046,1047,1048,1049,1052,1053,1054,1055,1057,1058,1059,1060,1061,1062,1063,1067,1069,1070,1071,1078,1079,1080,1081,1083,1084,1085,1086,1089,1090,1093,1094,1095,1096,1097,1102,1103,1104,1105,1108,1110,1111,1113,1114,1115,1116,1118,1119,1120,1121,1122,1175,1219,1220,1221,1227,1228],uniqu:[954,963,964,1171,1172,1173,1174,1175,1219,1223],unique_kwarg:1175,unit:[43,954,1156,1157,1159,1175,1248,1249,1250,1251],unitari:[895,898],unless:[1028,1089,1122],unlik:[954,1175],unnorm:[1231,1232],unpack:[1028,1118],unrol:[1256,1266],unset:1318,unset_debug_mod:44,unset_default_devic:954,unset_default_dtyp:1004,unset_default_float_dtyp:1004,unset_default_int_dtyp:1004,unset_framework:[59,1318],unset_with_grad:1123,unstack:[40,41,138,307,459,596,733,1028],until:43,unus:[952,953],updat:[40,41,459,484,485,954,963,1028,1075,1096,1097,1123,1125,1126,1128,1130,1131,1132,1171,1172,1173,1175,1219,1224,1225,1229,1230,1256,1266,1275,1276,1281,1282,1308,1309,1310,1311,1312,1313,1318,1321],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1231,1235],upper_depth:[1304,1305],upstream:43,usabl:[1275,1321],usag:[954,998,1175],use:[40,41,42,43,507,954,963,964,989,1001,1028,1093,1106,1107,1146,1151,1175,1256,1267,1273,1274,1275,1306,1307,1318,1321],used:[40,41,43,507,895,896,954,963,993,996,997,1003,1004,1015,1028,1065,1066,1082,1096,1097,1098,1099,1122,1123,1130,1131,1146,1149,1171,1172,1173,1174,1175,1219,1228,1292,1303,1308,1310,1311,1317,1318],used_dev:[954,963],used_mem_on_dev:954,used_mem_on_nod:1175,used_node_str:1175,used_node_strs_dict:1175,useful:[40,41,954,998,1175,1256,1265,1275,1318],user:[1275,1292,1303,1304,1305,1318,1321],uses:1275,using:[40,41,43,1123,1125,1126,1219,1222,1226,1238,1239,1256,1264,1268,1275,1292,1300,1317,1318,1321],util:[954,987,1175],utility_funct:[909,910,911],v_with_top_v_key_chain:[1304,1305],val:[40,41,459,476,477,478,913,948,1028,1073,1074,1075,1098,1099],valid:[909,910,911,1004,1009,1028,1106,1107,1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299],valid_dtyp:1004,valu:[40,41,459,879,882,887,888,895,897,898,899,902,903,905,906,907,908,913,931,932,954,966,997,998,1028,1029,1031,1033,1040,1041,1042,1044,1045,1051,1055,1060,1061,1062,1063,1078,1080,1081,1084,1086,1092,1093,1094,1095,1096,1097,1098,1099,1100,1116,1119,1120,1121,1123,1127,1130,1139,1145,1153,1154,1155,1156,1165,1166,1167,1171,1172,1173,1175,1219,1223,1224,1225,1229,1230,1231,1234,1235,1238,1240,1242,1256,1267,1268,1273,1274,1292,1303,1306,1307,1308,1310],value_is_nan:1028,vanilla:[1171,1173],var_shap:1283,variabl:[15,16,17,18,19,40,41,355,491,631,797,1028,1037,1073,1074,1075,1076,1077,1109,1123,1126,1127,1128,1129,1130,1131,1132,1134,1137,1171,1172,1173,1174,1256,1267,1273,1274,1281,1282,1283,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313,1314,1315],variable_data:[491,797,1123],varianc:[40,41,1238,1246,1321],varieti:1318,variou:[43,1275],vector:[40,41,500,503,895,898,899,1028,1042,1047,1146,1152,1256,1265,1292,1302],vector_norm:[40,41,105,235,429,560,696,895],vector_to_skew_symmetric_matrix:[176,364,500,640,807,1146],verbos:1320,veri:[43,1275],verifi:43,version:43,via:[1219,1220,1227,1318],view:[1139,1144],vision:1275,visual:1318,volum:[1256,1261],vw_tm1:[1123,1126,1130],wai:[1318,1321],wait:[40,41,42,43],want:[43,1275,1318,1321],warn:[59,66,67,68,69,70],warp:[496,497,1139,1140],watch:1317,websit:43,weight:[1123,1125,1126,1128,1130,1131,1132,1256,1265,1266,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1304,1305,1308,1310,1311],weight_initi:[1292,1293,1294,1295,1296,1297,1298,1299,1301,1302],weights_path:[1304,1305],well:[40,41,1028,1069],were:[40,41,1175],what:[43,1275],when:[40,41,42,43,895,898,954,1028,1039,1107,1120,1175,1275,1304,1305,1318,1321],where:[40,41,43,307,459,733,879,889,895,898,909,910,911,913,938,1028,1031,1038,1040,1044,1057,1071,1078,1089,1121,1219,1220,1227,1231,1232],wherea:43,wherebi:[1219,1228],whether:[15,18,19,40,41,42,879,886,909,910,911,952,953,954,972,985,989,993,998,1001,1003,1004,1014,1018,1019,1020,1027,1028,1030,1035,1036,1048,1051,1056,1060,1067,1069,1072,1076,1077,1082,1102,1109,1118,1119,1123,1126,1127,1128,1129,1130,1131,1132,1134,1171,1172,1173,1174,1175,1219,1220,1221,1223,1227,1228,1231,1232,1248,1249,1256,1264,1275,1281,1282,1292,1300,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1311,1312,1313],which:[40,41,42,43,507,869,870,871,872,873,874,875,876,877,895,896,899,900,901,902,903,905,906,907,908,909,910,911,952,953,954,963,964,972,977,978,979,980,983,984,985,986,988,990,994,996,997,998,1004,1009,1014,1018,1027,1028,1031,1034,1043,1045,1047,1048,1049,1051,1061,1062,1063,1064,1070,1071,1079,1080,1081,1088,1089,1090,1091,1093,1096,1097,1104,1108,1118,1120,1122,1123,1126,1127,1128,1130,1131,1132,1134,1136,1137,1139,1141,1146,1149,1156,1161,1175,1219,1223,1224,1225,1229,1230,1231,1232,1233,1234,1235,1238,1240,1241,1242,1243,1244,1245,1246,1248,1253,1256,1267,1268,1275,1281,1282,1292,1293,1294,1295,1296,1297,1298,1299,1301,1302,1303,1304,1305,1306,1307,1308,1309,1310,1312,1314,1315,1317,1318],whilst:43,whitespac:[40,41,42],who:43,whose:[43,869,873,879,880,883,884,892,895,896,900,901,913,931,938,1028,1034,1039,1238,1239,1240,1241,1242,1244,1246],why:[1275,1276],width:[1139,1144],wiki:1321,wikipedia:1321,window:[1139,1144,1256,1257,1258,1259,1260,1261,1262,1263,1292,1293,1294,1295,1296,1297,1298,1299],wise:[40,41,43,879,881,887,888,891,913,931,932,938,1028,1040,1055,1058,1059,1084,1086,1095,1123,1126,1128,1130,1132,1153,1154,1155,1156,1157,1159,1160,1161,1164,1165,1166,1167,1169,1248,1249,1250,1251,1252,1253,1254,1255],wish:1318,with_bia:[1292,1302],with_cal:[1028,1051],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1123,1133],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1175,with_partial_v:[1304,1305],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,459,486,1028,1104,1175],with_to_kv_fn:[1292,1303],with_to_out_fn:[1292,1303],with_to_q_fn:[1292,1303],within:[15,18,19,43,895,898,1028,1031,1231,1235],without:[40,41,43,1028,1092,1094,1100,1219,1221,1318],wonder:1275,word:[15,16,17,1028,1031,1231,1235,1281,1282],work:[43,1317],worker:[954,963,964,1175],worker_class:[954,963,964,1175],worker_kwarg:1175,would:[43,1248,1253,1275,1318,1321],wrap:[15,40,41,42,43,457,459,491,496,500,504,505,507,1028,1039,1123,1137,1275],wrapper:43,write:[40,41,43,1275,1276,1321],written:[43,1275,1321],ws_new:[1123,1126,1128,1130,1131,1132],x1_i:[879,881,887,888,1028,1055,1156,1164],x2_i:[879,881,887,888,1028,1055,1156,1164],x_feat_dim:[1256,1267],x_i:[879,880,882,883,884,885,886,890,891,892,893],x_in:[1275,1317],x_inv:[1146,1148],x_max:[459,1028,1040],x_min:[459,1028,1040],x_sub:1175,xkk:1321,xkkm1:1321,xkm1km1:1321,xs0:1175,xs_t:1175,year:[1275,1321],yet:[1219,1228,1321],yield:[1028,1120],you:[43,1275,1317,1318,1321],your:[1275,1276,1317,1318,1321],your_awesome_project:1318,yourself:[43,1275],yourslef:43,youtub:43,zero:[40,41,77,214,401,532,668,869,870,873,879,891,895,899,909,910,911,1028,1044,1089,1096,1097,1121,1122,1123,1125,1126,1130,1131,1256,1264,1275,1283,1292,1293,1294,1295,1296,1297,1298,1299,1300,1302,1308,1309,1310,1311],zero_pad:[307,459,596,733,1028],zeros_lik:[138,307,459,596,733,1028],zip:1175,zk_e:1321},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sin","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","equal","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","empty","ones","ones_like","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","less_equal","log1p","log2","logical_not","sin","sqrt","Function and method signatures","Linear algebra","diagonal","slodget","svd","vector_norm","Manipulation functions","flip","Searching functions","argmax","Set functions","Sorting functions","argsort","Statistical functions","min","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1051,"function":[77,83,88,104,109,111,113,114,116,118,214,220,225,234,241,243,245,246,248,249,401,407,412,428,435,437,439,440,442,444,532,538,543,559,566,568,570,571,573,575,668,674,679,695,702,704,706,707,709,711,869,875,879,894,900,902,904,905,907,909],Ones:1288,Using:1318,abs:[308,597,734,1029],aco:[818,1157],acosh:[819,1158],activ:[198,388,518,660,847,1248,1278],adam:1309,adam_step:1125,adam_upd:1126,algebra:[105,176,235,364,429,500,560,640,696,807,895],all:[119,250,445,576,712,910],all_equ:1030,all_nested_indic:1220,ani:[120,251,446,577,713,911],api:[0,43,75,122,212,253,399,448,530,579,666,715,867],arang:[139,309,460,598,735,1031],arg_nam:1032,argmax:[112,244,438,569,705,903],argmin:[140,461,599,736,1033],args_to_ivi:16,args_to_n:17,argsort:[115,247,441,572,708,906],arithmet:[1,123,254,449,580,716],arrai:[0,3,43,75,121,122,124,141,212,252,253,255,262,310,399,447,448,450,462,530,578,579,581,600,666,714,715,717,737,867,913,1034],array_equ:[311,738,1035],arrays_equ:1036,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[820,1159],asinh:[89,413,544,680,880],assert_supports_inplac:1037,atan2:[822,1161],atan:[821,1160],atanh:[823,1162],attribut:[5,125,256,451,582,718],backend:[43,73],bilinear_resampl:[173,361,497,637,804,1140],binary_cross_entropi:1270,bitwis:[7,126,257,452,583,719],bitwise_and:[90,226,414,545,681,881],broadcast_to:[312,739,1038],builder:51,builtin:[121,252,262,447,578,714,913],builtin_ab:[263,914],builtin_add:[264,915],builtin_and:[265,916],builtin_bool:[266,917],builtin_contain:[267,918],builtin_deepcopi:[268,919],builtin_dir:[269,920],builtin_eq:[270,921],builtin_float:[271,922],builtin_floordiv:[272,923],builtin_g:[273,924],builtin_getattr:[274,925],builtin_getattribut:[275,926],builtin_getitem:[276,927],builtin_gt:[277,928],builtin_int:[278,929],builtin_invert:[279,930],builtin_l:[280,931],builtin_lt:[281,585,721,932],builtin_mul:[282,933],builtin_n:[283,934],builtin_neg:[284,935],builtin_or:[285,936],builtin_po:[286,937],builtin_pow:[287,938],builtin_radd:[288,939],builtin_rand:[289,940],builtin_rfloordiv:[290,941],builtin_rmul:[291,942],builtin_ror:[292,943],builtin_rpow:[293,944],builtin_rsub:[294,945],builtin_rtruediv:[295,946],builtin_rxor:[296,947],builtin_setitem:[297,948],builtin_sub:[298,949],builtin_truediv:[299,950],builtin_xor:[300,951],cache_fn:1039,cast:[142,313,463,601,740,1008],ceil:[91,227,415,546,682,882],choleski:[808,1147],choose_random_framework:61,citat:1275,clear_framework_stack:62,clear_mem_on_dev:[727,970],clip:[314,741,1040],clip_matrix_norm:1041,clip_vector_norm:1042,clone:1190,clone_arrai:1191,clone_it:1192,clone_nest:1193,clonedit:1177,cloneditem:1176,clonednest:1178,closest_valid_dtyp:1009,code:1321,comparison:[9,127,258,453,584,720],compil:[315,464,742,952,953],concaten:[143,316,465,602,743,1043],constant:[76,213,400,531,667,868],constant_pad:[317,603,744,1044],contain:[40,41],container_typ:[745,1045],content:1275,contribut:43,conv1d:[204,391,522,859,1257,1293],conv1d_transpos:[205,392,523,860,1258],conv1dtranspos:1294,conv2d:[206,393,524,662,861,1259,1295],conv2d_transpos:[207,394,525,862,1260],conv2dtranspos:1296,conv3d:[208,395,526,663,863,1261,1297],conv3d_transpos:[209,396,527,864,1262],conv3dtranspos:1298,convers:15,convert:[200,855,1281],convert_dtyp:1010,copy_arrai:[746,1046],copy_nest:1221,core:[130,261,456,588,724,912],cos:[92,416,547,683,883],cosh:[93,417,548,684,824,884,1163],cprint:1320,creat:43,creation:[77,214,401,532,668,869],cross:[318,747,1047],cross_entropi:1271,cumprod:[144,319,466,748,1048],cumsum:[749,1049],current_framework:63,current_framework_str:[750,1050],data:[83,87,220,224,407,411,538,542,674,678,875,878],debug_mod:45,debugg:44,default_devic:971,default_dtyp:1011,default_float_dtyp:1012,default_int_dtyp:1013,default_nod:1194,depthwise_conv2d:[210,397,528,664,865,1263],depthwiseconv2d:1299,design:43,det:[236,430,561,697],dev:[133,303,591,728,972],dev_clon:973,dev_clone_arrai:974,dev_clone_it:975,dev_clone_nest:976,dev_dist:977,dev_dist_arrai:978,dev_dist_it:979,dev_dist_nest:980,dev_from_str:[134,304,592,729,981],dev_to_str:[135,305,593,730,982],dev_unifi:983,dev_unify_arrai:984,dev_unify_it:985,dev_unify_nest:986,dev_util:987,devclonedit:957,devcloneditem:956,devclonednest:958,devdistit:960,devdistitem:959,devdistnest:961,devic:[20,131,301,457,589,725,954],devmapp:963,devmappermultiproc:964,diagon:[106,237,431,562,698,896],distribute_nest:1195,divid:1164,document:1275,dropout:[1264,1300],dtype:[145,320,467,604,751,1004,1014],dtype_bit:[146,321,468,605,752,1015],dtype_from_str:[147,322,469,606,753,1016],dtype_to_str:[148,323,470,607,754,1017],ecosystem:52,einops_rearrang:1052,einops_reduc:1053,einops_repeat:1054,einsum:[190,379,510,652,839,1239],elementwis:[88,225,412,543,679,879],empti:[78,215,402,533,669,870],equal:[94,418,549,685,1055],erf:[506,825,1165],execute_with_gradi:[170,356,492,632,798,1127],exist:1056,exp:[826,1166],expand_dim:[324,755,1057],finfo:[85,222,409,540,676,876],firstlayersiren:1285,flip:[110,242,436,567,703,901],float_img_to_uint8_img:1141,floor:[325,756,1058],floormod:[326,757,1059],fomaml_step:1172,fork:43,fourier_encod:1060,framework:59,full:[149,327,471,608,758,1061],func:72,gather:[150,328,472,609,759,1062],gather_nd:[151,329,473,610,760,1063],geglu:1279,gelu:[389,519,848,1249,1280],gener:[22,138,307,459,596,733,1028],get_all_arrays_in_memori:1064,get_all_arrays_on_dev:988,get_framework:64,get_min_bas:1065,get_min_denomin:1066,get_num_dim:[761,1067],get_referrers_recurs:1068,glorotuniform:1286,gpu_is_avail:[989,1196],gradient:[24,169,355,491,631,797,1123],gradient_descent_upd:1128,gradient_imag:[174,362,498,638,805,1142],gym:53,handler:59,has_nan:1069,ident:[152,330,474,611,762,1070],iinfo:[86,223,410,541,677,877],imag:[26,172,360,496,636,803,1139],index_nest:1222,indices_wher:[153,331,475,763,1071],initi:1283,inplac:[11,128,259,454,586,722],inplace_arrays_support:1072,inplace_decr:[154,332,476,612,764,1073],inplace_incr:[155,333,477,613,765,1074],inplace_upd:[156,334,478,614,766,1075],inplace_variables_support:1076,inv:[809,1148],invalid_dtyp:1018,is_arrai:[157,335,479,615,767,1077],is_float_dtyp:1019,is_int_dtyp:1020,is_vari:[171,357,493,633,799,1129],isfinit:[95,228,419,550,686,885],isinf:[336,616,768,1078],isnan:[96,229,420,551,687,886],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,866,1317,1318,1321],ivymodul:[201,856],jax:74,keep:43,lamb:1310,lamb_upd:1130,lar:1311,lars_upd:1131,layer:[203,390,521,661,858,1256,1292],layer_norm:1274,layernorm:1307,leaky_relu:[849,1250],less:[97,230,421,552,688,887],less_equ:[98,422,553,689,888],linalg:[28,1146],linear:[105,176,235,364,429,500,560,640,696,807,895,1265,1302],linear_resampl:[158,337,480,617,769,1079],linspac:[159,338,481,618,770,1080],list:43,log1p:[99,423,554,690,889],log2:[100,424,555,691,890],log:[827,1167],logic:[30,180,369,504,644,814,1153],logical_and:[370,815,1154],logical_not:[101,231,425,556,692,891],logical_or:[371,816,1155],logspac:[160,339,482,619,771,1081],loss:1269,lstm:1301,lstm_updat:1266,maml_step:1173,manipul:[109,241,435,566,702,900],map:1223,map_nest_at_index:1224,map_nest_at_indic:1225,match_kwarg:1082,math:[32,181,372,505,645,817,1156],matmul:[340,620,772,1083],matrix_norm:[177,365,501,641,810,1149],maximum:[773,1084],mech:54,memori:55,meshgrid:[341,774,1085],meta:[34,1171],method:[104,234,428,559,695,894],min:[117,443,574,710,908],minimum:[775,1086],model:56,modul:[1304,1305,1317],multi:1175,multi_head_attent:1267,multi_index_nest:1226,multidevcontain:42,multidevit:967,multidevitem:966,multidevnest:968,multiheadattent:1303,multinodeit:1181,multinodeitem:1180,multinodenest:1182,multinomi:[183,374,508,647,832,1232],multiprocess:[776,1087],mxnet:211,nativ:1317,nest:1219,nested_indices_wher:1227,nested_map:1228,network:1317,next:1275,node:[1175,1197],node_dist:1198,node_dist_arrai:1199,node_dist_it:1200,node_str:1201,node_to_str:1202,node_util:1203,nodedistit:1184,nodedistitem:1183,nodedistnest:1185,nodemapp:1187,nodemappermultiproc:1188,norm:[1273,1306],num_arrays_in_memori:1088,num_arrays_on_dev:990,num_cpu_cor:991,num_gpu:[136,992,1204],numpi:398,nutshel:1275,one_hot:[161,483,621,777,1089],ones:[79,216,403,534,670,871,1090],ones_lik:[80,217,404,535,671,872],oper:[1,3,7,9,11,13,43,123,124,126,127,128,129,254,255,257,258,259,260,449,450,452,453,454,455,580,581,583,584,586,587,716,717,719,720,722,723],optim:[1308,1312],optimizer_upd:1132,overview:1275,percent_used_mem_on_dev:993,percent_used_mem_on_nod:1205,pinv:[366,811,1150],portabl:1321,print_all_arrays_in_memori:1091,print_all_arrays_on_dev:994,profil:[132,302,458,590,726,969,1189],pull:43,queue_timeout:1092,randint:[184,375,648,833,1233],random:[36,182,373,507,646,831,1231],random_crop:1143,random_norm:[185,376,649,834,1234],random_uniform:[186,377,650,835,1235],reduce_max:[191,380,511,653,840,1240],reduce_mean:[192,381,512,654,841,1241],reduce_min:[193,382,513,655,842,1242],reduce_prod:[194,383,514,656,843,1243],reduce_std:[384,1244],reduce_sum:[195,385,515,657,844,1245],reduce_var:[196,386,516,658,845,1246],reduct:[38,189,378,509,651,838,1238],reflect:[13,129,260,455,587,723],relu:[850,1251],repeat:[342,778,1093],reptile_step:1174,request:43,reshap:[779,1094],robot:57,round:[343,780,1095],run:1318,scaled_dot_product_attent:1268,scatter_flat:[162,344,484,622,781,1096],scatter_nd:[163,345,485,623,782,1097],search:[111,243,437,568,704,902],seed:[187,836,1236],sequenti:[1314,1315],set:[113,245,439,570,706,904],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:995,set_default_dtyp:1021,set_default_float_dtyp:1022,set_default_int_dtyp:1023,set_default_nod:1206,set_exception_debug_mod:48,set_framework:65,set_min_bas:1098,set_min_denomin:1099,set_nest_at_index:1229,set_nest_at_indic:1230,set_queue_timeout:1100,set_split_factor:[996,1207],set_tmp_dir:1101,set_with_grad:1133,sgd:1313,shape:[783,1102],shape_to_tupl:1103,shuffl:[188,837,1237],sigmoid:[851,1252],signatur:[104,234,428,559,695,894],sin:[102,232,426,557,693,892],sinh:[828,1168],siren:1289,slodget:897,slogdet:[238,432,563,699],softmax:[199,520,852,1253],softplu:[853,1254],sort:[114,246,440,571,707,905],sparse_cross_entropi:1272,split:[164,346,486,624,784,1104],split_factor:[997,1208],split_func_cal:[998,1209],sqrt:[103,233,427,558,694,893],squeez:[165,347,487,625,785,1105],stable_divid:1106,stable_pow:1107,stack:[348,786,1108],stack_imag:[175,363,499,639,806,1144],standard:43,statist:[116,248,442,573,709,907],stop_gradi:[358,494,634,800,1134],str_to_nod:1210,submodul:43,supports_inplac:1109,svd:[107,239,433,564,700,898],swapax:[626,787,1110],tan:[829,1169],tanh:[830,854,1170,1255],tensorflow:529,tile:[349,627,788,1111],tmp_dir:1112,to_dev:[137,306,594,731,999],to_ivi:18,to_ivy_modul:[202,857,1282],to_list:[789,1113],to_n:19,to_nod:1211,to_numpi:[790,1114],to_scalar:[791,1115],todo:43,torch:665,total_mem_on_dev:1000,total_mem_on_nod:1212,tpu_is_avail:[595,732,1001,1213],train:1317,trainabl:1317,transpos:[166,350,488,792,1116],tree:1275,tril:[81,218,405,536,672,873],try_else_non:1117,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[83,87,220,224,407,411,538,542,674,678,875,878],uint8_img_to_float_img:1145,unifi:1214,unify_arrai:1215,unify_it:1216,unify_nest:1217,unset_debug_mod:49,unset_default_devic:1002,unset_default_dtyp:1024,unset_default_float_dtyp:1025,unset_default_int_dtyp:1026,unset_framework:71,unset_with_grad:1135,unstack:[167,351,489,628,793,1118],updat:43,used_mem_on_dev:1003,used_mem_on_nod:1218,util:[118,249,444,575,711,909],valid_dtyp:1027,value_is_nan:1119,variabl:[359,495,635,801,1136],variable_data:[802,1137],vector_norm:[108,240,434,565,701,899],vector_to_skew_symmetric_matrix:[179,368,503,643,813,1152],verbos:1319,vision:58,where:[352,794,1120,1275],why:1321,with_grad:1138,wrapper:72,write:1318,your:43,zero:[82,219,406,537,673,874,1291],zero_pad:[353,629,795,1121],zeros_lik:[168,354,490,630,796,1122]}})
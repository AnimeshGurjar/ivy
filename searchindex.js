Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/creation_functions/ones","functional/backends/jax/array_api/creation_functions/tril","functional/backends/jax/array_api/creation_functions/zeros","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/asinh","functional/backends/jax/array_api/elementwise_functions/bitwise_and","functional/backends/jax/array_api/elementwise_functions/ceil","functional/backends/jax/array_api/elementwise_functions/cos","functional/backends/jax/array_api/elementwise_functions/cosh","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/elementwise_functions/isnan","functional/backends/jax/array_api/elementwise_functions/less","functional/backends/jax/array_api/elementwise_functions/log1p","functional/backends/jax/array_api/elementwise_functions/log2","functional/backends/jax/array_api/elementwise_functions/logical_not","functional/backends/jax/array_api/elementwise_functions/sqrt","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra","functional/backends/jax/array_api/linear_algebra/diagonal","functional/backends/jax/array_api/linear_algebra/vector_norm","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/manipulation_functions/flip","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/sorting_functions/argsort","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_api/utility_functions/any","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linear_algebra","functional/backends/jax/core/linear_algebra/matrix_norm","functional/backends/jax/core/linear_algebra/qr","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/creation_functions/ones","functional/backends/mxnet/array_api/creation_functions/tril","functional/backends/mxnet/array_api/creation_functions/zeros","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and","functional/backends/mxnet/array_api/elementwise_functions/ceil","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/elementwise_functions/isnan","functional/backends/mxnet/array_api/elementwise_functions/less","functional/backends/mxnet/array_api/elementwise_functions/logical_not","functional/backends/mxnet/array_api/elementwise_functions/sqrt","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra","functional/backends/mxnet/array_api/linear_algebra/det","functional/backends/mxnet/array_api/linear_algebra/diagonal","functional/backends/mxnet/array_api/linear_algebra/slogdet","functional/backends/mxnet/array_api/linear_algebra/vector_norm","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/manipulation_functions/flip","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/sorting_functions/argsort","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_api/utility_functions/any","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linear_algebra","functional/backends/mxnet/core/linear_algebra/matrix_norm","functional/backends/mxnet/core/linear_algebra/pinv","functional/backends/mxnet/core/linear_algebra/qr","functional/backends/mxnet/core/linear_algebra/svd","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/creation_functions/ones","functional/backends/numpy/array_api/creation_functions/tril","functional/backends/numpy/array_api/creation_functions/zeros","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/asinh","functional/backends/numpy/array_api/elementwise_functions/bitwise_and","functional/backends/numpy/array_api/elementwise_functions/ceil","functional/backends/numpy/array_api/elementwise_functions/cos","functional/backends/numpy/array_api/elementwise_functions/cosh","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/elementwise_functions/isnan","functional/backends/numpy/array_api/elementwise_functions/less","functional/backends/numpy/array_api/elementwise_functions/log1p","functional/backends/numpy/array_api/elementwise_functions/log2","functional/backends/numpy/array_api/elementwise_functions/logical_not","functional/backends/numpy/array_api/elementwise_functions/sqrt","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra","functional/backends/numpy/array_api/linear_algebra/det","functional/backends/numpy/array_api/linear_algebra/diagonal","functional/backends/numpy/array_api/linear_algebra/slogdet","functional/backends/numpy/array_api/linear_algebra/vector_norm","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/manipulation_functions/flip","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/sorting_functions/argsort","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_api/utility_functions/any","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linear_algebra","functional/backends/numpy/core/linear_algebra/matrix_norm","functional/backends/numpy/core/linear_algebra/qr","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/creation_functions/ones","functional/backends/tensorflow/array_api/creation_functions/tril","functional/backends/tensorflow/array_api/creation_functions/zeros","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/asinh","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and","functional/backends/tensorflow/array_api/elementwise_functions/ceil","functional/backends/tensorflow/array_api/elementwise_functions/cos","functional/backends/tensorflow/array_api/elementwise_functions/cosh","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/elementwise_functions/isnan","functional/backends/tensorflow/array_api/elementwise_functions/less","functional/backends/tensorflow/array_api/elementwise_functions/log1p","functional/backends/tensorflow/array_api/elementwise_functions/log2","functional/backends/tensorflow/array_api/elementwise_functions/logical_not","functional/backends/tensorflow/array_api/elementwise_functions/sqrt","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra","functional/backends/tensorflow/array_api/linear_algebra/det","functional/backends/tensorflow/array_api/linear_algebra/diagonal","functional/backends/tensorflow/array_api/linear_algebra/slogdet","functional/backends/tensorflow/array_api/linear_algebra/vector_norm","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/manipulation_functions/flip","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/sorting_functions/argsort","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_api/utility_functions/any","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linear_algebra","functional/backends/tensorflow/core/linear_algebra/matrix_norm","functional/backends/tensorflow/core/linear_algebra/qr","functional/backends/tensorflow/core/linear_algebra/svd","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/creation_functions/ones","functional/backends/torch/array_api/creation_functions/tril","functional/backends/torch/array_api/creation_functions/zeros","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/asinh","functional/backends/torch/array_api/elementwise_functions/bitwise_and","functional/backends/torch/array_api/elementwise_functions/ceil","functional/backends/torch/array_api/elementwise_functions/cos","functional/backends/torch/array_api/elementwise_functions/cosh","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/elementwise_functions/isnan","functional/backends/torch/array_api/elementwise_functions/less","functional/backends/torch/array_api/elementwise_functions/log1p","functional/backends/torch/array_api/elementwise_functions/log2","functional/backends/torch/array_api/elementwise_functions/logical_not","functional/backends/torch/array_api/elementwise_functions/sqrt","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra","functional/backends/torch/array_api/linear_algebra/det","functional/backends/torch/array_api/linear_algebra/diagonal","functional/backends/torch/array_api/linear_algebra/slogdet","functional/backends/torch/array_api/linear_algebra/vector_norm","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/manipulation_functions/flip","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/sorting_functions/argsort","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_api/utility_functions/any","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linear_algebra","functional/backends/torch/core/linear_algebra/cholesky","functional/backends/torch/core/linear_algebra/inv","functional/backends/torch/core/linear_algebra/matrix_norm","functional/backends/torch/core/linear_algebra/pinv","functional/backends/torch/core/linear_algebra/qr","functional/backends/torch/core/linear_algebra/svd","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/creation_functions/ones","functional/ivy/array_api/creation_functions/tril","functional/ivy/array_api/creation_functions/zeros","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/asinh","functional/ivy/array_api/elementwise_functions/bitwise_and","functional/ivy/array_api/elementwise_functions/ceil","functional/ivy/array_api/elementwise_functions/cos","functional/ivy/array_api/elementwise_functions/cosh","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/elementwise_functions/isnan","functional/ivy/array_api/elementwise_functions/less","functional/ivy/array_api/elementwise_functions/log1p","functional/ivy/array_api/elementwise_functions/log2","functional/ivy/array_api/elementwise_functions/logical_not","functional/ivy/array_api/elementwise_functions/sqrt","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra","functional/ivy/array_api/linear_algebra/diagonal","functional/ivy/array_api/linear_algebra/slodget","functional/ivy/array_api/linear_algebra/vector_norm","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/manipulation_functions/flip","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/sorting_functions/argsort","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/array_api/utility_functions/any","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/qr","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/creation_functions/ones.rst","functional/backends/jax/array_api/creation_functions/tril.rst","functional/backends/jax/array_api/creation_functions/zeros.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/asinh.rst","functional/backends/jax/array_api/elementwise_functions/bitwise_and.rst","functional/backends/jax/array_api/elementwise_functions/ceil.rst","functional/backends/jax/array_api/elementwise_functions/cos.rst","functional/backends/jax/array_api/elementwise_functions/cosh.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/elementwise_functions/isnan.rst","functional/backends/jax/array_api/elementwise_functions/less.rst","functional/backends/jax/array_api/elementwise_functions/log1p.rst","functional/backends/jax/array_api/elementwise_functions/log2.rst","functional/backends/jax/array_api/elementwise_functions/logical_not.rst","functional/backends/jax/array_api/elementwise_functions/sqrt.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra.rst","functional/backends/jax/array_api/linear_algebra/diagonal.rst","functional/backends/jax/array_api/linear_algebra/vector_norm.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/manipulation_functions/flip.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/sorting_functions/argsort.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_api/utility_functions/any.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linear_algebra.rst","functional/backends/jax/core/linear_algebra/matrix_norm.rst","functional/backends/jax/core/linear_algebra/qr.rst","functional/backends/jax/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/creation_functions/ones.rst","functional/backends/mxnet/array_api/creation_functions/tril.rst","functional/backends/mxnet/array_api/creation_functions/zeros.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/bitwise_and.rst","functional/backends/mxnet/array_api/elementwise_functions/ceil.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/elementwise_functions/isnan.rst","functional/backends/mxnet/array_api/elementwise_functions/less.rst","functional/backends/mxnet/array_api/elementwise_functions/logical_not.rst","functional/backends/mxnet/array_api/elementwise_functions/sqrt.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra.rst","functional/backends/mxnet/array_api/linear_algebra/det.rst","functional/backends/mxnet/array_api/linear_algebra/diagonal.rst","functional/backends/mxnet/array_api/linear_algebra/slogdet.rst","functional/backends/mxnet/array_api/linear_algebra/vector_norm.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/manipulation_functions/flip.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/sorting_functions/argsort.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_api/utility_functions/any.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linear_algebra.rst","functional/backends/mxnet/core/linear_algebra/matrix_norm.rst","functional/backends/mxnet/core/linear_algebra/pinv.rst","functional/backends/mxnet/core/linear_algebra/qr.rst","functional/backends/mxnet/core/linear_algebra/svd.rst","functional/backends/mxnet/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/creation_functions/ones.rst","functional/backends/numpy/array_api/creation_functions/tril.rst","functional/backends/numpy/array_api/creation_functions/zeros.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/asinh.rst","functional/backends/numpy/array_api/elementwise_functions/bitwise_and.rst","functional/backends/numpy/array_api/elementwise_functions/ceil.rst","functional/backends/numpy/array_api/elementwise_functions/cos.rst","functional/backends/numpy/array_api/elementwise_functions/cosh.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/elementwise_functions/isnan.rst","functional/backends/numpy/array_api/elementwise_functions/less.rst","functional/backends/numpy/array_api/elementwise_functions/log1p.rst","functional/backends/numpy/array_api/elementwise_functions/log2.rst","functional/backends/numpy/array_api/elementwise_functions/logical_not.rst","functional/backends/numpy/array_api/elementwise_functions/sqrt.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra.rst","functional/backends/numpy/array_api/linear_algebra/det.rst","functional/backends/numpy/array_api/linear_algebra/diagonal.rst","functional/backends/numpy/array_api/linear_algebra/slogdet.rst","functional/backends/numpy/array_api/linear_algebra/vector_norm.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/manipulation_functions/flip.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/sorting_functions/argsort.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_api/utility_functions/any.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linear_algebra.rst","functional/backends/numpy/core/linear_algebra/matrix_norm.rst","functional/backends/numpy/core/linear_algebra/qr.rst","functional/backends/numpy/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/creation_functions/ones.rst","functional/backends/tensorflow/array_api/creation_functions/tril.rst","functional/backends/tensorflow/array_api/creation_functions/zeros.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/asinh.rst","functional/backends/tensorflow/array_api/elementwise_functions/bitwise_and.rst","functional/backends/tensorflow/array_api/elementwise_functions/ceil.rst","functional/backends/tensorflow/array_api/elementwise_functions/cos.rst","functional/backends/tensorflow/array_api/elementwise_functions/cosh.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/elementwise_functions/isnan.rst","functional/backends/tensorflow/array_api/elementwise_functions/less.rst","functional/backends/tensorflow/array_api/elementwise_functions/log1p.rst","functional/backends/tensorflow/array_api/elementwise_functions/log2.rst","functional/backends/tensorflow/array_api/elementwise_functions/logical_not.rst","functional/backends/tensorflow/array_api/elementwise_functions/sqrt.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra.rst","functional/backends/tensorflow/array_api/linear_algebra/det.rst","functional/backends/tensorflow/array_api/linear_algebra/diagonal.rst","functional/backends/tensorflow/array_api/linear_algebra/slogdet.rst","functional/backends/tensorflow/array_api/linear_algebra/vector_norm.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions/flip.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/sorting_functions/argsort.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_api/utility_functions/any.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linear_algebra.rst","functional/backends/tensorflow/core/linear_algebra/matrix_norm.rst","functional/backends/tensorflow/core/linear_algebra/qr.rst","functional/backends/tensorflow/core/linear_algebra/svd.rst","functional/backends/tensorflow/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/creation_functions/ones.rst","functional/backends/torch/array_api/creation_functions/tril.rst","functional/backends/torch/array_api/creation_functions/zeros.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/asinh.rst","functional/backends/torch/array_api/elementwise_functions/bitwise_and.rst","functional/backends/torch/array_api/elementwise_functions/ceil.rst","functional/backends/torch/array_api/elementwise_functions/cos.rst","functional/backends/torch/array_api/elementwise_functions/cosh.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/elementwise_functions/isnan.rst","functional/backends/torch/array_api/elementwise_functions/less.rst","functional/backends/torch/array_api/elementwise_functions/log1p.rst","functional/backends/torch/array_api/elementwise_functions/log2.rst","functional/backends/torch/array_api/elementwise_functions/logical_not.rst","functional/backends/torch/array_api/elementwise_functions/sqrt.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra.rst","functional/backends/torch/array_api/linear_algebra/det.rst","functional/backends/torch/array_api/linear_algebra/diagonal.rst","functional/backends/torch/array_api/linear_algebra/slogdet.rst","functional/backends/torch/array_api/linear_algebra/vector_norm.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/manipulation_functions/flip.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/sorting_functions/argsort.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_api/utility_functions/any.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators/builtin_lt.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linear_algebra.rst","functional/backends/torch/core/linear_algebra/cholesky.rst","functional/backends/torch/core/linear_algebra/inv.rst","functional/backends/torch/core/linear_algebra/matrix_norm.rst","functional/backends/torch/core/linear_algebra/pinv.rst","functional/backends/torch/core/linear_algebra/qr.rst","functional/backends/torch/core/linear_algebra/svd.rst","functional/backends/torch/core/linear_algebra/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/creation_functions/ones.rst","functional/ivy/array_api/creation_functions/tril.rst","functional/ivy/array_api/creation_functions/zeros.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/asinh.rst","functional/ivy/array_api/elementwise_functions/bitwise_and.rst","functional/ivy/array_api/elementwise_functions/ceil.rst","functional/ivy/array_api/elementwise_functions/cos.rst","functional/ivy/array_api/elementwise_functions/cosh.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/elementwise_functions/isnan.rst","functional/ivy/array_api/elementwise_functions/less.rst","functional/ivy/array_api/elementwise_functions/log1p.rst","functional/ivy/array_api/elementwise_functions/log2.rst","functional/ivy/array_api/elementwise_functions/logical_not.rst","functional/ivy/array_api/elementwise_functions/sqrt.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra.rst","functional/ivy/array_api/linear_algebra/diagonal.rst","functional/ivy/array_api/linear_algebra/slodget.rst","functional/ivy/array_api/linear_algebra/vector_norm.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/manipulation_functions/flip.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/sorting_functions/argsort.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/array_api/utility_functions/any.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/qr.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[844,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[391,0,0,"-"],creation_functions:[392,0,0,"-"],data_type_functions:[396,0,0,"-"],data_types:[400,0,0,"-"]},"ivy.functional.backends.numpy.array_api.creation_functions":{ones:[393,2,1,""],tril:[394,2,1,""],zeros:[395,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[396,1,1,""],finfo:[398,2,1,""],iinfo:[399,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[396,3,1,""],bits:[396,3,1,""],eps:[396,3,1,""],max:[396,3,1,""],min:[396,3,1,""],smallest_normal:[396,3,1,""]},"ivy.functional.backends.numpy.core":{device:[440,0,0,"-"],general:[442,0,0,"-"],gradients:[476,0,0,"-"],image:[481,0,0,"-"],linear_algebra:[485,0,0,"-"],logic:[489,0,0,"-"],math:[490,0,0,"-"],random:[492,0,0,"-"]},"ivy.functional.backends.numpy.core.device":{Profiler:[441,1,1,""],clear_mem_on_dev:[440,2,1,""],dev:[440,2,1,""],dev_from_str:[440,2,1,""],dev_to_str:[440,2,1,""],gpu_is_available:[440,2,1,""],num_gpus:[440,2,1,""],to_dev:[440,2,1,""],tpu_is_available:[440,2,1,""]},"ivy.functional.backends.numpy.core.device.Profiler":{__init__:[441,3,1,""],start:[441,3,1,""],stop:[441,3,1,""]},"ivy.functional.backends.numpy.core.general":{abs:[442,2,1,""],arange:[443,2,1,""],argmax:[444,2,1,""],argmin:[445,2,1,""],array:[446,2,1,""],asarray:[442,2,1,""],astype:[442,2,1,""],cast:[447,2,1,""],clip:[442,2,1,""],compile:[448,2,1,""],concatenate:[449,2,1,""],constant_pad:[442,2,1,""],container_types:[442,2,1,""],copy_array:[442,2,1,""],cumprod:[450,2,1,""],current_framework_str:[442,2,1,""],dtype:[451,2,1,""],dtype_bits:[452,2,1,""],dtype_from_str:[453,2,1,""],dtype_to_str:[454,2,1,""],equal:[442,2,1,""],floor:[442,2,1,""],floormod:[442,2,1,""],full:[455,2,1,""],gather:[456,2,1,""],gather_nd:[457,2,1,""],get_num_dims:[442,2,1,""],identity:[458,2,1,""],indices_where:[459,2,1,""],inplace_arrays_supported:[442,2,1,""],inplace_decrement:[460,2,1,""],inplace_increment:[461,2,1,""],inplace_update:[462,2,1,""],inplace_variables_supported:[442,2,1,""],is_array:[463,2,1,""],linear_resample:[464,2,1,""],linspace:[465,2,1,""],logspace:[466,2,1,""],matmul:[442,2,1,""],meshgrid:[442,2,1,""],multiprocessing:[442,2,1,""],one_hot:[467,2,1,""],ones_like:[468,2,1,""],round:[442,2,1,""],scatter_flat:[469,2,1,""],scatter_nd:[470,2,1,""],shape:[442,2,1,""],split:[471,2,1,""],squeeze:[472,2,1,""],to_list:[442,2,1,""],to_numpy:[442,2,1,""],to_scalar:[442,2,1,""],transpose:[473,2,1,""],unstack:[474,2,1,""],where:[442,2,1,""],zero_pad:[442,2,1,""],zeros_like:[475,2,1,""]},"ivy.functional.backends.numpy.core.gradients":{execute_with_gradients:[477,2,1,""],is_variable:[478,2,1,""],stop_gradient:[479,2,1,""],variable:[480,2,1,""],variable_data:[476,2,1,""]},"ivy.functional.backends.numpy.core.image":{bilinear_resample:[482,2,1,""],gradient_image:[483,2,1,""],stack_images:[484,2,1,""]},"ivy.functional.backends.numpy.core.linear_algebra":{matrix_norm:[486,2,1,""],qr:[487,2,1,""],vector_to_skew_symmetric_matrix:[488,2,1,""]},"ivy.functional.backends.numpy.core.math":{erf:[491,2,1,""]},"ivy.functional.backends.numpy.core.random":{multinomial:[493,2,1,""],randint:[492,2,1,""],random_normal:[492,2,1,""],random_uniform:[492,2,1,""],seed:[492,2,1,""],shuffle:[492,2,1,""]},"ivy.functional.ivy":{array_api:[845,0,0,"-"],core:[883,0,0,"-"],nn:[1222,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[846,0,0,"-"],creation_functions:[847,0,0,"-"],data_type_functions:[851,0,0,"-"],data_types:[854,0,0,"-"],elementwise_functions:[855,0,0,"-"],function_and_method_signatures:[868,0,0,"-"],linear_algebra:[869,0,0,"-"],manipulation_functions:[873,0,0,"-"],searching_functions:[875,0,0,"-"],set_functions:[876,0,0,"-"],sorting_functions:[877,0,0,"-"],statistical_functions:[879,0,0,"-"],utility_functions:[880,0,0,"-"]},"ivy.functional.ivy.array_api.constants":{e:[846,4,1,""],nan:[846,4,1,""],pi:[846,4,1,""]},"ivy.functional.ivy.array_api.creation_functions":{ones:[848,2,1,""],tril:[849,2,1,""],zeros:[850,2,1,""]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[852,2,1,""],iinfo:[853,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{asinh:[856,2,1,""],bitwise_and:[857,2,1,""],ceil:[858,2,1,""],cos:[859,2,1,""],cosh:[860,2,1,""],isfinite:[861,2,1,""],isnan:[862,2,1,""],less:[863,2,1,""],log1p:[864,2,1,""],log2:[865,2,1,""],logical_not:[866,2,1,""],sqrt:[867,2,1,""]},"ivy.functional.ivy.array_api.linear_algebra":{diagonal:[870,2,1,""],slodget:[871,2,1,""],vector_norm:[872,2,1,""]},"ivy.functional.ivy.array_api.manipulation_functions":{flip:[874,2,1,""]},"ivy.functional.ivy.array_api.sorting_functions":{argsort:[878,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[881,2,1,""],any:[882,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[884,0,0,"-"],compilation:[923,0,0,"-"],device:[925,0,0,"-"],dtype:[975,0,0,"-"],general:[999,0,0,"-"],gradients:[1096,0,0,"-"],image:[1112,0,0,"-"],linalg:[1119,0,0,"-"],logic:[1127,0,0,"-"],math:[1130,0,0,"-"],meta:[1146,0,0,"-"],multi_node:[1150,0,0,"-"],nest:[1194,0,0,"-"],random:[1206,0,0,"-"],reductions:[1213,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[885,2,1,""],builtin_add:[886,2,1,""],builtin_and:[887,2,1,""],builtin_bool:[888,2,1,""],builtin_contains:[889,2,1,""],builtin_deepcopy:[890,2,1,""],builtin_dir:[891,2,1,""],builtin_eq:[892,2,1,""],builtin_float:[893,2,1,""],builtin_floordiv:[894,2,1,""],builtin_ge:[895,2,1,""],builtin_getattr:[896,2,1,""],builtin_getattribute:[897,2,1,""],builtin_getitem:[898,2,1,""],builtin_gt:[899,2,1,""],builtin_int:[900,2,1,""],builtin_invert:[901,2,1,""],builtin_le:[902,2,1,""],builtin_lt:[903,2,1,""],builtin_mul:[904,2,1,""],builtin_ne:[905,2,1,""],builtin_neg:[906,2,1,""],builtin_or:[907,2,1,""],builtin_pos:[908,2,1,""],builtin_pow:[909,2,1,""],builtin_radd:[910,2,1,""],builtin_rand:[911,2,1,""],builtin_rfloordiv:[912,2,1,""],builtin_rmul:[913,2,1,""],builtin_ror:[914,2,1,""],builtin_rpow:[915,2,1,""],builtin_rsub:[916,2,1,""],builtin_rtruediv:[917,2,1,""],builtin_rxor:[918,2,1,""],builtin_setitem:[919,2,1,""],builtin_sub:[920,2,1,""],builtin_truediv:[921,2,1,""],builtin_xor:[922,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[924,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[925,1,1,""],DevClonedItem:[927,1,1,""],DevClonedIter:[928,1,1,""],DevClonedNest:[929,1,1,""],DevDistItem:[930,1,1,""],DevDistIter:[931,1,1,""],DevDistNest:[932,1,1,""],DevManager:[925,1,1,""],DevMapper:[934,1,1,""],DevMapperMultiProc:[935,1,1,""],MultiDev:[925,1,1,""],MultiDevItem:[937,1,1,""],MultiDevIter:[938,1,1,""],MultiDevNest:[939,1,1,""],Profiler:[940,1,1,""],clear_mem_on_dev:[941,2,1,""],default_device:[942,2,1,""],dev:[943,2,1,""],dev_clone:[944,2,1,""],dev_clone_array:[945,2,1,""],dev_clone_iter:[946,2,1,""],dev_clone_nest:[947,2,1,""],dev_dist:[948,2,1,""],dev_dist_array:[949,2,1,""],dev_dist_iter:[950,2,1,""],dev_dist_nest:[951,2,1,""],dev_from_str:[952,2,1,""],dev_to_str:[953,2,1,""],dev_unify:[954,2,1,""],dev_unify_array:[955,2,1,""],dev_unify_iter:[956,2,1,""],dev_unify_nest:[957,2,1,""],dev_util:[958,2,1,""],get_all_arrays_on_dev:[959,2,1,""],gpu_is_available:[960,2,1,""],num_arrays_on_dev:[961,2,1,""],num_cpu_cores:[962,2,1,""],num_gpus:[963,2,1,""],percent_used_mem_on_dev:[964,2,1,""],print_all_arrays_on_dev:[965,2,1,""],set_default_device:[966,2,1,""],set_split_factor:[967,2,1,""],split_factor:[968,2,1,""],split_func_call:[969,2,1,""],to_dev:[970,2,1,""],total_mem_on_dev:[971,2,1,""],tpu_is_available:[972,2,1,""],unset_default_device:[973,2,1,""],used_mem_on_dev:[974,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[925,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[925,3,1,""],da_tune_step:[925,3,1,""],dim_size:[925,3,1,""],ds_tune_step:[925,3,1,""],map:[925,3,1,""],repeated_config_check:[925,3,1,""],tune_step:[925,3,1,""],tuned:[925,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[934,3,1,""],map:[934,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[935,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[925,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[937,3,1,""],items:[937,3,1,""],keys:[937,3,1,""],shape:[937,3,1,""],values:[937,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[938,3,1,""],at_dev:[938,3,1,""],at_devs:[938,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[939,3,1,""],at_dev:[939,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[940,3,1,""],start:[940,3,1,""],stop:[940,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[975,1,1,""],DefaultFloatDtype:[975,1,1,""],DefaultIntDtype:[975,1,1,""],astype:[975,2,1,""],cast:[979,2,1,""],closest_valid_dtype:[980,2,1,""],convert_dtype:[981,2,1,""],default_dtype:[982,2,1,""],default_float_dtype:[983,2,1,""],default_int_dtype:[984,2,1,""],dtype:[985,2,1,""],dtype_bits:[986,2,1,""],dtype_from_str:[987,2,1,""],dtype_to_str:[988,2,1,""],invalid_dtype:[989,2,1,""],is_float_dtype:[990,2,1,""],is_int_dtype:[991,2,1,""],set_default_dtype:[992,2,1,""],set_default_float_dtype:[993,2,1,""],set_default_int_dtype:[994,2,1,""],unset_default_dtype:[995,2,1,""],unset_default_float_dtype:[996,2,1,""],unset_default_int_dtype:[997,2,1,""],valid_dtype:[998,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[975,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[975,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[975,3,1,""]},"ivy.functional.ivy.core.general":{"default":[1023,2,1,""],abs:[1000,2,1,""],all_equal:[1001,2,1,""],arange:[1002,2,1,""],arg_names:[1003,2,1,""],argmax:[1004,2,1,""],argmin:[1005,2,1,""],array:[1006,2,1,""],array_equal:[1007,2,1,""],arrays_equal:[1008,2,1,""],asarray:[999,2,1,""],assert_supports_inplace:[1009,2,1,""],broadcast_to:[1010,2,1,""],cache_fn:[1011,2,1,""],clip:[1012,2,1,""],clip_matrix_norm:[1013,2,1,""],clip_vector_norm:[1014,2,1,""],concatenate:[1015,2,1,""],constant_pad:[1016,2,1,""],container_types:[1017,2,1,""],copy_array:[1018,2,1,""],cross:[1019,2,1,""],cumprod:[1020,2,1,""],cumsum:[1021,2,1,""],current_framework_str:[1022,2,1,""],einops_rearrange:[1024,2,1,""],einops_reduce:[1025,2,1,""],einops_repeat:[1026,2,1,""],equal:[1027,2,1,""],exists:[1028,2,1,""],expand_dims:[1029,2,1,""],floor:[1030,2,1,""],floormod:[1031,2,1,""],fourier_encode:[1032,2,1,""],full:[1033,2,1,""],gather:[1034,2,1,""],gather_nd:[1035,2,1,""],get_all_arrays_in_memory:[1036,2,1,""],get_min_base:[1037,2,1,""],get_min_denominator:[1038,2,1,""],get_num_dims:[1039,2,1,""],get_referrers_recursive:[1040,2,1,""],has_nans:[1041,2,1,""],identity:[1042,2,1,""],indices_where:[1043,2,1,""],inplace_arrays_supported:[1044,2,1,""],inplace_decrement:[1045,2,1,""],inplace_increment:[1046,2,1,""],inplace_update:[1047,2,1,""],inplace_variables_supported:[1048,2,1,""],is_array:[1049,2,1,""],isinf:[1050,2,1,""],linear_resample:[1051,2,1,""],linspace:[1052,2,1,""],logspace:[1053,2,1,""],match_kwargs:[1054,2,1,""],matmul:[1055,2,1,""],maximum:[1056,2,1,""],meshgrid:[1057,2,1,""],minimum:[1058,2,1,""],multiprocessing:[1059,2,1,""],num_arrays_in_memory:[1060,2,1,""],one_hot:[1061,2,1,""],ones:[1062,2,1,""],ones_like:[1063,2,1,""],print_all_arrays_in_memory:[1064,2,1,""],queue_timeout:[1065,2,1,""],repeat:[1066,2,1,""],reshape:[1067,2,1,""],round:[1068,2,1,""],scatter_flat:[1069,2,1,""],scatter_nd:[1070,2,1,""],set_min_base:[1071,2,1,""],set_min_denominator:[1072,2,1,""],set_queue_timeout:[1073,2,1,""],set_tmp_dir:[1074,2,1,""],shape:[1075,2,1,""],shape_to_tuple:[1076,2,1,""],split:[1077,2,1,""],squeeze:[1078,2,1,""],stable_divide:[1079,2,1,""],stable_pow:[1080,2,1,""],stack:[1081,2,1,""],supports_inplace:[1082,2,1,""],swapaxes:[1083,2,1,""],tile:[1084,2,1,""],tmp_dir:[1085,2,1,""],to_list:[1086,2,1,""],to_numpy:[1087,2,1,""],to_scalar:[1088,2,1,""],transpose:[1089,2,1,""],try_else_none:[1090,2,1,""],unstack:[1091,2,1,""],value_is_nan:[1092,2,1,""],where:[1093,2,1,""],zero_pad:[1094,2,1,""],zeros_like:[1095,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1096,1,1,""],adam_step:[1098,2,1,""],adam_update:[1099,2,1,""],execute_with_gradients:[1100,2,1,""],gradient_descent_update:[1101,2,1,""],is_variable:[1102,2,1,""],lamb_update:[1103,2,1,""],lars_update:[1104,2,1,""],optimizer_update:[1105,2,1,""],set_with_grads:[1106,2,1,""],stop_gradient:[1107,2,1,""],unset_with_grads:[1108,2,1,""],variable:[1109,2,1,""],variable_data:[1110,2,1,""],with_grads:[1111,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1096,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1113,2,1,""],float_img_to_uint8_img:[1114,2,1,""],gradient_image:[1115,2,1,""],random_crop:[1116,2,1,""],stack_images:[1117,2,1,""],uint8_img_to_float_img:[1118,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1120,2,1,""],inv:[1121,2,1,""],matrix_norm:[1122,2,1,""],pinv:[1123,2,1,""],qr:[1124,2,1,""],svd:[1125,2,1,""],vector_to_skew_symmetric_matrix:[1126,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1128,2,1,""],logical_or:[1129,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1131,2,1,""],acosh:[1132,2,1,""],asin:[1133,2,1,""],atan2:[1135,2,1,""],atan:[1134,2,1,""],atanh:[1136,2,1,""],cosh:[1137,2,1,""],divide:[1138,2,1,""],erf:[1139,2,1,""],exp:[1140,2,1,""],log:[1141,2,1,""],sin:[1142,2,1,""],sinh:[1143,2,1,""],tan:[1144,2,1,""],tanh:[1145,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1147,2,1,""],maml_step:[1148,2,1,""],reptile_step:[1149,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1150,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1195,2,1,""],copy_nest:[1196,2,1,""],index_nest:[1197,2,1,""],map:[1198,2,1,""],map_nest_at_index:[1199,2,1,""],map_nest_at_indices:[1200,2,1,""],multi_index_nest:[1201,2,1,""],nested_indices_where:[1202,2,1,""],nested_map:[1203,2,1,""],set_nest_at_index:[1204,2,1,""],set_nest_at_indices:[1205,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1207,2,1,""],randint:[1208,2,1,""],random_normal:[1209,2,1,""],random_uniform:[1210,2,1,""],seed:[1211,2,1,""],shuffle:[1212,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1214,2,1,""],reduce_max:[1215,2,1,""],reduce_mean:[1216,2,1,""],reduce_min:[1217,2,1,""],reduce_prod:[1218,2,1,""],reduce_std:[1219,2,1,""],reduce_sum:[1220,2,1,""],reduce_var:[1221,2,1,""]},"ivy.functional.ivy.nn":{activations:[1223,0,0,"-"],layers:[1231,0,0,"-"],losses:[1244,0,0,"-"],norms:[1248,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1224,2,1,""],leaky_relu:[1225,2,1,""],relu:[1226,2,1,""],sigmoid:[1227,2,1,""],softmax:[1228,2,1,""],softplus:[1229,2,1,""],tanh:[1230,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1232,2,1,""],conv1d_transpose:[1233,2,1,""],conv2d:[1234,2,1,""],conv2d_transpose:[1235,2,1,""],conv3d:[1236,2,1,""],conv3d_transpose:[1237,2,1,""],depthwise_conv2d:[1238,2,1,""],dropout:[1239,2,1,""],linear:[1240,2,1,""],lstm_update:[1241,2,1,""],multi_head_attention:[1242,2,1,""],scaled_dot_product_attention:[1243,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1245,2,1,""],cross_entropy:[1246,2,1,""],sparse_cross_entropy:[1247,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1249,2,1,""]},"ivy.stateful":{activations:[1253,0,0,"-"],converters:[1256,0,0,"-"],initializers:[1258,0,0,"-"],layers:[1267,0,0,"-"],module:[1279,0,0,"-"],norms:[1281,0,0,"-"],optimizers:[1283,0,0,"-"],sequential:[1289,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1254,1,1,""],GELU:[1255,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1254,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1255,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1257,2,1,""]},"ivy.stateful.initializers":{Constant:[1258,1,1,""],FirstLayerSiren:[1260,1,1,""],GlorotUniform:[1261,1,1,""],KaimingNormal:[1258,1,1,""],Ones:[1263,1,1,""],Siren:[1264,1,1,""],Uniform:[1258,1,1,""],Zeros:[1266,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1258,3,1,""],create_variables:[1258,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1260,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1261,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1258,3,1,""],create_variables:[1258,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1263,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1264,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1258,3,1,""],create_variables:[1258,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1266,3,1,""]},"ivy.stateful.layers":{Conv1D:[1268,1,1,""],Conv1DTranspose:[1269,1,1,""],Conv2D:[1270,1,1,""],Conv2DTranspose:[1271,1,1,""],Conv3D:[1272,1,1,""],Conv3DTranspose:[1273,1,1,""],DepthwiseConv2D:[1274,1,1,""],Dropout:[1275,1,1,""],LSTM:[1276,1,1,""],Linear:[1277,1,1,""],MultiHeadAttention:[1278,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1268,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1269,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1270,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1271,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1272,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1273,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1274,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1275,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1276,3,1,""],get_initial_state:[1276,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1277,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1278,3,1,""]},"ivy.stateful.module":{Module:[1280,1,1,""]},"ivy.stateful.module.Module":{__init__:[1280,3,1,""],build:[1280,3,1,""],build_mode:[1280,3,1,""],built:[1280,3,1,""],check_submod_rets:[1280,3,1,""],get_mod_key:[1280,3,1,""],mod_depth:[1280,3,1,""],mod_height:[1280,3,1,""],mod_with_top_mod_key_chain:[1280,3,1,""],save_weights:[1280,3,1,""],show_mod_in_top_mod:[1280,3,1,""],show_structure:[1280,3,1,""],show_v_in_top_v:[1280,3,1,""],sub_mods:[1280,3,1,""],track_submod_call_order:[1280,3,1,""],track_submod_rets:[1280,3,1,""],v_with_top_v_key_chains:[1280,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1282,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1282,3,1,""]},"ivy.stateful.optimizers":{Adam:[1284,1,1,""],LAMB:[1285,1,1,""],LARS:[1286,1,1,""],Optimizer:[1287,1,1,""],SGD:[1288,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1284,3,1,""],set_state:[1284,3,1,""],state:[1284,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1285,3,1,""],set_state:[1285,3,1,""],state:[1285,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1286,3,1,""],set_state:[1286,3,1,""],state:[1286,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1287,3,1,""],set_state:[1287,3,1,""],step:[1287,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1288,3,1,""],set_state:[1288,3,1,""],state:[1288,3,1,""]},"ivy.stateful.sequential":{Sequential:[1290,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1290,3,1,""]},"ivy.verbosity":{cprint:[1295,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1294,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1283,1284,1285],"02886":1250,"100":[1150,1250,1292],"141592653589793":846,"2021":1250,"2102":1250,"360":[1130,1142,1144],"718281828459045":846,"754":[846,851,852,855,867],"999":[1096,1098,1099,1103,1283,1284,1285],"abstract":[925,940,1250,1283,1287],"boolean":[40,41,855,857,866,925,960,972,975,989,998,999,1001,1007,1008,1041,1043,1044,1048,1049,1050,1082,1092,1096,1102,1127,1128,1129,1146,1147,1148,1150],"break":43,"case":[15,18,19,40,41,42,43,855,856,858,859,860,865,867,925,964,971,974,999,1002,1067,1069,1070,1119,1122,1124,1150,1194,1197,1201,1250,1267,1278,1279,1280,1283,1287,1296],"catch":[999,1023],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,396,440,441,851,853,925,927,928,929,930,931,932,934,935,937,938,939,940,952,953,975,999,1003,1054,1096,1110,1150,1194,1196,1203,1244,1246,1247,1250,1253,1254,1255,1256,1257,1258,1260,1261,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1296],"default":[15,18,19,40,41,42,43,847,848,849,850,869,870,872,873,874,877,878,880,881,882,923,924,925,934,935,942,943,947,948,949,950,951,954,955,956,957,964,967,968,969,974,975,982,983,984,985,999,1001,1002,1004,1005,1013,1014,1015,1016,1019,1020,1021,1032,1033,1034,1039,1041,1042,1051,1053,1054,1057,1059,1062,1065,1066,1069,1070,1073,1075,1077,1079,1080,1089,1091,1092,1096,1099,1101,1102,1103,1104,1105,1107,1111,1119,1122,1124,1146,1147,1148,1149,1150,1194,1195,1196,1198,1202,1203,1206,1207,1209,1210,1213,1215,1216,1217,1218,1219,1220,1221,1223,1224,1228,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1242,1243,1244,1245,1246,1247,1248,1249,1256,1257,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290],"final":[40,41,43,999,1032,1052,1053,1150,1267,1278,1293],"float":[40,41,42,43,846,847,848,850,851,852,855,856,858,859,860,865,867,869,872,884,903,909,925,934,935,958,964,967,971,974,975,983,990,999,1002,1013,1014,1016,1032,1033,1037,1038,1053,1071,1072,1073,1079,1080,1096,1098,1099,1101,1103,1104,1105,1112,1114,1118,1130,1138,1146,1147,1148,1149,1150,1206,1209,1210,1223,1225,1231,1239,1242,1243,1244,1245,1246,1247,1248,1249,1267,1275,1278,1281,1282,1283,1284,1285,1286,1287,1288],"function":[15,40,41,43,393,394,395,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,846,848,849,850,852,853,856,857,858,859,860,861,862,863,864,865,866,867,869,870,871,872,874,878,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,927,928,929,930,931,932,934,935,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1253,1254,1255,1283,1286,1287,1288,1292,1293,1296],"import":[43,1250,1293,1296],"int":[40,41,42,43,392,393,394,395,492,847,848,849,850,851,852,853,869,870,872,873,874,877,878,880,881,882,884,903,909,923,924,925,947,948,949,950,951,954,955,956,957,962,963,969,975,984,986,991,999,1004,1005,1010,1015,1016,1020,1021,1024,1025,1026,1029,1032,1033,1034,1039,1042,1051,1052,1053,1061,1062,1066,1067,1069,1070,1075,1076,1077,1078,1081,1083,1084,1089,1091,1094,1096,1098,1099,1103,1112,1116,1117,1119,1122,1146,1147,1148,1149,1150,1194,1203,1206,1207,1208,1210,1211,1213,1215,1216,1217,1218,1219,1220,1221,1223,1228,1231,1232,1233,1234,1235,1236,1237,1238,1242,1244,1246,1247,1248,1249,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1281,1282],"long":[43,1231,1241],"new":[40,41,43,492,847,848,850,855,864,975,979,999,1000,1010,1024,1025,1026,1029,1032,1033,1034,1035,1062,1067,1069,1070,1071,1072,1079,1080,1081,1096,1099,1101,1103,1104,1105,1112,1114,1116,1118,1130,1132,1136,1137,1143,1145,1150,1194,1204,1205,1206,1207,1248,1249,1250,1256,1257,1267,1277,1281,1282,1283,1284,1285,1286,1287,1288,1293,1296],"public":[999,1017],"return":[15,16,17,18,19,40,41,42,43,492,847,848,849,850,855,856,857,858,859,860,861,862,863,865,866,867,869,870,871,872,877,878,880,881,882,884,903,909,923,924,925,934,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,960,961,963,964,968,969,970,971,972,974,975,979,980,981,982,983,984,985,986,987,988,989,990,991,998,999,1000,1001,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1039,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1066,1067,1068,1069,1070,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1107,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1194,1195,1196,1198,1202,1203,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1256,1257,1267,1276,1277,1283,1287,1292,1293,1296],"short":[43,1231,1241,1250,1296],"static":[40,41,923,924],"super":1150,"true":[40,41,42,442,448,476,479,492,493,855,861,862,866,869,872,877,878,880,881,882,923,924,925,999,1001,1009,1011,1028,1032,1041,1043,1092,1093,1096,1099,1101,1102,1103,1104,1105,1107,1119,1122,1146,1147,1148,1149,1150,1194,1195,1202,1206,1207,1213,1215,1216,1217,1218,1219,1220,1221,1223,1224,1231,1239,1244,1245,1246,1247,1267,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288],"try":[40,41,999,1090,1150],"var":[40,41,1146,1147,1148,1296],"while":[40,41,42,855,866,1150],AND:[855,857,880,881,1127,1128],But:1296,For:[43,855,856,858,859,860,865,867,999,1002,1012,1081,1096,1102,1110,1119,1124,1130,1131,1250,1256,1257,1293,1296],Its:[1130,1134],NOT:[855,866],Not:846,One:[40,41,43,999,1025,1067,1206,1208,1296],Ones:[1250,1258],PRs:43,Such:[999,1017],That:1293,The:[15,16,17,18,19,40,41,42,43,847,849,855,856,857,858,859,860,861,862,863,865,866,867,869,870,872,873,874,877,878,880,881,882,884,903,909,923,924,925,934,935,941,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,964,967,968,969,970,971,974,975,979,980,981,986,987,988,989,998,999,1002,1006,1007,1010,1011,1013,1014,1015,1016,1018,1019,1022,1023,1027,1032,1034,1035,1042,1045,1046,1047,1049,1051,1053,1055,1057,1059,1062,1063,1066,1067,1069,1070,1071,1072,1073,1076,1077,1078,1079,1080,1081,1084,1092,1095,1096,1098,1099,1101,1103,1104,1105,1107,1110,1112,1114,1116,1118,1119,1122,1124,1125,1130,1131,1133,1134,1138,1139,1140,1141,1142,1144,1146,1147,1148,1149,1150,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1209,1210,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1242,1243,1244,1245,1246,1247,1248,1249,1250,1256,1257,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1278,1279,1280,1281,1282,1283,1285,1286,1287,1293,1296],There:[43,1250,1293],These:[43,1250],Use:43,Used:[1194,1195,1202,1279,1280],Using:[1250,1251,1296],With:[40,41,1119,1122,1213,1215,1216,1217,1218,1219,1220,1221,1250,1292,1296],__array__:[999,1006],__call__:[1267,1278,1279,1280],__del__:1150,__dict__:[1150,1293],__enter__:1150,__exit__:1150,__getitem__:1150,__getstate__:1150,__init__:[40,41,42,43,59,60,82,213,396,397,440,441,522,654,925,926,933,934,935,936,937,938,939,940,975,976,977,978,1096,1097,1150,1154,1161,1250,1253,1254,1255,1258,1259,1260,1261,1262,1263,1264,1265,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1296],__iter__:1150,__len__:1150,__next__:1150,__pow__:43,__repr__:1150,_assign_vari:1292,_axi:1150,_base:[1194,1195,1202],_compute_node_da_ratio:1150,_compute_node_strs_da:1150,_concat_unify_arrai:1150,_counter:1150,_cur_framework:[43,1150],_da_direct:1150,_da_directions_flip:1150,_da_step_tim:1150,_da_tim:1150,_da_tune_count:1150,_data:1150,_delta_da_dim_s:1150,_delta_sf:1150,_dict:1150,_dim_siz:1150,_first_da_tune_step:1150,_first_ns_tune_step:1150,_fn:1150,_forward:[1250,1292],_get_kalman_param:1296,_get_prior:1296,_get_some_model:1296,_handle_flat_arrays_in_out:43,_index:[1194,1195,1202],_input_queu:1150,_length:1150,_max_depth:1150,_max_node_dim_step_ratio:1150,_max_node_dim_step_s:1150,_max_split_factor_step_s:1150,_mean_unify_arrai:1150,_min_bas:[999,1080,1248,1249,1281,1282],_min_denomin:[999,1079],_min_node_dim_s:1150,_min_sf_tune_step:1150,_min_unit_node_tune_step:1150,_model:1296,_native_wrapp:43,_node_mapp:1150,_node_percent_mem:1150,_node_str:1150,_node_str_da_ratio:1150,_node_strs_da:1150,_node_strs_kei:1150,_node_strs_n:1150,_node_util:1150,_ns_step_tim:1150,_ns_time:1150,_ns_tune_count:1150,_num_nod:1150,_num_work:1150,_observed_config:1150,_output_queu:1150,_paramet:1292,_percent_mem_inc_per_sf:1150,_percent_mem_inc_per_unit_da_dim:1150,_percent_util_inc_per_unit_da_dim:1150,_ret_fn:1150,_safety_factor:1150,_save_dir:1150,_shift_da_split:1150,_shift_n:1150,_slice:1150,_step:[1283,1287],_sum_unify_arrai:1150,_timeout:1150,_tune:1150,_tune_da:1150,_tune_n:1150,_tune_step:1150,_unit_da_tune_count:1150,_unroll_step:1296,_with_node_mappig:1150,_worker:1150,_worker_class:1150,_worker_fn:1150,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,925,934,940,1150,1279,1280,1283,1287],abil:1250,abl:[40,41],about:[851,852,853],abov:[43,847,849,869,870,1206,1208],above_height:[40,41],abs:[296,442,573,706,869,872,999,1150],absolut:[40,41,869,871,999,1000],abstractmethod:1150,accept:[15,43,855,866,1250],access:[40,41,43,1293],accord:[40,41,851,852,999,1016,1034,1069,1070,1089,1094],accordingli:[869,872,880,881,882],accur:[59,396,440,441,925,937,938,939,940,975,1096,1258,1260,1261,1263,1264,1266],aco:[794,1130],acosh:[794,1130],across:[40,41,925,934,935,944,945,947,948,949,950,951,957,967,968,999,1004,1005,1007,1008,1150,1194,1198],act:43,activ:[1224,1225,1226,1227,1228,1229,1230,1250,1254,1255],actual:1293,adam:[1096,1098,1099,1103,1250,1283,1285,1292],adam_step:1096,adam_upd:1096,adapt:[1096,1104,1283,1286],add:[40,41,43,1150,1244,1245,1246,1247,1248,1249,1250,1281,1282,1293],added:[43,999,1079,1080,1289,1290],adding:[43,999,1010],addit:[40,41,43,999,1024,1025,1026,1248,1249,1267,1277],addition:43,address:43,adher:43,adjac:[999,1002],adopt:[43,999,1017],affect:[999,1002],affin:[1281,1282],after:[855,867,999,1051,1096,1099,1100,1101,1103,1104,1105,1112,1113,1248,1249,1283,1284,1285,1286,1287,1288,1296],after_1:[999,1016,1094],after_n:[999,1016,1094],again:43,against:[40,41,1119,1122,1213,1215,1216,1217,1218,1219,1220,1221],agnost:[43,1250,1292,1293],aim:1296,algebra:1119,algorithm:[1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274,1296],align:[40,41,43,999,1010],aliv:[925,959,961,965,999,1036,1060,1064],all:[15,16,17,18,19,40,41,43,110,238,427,552,684,847,849,869,872,873,874,880,923,924,925,934,959,965,999,1000,1001,1007,1008,1017,1036,1042,1064,1078,1119,1124,1146,1147,1148,1149,1150,1194,1195,1196,1202,1203,1206,1207,1210,1213,1215,1216,1217,1218,1219,1220,1221,1231,1241,1250,1293,1296],all_depth:[40,41],all_equ:999,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1194,all_tru:[40,41],alloc:[43,847,849,925,1150],allow:[999,1052,1053,1054,1279,1280],allow_dupl:[999,1054],alon:[925,964,974,1150,1250],along:[40,41,43,492,869,872,873,874,877,878,880,881,882,925,948,949,950,951,954,955,956,957,969,999,1015,1020,1021,1034,1051,1052,1053,1066,1077,1081,1084,1091,1119,1122,1146,1147,1148,1149,1150,1206,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221],alongsid:[1292,1293],alpha:[1223,1225],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,855,858,925,1150],also:[40,41,43,999,1002,1096,1099,1146,1147,1148,1149,1194,1195,1196,1202,1203,1231,1240,1250,1267,1277,1292],altern:1292,alwai:[40,41,43,1096,1102,1107],among:[40,41],amount:[925,971,1150,1250],angl:[855,860,1130,1131,1135],ani:[15,16,17,18,19,40,41,43,110,238,427,552,684,880,923,924,925,927,930,934,935,937,946,947,950,951,956,999,1001,1002,1006,1023,1024,1025,1026,1027,1028,1041,1049,1054,1079,1080,1096,1100,1150,1194,1195,1198,1202,1203,1204,1205,1206,1210,1250,1256,1257,1279,1280,1292,1293,1296],anoth:[40,41,43,975,981,1250],another_backend:43,anyth:[43,1296],anywai:43,apart:43,api:[1250,1251],appear:[43,999,1029],append:[40,41,869,870,1150],appli:[15,18,19,40,41,999,1024,1025,1026,1096,1103,1104,1119,1125,1127,1128,1129,1146,1147,1148,1194,1198,1201,1203,1223,1224,1225,1226,1227,1228,1229,1230,1231,1240,1242,1243,1248,1249,1250,1253,1254,1255,1281,1282],applic:[1194,1198,1203,1231,1242,1243,1250,1296],approxim:[43,855,856,859,860,864,865,884,909,1223,1224],arang:[130,296,442,492,573,706,999,1052,1053],arbitrari:[40,41,925,954,955,957,1150],arc:[1130,1135],arcco:[1130,1131],arctan:[1130,1134],area:[855,856,1250],arg:[15,16,17,40,41,43,59,63,925,934,947,951,957,969,999,1024,1025,1026,1070,1150,1256,1257,1279,1280],arg_nam:999,arg_stateful_idx:[1279,1280],argmax:[130,442,573,706,999],argmin:[130,442,573,706,999],args_clon:1150,args_dist:1150,args_to_ivi:[15,1250],args_to_n:[15,1250],args_uni:1150,argsort:[107,235,424,549,681,877],argument:[15,16,17,18,19,40,41,42,43,59,63,923,924,925,934,935,947,951,957,999,1002,1003,1011,1023,1054,1070,1130,1131,1150,1194,1198,1256,1257,1279,1280],aris:[1250,1296],arithmet:[43,1213,1216,1219,1221],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arr:492,arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,130,296,442,492,573,706,847,848,849,850,851,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,869,870,871,872,873,874,877,878,880,881,882,903,909,925,943,944,945,948,949,950,951,954,955,956,957,959,961,965,969,970,975,979,985,990,991,999,1000,1001,1002,1004,1005,1007,1008,1009,1010,1012,1013,1014,1015,1016,1018,1019,1020,1021,1024,1025,1026,1027,1029,1030,1031,1032,1033,1034,1035,1036,1039,1041,1042,1043,1044,1045,1046,1047,1049,1050,1051,1052,1053,1055,1056,1057,1058,1060,1061,1062,1063,1064,1066,1067,1068,1069,1070,1075,1077,1078,1081,1082,1083,1084,1086,1087,1088,1089,1091,1092,1093,1094,1095,1096,1098,1099,1102,1103,1107,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1150,1194,1196,1203,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1267,1275,1276,1278,1283,1287,1292,1293],arrang:[999,1024],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,392,393,394,395,396,398,399,846,847,848,849,850,851,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,869,870,871,872,873,874,877,878,880,881,882],array_api_methods_to_test:43,array_builtin:[43,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922],array_equ:[296,706,999],array_lik:[492,999,1006],array_modul:43,array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,999],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1250],arraywithgener:[22,1250],arraywithgradi:[24,1250],arraywithimag:[26,1250],arraywithlinalg:[28,1250],arraywithlog:[30,1250],arraywithmath:[32,1250],arraywithmeta:[34,1250],arraywithrandom:[36,1250],arraywithreduct:[38,1250],arriv:[40,41,42],articl:1250,arxiv:1250,as_arrai:[40,41,999,1039,1075],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[440,442,451,925,943,975,982,983,984,985],as_tensor:442,as_vari:[40,41],as_zero:[40,41],asarrai:[442,999],ascend:[877,878],asin:[794,1130],asinh:[86,401,526,658,855],aspect:[1112,1117],assert:[40,41,999,1009,1150],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:999,associ:[43,1119,1126],assum:[855,859,1293,1296],astyp:[442,975],asynchron:[40,41,42],at_dev:[40,42,925,938,939],at_kei:[40,41],at_key_chain:[40,41],at_nod:1150,atan2:[794,1130],atan:[794,1130],atanh:[794,1130],attent:[43,1231,1242,1243,1267,1278],attribut:[0,6,40,41,851,852,853,999,1063,1095],audienc:[1250,1293],author:1250,automat:43,avail:[40,41,43,925,960,962,963,972,999,1025,1150],averag:[1096,1098,1099,1103,1146,1147,1148,1213,1216],average_across_step:[1146,1147,1148],avoid:[43,925,1150,1293],axes:[40,41,43,442,473,485,486,869,872,873,874,880,881,882,925,969,999,1004,1005,1016,1029,1083,1089,1094,1119,1122,1150,1213,1215,1216,1217,1218,1219,1220,1221],axes_length:[40,41,999,1024,1025,1026],axi:[40,41,442,444,445,449,450,456,464,465,466,471,472,474,869,870,872,873,874,877,878,880,881,882,925,927,930,937,948,949,950,951,954,955,956,957,969,999,1004,1005,1015,1016,1019,1020,1021,1029,1034,1051,1052,1053,1066,1077,1078,1081,1083,1084,1091,1094,1150,1206,1212,1213,1215,1216,1217,1218,1219,1220,1221,1223,1228,1244,1246,1247],axis0:[40,41,999,1083],axis1:[40,41,869,870,999,1083],axis2:[869,870],back:[43,1279,1280,1283,1287],backend:[15,17,19,40,41,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,925,960,963,972,975,981,989,998,999,1044,1048,1096,1099,1101,1103,1104,1105,1110,1150,1250,1251,1256,1257,1283,1284,1285,1286,1287,1288,1292,1293,1296],backend_nam:43,background:[1250,1293],backprop:1296,backward:[880,881,882,1292],band:[999,1032],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,396,440,441,442,466,855,864,865,884,909,925,927,928,929,930,931,932,934,935,937,938,939,940,975,999,1037,1053,1071,1080,1096,1150,1213,1214,1250,1253,1254,1255,1258,1260,1261,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1296],basi:43,batch:[40,41,869,872,925,967,968,999,1032,1042,1112,1116,1119,1125,1146,1147,1148,1149,1150,1231,1240,1248,1249,1281,1282],batch_shap:[442,458,999,1042,1061,1112,1113,1114,1115,1116,1117,1118,1119,1126,1206,1207,1231,1241,1242,1243,1267,1276],batch_siz:[492,493,1150,1206,1207,1231,1232,1233,1234,1235,1236,1237,1238],bayesian:1296,becaus:[43,999,1002],becom:[43,999,1012,1130,1135,1296],been:[999,1024,1025,1026,1206,1207],befor:[40,41,43,925,969,1146,1147,1148,1150,1194,1203,1213,1215,1216,1217,1218,1219,1220,1221,1231,1242,1243,1296],before_1:[999,1016,1094],before_n:[999,1016,1094],begin:[1194,1195,1202,1293],behaviour:[43,1296],behind:[1096,1099,1101,1103,1104,1105,1250],being:[40,41,43,999,1002,1065,1073,1150],believ:43,belong:[40,41],below:[43,847,849,869,870,1250,1293,1296],below_depth:[40,41],benefit:1250,bernoul:[1231,1239,1267,1275],best:[43,999,1054,1250],beta1:[1096,1098,1099,1103,1283,1284,1285],beta2:[1096,1098,1099,1103,1283,1284,1285],beta:[1248,1249],between:[40,41,42,851,852,999,1002,1119,1124,1194,1198,1206,1208,1244,1246,1247,1283,1285],bia:[1231,1240,1241,1267,1268,1269,1270,1271,1272,1273,1274,1277],bias_initi:[1267,1268,1269,1270,1271,1272,1273,1274,1277],bilinear:[1112,1113],bilinear_resampl:[166,350,481,616,779,1112],bilinearli:[1112,1113],binari:[855,857,1244,1245],binary_cross_entropi:1244,bit:[396,851,852,853,975,986,1112,1114,1118,1250],bitwis:[855,857],bitwise_and:[86,217,401,526,658,855],bitwise_oper:[0,7,8],block:[1250,1293],bool:[15,18,19,40,41,42,43,855,861,862,863,866,869,872,877,878,880,881,882,884,903,923,924,925,943,956,960,964,969,972,974,975,985,999,1001,1007,1008,1020,1023,1027,1028,1032,1039,1041,1049,1054,1075,1077,1091,1092,1093,1096,1099,1100,1101,1102,1103,1104,1105,1107,1119,1122,1146,1147,1148,1149,1150,1194,1195,1196,1198,1202,1203,1206,1207,1213,1215,1216,1217,1218,1219,1220,1221,1223,1224,1231,1239,1256,1257,1267,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288],both:[43,999,1019],bottom:1250,boundari:[40,41,1206,1210],branch:[43,923,924],brittl:43,broadcast:[40,41,43,855,857,863,869,872,880,881,882,884,903,909,999,1010,1027,1056,1057,1058,1066,1119,1122,1130,1135,1138,1213,1215,1216,1217,1218,1219,1220,1221],broadcast_to:[296,706,999],build:[1150,1250,1267,1278,1279,1280],build_mod:[1267,1278,1279,1280],builder:[43,1250],built:[925,999,1002,1150,1267,1278,1279,1280],builtin:43,builtin_ab:[251,884],builtin_add:[251,884],builtin_and:[251,884],builtin_bool:[251,884],builtin_contain:[251,884],builtin_deepcopi:[251,884],builtin_dir:[251,884],builtin_eq:[251,884],builtin_float:[251,884],builtin_floordiv:[251,884],builtin_g:[251,884],builtin_getattr:[251,884],builtin_getattribut:[251,884],builtin_getitem:[251,884],builtin_gt:[251,884],builtin_int:[251,884],builtin_invert:[251,884],builtin_l:[251,884],builtin_lt:[251,561,693,884],builtin_mul:[251,884],builtin_n:[251,884],builtin_neg:[251,884],builtin_or:[251,884],builtin_po:[251,884],builtin_pow:[43,251,884],builtin_radd:[251,884],builtin_rand:[251,884],builtin_rfloordiv:[251,884],builtin_rmul:[251,884],builtin_ror:[251,884],builtin_rpow:[251,884],builtin_rsub:[251,884],builtin_rtruediv:[251,884],builtin_rxor:[251,884],builtin_setitem:[251,884],builtin_some_op:43,builtin_sub:[251,884],builtin_truediv:[251,884],builtin_xor:[251,884],busi:43,bypass:1293,cach:[925,941,999,1011],cache_fn:999,calcul:[40,41,42,43,855,856,859,860,864,865,867,884,909,1130,1138],call:[43,925,969,999,1065,1073,1090,1096,1100,1150,1194,1195,1198,1202,1267,1278,1279,1280,1283,1287,1293,1296],callabl:[40,41,923,924,925,934,935,969,999,1011,1023,1025,1054,1090,1146,1147,1148,1149,1150,1194,1198,1199,1200,1202,1203,1231,1242],can:[43,925,967,968,969,999,1067,1112,1114,1150,1250,1292,1293,1296],cancel_join_thread:1150,cannot:43,captur:1250,cast:[40,41,130,296,442,573,706,975,999,1015,1112,1114,1118],catch_except:[999,1023],categori:43,caus:43,ceil:[86,217,401,526,658,855,999,1002],cell:[1231,1241,1267,1276],certain:[40,41,999,1002,1052,1053],chain:[40,41,1146,1147,1148,1289,1290],chang:[43,925,999,1067,1150,1194,1196,1203,1250,1292],channel:[999,1032,1112,1114,1115,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277],check:[15,16,17,18,19,40,41,43,925,964,974,975,980,989,998,999,1009,1028,1041,1049,1082,1092,1096,1102,1150,1194,1195,1202,1250,1293],check_nest:[1194,1202],check_shap:[40,41],check_submod_ret:[1279,1280],check_typ:[40,41],choic:[1250,1293],choleski:[783,1119],choos:[855,866,999,1093,1119,1124,1130,1135,1250],choose_random_framework:59,chosen:[40,41,999,1002,1093],chunk:[925,967,968,969,1150],chunk_siz:[925,969,1150],circl:[1130,1131,1133],clark:1250,clear:[43,925,941,1150],clear_framework_stack:59,clear_mem_on_dev:[440,698,925],click:1250,clip:[40,41,296,442,706,999,1013,1014,1056,1058,1250],clip_matrix_norm:999,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,999],clipped_delta:1150,clone:[40,41,925,944,945,946,947,1150],clone_arrai:1150,clone_it:1150,clone_nest:1150,clonedit:1150,cloneditem:1150,clonednest:1150,close:[43,1112,1117,1130,1133,1150,1296],closest:[855,858,975,980],closest_valid_dtyp:975,code:[40,41,42,43,492,1250,1251,1292,1293],codebas:[925,967,968,1150,1250,1293,1296],codomain:[855,856,859,860,865,867],colab:1250,collect:[15,40,41,440,442,476,481,485,489,490,492,884,923,925,975,999,1096,1112,1119,1127,1130,1150,1194,1206,1213,1223,1231,1244,1248,1253,1267,1281,1283],color:[40,41,42,1294,1295],column:[999,1042],combin:[40,41,42,1112,1117,1250,1296],combined_batch_s:1150,come:1293,command:1250,comment:43,commit:1296,common:[40,41,43,1130,1135],common_key_chain:[40,41],commun:[43,1250,1293],communuti:43,compar:[40,41,877,878,999,1001,1007,1008],comparison_oper:[0,9,10],compat:[43,855,857,863,869,872,880,881,882,884,903,909,999,1027,1067,1130,1138,1250,1296],compil:[296,442,706,1279,1280,1283,1284,1285,1286,1287,1288],compile_on_next_step:[1279,1280,1283,1284,1285,1286,1287,1288],complet:[40,41,43,1119,1124,1150],complex:[1293,1296],compliant:[855,866],compon:[999,1019],composit:43,comput:[40,41,855,857,863,866,869,871,872,884,903,925,969,999,1013,1014,1020,1021,1027,1055,1096,1098,1099,1100,1101,1103,1104,1105,1107,1109,1112,1115,1119,1120,1121,1122,1123,1124,1127,1128,1129,1130,1131,1133,1134,1135,1139,1140,1141,1142,1144,1194,1198,1213,1214,1215,1216,1217,1218,1219,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1240,1242,1244,1245,1246,1247],concat:[40,41,925,954,955,956,957,969,999,1032,1150],concaten:[40,41,130,296,442,573,706,999,1032,1150,1250],concatten:[40,41,925,954,955,956,957,969,1150],condit:[442,923,924,999,1093,1194,1202],conditon:[1194,1202],config:[40,41,1150],config_list:1150,configur:[40,41],conflict:43,conform:43,conjunct:1293,connect:[1267,1277,1278],consid:[40,41,855,866,1119,1124,1292,1296],consist:[40,41,925,957,1150,1213,1214,1279,1280,1293],constant:[925,934,935,999,1016,1150,1194,1198,1244,1245,1246,1247,1248,1249,1258,1259,1263,1266,1279,1280,1281,1282,1293],constant_kwarg:1150,constant_pad:[296,442,573,706,999],constitu:[40,41],construct:[999,1084,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292],constructor:[40,41,42,999,1003,1289,1290],consum:[925,1150],cont_feat_dim:[1231,1242],contaienr:[40,41],contain:[15,18,19,42,43,847,848,849,850,855,856,857,858,859,860,861,862,863,864,865,866,867,869,870,872,880,881,882,884,903,909,925,944,948,969,975,979,999,1000,1004,1005,1012,1013,1014,1017,1027,1041,1056,1058,1068,1079,1080,1096,1098,1099,1101,1103,1104,1105,1130,1138,1146,1147,1148,1149,1150,1206,1207,1213,1215,1216,1217,1219,1221,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[442,706,999],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[442,999,1059,1231,1242,1267,1278],context_dim:[1267,1278],contextmanag:[59,60],continu:[43,1150,1293],contract:[40,41,1213,1214],contribut:[1250,1251],contributor:[43,1250],control:1250,conv1d:[197,381,506,836,1231,1250,1267],conv1d_transpos:[197,381,506,836,1231],conv1dtranspos:[1250,1267],conv2d:[197,381,506,642,836,1231,1250,1267],conv2d_transpos:[197,381,506,836,1231],conv2dtranspos:[1250,1267],conv3d:[197,381,506,642,836,1231,1250,1267],conv3d_transpos:[197,381,506,836,1231],conv3dtranspos:[1250,1267],convent:[40,41,1213,1214],conver:[925,941,952,964,971,974,1150],convers:[16,17,18,19,40,41,1150,1250],convert:[15,16,17,18,19,40,41,43,925,952,953,975,981,987,988,999,1076,1087,1088,1112,1114,1118,1119,1126,1150,1194,1196,1203,1250,1257],convert_dtyp:975,convolut:[1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274],cool:43,cooler:43,coordin:[999,1057,1130,1131,1133,1135],copi:[40,41,43,492,999,1018,1150,1194,1196],copy_arrai:[442,706,999],copy_nest:1194,core:[440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,927,928,929,930,931,932,934,935,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1250],corner:43,correct:[43,1250,1293],correctli:[40,41,43,1119,1122,1130,1135,1213,1215,1216,1217,1218,1219,1220,1221],correspond:[40,41,43,884,909,999,1015,1206,1207],cos:[86,401,526,658,855,999,1032,1130,1131,1144,1293],cosh:[86,401,526,658,794,855,1130],cosin:[855,859,860,1130,1131,1132,1137],cost:[1096,1098,1099,1101,1103,1104,1105,1146,1147,1148,1149],cost_fn:[1146,1149],could:1296,count:[40,41,873,874,880,881,882,1150,1213,1218,1220],cours:43,cprint:1294,cpu:[40,41,43,925,962,964,970,971,974,999,1002,1006,1034,1035,1042,1052,1053,1061,1062,1063,1069,1070,1095,1150,1206,1207,1208,1209,1210,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1289,1290,1292,1293],creat:[40,41,847,848,850,925,934,935,999,1002,1006,1033,1034,1035,1042,1052,1053,1061,1062,1063,1069,1070,1086,1095,1096,1109,1150,1206,1207,1208,1209,1210,1250,1251,1256,1257,1258,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292,1296],create_if_abs:[40,41],create_vari:1258,creation:[40,41,42,43],creation_funct:[392,393,394,395,847,848,849,850],crop:[1112,1116],crop_siz:[1112,1116],cross:[296,706,999,1244,1245,1246,1247],cross_entropi:1244,cuda:[40,41,925,934,953,970,999,1002,1006,1034,1035,1042,1052,1053,1061,1062,1063,1069,1070,1095,1150,1206,1207,1208,1209,1210,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1289,1290],cumprod:[130,296,442,706,999],cumsum:[706,999],cumul:[999,1020,1021],current:[40,41,42,43,925,934,958,959,961,965,975,981,989,998,999,1022,1036,1044,1048,1060,1064,1150,1194,1195,1202,1250,1296],current_framework:59,current_framework_str:[442,706,999,1150],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],d_in:[1231,1232,1233,1234,1235,1236,1237],d_out:[1231,1232,1233,1234,1235,1236,1237],da_can_termin:1150,da_dim_s:[925,1150],da_direct:1150,da_tune_step:[925,1150],dai:1296,daniel:1250,data:[40,41,42,43,847,848,849,850,852,853,855,856,857,858,859,860,861,862,863,865,866,867,869,870,872,873,874,877,878,880,881,882,884,903,909,925,927,928,929,930,931,932,937,938,939,953,975,979,980,981,985,986,987,988,989,990,991,998,999,1002,1006,1027,1033,1042,1049,1062,1063,1067,1078,1082,1095,1096,1102,1110,1130,1138,1150,1231,1240,1250],data_format:[1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274],data_type_funct:[396,398,399,851,852,853],dataset:[40,41],datatyp:[40,41,975,980,990,991],dcdw:[1096,1098,1099,1101,1103,1104],debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1096,1103,1104,1283,1285,1286],decay_lambda:[1096,1103,1104,1283,1285,1286],decid:[40,41,1296],decompos:[1119,1120,1124],decomposit:[1119,1120,1124,1125],decor:43,decrement:[999,1045],dedic:[1096,1110,1256,1257],deep:[40,41,1250],deep_copi:[40,41],deeper:[925,947,951,957,1150,1194,1203,1250],deepli:[1194,1196],def:[43,60,82,213,397,522,654,926,933,936,976,977,978,1097,1150,1154,1161,1250,1259,1262,1265,1292,1293,1296],default_dev:43,default_devic:925,default_dtyp:[43,975],default_float_dtyp:975,default_int_dtyp:975,default_key_color:[40,41,42],default_nod:1150,default_rng:492,default_v:[999,1023],defaultdevic:[925,926],defaultdtyp:[975,976],defaultfloatdtyp:[975,977],defaultintdtyp:[975,978],defer:43,defin:[43,999,1019,1061,1063,1095,1206,1208],definit:43,degre:[1130,1142,1144],del:1150,delai:43,delet:43,delta:[1096,1098,1150],delta_dim_s:1150,delta_percent_mem:1150,delta_sf:1150,delta_util:1150,demo:1250,denomin:[999,1031,1038,1072,1079,1080,1248,1249,1281,1282],denot:43,dens:[1267,1277],depend:[43,855,856,859,860,864,865,877,878,884,909,999,1093,1119,1125,1250],depth:[40,41,442,467,925,947,951,957,999,1040,1061,1150,1194,1203,1279,1280],depth_cutoff:[40,41],depthwis:[1231,1238,1267,1274],depthwise_conv2d:[197,381,506,642,836,1231],depthwiseconv2d:[1250,1267],deriv:[1096,1098,1099,1101,1103,1104,1105,1194,1196,1203,1250,1279,1283,1287,1289],descend:[877,878,1119,1125],descent:[1096,1101,1283,1288],describ:[40,41,1213,1214],descript:[869,872],design:[1250,1251],desir:[40,41,925,970,975,979,999,1002,1006,1042,1043,1062,1063,1095,1112,1117,1150,1213,1215,1216,1217,1219,1221],desired_aspect_ratio:[481,484,1112,1117],desired_percent_increas:1150,det:[226,415,540,672],detail:1296,detect:[40,41,1194,1195,1202],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,855,856,857,859,860,861,862,865,867,869,870,871,872,880,881,882,884,909,925,960,962,963,972,975,979,980,986,989,990,991,998,999,1001,1002,1006,1007,1008,1041,1044,1048,1049,1082,1092,1096,1102,1130,1138,1146,1147,1148,1149,1150,1231,1242],dev:[40,41,42,43,123,290,440,442,443,446,456,457,458,465,466,467,468,469,470,475,492,493,566,698,925,928,929,931,932,934,935,938,939,941,942,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,961,964,965,966,967,968,969,970,971,974,999,1002,1006,1034,1035,1042,1052,1053,1061,1062,1063,1069,1070,1095,1096,1111,1206,1207,1208,1209,1210,1256,1257,1258,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1289,1290],dev_clon:[40,41,925],dev_clone_arrai:925,dev_clone_it:925,dev_clone_nest:925,dev_dist:[40,41,925],dev_dist_arrai:925,dev_dist_it:925,dev_dist_nest:925,dev_from_str:[43,123,290,440,566,698,925],dev_mapp:925,dev_str:[40,41],dev_to_str:[123,290,440,566,698,925],dev_unifi:925,dev_unify_arrai:925,dev_unify_it:925,dev_unify_nest:925,dev_util:925,devclonedit:925,devcloneditem:925,devclonednest:925,devdistit:925,devdistitem:925,devdistnest:925,develop:[43,1250,1293,1296],deviat:[40,41,1206,1209,1213,1219,1248,1249,1281,1282],devic:[21,40,41,43,392,393,395,441,442,455,847,848,849,850,927,928,929,930,931,932,934,935,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,999,1002,1006,1033,1034,1035,1042,1052,1053,1061,1062,1063,1069,1070,1095,1096,1111,1206,1207,1208,1209,1210,1250,1256,1257,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1289,1290],devmanag:[925,933],devmapp:[925,935],devmappermultiproc:925,diag:[1119,1125],diagon:[100,226,415,540,672,847,849,869,999,1042],dict:[15,16,17,18,19,40,41,42,925,927,930,934,935,937,947,948,949,950,951,999,1024,1025,1026,1054,1146,1147,1148,1150,1194,1196,1197,1198,1201,1203,1256,1257],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,851,852,925,944,945,948,949,1119,1124,1150,1231,1240,1250,1293,1296],differenti:[1250,1293],dilat:[1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274],dim:[40,41,43,999,1061,1112,1113,1117,1119,1125,1150,1267,1278],dim_siz:[40,41,925,1150],dimens:[40,41,42,847,849,869,870,872,873,874,880,881,882,925,956,999,1010,1015,1019,1024,1025,1026,1029,1032,1039,1051,1061,1066,1067,1077,1078,1081,1089,1091,1112,1116,1119,1122,1125,1146,1147,1148,1149,1150,1206,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1228,1231,1232,1233,1234,1235,1236,1237,1238,1241,1244,1246,1247,1267,1268,1269,1270,1271,1272,1273,1274,1277,1278],dimension:[40,41,492,869,872,880,881,882,999,1077,1078,1119,1125],direct:1150,directli:[43,1194,1203,1293,1296],directori:[999,1074,1085],discord:43,discret:[1244,1246],discuss:43,disk:[40,41,1112,1114],distanc:[999,1002],distribut:[40,41,925,944,948,949,950,951,1150,1206,1207,1208,1209,1210,1231,1239,1267,1275,1279,1280],distribute_nest:1150,distributedarrai:[40,41],distrubt:[1244,1246],dive:[1250,1293],divid:[40,41,999,1077,1079,1130],dividend:[1130,1138],divis:[999,1031,1038,1072,1079,1080,1096,1098,1099,1103,1130,1138,1283,1284,1285],divisor:[1096,1098,1099,1103,1130,1138,1283,1284,1285],doc:1250,docstr:43,document:43,doe:[40,41,43,999,1002,1077,1292],doesn:[1119,1124,1250],doing:43,domain:[855,856,859,860,865,867,1130,1131],don:[43,1250],done:43,door:1296,dot:[1119,1121,1231,1242,1243,1267,1278],down:1292,downscal:[999,1013,1014],drag:[1250,1296],draw:[1206,1207,1209,1210],drawn:[1206,1207,1208,1209,1210],drop:[1250,1296],dropout:[1231,1250,1267,1278],dropout_r:[1267,1278],ds_tune_step:925,dtype:[40,41,43,130,296,392,393,395,396,398,399,442,443,446,447,455,458,468,475,573,706,847,848,850,851,852,853,979,980,981,982,983,984,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1002,1006,1033,1042,1061,1062,1063,1095],dtype_bit:[130,296,442,573,706,975],dtype_from_str:[43,130,296,442,573,706,975],dtype_in:[442,452,453,454,975,981,986,987,988,989,990,991,998],dtype_to_str:[130,296,442,573,706,975],duplic:[40,41,43],dure:[40,41,43,923,924,999,1090,1096,1098,1099,1103,1146,1147,1148,1149,1279,1280,1283,1284,1285,1287],dynam:[43,442,448,923,924],each:[40,41,42,43,855,856,857,858,859,860,861,862,863,864,865,866,867,884,903,909,925,934,935,944,945,946,947,948,949,950,956,968,969,999,1000,1001,1016,1027,1066,1077,1081,1084,1094,1096,1099,1101,1103,1104,1105,1112,1115,1119,1125,1130,1133,1138,1140,1141,1150,1194,1198,1206,1207,1213,1214,1231,1232,1233,1234,1235,1236,1237,1238,1239,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1278,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1293],eager:1293,easi:1296,easili:1250,econom:1296,ecosystem:1250,edg:[999,1012,1016,1094],effect:[1096,1105],effective_grad:[1096,1105],effici:1296,einop:[40,41,999,1024,1025,1026],einops_rearrang:[40,41,999],einops_reduc:[40,41,999],einops_repeat:[40,41,999],einstein:[40,41,1213,1214],einsum:[40,41,183,369,494,632,816,1213],either:[40,41,43,855,865,999,1023,1054,1057,1059,1146,1147,1148,1149,1150,1267,1278,1279,1280,1293],eleg:1150,element:[40,41,43,492,847,849,855,856,857,858,859,860,861,862,863,864,865,866,867,873,874,880,881,882,884,903,909,925,946,950,956,975,979,999,1000,1002,1004,1005,1007,1008,1012,1013,1014,1020,1021,1027,1030,1031,1042,1043,1056,1058,1066,1068,1077,1088,1093,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1150,1213,1214,1216,1218,1220,1223,1224,1225,1226,1227,1228,1229,1230,1231,1239,1267,1275],elementwis:[40,41],elementwise_affin:[1281,1282],elementwise_funct:[855,856,857,858,859,860,861,862,863,864,865,866,867],elemtn:[1206,1207],elif:1150,els:[43,999,1009,1023,1028,1150],elsewher:[999,1093],emphas:1250,empti:[40,41,880,881,882,1119,1124,1150],enabl:[40,41,42,43,1250],encapsul:[851,853],encod:[999,1032,1112,1114],end:[999,1002,1250,1293],engag:43,ensur:43,entir:[40,41,880,881,882,925,969,1150,1250,1267,1276],entri:[40,41,999,1052,1053,1077,1078],entropi:[1244,1245,1246,1247],enumer:1150,environ:1250,eps:[396,851,852],epsilon:[1096,1098,1099,1103,1244,1245,1246,1247,1248,1249,1281,1282,1283,1284,1285],equal:[40,41,442,573,706,855,861,869,870,877,878,999,1001,1007,1008,1016,1077,1094,1130,1142,1144,1206,1210],equality_matrix:[999,1001],equat:[40,41,1213,1214],equival:[855,866,869,872,999,1002,1130,1144],erf:[490,794,1130],error:[40,41,43,925,999,1078,1130,1139,1150,1223,1224,1279,1280,1283,1287],essenti:43,etc:[40,41,43,925,970,999,1002,1006,1034,1035,1042,1052,1053,1061,1062,1063,1069,1070,1095,1150,1206,1207,1208,1209,1210,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1289,1290,1296],euclidean:[869,872],euler:846,evalu:[40,41,855,864,865,880,881,882,999,1057,1194,1195,1202],even:[43,1296],evenli:[40,41,999,1002,1052,1053,1077],everi:[43,999,1001,1296],exact:[40,41],exampl:[43,923,924,999,1012,1081,1119,1124,1250,1292,1293,1296],example_input:[442,448,923,924],exc_tb:1150,exc_typ:1150,exc_val:1150,exce:[999,1058],except:[40,41,44,47,880,881,882,999,1002,1009,1015,1023,1090,1150],excess_s:1150,excit:[1250,1293],exclud:[59,61,999,1002,1206,1210],exclus:[40,41,442,450,463,476,478,999,1020,1049,1096,1102,1206,1208],execut:[43,999,1090,1293],execute_with_gradi:[163,345,476,611,773,1096,1250,1292],exist:[40,41,999,1023,1150,1250,1283,1287,1296],exp:[794,1130],expand:[40,41,999,1029,1032],expand_dim:[40,41,296,706,999,1150],expect:[999,1003],explain:[43,1293],explicitli:[43,1267,1276,1278,1279,1280,1293],expon:[43,884,909,999,1080],exponenti:[43,884,909,1130,1139,1140],expos:[999,1006,1017],express:[855,859,999,1057],exsit:[40,41],extend:43,extens:43,extra:[40,41,42,1096,1100],eye:[1119,1121],fabian:1250,fabio:1250,factor:[925,934,967,968,969,1096,1098,1099,1103,1104,1119,1125,1150,1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274,1283,1284,1285,1286],fail:43,falck:1250,fall:[1279,1280,1283,1287],fallback_to_non_compil:[1279,1280,1283,1287],fals:[15,18,19,40,41,42,59,66,67,68,69,70,440,442,450,451,463,471,474,476,477,478,485,486,855,861,862,866,869,872,877,878,880,881,882,925,943,956,964,969,974,975,982,983,984,985,999,1001,1020,1023,1028,1032,1039,1049,1054,1075,1077,1091,1093,1096,1099,1100,1101,1102,1103,1104,1105,1119,1122,1146,1147,1148,1149,1150,1194,1195,1196,1198,1202,1203,1213,1215,1216,1217,1218,1219,1220,1221,1256,1257,1279,1280,1283,1284,1285,1286,1287,1288],fan_in:1258,fan_mod:1258,fan_out:1258,far:[1194,1195,1202,1292],faster:[923,924],favourit:[1250,1292],feasibl:1296,feat_dim:[1231,1242,1243],fed:[925,969,1150],feed:[925,969,1150],few:43,field:1296,file:[40,41,43,999,1074,1085,1279,1280],filepath:[40,41],fill:[40,41,847,848,850,999,1033,1062,1206,1208],fill_valu:[442,455,999,1033],filter:[1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274,1296],filter_s:[1267,1268,1269],filter_shap:[1267,1270,1271,1272,1273,1274],find:[40,41,43,1296],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[81,82,212,213,396,397,521,522,653,654,851],finish:[1250,1296],finit:[855,861],first:[40,41,43,492,855,857,863,869,870,923,924,925,956,999,1007,1015,1019,1027,1052,1053,1081,1083,1096,1100,1119,1125,1146,1147,1148,1149,1150,1194,1195,1202,1206,1212,1213,1218,1220,1267,1278,1279,1280,1283,1287,1293,1296],firstlayersiren:[1250,1258],firstli:[1293,1296],fist:[925,969,1150],fit:[40,41,440,442,476,481,485,489,490,492,999,1066,1112,1117],fix:43,fkt:1296,flag:[40,41,43,1096,1102],flat:[40,41,43,999,1066,1069],flat_list:[40,41],flatten:[40,41,869,872,999,1032,1066,1213,1215,1216,1217,1219,1221],flatten_key_chain:[40,41,1279,1280],flexibl:[1250,1293],flip:[40,41,103,231,420,545,677,873],float32:[43,442,458,975,979,987,988,999,1002,1006,1042,1062,1063,1095],float_dtyp:[975,983,993],float_img_to_uint8_img:1112,floor:[296,442,706,999,1031,1150],floormod:[296,442,706,999],fluid:1296,folder:[43,1250],follow:[40,41,43,851,853,869,872,925,969,999,1045,1046,1047,1079,1080,1096,1099,1101,1103,1104,1105,1150,1194,1198,1203,1231,1242,1243,1250,1267,1277,1283,1287],followng:[851,852],fomaml_step:1146,forget:[1096,1098,1099,1103,1283,1284,1285],fork:[999,1059,1250,1251],forkserv:[999,1059,1150],form:[15,16,17,18,19,40,41,847,849,869,870,999,1006,1096,1099,1101,1103,1104,1105,1194,1196,1203,1231],format:[40,41,43,925,943,975,979,981,985,999,1002,1006,1042,1062,1063,1095,1150,1213,1214,1250,1292,1293],format_fn:[40,41],format_key_chain:[40,41],forward:[1279,1280,1283,1287,1292],found:[40,41,42],fourier:[999,1032],fourier_encod:999,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,419,421,425,428,429,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,483,484,486,487,488,491,493,495,496,497,498,499,500,501,504,505,507,508,509,510,511,512,513,518,519,520,522,523,524,527,528,529,530,531,532,533,534,535,536,537,538,541,542,543,544,546,550,553,554,562,567,568,569,570,571,572,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,612,613,614,615,617,618,619,621,622,623,624,628,629,630,631,633,634,635,636,637,638,639,643,644,645,650,651,652,654,655,656,659,660,661,662,663,664,665,666,667,668,669,670,673,674,675,676,678,682,685,686,694,699,700,701,702,703,704,705,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,774,775,776,777,778,780,781,782,784,785,786,787,788,789,790,792,793,795,796,797,798,799,800,801,802,803,804,805,806,807,808,810,811,812,813,814,815,817,818,819,820,821,822,823,826,827,828,829,830,831,832,834,835,837,838,839,840,841,842,843,848,849,850,852,853,856,857,858,859,860,861,862,863,864,865,866,867,870,871,872,874,878,881,882,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1224,1225,1226,1227,1228,1229,1230,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1249,1250,1254,1255,1256,1257,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1295,1296],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1150,framewrk:[999,1059],free:43,freed:43,freeli:43,frequenc:[999,1032],from:[40,41,42,43,855,867,869,870,873,874,880,881,882,925,934,935,969,975,981,999,1023,1034,1035,1042,1067,1078,1086,1093,1096,1099,1103,1112,1116,1119,1124,1146,1147,1148,1149,1150,1194,1196,1203,1206,1207,1208,1209,1210,1213,1218,1220,1231,1239,1242,1250,1256,1257,1267,1275,1278,1283,1287,1292,1293],from_cal:[1279,1280],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],frustrat:43,full:[43,130,296,442,573,706,851,852,999,1119,1124,1250],full_matric:[1119,1125],fulli:[43,1250,1267,1277,1278,1292],func:[40,41,442,448,476,477,923,924,925,969,999,1011,1096,1100,1150],further:[43,1296],furthermor:1296,futur:1296,gain:1258,gamma:[1248,1249],gather:[40,41,130,296,442,573,706,999,1035],gather_nd:[40,41,130,296,442,573,706,999],gauss:[1130,1139],gaussian:[1223,1224],geglu:[1250,1253],gelu:[379,503,825,1223,1250,1253],gener:[23,40,41,43,440,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,492,923,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1102,1206,1208,1210,1211,1250,1283,1287],geometr:[999,1032],get:[40,41,43,851,852,853,925,934,935,943,958,959,964,968,971,974,975,985,986,999,1003,1036,1037,1038,1065,1150,1250,1267,1276,1296],get_all_arrays_in_memori:999,get_all_arrays_on_dev:925,get_framework:59,get_initial_st:[1267,1276],get_min_bas:999,get_min_denomin:999,get_mod_kei:[1279,1280],get_num_dim:[442,706,999],get_referrers_recurs:999,getfullargspec:1150,gist:1250,give:[43,999,1067,1293],given:[40,41,43,873,874,925,958,964,967,968,969,971,974,975,979,999,1002,1006,1012,1020,1021,1035,1052,1053,1062,1063,1066,1069,1070,1077,1084,1089,1091,1095,1096,1098,1099,1101,1103,1104,1105,1119,1121,1126,1130,1131,1150,1194,1199,1200,1206,1209,1210,1212,1213,1216,1218,1219,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1256,1257,1296],global:[40,41,42,925,934,935,942,967,968,969,975,982,983,984,999,1022,1037,1038,1065,1071,1072,1073,1079,1080,1096,1111,1150,1248,1249,1281,1282],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1250,1258,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277],good:43,googl:1250,got:[43,1250],gpu0:43,gpu2:43,gpu:[925,960,963,1150],gpu_is_avail:[440,925,1150],grad:[1250,1283,1287,1292],gradient:[25,40,41,477,478,479,480,925,969,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1115,1146,1147,1148,1149,1250,1283,1284,1285,1286,1287,1288,1292,1296],gradient_descent_upd:[1096,1146,1147,1148,1149],gradient_imag:[166,350,481,616,779,1112],gradienttrack:[1096,1097],graph:[1096,1099,1101,1103,1104,1105,1279,1280],greater:[40,41,999,1002,1030,1078,1206,1210],green:[40,41,42,1294,1295],grid:[999,1057],group:[1112,1117],guid:[43,1250,1251,1296],gym:1250,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1296,half:[999,1002,1150,1206,1210],hand:1250,handl:[40,41,42,43,923,924,925,941,943,952,953,964,971,974,1096,1099,1101,1103,1104,1105,1150,1283,1284,1285,1286,1287,1288],happen:43,has:[40,41,43,869,871,999,1081,1119,1124,1130,1134],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,999],hasattr:1150,have:[40,41,43,847,848,849,850,851,852,855,856,857,858,859,860,861,862,863,865,866,867,869,870,872,873,874,877,878,880,881,882,884,903,909,999,1015,1019,1024,1025,1026,1027,1033,1081,1096,1102,1110,1119,1125,1130,1138,1150,1250,1292,1293],haven:43,hdf5:[40,41,1279,1280],head:[1231,1242,1267,1278],head_dim:[1267,1278],height:[1112,1117],height_cutoff:[40,41],help:[43,59,396,440,441,925,937,938,939,940,975,1096,1250,1258,1260,1261,1263,1264,1266],here:[43,1250],hidden:[1231,1241,1267,1276],hierarch:[999,1017],hierarchi:[40,41],high:[40,41,492,1206,1208,1210],higher:[1096,1099,1101,1103,1104,1105,1119,1125],highest:[1206,1208],highest_util:1150,highest_util_nod:1150,highli:1250,highlight:1296,hint:43,hkt:1296,hold:[975,979,999,1002,1006,1069,1070],host:1250,hot:[999,1061],hour:43,how:[1250,1267,1278,1279,1280,1293,1296],howev:[43,1293],http:1296,hyperbol:[855,856,860,1130,1132,1136,1137,1143,1145,1223,1230],hypothet:[43,1296],icon:1250,idea:1250,ident:[40,41,43,130,296,442,573,706,999],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[846,851,852,855,867],if_exist:[40,41],ignor:[40,41,1283,1287],ignore_key_error:[40,41],ignore_miss:[1283,1287],ignore_non:[40,41],iii:43,iinfo:[81,212,396,521,653,851],imag:[27,482,483,484,999,1051,1113,1114,1115,1116,1117,1118,1231,1232,1233,1234,1235,1237,1238,1250,1296],image_dim:[1112,1116],imkkhk:1296,immedi:[1250,1293,1296],implement:[43,855,856,859,860,864,865,877,878,884,909,1250,1293,1296],in_featur:[1231,1240],inadvert:43,includ:[40,41,43,869,872,880,881,882,999,1002,1041,1079,1080,1092,1194,1195,1206,1210,1267,1277,1278,1281,1282,1292],include_deriv:[1194,1196,1203],include_empti:[40,41],include_inf:[40,41,999,1041,1092],include_nest:[1194,1195],include_self:[40,41],inclus:[43,1206,1208],incom:[1231,1240],increas:[925,947,951,957,999,1016,1029,1094,1150,1194,1203],increasingli:1296,increment:[999,1046,1150],inde:1250,indent:[40,41,42],independ:[1206,1207],index:[40,41,442,492,877,878,999,1004,1005,1034,1035,1057,1078,1081,1194,1197,1199,1200,1201,1204],index_nest:1194,indic:[40,41,442,456,457,467,469,470,869,872,877,878,999,1004,1005,1034,1035,1043,1061,1069,1070,1194,1195,1197,1199,1200,1201,1202,1204,1205,1206,1207,1223,1228,1231,1232,1233,1234,1235,1236,1237,1238,1248,1249,1267,1268,1269,1270,1271,1272,1273,1274,1279,1280],indices_wher:[130,296,442,706,999],indistinguish:[855,867],inevit:1296,inf:[40,41,869,872,999,1041,1050,1092,1130,1134],infer:[923,924,999,1039,1042,1067,1075,1112,1116,1119,1124,1293,1296],infin:[855,856,858,859,860,861,865,867,869,872,880,881,882,999,1050],infinit:[855,867],inform:[851,852,853,1096,1107],init_c:[1231,1241],init_h:[1231,1241],init_on_first_step:[1283,1287],initi:[40,41,42,43,59,396,440,441,925,937,938,939,940,975,1096,1150,1231,1241,1250,1260,1261,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1283,1287],initialz:[1279,1280],inner:[1146,1147,1148,1149],inner_batch_fn:[1146,1147,1148],inner_batch_shap:[1231,1240],inner_cost_fn:[1146,1147,1148],inner_grad_step:[1146,1147,1148,1149],inner_learning_r:[1146,1147,1148,1149],inner_optimization_step:[1146,1147,1148,1149],inner_v:[1146,1147,1148],innermost:[847,849,869,870],inp:1150,inplac:[40,41,999,1009,1044,1048,1082,1096,1099,1101,1103,1104,1105,1256,1257,1283,1284,1285,1286,1287,1288],inplace_arrays_support:[442,999],inplace_decr:[130,296,442,573,706,999],inplace_incr:[130,296,442,573,706,999],inplace_oper:[0,11,12],inplace_upd:[40,41,130,296,442,573,706,999,1256,1257],inplace_variables_support:[442,999],input:[15,18,19,40,41,42,43,847,849,855,856,857,858,859,860,861,862,863,864,865,866,867,869,870,872,873,874,877,878,880,881,882,923,924,925,934,935,942,943,944,947,948,951,957,969,970,975,979,980,982,983,984,985,986,990,991,999,1000,1001,1004,1005,1007,1008,1009,1010,1012,1013,1014,1015,1016,1018,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1039,1041,1042,1043,1045,1046,1047,1049,1050,1051,1055,1056,1057,1058,1066,1068,1075,1076,1078,1081,1082,1083,1084,1086,1087,1088,1089,1091,1092,1094,1096,1100,1102,1107,1111,1112,1113,1114,1115,1116,1118,1119,1122,1124,1125,1127,1128,1129,1130,1132,1134,1136,1137,1138,1142,1143,1144,1145,1146,1147,1148,1149,1150,1206,1207,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1248,1249,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1281,1282,1293],input_ax:[925,969,1150],input_channel:[1267,1268,1269,1270,1271,1272,1273,1276,1277],input_queu:1150,inputs_split:1150,insert:[999,1029],insid:43,inspect:1150,inspir:1296,instal:1250,instanc:[15,16,17,18,19,40,41,43,492,884,903,909,925,934,1150,1256,1257,1289,1290],instead:[40,41,43,492,1213,1215,1216,1217,1218,1219,1220,1221,1296],int32:43,int64:[975,979,999,1002,1006,1042,1062,1063,1095],int_dtyp:[975,984,994],integ:[40,41,492,851,853,855,857,858,869,872,880,881,882,975,991,999,1002,1030,1068,1077,1206,1208,1211],integr:1250,intend:43,inter:1250,interact:1250,interchang:[40,41,999,1083],interest:1250,interfac:[999,1006,1293],intermedi:[40,41],intern:[40,41,925,1096,1110,1150,1194,1195,1202,1203,1258,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1289,1290],interpol:[999,1051],intersect:[1130,1131],interv:[40,41,880,881,882,999,1002,1012,1052,1053,1130,1133,1206,1210],introduc:1296,inv:[783,1119,1296],invalid:[880,881,882],invalid_dtyp:975,invers:[855,856,1119,1121,1123,1130,1131,1132,1133,1134,1136,1296],invert:[1119,1121,1123],invest:1296,investig:43,invoc:[923,924],irrespect:1250,is_al:1150,is_arrai:[130,296,442,573,706,999,1150],is_float_dtyp:975,is_int_dtyp:975,is_mean:1150,is_sum:1150,is_vari:[163,345,476,611,773,1096],isfinit:[86,217,401,526,658,855],isinf:[296,573,706,999],isinst:1150,isnan:[86,217,401,526,658,855],isnumer:1150,issu:[1250,1251],issue_numb:43,item:[15,19,40,41,884,896,897,925,934,935,937,944,946,948,950,956,975,982,999,1017,1040,1079,1080,1150,1194,1198,1199,1200,1203,1204,1205,1250,1279,1280,1292],iter:[15,16,17,18,19,40,41,42,923,924,925,928,929,931,932,934,935,938,939,946,948,949,950,951,956,969,999,1001,1010,1015,1016,1042,1057,1062,1066,1067,1070,1075,1077,1081,1084,1089,1094,1150,1194,1195,1196,1198,1202,1203],iterbal:[925,946,950,956,1150],its:[492,925,969,999,1042,1067,1083,1089,1150,1250],itself:[43,1194,1203],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,846,847,848,849,850,851,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,869,870,871,872,873,874,877,878,880,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,927,928,929,930,931,932,934,935,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1150,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1250,1251,1253,1254,1255,1256,1257,1258,1260,1261,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1294,1295],ivy_backend:[40,41],ivy_bay:1296,ivy_test:43,ivyfcmodel:1292,ivyh:[40,41,42],ivymodul:[194,833],jame:1250,jax:[43,1096,1102,1250,1296],jax_concat:1250,jnp:1250,join:[40,41,999,1015,1081,1150],journal:1250,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1250,1267,1276,1296],kaimingnorm:[1258,1262],kalman:1296,kalman_filt:1296,kalman_filter_step:1296,kalman_filter_upd:1296,keep:[40,41,925,970,999,1091,1150,1250,1251,1296],keep_inner_v:[1146,1147,1148],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1146,1147,1148],keepdim:[40,41,442,474,485,486,869,872,880,881,882,999,1091,1119,1122,1213,1215,1216,1217,1218,1219,1220,1221],kei:[15,16,17,40,41,42,43,884,889,925,937,999,1017,1146,1147,1148,1150,1194,1197,1201,1231,1242,1243,1250,1256,1257,1267,1278,1283,1287],kept:[40,41,42,1146,1147,1148],kera:1296,kernel:[1231,1241],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,925,934,935,947,951,957,999,1003,1024,1025,1026,1054,1150,1194,1198,1279,1280],keyword_color_dict:[40,41,42],kind:[851,852,853,1296],kwarg:[15,16,17,40,41,42,59,63,925,934,947,951,957,999,1054,1150,1256,1257,1279,1280],kwarg_stateful_idx:[1279,1280],kwargs_clon:1150,kwargs_dist:1150,kwargs_uni:1150,label:[43,1244,1245,1246,1247],lamb:[1096,1103,1250,1283],lamb_upd:1096,lambda:[1150,1283,1286,1288,1292],lar:[1096,1103,1104,1250,1283],larger:[851,852,999,1012],largest:[40,41,851,852,853,999,1004,1030],lars_upd:1096,last:[40,41,869,870,873,874,877,878,880,881,882,999,1002,1019,1051,1077,1081,1119,1122,1125,1213,1218,1220,1223,1228,1231,1241,1267,1277],later:[40,41,999,1011],latest:[1267,1276],layer:[1096,1099,1101,1103,1105,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1248,1249,1250,1258,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1289,1290,1296],layer_norm:1248,layernorm:[1250,1281],layerwis:[1096,1104,1283,1286],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1194,1195,1202],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1223,1224,1225],leaky_relu:[825,1223],learn:[1096,1099,1101,1103,1104,1105,1119,1124,1146,1147,1148,1149,1206,1212,1250,1283,1284,1285,1286,1287,1288,1293,1296],learnabl:[1248,1249,1281,1282],least:43,leav:[15,18,19,40,41,1194,1195,1196,1202,1203],left:[40,41,43,1119,1122,1213,1215,1216,1217,1218,1219,1220,1221,1250],leftmost:[40,41],len:1150,length:[40,41,42,999,1002,1067,1078,1089],lenton2021ivi:1250,lenton:1250,less:[40,41,43,86,217,401,526,658,855,858,865,867,869,872,1150,1206,1210],less_util_node_str:1150,let:[1293,1296],level:1250,librari:[855,866,1250,1292,1296],lightweight:1250,like:[43,1096,1102,1206,1210,1250,1292,1293,1296],likewis:43,limit:[40,41,42,43,851,852,853,999,1012,1013,1014],linalg:[29,1120,1121,1122,1123,1124,1125,1126,1250],line:43,linear0:[1250,1292],linear1:1250,linear2:1292,linear:[999,1032,1051,1119,1223,1224,1225,1226,1231,1239,1250,1267,1268,1269,1270,1271,1272,1273,1274,1292],linear_algebra:[485,486,487,488,869,870,871,872],linear_resampl:[130,296,442,573,706,999],linearli:[999,1032],link:[43,1250],linspac:[130,296,442,573,706,999,1002],list:[15,18,19,40,41,392,393,395,847,848,850,873,874,880,881,882,925,934,935,944,945,947,948,949,951,954,955,969,999,1002,1006,1008,1057,1076,1077,1086,1091,1146,1147,1148,1150,1194,1195,1196,1198,1202,1203,1231,1232,1233,1234,1235,1236,1237,1238,1250,1251,1256,1257,1267,1268,1269,1270,1271,1272,1273,1274],list_join:[40,41,42],list_stack:[40,41],liter:[869,872],littl:1293,load:[40,41],loaded_kwarg:1150,loader:1250,local:43,local_set:[999,1040],locat:[43,999,1050,1206,1207],log1p:[86,401,526,658,855],log2:[86,401,526,658,855],log:[794,855,864,869,871,999,1053,1130,1150,1244,1245,1246,1247],logarithm:[855,864,865,869,871,1130,1141],logic:[31,855,866,880,881,882,1128,1129,1250],logical_and:[360,791,1127],logical_not:[86,217,401,526,658,855],logical_or:[360,791,1127],logit:[1244,1247],logspac:[130,296,442,573,706,999],look:[43,1293,1296],loop:[1146,1147,1148,1149],loss:[1245,1246,1247,1250,1292],loss_fn:[1250,1292],lot:1293,low:[40,41,492,1206,1208,1210],lower:[40,41,43,847,849,999,1056,1206,1210],lower_depth:[1279,1280],lowest:[15,18,19,40,41,1194,1203,1206,1208],lstm:[1231,1241,1250,1267],lstm_updat:[43,1231],machin:[851,852,853,1119,1124,1206,1212,1250,1293,1296],made:43,mai:[855,866,877,878,999,1002,1023,1027,1250,1293,1296],main:[847,849,869,870,999,1042,1250],mainli:1250,maintain:[43,877,878],make:[43,492,925,1150,1250,1293],maml:[1146,1147,1148],maml_step:1146,manag:[925,1150],manhattan:[869,872],mani:[40,41,43,999,1077,1250],manipulation_funct:[873,874],manner:[15,18,19,40,41,43,1194,1203],manual:[1194,1195,1202,1296],map:[40,41,42,925,934,999,1050,1150,1194,1199,1200,1203,1267,1278,1292],map_cont:[40,41],map_nest_at_index:1194,map_nest_at_indic:1194,map_sequ:[40,41],mapper:[925,934,935,1150],mark:43,mask:[1231,1242,1243],master:43,match:[40,41,999,1054],match_kwarg:999,math:[33,491,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1150,1250],mathbb:[1119,1126],mathbf:[1119,1126],mathemat:[846,869,872],matmul:[43,296,442,573,706,999,1296],matplotlib:1293,matric:[847,849,869,870,1231,1240],matrix:[40,41,847,849,869,870,871,999,1001,1013,1055,1119,1120,1121,1122,1123,1124,1126,1231,1240,1267,1277],matrix_norm:[40,41,170,354,485,620,783,1119],matter:1250,max:[40,41,396,851,852,853,999,1013,1014,1025,1056,1069,1070,1150,1213,1215,1283,1285],max_batch_s:[40,41],max_chunk_s:[925,969,1150],max_depth:[40,41,925,929,932,939,947,951,957,999,1040,1150,1194,1203],max_dev_dim_step_ratio:925,max_freq:[999,1032],max_length:[40,41],max_node_dim_step_ratio:1150,max_norm:[40,41,999,1013,1014],max_split_factor_step_s:[925,1150],max_trust_ratio:[1096,1103,1283,1285],maxim:[1250,1293,1296],maximis:1250,maximum:[40,41,42,706,925,947,951,957,969,999,1004,1012,1013,1014,1032,1096,1103,1150,1194,1203,1213,1215],mayb:[15,18,19],mdi:1150,mean:[40,41,492,925,954,955,956,957,969,999,1025,1146,1147,1148,1149,1150,1194,1198,1206,1209,1213,1216,1219,1221,1258,1292,1296],measur:[1231,1242,1267,1278],mech:1250,mechan:[1250,1296],medic:1296,member:43,memori:[925,941,964,969,971,974,1150,1231,1241,1250],mention:43,merg:43,merge_with_upstream:43,meshgrid:[296,442,706,999],messag:[1294,1295],meta:[35,1147,1148,1149,1250],method:[40,41,42,43,492,999,1006,1017,1057,1069,1070,1096,1103,1104,1150,1194,1195,1202,1203,1250,1267,1278,1279,1280,1293],might:[999,1023,1296],min:[40,41,396,851,852,853,869,872,999,1025,1058,1069,1070,1079,1119,1124,1150,1213,1217],min_bas:[999,1080],min_denomin:[999,1079],min_dev_dim_s:925,min_node_dim_s:1150,min_sf_tune_step:[925,1150],min_unit_dev_tune_step:925,min_unit_node_tune_step:1150,mind:1250,mini:[1248,1249,1281,1282],minimum:[40,41,706,925,975,979,999,1002,1005,1006,1012,1037,1038,1071,1072,1079,1080,1150,1213,1217],miss:[1283,1287],ml_framework:[999,1002,1119,1124],mod:[999,1031],mod_depth:[1279,1280],mod_height:[1279,1280],mod_with_top_mod_key_chain:[1279,1280],mode:[40,41,485,487,923,924,925,954,955,956,957,969,1119,1124,1125,1150,1293],model:[1250,1292],modul:[40,41,42,59,999,1059,1150,1250,1251,1253,1254,1255,1256,1257,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1281,1282,1289,1290,1296],moment:[1096,1098,1099,1103,1283,1284,1285],more:[43,873,874,999,1081,1150,1250,1293,1296],more_util_node_str:1150,most:[40,41,43,1119,1124,1250,1296],move:[40,41,43,925,970,1150],much:[43,1250,1296],multi:[492,999,1059,1231,1242,1267,1278],multi_head_attent:1231,multi_index_nest:1194,multi_map:[40,41],multi_nod:1150,multidev:[925,936,937,938,957],multidevcontain:[40,41],multidevic:[925,934],multidevit:[925,928,931,934,935,939],multidevitem:[925,927,930],multidevnest:[925,929,932],multiheadattent:[1250,1267],multinod:[1150,1154],multinodecontain:1150,multinodeit:1150,multinodeitem:1150,multinodenest:1150,multinomi:[176,364,492,627,809,1206],multipl:[40,41,880,881,882,999,1054,1077,1119,1121,1213,1215,1216,1217,1218,1219,1221,1248,1249,1267,1277,1293],multipli:[40,41,999,1020,1213,1218],multiprocess:[40,41,42,442,706,925,934,999,1150],must:[40,41,42,43,847,848,849,850,855,856,857,858,859,860,861,863,865,866,867,869,870,872,873,874,877,878,880,881,882,884,903,909,925,954,955,956,957,969,999,1002,1015,1017,1019,1027,1056,1058,1070,1081,1130,1135,1138,1150,1206,1211,1283,1287],mutabl:[1194,1196,1203],mutlidevic:[925,934],mutlinod:1150,mw_tm1:[1096,1099,1103],mx_concat:1250,mxn:[847,849,869,870],mxnet:[43,1250,1296],my_func:43,mymodel:1250,name:[43,923,924,1292],name_of_your_branch:43,name_of_your_pr_branch:43,namespac:[43,1293],nan:[40,41,43,846,855,856,858,859,860,861,862,865,867,880,881,882,999,1041,1092],nativ:[15,17,18,19,40,41,43,925,941,943,952,953,964,971,974,975,980,987,988,1150,1250,1251,1256,1257],native_modul:[1256,1257],native_module_class:[1256,1257],nativearrai:[15,18,19,43,847,849,851,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,869,872,873,874,877,878,880,881,882,884,903,909,925,943,969,970,975,979,985,990,991,999,1000,1001,1002,1004,1005,1006,1007,1008,1010,1012,1013,1014,1015,1016,1018,1019,1020,1021,1024,1025,1026,1027,1029,1030,1031,1032,1034,1035,1039,1041,1042,1043,1050,1051,1052,1053,1055,1056,1057,1058,1061,1062,1063,1066,1067,1068,1069,1070,1075,1077,1078,1081,1083,1084,1086,1087,1088,1089,1091,1092,1093,1094,1095,1150,1194,1196,1203],natur:[855,864,869,871,1130,1141,1296],ncdhw:[1231,1236,1237,1267,1272,1273],nchw:[1231,1234,1235,1238,1267,1270,1271,1274],ncw:[1231,1232,1233,1267,1268,1269],ndarrai:[43,392,393,394,395,396,398,399,492,999,1087],ndhwc:[1231,1236,1237,1267,1272,1273],nearest:[999,1068],need:[43,999,1013,1014,1231,1233,1235,1237,1250,1267,1269,1271,1273,1296],neg:[40,41,855,861,869,872,873,874,880,881,882,1213,1218,1220,1223,1225],negative_slop:1258,neither:1150,nest:[15,16,17,18,19,40,41,42,925,947,951,957,999,1006,1086,1146,1147,1148,1150,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1279,1280,1283,1284,1285,1286,1287,1288],nested_indices_wher:1194,nested_map:[1150,1194],network:[1231,1240,1250,1251,1253,1267,1279,1280,1296],neural:[1231,1250,1253,1267,1292],never:43,new_node_percent_mem:1150,new_node_util:1150,new_node_utils_kei:1150,new_std:[1248,1249,1281,1282],newli:[43,923,924,999,1010,1011],newlin:[40,41,42],newshap:[999,1010,1067],next:[851,852,1150,1279,1280,1283,1284,1285,1286,1287,1288],nhwc:[1231,1234,1235,1238,1267,1270,1271,1274],node:[40,41,1194,1195,1202],node_clon:1150,node_dist:1150,node_dist_arrai:1150,node_dist_it:1150,node_in:1150,node_mapp:1150,node_str:1150,node_to_str:1150,node_util:1150,nodedistit:1150,nodedistitem:1150,nodedistnest:1150,nodemanag:[1150,1161],nodemapp:1150,nodemappermultiproc:1150,noinspect:[43,926,976,977,978,1097,1150],non:[40,41,855,866,869,872,880,881,882,923,924,975,989,1279,1280,1283,1287,1293],none:[40,41,42,43,59,61,64,392,393,395,440,442,443,446,448,455,456,457,458,465,466,467,468,469,470,471,472,473,475,485,486,492,493,847,848,850,851,852,853,869,872,873,874,880,881,882,923,924,925,934,935,941,942,967,968,969,970,975,982,983,984,999,1002,1006,1022,1023,1028,1033,1034,1035,1040,1042,1044,1045,1046,1047,1048,1052,1053,1059,1061,1062,1063,1066,1069,1070,1071,1072,1077,1078,1079,1080,1089,1090,1095,1096,1099,1101,1103,1104,1105,1111,1112,1116,1119,1122,1124,1146,1147,1148,1149,1150,1194,1195,1198,1202,1203,1206,1207,1208,1209,1210,1213,1215,1216,1217,1218,1219,1220,1221,1231,1233,1235,1237,1240,1241,1242,1243,1248,1249,1256,1257,1258,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290],norm:[40,41,869,872,999,1013,1014,1119,1122,1249,1250,1282,1283,1285],normal:[1206,1209,1248,1249,1281,1282],normalized_idx:[1248,1249],normalized_shap:[1281,1282],notat:[40,41,1213,1214],note:[43,1119,1124],noth:[40,41,1293],notimplementederror:1150,now:[40,41,43,925,970,999,1000,1150,1250,1267,1278,1279,1280,1292,1293,1296],np_concat:1250,np_finfo:396,ns_tune_step:1150,num:[442,465,466,999,1052,1053],num_arrai:[40,41],num_arrays_in_memori:999,num_arrays_on_dev:925,num_band:[999,1032],num_channel:[1267,1274],num_chunk:1150,num_chunks_floor:1150,num_class:[1206,1207],num_cpu_cor:925,num_gpu:[123,440,925,1150],num_head:[1231,1242,1267,1278],num_kei:[1231,1242,1243],num_lay:[1267,1276],num_or_size_split:[40,41,442,471,999,1077],num_output:1150,num_queri:[1231,1242,1243],num_sampl:[442,464,492,493,999,1051,1112,1113,1206,1207],num_task:[1146,1147,1148,1149],number:[40,41,42,846,851,852,853,855,858,880,881,882,923,924,925,961,962,963,975,986,990,991,999,1002,1012,1016,1029,1032,1039,1042,1051,1052,1053,1056,1060,1066,1077,1084,1088,1092,1094,1119,1125,1146,1147,1148,1149,1150,1206,1207,1211,1213,1215,1216,1217,1219,1221,1231,1242,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1293,1296],numer:[43,855,858,861,862,863,866,884,903,909,999,1037,1038,1071,1072,1079,1080,1130,1138,1258],numhead:[1231,1242],numpi:[40,41,43,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,489,490,491,492,493,999,1087,1119,1124,1125,1213,1214,1250,1292,1293,1296],nwc:[1231,1232,1233,1267,1268,1269],obj:[40,41],object:[40,41,42,59,396,851,852,925,975,979,999,1002,1006,1096,1194,1197,1199,1200,1201,1204,1205,1206,1212,1258,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1279,1280],object_in:[442,446,999,1006],observ:1150,obvious:43,occupi:[851,852,853,999,1069,1070],off:[869,870,999,1002],offer:1250,offset:[869,870,1248,1249],often:1293,old:[40,41],on_init:[1267,1278,1279,1280],onc:[43,925,969,1150,1206,1207,1250],one:[40,41,43,869,872,873,874,925,954,955,956,957,969,975,981,999,1042,1054,1061,1069,1070,1078,1081,1119,1122,1150,1213,1214,1215,1216,1217,1218,1219,1220,1221,1250,1293,1296],one_hot:[130,442,573,706,999],onearrai:[999,1029],ones:[40,41,77,208,392,517,649,847,999,1042,1061,1063,1250],ones_lik:[130,296,442,573,706,999],ongo:43,onli:[40,41,43,492,855,866,873,874,925,1119,1124,1150,1194,1195,1196,1202,1283,1284,1285,1286,1287,1288,1292,1293],onlin:[43,1250],onto:[925,954,955,970,1150,1194,1198,1203],oom:[925,1150],open:[999,1002,1206,1210,1250,1296],opencv:1293,oper:[40,41,999,1009,1024,1025,1026,1052,1053,1082,1096,1099,1101,1103,1104,1105,1127,1128,1129,1231,1232,1233,1234,1235,1236,1237,1238,1240,1250,1251],operand:[40,41,855,856,858,859,860,865,867,1213,1214],oppos:[999,1032],optim:[925,1096,1099,1101,1103,1104,1105,1146,1147,1148,1149,1150,1250,1284,1285,1286,1288,1292,1296],optimizer_upd:1096,option:[15,18,19,40,41,42,43,392,393,395,847,848,850,869,872,873,874,880,881,882,923,924,925,934,935,943,947,948,949,950,951,954,955,956,957,964,967,968,969,970,974,975,980,985,989,998,999,1001,1002,1004,1005,1006,1013,1014,1015,1020,1022,1023,1032,1033,1034,1035,1039,1041,1042,1049,1051,1052,1053,1054,1057,1059,1061,1062,1063,1066,1069,1070,1073,1075,1077,1078,1079,1080,1081,1089,1091,1092,1095,1096,1099,1101,1102,1103,1104,1105,1107,1112,1116,1119,1122,1124,1146,1147,1148,1149,1150,1194,1195,1196,1198,1202,1203,1206,1207,1213,1215,1216,1217,1218,1219,1220,1221,1223,1224,1228,1231,1239,1240,1242,1243,1244,1245,1246,1247,1248,1249,1256,1257,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1293],ord:[869,872,1119,1125],order:[40,41,42,43,869,872,873,874,877,878,1096,1099,1101,1103,1104,1105,1119,1122,1146,1147,1148,1289,1290],ordered_node_util_kei:1150,org:1296,organ:43,origin:[40,41,42,999,1063,1067,1095,1119,1122],other:[40,41,43,884,886,887,892,894,895,899,901,902,903,904,905,907,909,910,911,912,913,914,916,917,918,920,921,922,923,924,999,1001,1002,1042,1096,1100,1206,1210,1250,1292,1293,1296],other_i:[43,884,903,909],otherwis:[15,16,17,18,19,40,41,855,861,862,869,872,880,881,882,925,942,975,982,983,984,999,1009,1089,1090,1093,1096,1102,1107,1111,1146,1147,1148,1150,1213,1215,1216,1217,1219,1221],our:[43,1250,1296],out:[43,492,847,848,849,850,851,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,869,870,872,873,874,877,878,880,881,882,884,903,999,1002,1130,1134,1231,1239,1241,1250,1267,1275],out_feat_dim:[1231,1242],out_featur:[1231,1239,1240],out_i:[855,861,862],outdat:1296,outer:[1146,1147,1148,1149],outer_batch_fn:[1146,1147,1148],outer_batch_shap:[1231,1240],outer_cost_fn:[1146,1147,1148],outer_v:[1146,1147,1148],outlin:1293,output:[40,41,43,847,848,850,873,874,925,934,935,969,999,1002,1011,1033,1042,1066,1084,1096,1100,1130,1135,1150,1206,1208,1209,1210,1231,1233,1235,1237,1239,1241,1242,1243,1250,1267,1268,1269,1270,1271,1272,1273,1275,1276,1277,1278],output_ax:[925,969,1150],output_axi:1150,output_channel:[1267,1268,1269,1270,1271,1272,1273,1276,1277],output_queu:1150,output_shap:[1231,1233,1235,1237,1267,1269,1271,1273],outsid:[999,1012],over:[40,41,869,872,880,881,882,1119,1122,1206,1210,1213,1215,1216,1217,1219,1221,1248,1249,1281,1282],overal:1293,overflow:[999,1002],overhead:1293,overrid:[999,1061,1063,1095],overriden:[1283,1287],overwrit:[40,41,925,969,1150],overwrite_at_key_chain:[40,41],own:[1250,1293,1296],packag:[43,1293],pad:[999,1016,1032,1094,1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274],pad_width:[442,999,1016,1094],page:1250,pair:[1231,1243],parallel:[925,934,935,1150],parallelis:[925,934,935,1150],param:[40,41,42,442,456,457,925,969,999,1000,1034,1035,1061,1062,1150,1279,1280,1292],paramet:[15,16,17,18,19,40,41,42,43,869,870,871,884,903,909,923,924,925,934,935,941,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,964,967,968,969,970,971,974,975,979,980,981,985,986,987,988,989,990,991,998,999,1001,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1018,1019,1020,1021,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1039,1041,1042,1043,1045,1046,1047,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1062,1063,1066,1067,1068,1069,1070,1071,1072,1073,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1107,1109,1110,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1256,1257,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292],parameter:[1206,1209,1210],pardo:1250,pars:[999,1017],part:[847,849,1096,1099,1101,1103,1104,1105,1130,1134,1250,1279,1280,1293],partial:[40,41,43,1279,1280],particl:1296,particular:[43,1296],pass:[40,41,42,43,925,934,969,975,980,999,1011,1096,1110,1146,1147,1148,1150,1256,1257,1279,1280,1283,1287,1289,1290],pattern:[40,41,999,1024,1025,1026],peopl:43,per:[925,1150,1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274],percent_used_mem_on_dev:925,percent_used_mem_on_nod:1150,percentag:[925,964,1150],perf_count:1150,perform:[40,41,43,880,881,882,925,999,1004,1005,1020,1024,1025,1026,1045,1046,1047,1051,1052,1053,1096,1099,1101,1103,1104,1105,1112,1113,1146,1147,1148,1149,1150,1194,1199,1200,1213,1215,1216,1217,1218,1219,1220,1221,1223,1228,1231,1239,1241],period:43,permissable_step:1150,permit:43,permut:[492,999,1083,1089],perpendicular:[999,1019],person:[43,1250],physci:1296,pickl:[40,41,1150],pickle_filepath:[40,41],pinv:[354,783,1119],pip:1250,pipelin:1292,pkk:1296,pkkm1:1296,pkm1km1:1296,place:[40,41,43,847,848,850,925,970,999,1029,1033,1045,1046,1047,1150,1283,1284,1285,1286,1287,1288],placehold:[43,1194,1203],pleas:[43,492,1119,1124],point:[43,846,847,848,850,851,852,855,856,858,859,860,865,867,869,872,975,990,999,1002,1130,1138],popul:[40,41,1206,1207],popular:1296,population_s:[492,493,1206,1207],portabl:[1250,1251],posit:[15,16,17,851,852,855,861,880,881,882,925,947,951,957,999,1000,1002,1029,1032,1150,1206,1211,1256,1257],possibi:[40,41],possibl:[43,999,1054,1086,1112,1117,1296],post:[1248,1249],post_shap:[40,41],power:[43,884,909,915,999,1037,1071,1080,1258],practic:1250,pre:[925,1150,1250],pre_shap:[40,41],precis:[851,852,855,867],pred:[1244,1245,1246,1247],predict:[1244,1245,1246,1247,1296],preprint:1250,present:[40,41],preserv:[40,41,42,873,874,1096,1107],preserve_typ:[40,41,476,479,1096,1107],press:1250,prevent:[43,1096,1098,1099,1103,1150,1283,1284,1285],prevet:43,previou:[1096,1099,1103],previous:[999,1011],prime:1250,print:[40,41,42,925,965,999,1064,1250,1292],print_all_arrays_in_memori:999,print_all_arrays_on_dev:925,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,43,59,63],privat:[1283,1287],prob:[492,493,1206,1207,1231,1239,1267,1275],probabl:[1206,1207,1231,1239,1267,1275],problem:[43,1296],process:[43,925,934,935,964,974,999,1059,1150],process_specif:[925,964,974,1150],prod:[40,41,999,1025],produc:[925,934,935,1150],product:[40,41,999,1019,1020,1055,1213,1214,1231,1242,1243,1267,1278],profil:[123,290,440,566,698,925,1150],progress:43,project:[1250,1292,1293,1296],promot:[43,855,856,857,859,860,865,867,869,872,884,909,1130,1138],prompt:1250,properli:43,properti:[40,41,396,925,937,1150,1279,1280,1283,1284,1285,1286,1288],provid:[40,41,43,873,874,880,881,882,923,924,925,942,975,982,983,984,989,998,999,1023,1061,1063,1070,1095,1096,1099,1101,1103,1104,1105,1111,1150,1250,1267,1276,1283,1284,1285,1286,1287,1288,1293],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1119,1123],pull:[1250,1251],pure:[40,41,1250,1296],purpos:[43,1296],put:1150,pybroadexcept:1150,pyprotectedmemb:1150,pyshadowingbuiltin:43,pyshadowingnam:[926,976,977,978,1097,1150],python:[40,41,925,964,974,999,1002,1150,1250],pytorch:[1096,1099,1101,1103,1104,1105,1119,1124,1250,1283,1284,1285,1286,1287,1288,1292,1293,1296],pyunresolvedrefer:1150,quadrant:[1130,1135],qualiti:43,queri:[40,41,884,898,919,925,958,968,1150,1231,1242,1243,1267,1278],query_dim:[1267,1278],query_kei:[40,41],queue:[40,41,42,925,934,935,999,1065,1073,1150],queue_class:[925,934,935,1150],queue_load_s:[40,41,42],queue_timeout:[40,41,42,999,1150],quick:[492,1250],quickli:[43,1292],radian:[855,859,1130,1131,1133,1135,1142,1144],rai:[1130,1131],rais:[40,41,43,880,881,882,884,909,999,1009,1037,1071,1078,1080,1090,1150,1279,1280,1283,1287],ram:[925,964,971,974,1150],randint:[176,364,492,627,809,1206],random:[37,40,41,493,1207,1208,1209,1210,1211,1212,1250],random_crop:1112,random_norm:[176,364,492,627,809,1206],random_uniform:[176,364,492,627,809,1206],randomli:[492,1112,1116,1231,1239,1267,1275],rang:[492,999,1002,1052,1053,1130,1135,1150,1250,1292,1296],rank:[869,872,880,881,882,999,1016,1091,1094],rate:[1096,1099,1101,1103,1104,1105,1146,1147,1148,1149,1267,1278,1283,1284,1285,1286,1287,1288],rather:[40,41,43,925,969,999,1002,1049,1096,1102,1150],ratio:[925,1096,1103,1112,1117,1150,1283,1285],raw:[40,41,1119,1124],raw_delta:1150,reach:[43,925,947,951,957,1150,1194,1203],read:[40,41],readi:[1150,1292],real:[1130,1131,1134],realiti:1293,rearrang:[40,41,999,1024,1026],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1146,1148],receiv:[43,925,934,935,999,1003,1054,1150,1267,1277],receivess:[925,1150],receivng:[1146,1149],recev:[1146,1147,1148],recognit:1296,recommend:[855,866,1250],rectifi:[1223,1225,1226],recurr:[1231,1241],recurrent_bia:[1231,1241],recurrent_kernel:[1231,1241],recurs:[40,41,1194,1195,1196,1202,1203],redefin:43,reduc:[40,41,880,881,882,925,969,999,1025,1119,1124,1150,1213,1215,1216,1217,1218,1219,1220,1221],reduce_max:[40,41,183,369,494,632,816,1213],reduce_mean:[40,41,183,369,494,632,816,1213,1250,1292],reduce_min:[40,41,183,369,494,632,816,1213],reduce_prod:[40,41,183,369,494,632,816,1213],reduce_std:[40,41,369,1213],reduce_sum:[40,41,183,369,494,632,816,1150,1213],reduce_var:[40,41,183,369,494,632,816,1213],reduct:[39,40,41,442,469,470,880,881,882,999,1025,1069,1070,1214,1215,1216,1217,1218,1219,1220,1221,1250],refactor:43,refer:[43,855,864,880,881,882,1096,1098,1099,1119,1126,1267,1277,1296],reflect:43,reflected_oper:[0,13,14],regard:[925,1150],regardless:[40,41,923,924],register_paramet:1292,reimplement:1296,rel:[869,870,873,874,877,878,1096,1099,1101,1103,1104,1105],rel_slice_obj:1150,relat:43,relev:[1283,1284,1285,1286,1287,1288],relu:[825,1223,1224,1225,1250,1292],remain:[43,999,1067,1194,1198],remaind:[40,41,999,1031,1077],remov:[40,41,43,869,870,999,1078,1146,1147,1148],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,873,874],rep:[999,1084],repeat:[40,41,43,296,706,999,1026,1084,1150,1293],repeated_config_check:[925,1150],repeatedli:[1194,1201],repetit:[40,41,999,1066,1084],replac:[40,41,43,492,493,999,1012,1069,1070,1206,1207],repo:[43,1250],repositori:43,repres:[43,855,856,860,975,981,986,1231,1240],represent:[40,41,42,43,846,851,852,853,855,857,925,952,953,975,981,987,988,999,1076,1086,1150],reptil:[1146,1149],reptile_step:1146,request:[1250,1251],requir:[43,855,867,923,924,975,979,999,1002,1006,1256,1257],resampl:[999,1051],reserv:43,reshap:[40,41,43,492,706,999],reshape_lik:[40,41],respect:[855,857,863,884,903,999,1027,1096,1098,1099,1100,1101,1103,1104,1105,1119,1124,1130,1138,1146,1147,1148,1149],respond:43,respons:[43,1150],restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,855,856,857,858,859,860,861,862,863,864,865,866,867,869,870,872,880,881,882,884,903,909,925,934,999,1002,1027,1069,1070,1081,1119,1122,1127,1128,1129,1130,1138,1150,1213,1215,1216,1217,1218,1219,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1250],ret:1150,ret_dict:1150,ret_fn:[925,934,935,1150],retain:[1096,1100],retain_grad:[476,477,1096,1100],retreiv:1150,retrn:[999,1076],return_cont:[40,41],return_dict:[40,41],return_inner_v:[1146,1147,1148,1149],return_sequ:[1267,1276],return_st:[1267,1276],rev:[999,1023],revers:[40,41,873,874,999,1023,1089],review:43,right:[40,41,43],rk_e:1296,robot:1250,ronald:1250,root:[43,855,867],round:[296,442,706,855,858,867,999,1002,1150],row:[999,1042,1206,1207],rule:[43,884,909,999,1002,1130,1138],run:[43,925,934,1096,1098,1099,1103,1146,1147,1148,1149,1150,1250,1251,1267,1278,1279,1280],safe:[925,934,1150],safety_factor:[925,1150],same:[15,16,17,40,41,43,847,849,855,858,869,870,873,874,877,878,925,934,935,969,970,975,979,999,1000,1015,1030,1031,1034,1035,1061,1063,1068,1069,1070,1081,1095,1096,1102,1107,1119,1125,1130,1134,1146,1147,1148,1150,1213,1214,1231,1232,1233,1234,1235,1236,1237,1238,1250,1267,1268,1269,1270,1271,1272,1273,1274,1292,1296],same_arrai:[40,41],sampl:[999,1051,1112,1113,1206,1207,1209,1210,1231,1239,1250,1267,1275],satisfi:[999,1006,1119,1121,1126],save:[40,41,999,1074,1085,1112,1114,1279,1280],save_dir:[440,441,925,940,1150],save_weight:[1279,1280],scalar:[869,872,999,1012,1061,1088,1092],scale:[925,967,968,1096,1104,1150,1231,1239,1242,1243,1248,1249,1267,1275,1278,1283,1286],scaled_dot_product_attent:1231,scatter:[999,1061,1069,1070],scatter_flat:[130,296,442,573,706,999],scatter_nd:[130,296,442,573,706,999],scene:[1096,1099,1101,1103,1104,1105],schemat:1250,screen:[40,41],script:43,search:[15,18,19,40,41],second:[40,41,855,857,863,869,870,925,956,999,1007,1019,1027,1065,1073,1083,1096,1098,1099,1103,1146,1148,1150,1283,1284,1285],secondli:1296,sector:[855,856],see:[43,59,396,440,441,492,855,857,863,869,872,880,881,882,884,903,909,925,937,938,939,940,975,999,1002,1052,1053,1096,1130,1138,1250,1258,1260,1261,1263,1264,1266],seed:[40,41,176,492,809,1206],seed_valu:[40,41,492,1206,1211],seem:1250,seen_set:[999,1040],select:[999,1006,1078,1293,1296],self:[40,41,43,59,396,440,441,884,903,909,925,937,938,939,940,975,1096,1150,1250,1258,1260,1261,1263,1264,1266,1283,1287,1292,1296],self_i:[884,903],sent:1150,seper:[43,999,1032],seq:[40,41,42,1213,1214,1279,1280],sequenc:[15,16,17,40,41,42,43,492,923,924,925,934,935,944,945,946,947,948,949,950,951,954,955,969,975,979,999,1002,1006,1008,1010,1015,1016,1042,1054,1057,1062,1066,1067,1070,1077,1081,1084,1089,1094,1096,1100,1112,1116,1117,1119,1122,1150,1194,1205,1206,1208,1210,1213,1215,1216,1217,1218,1219,1220,1221,1231,1232,1233,1234,1235,1236,1237,1238,1248,1249,1256,1257,1267,1268,1269,1270,1271,1272,1273,1274,1276,1279,1280,1281,1282,1283,1287,1289,1290],sequenti:1250,seri:43,set:[15,18,19,40,41,877,878,925,954,955,967,968,969,999,1001,1022,1042,1071,1072,1073,1074,1096,1099,1101,1102,1103,1104,1105,1119,1122,1150,1194,1195,1202,1204,1205,1206,1207,1211,1213,1215,1216,1217,1218,1219,1220,1221,1250,1267,1276,1283,1284,1285,1286,1287,1288,1293,1296],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_debug_mod:44,set_default_devic:925,set_default_dtyp:975,set_default_float_dtyp:975,set_default_int_dtyp:975,set_default_nod:1150,set_exception_debug_mod:44,set_framework:[40,41,43,59,1150,1250,1292,1293,1296],set_ivy_backend:[40,41],set_min_bas:999,set_min_denomin:999,set_nest_at_index:1194,set_nest_at_indic:1194,set_queue_timeout:999,set_split_factor:[925,1150],set_stat:[1283,1284,1285,1286,1287,1288],set_tmp_dir:999,set_with_grad:1096,setter:1150,sever:1296,sgd:[1250,1283],shape0:1150,shape:[40,41,43,392,393,395,442,455,470,492,706,847,848,849,850,869,870,873,874,877,878,925,937,975,979,999,1000,1010,1015,1016,1029,1030,1031,1033,1035,1039,1042,1061,1062,1063,1066,1067,1068,1069,1070,1076,1078,1081,1094,1095,1112,1116,1119,1121,1124,1130,1134,1135,1150,1206,1208,1209,1210,1213,1214,1231,1233,1235,1237,1267,1269,1270,1271,1272,1273,1274,1281,1282],shape_slic:[40,41],shape_to_tupl:999,share:[40,41,1250,1293],shift:1150,should:[40,41,42,43,492,847,849,855,856,857,858,859,860,861,862,863,865,866,867,869,870,872,884,903,909,923,924,925,999,1010,1011,1017,1061,1067,1096,1099,1101,1103,1104,1105,1130,1138,1150,1213,1214,1250],show:[40,41,1250,1296],show_mod_in_top_mod:[1279,1280],show_structur:[1279,1280],show_sub_contain:[40,41],show_v:[1279,1280],show_v_in_top_v:[1279,1280],shown:[40,41],shp:1150,shuffl:[40,41,176,492,809,1206],shuffle_h5_fil:[40,41],side:43,sigmoid:[825,1223,1250,1292],sign:[869,871],signatur:[43,59,396,440,441,442,476,481,485,489,490,492,925,937,938,939,940,975,1096,1258,1260,1261,1263,1264,1266],signific:1296,similar:[43,1231,1242,1267,1278],similarli:[1119,1124],simpl:[43,999,1028,1250,1293,1296],simpler:43,simplest:1293,simpli:[40,41,43,1250,1293,1296],simultan:1250,sin:[794,999,1032,1130,1144,1293],sinco:1293,sine:[855,856,1130,1133,1142,1143],singl:[40,41,923,924,925,934,935,954,955,956,957,999,1078,1088,1092,1112,1117,1150,1206,1209,1210,1213,1215,1216,1217,1218,1219,1220,1221,1250,1293,1296],singleton:[869,872,880,881,882],singular:[1119,1125],sinh:[794,1130],siren:[1250,1258],situat:43,size:[40,41,42,442,469,869,870,880,881,882,925,948,949,950,951,967,968,969,999,1002,1010,1052,1053,1069,1077,1112,1116,1119,1122,1125,1150,1206,1207,1209,1210,1213,1215,1216,1217,1218,1219,1220,1221,1267,1268,1269],size_ordered_arrai:[40,41],skew:[1119,1126],skinv:1296,skip:[40,41],slice:[40,41,999,1034,1035,1150,1194,1201],slice_kei:[40,41],slice_obj:[40,41,1150],slice_via_kei:[40,41],slide:[1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274],slodget:869,slogdet:[226,415,540,672,869,871],slope:[1223,1225],small:[1244,1245,1246,1247,1248,1249,1250,1281,1282,1293],smaller:[999,1012],smallest:[40,41,851,852,853,855,858,999,1005],smallest_norm:[396,851,852],softmax:[192,503,825,1223,1231,1242,1243],softplu:[825,1223],solut:43,solv:1296,some:[40,41,43,999,1002,1096,1098,1099,1101,1103,1104,1105,1110,1231,1239,1250,1267,1275,1293,1296],some_backend:43,some_namespac:43,someth:[43,1296],something_cool:43,sometim:43,somewher:[40,41],soon:43,sort:[40,41,42,878,1119,1125,1150],sort_by_kei:[40,41],sorting_funct:[877,878],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,392,393,394,395,396,398,399,440,441,442,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,476,477,478,479,480,481,482,483,484,485,486,487,488,490,491,492,493,847,848,849,850,851,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,869,870,871,872,873,874,877,878,880,881,882,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,927,928,929,930,931,932,934,935,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1146,1147,1148,1149,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1223,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1244,1245,1246,1247,1248,1249,1253,1254,1255,1256,1257,1258,1260,1261,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1294,1295,1296],space:[999,1002,1032,1052,1053],spars:[1244,1247],sparse_cross_entropi:1244,spawn:[999,1059],special:[43,855,856,858,859,860,865,867],specif:[40,41,43,855,866,925,967,999,1017,1024,1025,1026,1059,1146,1147,1148,1149,1150,1206,1212,1250,1279,1280,1292,1293],specifc:[1206,1207],specifi:[40,41,43,847,848,849,850,869,870,872,873,874,877,878,880,881,882,925,944,945,946,947,948,949,950,951,954,955,959,961,965,968,969,970,975,979,981,999,1002,1004,1005,1006,1012,1015,1016,1033,1034,1035,1041,1052,1053,1081,1091,1094,1119,1122,1150,1194,1199,1200,1204,1205,1213,1214,1215,1216,1217,1218,1219,1220,1221],sphinx:43,split:[40,41,130,296,442,573,706,925,934,948,949,950,951,967,968,969,999,1054,1150],split_arg:1150,split_factor:[925,934,1150],split_func_cal:[925,1150],split_siz:1150,spread:[925,957,1150],sqrt:[86,217,401,526,658,855,869,872],squar:[855,867,869,871,999,1042,1119,1121],squeez:[130,296,442,573,706,999],stabil:[877,878,999,1079,1080],stabl:[877,878,999,1037,1038,1071,1072,1079,1080],stable_divid:999,stable_pow:999,stack:[40,41,296,706,847,849,869,870,999,1112,1117,1194,1195,1202,1267,1276],stack_imag:[166,350,481,616,779,1112],stacked_dim_s:1150,stage:43,standard:[40,41,851,852,1206,1209,1213,1219,1248,1249,1250,1251,1281,1282],start:[40,41,43,440,441,442,443,465,466,492,925,940,999,1002,1052,1053,1150,1250,1293],starting_index:[40,41],starting_split_factor:[925,1150],state:[1150,1231,1241,1250,1253,1254,1255,1256,1257,1258,1260,1261,1263,1264,1266,1267,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290,1292],statement:1293,static_argnam:[442,448,923,924],static_argnum:[442,448,923,924],std:[492,1206,1209],step:[40,41,442,443,925,999,1002,1052,1053,1096,1098,1099,1101,1103,1104,1105,1146,1147,1148,1149,1150,1250,1283,1284,1285,1286,1287,1288,1292,1296],stephen:1250,stick:1250,still:[40,41,43],stochast:[1283,1288],stop:[40,41,440,441,442,443,465,466,925,940,969,999,1002,1052,1053,1096,1099,1101,1103,1104,1105,1107,1146,1147,1148,1149,1150,1283,1284,1285,1286,1287,1288],stop_gradi:[40,41,345,476,611,773,925,969,1096,1099,1101,1103,1104,1105,1146,1147,1148,1149,1150,1283,1284,1285,1286,1287,1288],stopiter:1150,store:[40,41,999,1032,1077,1096,1110,1279,1280],store_var:[1279,1280],str:[15,16,17,40,41,42,43,392,393,395,396,398,399,851,852,853,923,924,925,934,935,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,969,975,980,981,986,987,988,989,990,991,998,999,1006,1022,1024,1025,1026,1057,1059,1062,1069,1070,1119,1122,1124,1146,1147,1148,1149,1150,1194,1198,1213,1214,1256,1257,1267,1278,1279,1280],str_to_nod:1150,straight:1293,strength:[1250,1296],stride:[1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274],string:[40,41,43,925,941,943,952,953,958,964,970,971,974,975,979,985,987,988,989,998,999,1002,1006,1022,1042,1062,1063,1095,1150,1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274,1279,1280],structur:[40,41,42,43,999,1017],structural_diff:[40,41],style:43,sub:[40,41,43,869,870,925,948,949,954,955,956,957,999,1077,1146,1147,1148,1149,1150],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1150,sub_mod:[1279,1280],sub_modul:[1289,1290],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1250,1251,1281,1282,1289,1290],subsequ:43,subset:43,substr:[40,41],suffici:[1119,1124],suggest:1250,suitabl:[1112,1117],sum:[40,41,442,469,470,869,872,925,954,955,956,957,969,999,1021,1025,1069,1070,1150,1213,1214,1220],summat:[40,41,1213,1214],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,78,79,80,82,83,84,87,88,89,90,91,92,93,94,95,96,97,98,101,102,104,108,111,112,124,125,126,127,128,129,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,148,149,150,151,152,153,154,155,156,157,158,159,160,161,162,164,165,167,168,169,171,172,173,177,178,179,180,181,182,184,185,186,187,188,189,190,193,195,196,198,199,200,201,202,203,204,209,210,211,213,214,215,218,219,220,221,222,223,224,227,228,229,230,232,236,239,240,252,253,254,255,256,257,258,259,260,261,262,263,264,265,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,291,292,293,294,295,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,319,320,321,322,323,324,325,326,327,328,329,330,331,332,333,334,335,336,337,338,339,340,341,342,343,344,346,347,348,349,351,352,353,355,356,357,358,359,361,362,365,366,367,368,370,371,372,373,374,375,376,377,380,382,383,384,385,386,387,388,393,394,395,397,398,399,402,403,404,405,406,407,408,409,410,411,412,413,416,417,418,419,421,425,428,429,441,443,444,445,446,447,448,449,450,451,452,453,454,455,456,457,458,459,460,461,462,463,464,465,466,467,468,469,470,471,472,473,474,475,477,478,479,480,482,483,484,486,487,488,491,493,495,496,497,498,499,500,501,504,505,507,508,509,510,511,512,513,518,519,520,522,523,524,527,528,529,530,531,532,533,534,535,536,537,538,541,542,543,544,546,550,553,554,562,567,568,569,570,571,572,574,575,576,577,578,579,580,581,582,583,584,585,586,587,588,589,590,591,592,593,594,595,596,597,598,599,600,601,602,603,604,605,606,607,608,609,610,612,613,614,615,617,618,619,621,622,623,624,628,629,630,631,633,634,635,636,637,638,639,643,644,645,650,651,652,654,655,656,659,660,661,662,663,664,665,666,667,668,669,670,673,674,675,676,678,682,685,686,694,699,700,701,702,703,704,705,707,708,709,710,711,712,713,714,715,716,717,718,719,720,721,722,723,724,725,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,742,743,744,745,746,747,748,749,750,751,752,753,754,755,756,757,758,759,760,761,762,763,764,765,766,767,768,769,770,771,772,774,775,776,777,778,780,781,782,784,785,786,787,788,789,790,792,793,795,796,797,798,799,800,801,802,803,804,805,806,807,808,810,811,812,813,814,815,817,818,819,820,821,822,823,826,827,828,829,830,831,832,834,835,837,838,839,840,841,842,843,848,849,850,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,869,870,871,872,874,878,881,882,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,924,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1113,1114,1115,1116,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1128,1129,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1145,1147,1148,1149,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1180,1181,1182,1183,1184,1185,1186,1187,1188,1189,1190,1191,1192,1193,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1207,1208,1209,1210,1211,1212,1214,1215,1216,1217,1218,1219,1220,1221,1224,1225,1226,1227,1228,1229,1230,1231,1232,1233,1234,1235,1236,1237,1238,1239,1240,1241,1242,1243,1245,1246,1247,1249,1250,1254,1255,1257,1259,1260,1261,1262,1263,1264,1265,1266,1268,1269,1270,1271,1272,1273,1274,1275,1276,1277,1278,1280,1282,1283,1284,1285,1286,1287,1288,1290,1291,1292,1293,1295,1296],supports_inplac:999,suppos:1296,sure:43,svd:[354,620,783,1119],swap:[40,41,999,1083],swapax:[40,41,573,706,999,1296],symmetr:[1119,1126],syntax:[440,442,476,481,485,489,490,492],tab:1250,take:[43,999,1051],taken:[43,869,870,1213,1215,1216,1217,1219,1221],tan:[794,1130,1134],tangent:[1130,1134,1135,1136,1144,1145,1223,1230],tanh:[794,825,1130,1223],target:[40,41,925,941,944,945,946,947,948,949,950,951,954,955,956,957,970,1150,1250],target_dict:[40,41],task:[43,1146,1147,1148,1149],team:[43,1296],templat:1250,temporari:[999,1074,1085],tensor:[40,41,43,442,469,470,925,943,975,985,999,1002,1004,1005,1010,1052,1053,1056,1058,1061,1062,1063,1067,1069,1070,1077,1095,1150,1206,1207,1208,1231,1239,1241,1250,1267,1275,1277,1283,1284,1285,1286,1287,1288,1292,1293],tensorflow:[43,1119,1124,1231,1233,1235,1237,1250,1267,1269,1271,1273,1293,1296],term:[40,41,43,1231,1241,1250,1267,1277],termcolor:[40,41,42],termin:[40,41,42,1150],test:[43,855,861,862,880,881,882,975,990,991],test_array_api:43,tf_concat:1250,than:[40,41,43,851,852,855,858,865,867,869,872,873,874,925,969,999,1002,1012,1030,1049,1056,1078,1081,1096,1102,1150,1206,1210,1250,1293],thei:[40,41,43,1130,1135,1146,1147,1148,1206,1207,1250,1289,1290,1293],them:[1250,1296],themselv:[1194,1195],therefor:43,thi:[40,41,42,43,855,866,869,871,925,947,951,957,964,969,974,999,1002,1032,1065,1067,1073,1096,1099,1101,1102,1103,1104,1105,1110,1119,1122,1150,1194,1198,1203,1213,1215,1216,1217,1218,1219,1220,1221,1231,1240,1250,1279,1280,1283,1284,1285,1286,1287,1288,1292,1293,1296],thing:[43,1250],those:[40,41,43,999,1012,1096,1110,1119,1125,1150],though:43,thought:43,threshold:[999,1056,1058],through:[40,41,43],tick:43,tickbox:43,tile:[296,573,706,999],time:[43,999,1084,1096,1099,1103,1146,1147,1148,1149,1150,1206,1207,1231,1241,1267,1278,1279,1280,1296],timeout:[40,41,42,925,934,935,999,1065,1073,1150],timestep:[1231,1241,1267,1276],titl:[43,1250],tmp_dir:999,tmp_dr:[999,1074],to_appli:[40,41],to_clon:[925,1150],to_dev:[40,41,123,290,440,566,698,925],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[925,1150],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1250],to_ivy_modul:[194,833,1250,1256],to_json:[40,41],to_kv_fn:[1231,1242],to_kv_v:[1231,1242],to_list:[40,41,442,706,999],to_multi_dev:[40,41],to_mut:[1194,1196,1203],to_n:[15,40,41,1250],to_nod:1150,to_numpi:[40,41,442,706,999,1250,1292],to_out_fn:[1231,1242],to_out_v:[1231,1242],to_q_fn:[1231,1242],to_q_v:[1231,1242],to_raw:[40,41],to_scalar:[442,706,999],todo:[1150,1250,1251],togeth:[40,41,1289,1290],tool:[1250,1293],top_mod:[1279,1280],topic:1296,torch:[43,923,924,1250,1292,1293,1296],torch_concat:1250,torchfcmodel:1292,total:[40,41,42,925,971,1150],total_mem_on_dev:925,total_mem_on_nod:1150,tpu:[925,972,1150],tpu_is_avail:[440,566,698,925,1150],tpye:[975,986],trace:[40,41,999,1049],track:[43,925,1150,1194,1203,1279,1280],track_submod_call_ord:[1279,1280],track_submod_ret:[1279,1280],trail:[1281,1282],train:[1096,1098,1099,1103,1250,1251],trainabl:[1096,1102,1250,1251,1256,1257,1279,1280,1289],trainer:1250,tran:1296,transform:[1231,1239,1240],transpos:[40,41,130,296,442,706,925,956,999,1150,1231,1233,1235,1237,1267,1269,1271,1273],travers:[15,18,19,40,41,1194,1203],treat:[40,41,923,924],tri:[40,41],triangular:[847,849],trigonometr:[1130,1131,1134,1142],tril:[77,208,392,517,649,847],trim_kei:[40,41],trust:[1096,1103,1283,1285],truth:[855,863,884,903,999,1027,1127,1128,1129],try_else_non:999,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[925,1150],tune_dev_alloc:925,tune_dev_split:925,tune_node_alloc:1150,tune_node_split:1150,tune_step:[925,1150],tupl:[15,16,17,18,19,40,41,43,392,393,395,847,848,850,869,872,873,874,880,881,882,923,924,999,1016,1032,1033,1076,1094,1150,1194,1195,1196,1197,1199,1200,1201,1202,1203,1204,1205,1206,1208,1213,1215,1216,1217,1218,1219,1220,1221],tutori:43,two:[40,41,847,849,869,870,871,999,1002,1007,1019,1055,1083,1119,1122,1125],type:[15,18,40,41,42,43,59,398,399,440,441,847,848,849,850,852,853,855,856,857,858,859,860,861,862,863,865,866,867,869,870,872,873,874,877,878,880,881,882,884,903,909,925,937,938,939,940,952,953,957,969,975,979,980,981,985,986,987,988,989,990,991,998,999,1000,1002,1006,1015,1017,1027,1030,1031,1033,1042,1049,1061,1062,1063,1068,1082,1092,1095,1096,1102,1107,1130,1138,1150,1250,1258,1260,1261,1263,1264,1266,1279,1280,1293],types_to_iteratively_nest:[40,41,42],uint8:[1112,1114,1118],uint8_img_to_float_img:1112,unabl:43,unchang:[15,16,17,18,19],uncom:43,underli:[855,857],underwai:43,unecessari:43,unfairli:43,unif:1150,unifi:[40,41,925,954,955,956,957,969,1150,1250],uniform:[40,41,1206,1207,1209,1210,1258,1260,1261,1264,1265],uniformli:[1206,1208,1210],unify_arrai:1150,unify_it:1150,unify_nest:1150,union:[15,18,19,40,41,43,392,393,395,396,398,399,847,848,849,850,851,852,853,855,856,857,858,859,860,861,862,863,864,865,866,867,869,872,873,874,877,878,880,881,882,884,903,909,923,924,925,943,948,949,950,951,969,970,975,979,980,981,985,986,987,988,989,990,991,998,999,1000,1001,1002,1004,1005,1006,1007,1008,1010,1012,1013,1014,1015,1016,1018,1019,1020,1021,1024,1025,1026,1027,1029,1030,1031,1032,1033,1034,1035,1039,1041,1042,1043,1050,1051,1052,1053,1055,1056,1057,1058,1061,1062,1063,1066,1067,1068,1069,1070,1075,1076,1077,1078,1081,1083,1084,1086,1087,1088,1089,1091,1092,1093,1094,1095,1150,1194,1195,1196,1202,1203],uniqu:[925,934,935,1146,1147,1148,1149,1150,1194,1198],unique_kwarg:1150,unit:[43,925,1130,1131,1133,1150,1223,1224,1225,1226],unitari:[1119,1125],unless:[999,1061,1063,1095],unlik:[925,1150],unnorm:[1206,1207],unpack:[999,1091],unrol:[1231,1241],unset:1293,unset_debug_mod:44,unset_default_devic:925,unset_default_dtyp:975,unset_default_float_dtyp:975,unset_default_int_dtyp:975,unset_framework:[59,1293],unset_with_grad:1096,unstack:[40,41,130,296,442,573,706,999],until:43,unus:[923,924],updat:[40,41,442,469,470,925,934,999,1047,1069,1070,1096,1098,1099,1101,1103,1104,1105,1146,1147,1148,1150,1194,1199,1200,1204,1205,1231,1241,1250,1251,1256,1257,1283,1284,1285,1286,1287,1288,1293,1296],update_backend:[40,41],update_config:[40,41],upon:43,upper:[40,41,1206,1210],upper_depth:[1279,1280],upstream:43,usabl:[1250,1296],usag:[925,969,1150],use:[40,41,42,43,492,925,934,935,960,972,999,1066,1079,1080,1119,1124,1150,1231,1242,1248,1249,1250,1281,1282,1293,1296],used:[40,41,43,492,869,870,925,934,964,967,968,974,975,986,999,1037,1038,1054,1063,1069,1070,1071,1072,1095,1096,1103,1104,1119,1122,1146,1147,1148,1149,1150,1194,1203,1267,1278,1283,1285,1286,1292,1293],used_dev:[925,934],used_mem_on_dev:925,used_mem_on_nod:1150,used_node_str:1150,used_node_strs_dict:1150,useful:[40,41,925,969,1150,1231,1240,1250,1293],user:[1250,1267,1278,1279,1280,1293,1296],uses:1250,using:[40,41,43,1096,1098,1099,1194,1197,1201,1213,1214,1231,1239,1243,1250,1267,1275,1292,1293,1296],util:[925,958,1150],utility_funct:[880,881,882],v_with_top_v_key_chain:[1279,1280],val:[40,41,442,460,461,462,884,919,999,1045,1046,1047,1071,1072],valid:[880,881,882,975,980,999,1079,1080,1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274],valid_dtyp:975,valu:[40,41,442,855,858,863,869,871,872,877,878,884,903,925,937,968,969,999,1000,1002,1004,1005,1012,1013,1014,1016,1017,1023,1027,1032,1033,1034,1035,1050,1052,1053,1056,1058,1065,1066,1067,1068,1069,1070,1071,1072,1073,1089,1092,1093,1094,1096,1100,1103,1112,1118,1119,1125,1127,1128,1129,1130,1139,1140,1141,1146,1147,1148,1150,1194,1198,1199,1200,1204,1205,1206,1209,1210,1213,1215,1217,1231,1242,1243,1248,1249,1267,1278,1281,1282,1283,1285],value_is_nan:999,vanilla:[1146,1148],var_shap:1258,variabl:[15,16,17,18,19,40,41,345,476,611,773,999,1009,1045,1046,1047,1048,1049,1082,1096,1099,1100,1101,1102,1103,1104,1105,1107,1110,1146,1147,1148,1149,1231,1242,1248,1249,1256,1257,1258,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288,1289,1290],variable_data:[476,773,1096],varianc:[40,41,1213,1221,1296],varieti:1293,variou:[43,1250],vector:[40,41,485,488,869,872,999,1014,1019,1119,1125,1126,1231,1240,1267,1277],vector_norm:[40,41,100,226,415,540,672,869],vector_to_skew_symmetric_matrix:[170,354,485,620,783,1119],verbos:1295,veri:[43,1250],verifi:43,version:43,via:[1194,1195,1202,1293],view:[1112,1117],vision:1250,visual:1293,volum:[1231,1236],vw_tm1:[1096,1099,1103],wai:[1293,1296],wait:[40,41,42,43],want:[43,1250,1293,1296],warn:[59,66,67,68,69,70],warp:[481,482,1112,1113],watch:1292,websit:43,weight:[1096,1098,1099,1101,1103,1104,1105,1231,1240,1241,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1279,1280,1283,1285,1286],weight_initi:[1267,1268,1269,1270,1271,1272,1273,1274,1276,1277],weights_path:[1279,1280],well:[40,41,999,1041],were:[40,41,1150],what:[43,1250],when:[40,41,42,43,925,999,1011,1080,1093,1119,1125,1150,1250,1279,1280,1293,1296],where:[40,41,43,296,442,706,855,864,880,881,882,884,909,999,1002,1010,1012,1016,1029,1043,1050,1061,1094,1119,1125,1194,1195,1202,1206,1207],wherea:43,wherebi:[1194,1203],whether:[15,18,19,40,41,42,855,862,880,881,882,923,924,925,943,956,960,964,969,972,974,975,985,989,990,991,998,999,1001,1007,1008,1020,1023,1028,1032,1039,1041,1044,1048,1049,1054,1075,1082,1091,1092,1096,1099,1100,1101,1102,1103,1104,1105,1107,1146,1147,1148,1149,1150,1194,1195,1196,1198,1202,1203,1206,1207,1223,1224,1231,1239,1250,1256,1257,1267,1275,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1286,1287,1288],which:[40,41,42,43,492,847,848,849,850,851,852,853,869,870,872,873,874,877,878,880,881,882,923,924,925,934,935,943,948,949,950,951,954,955,956,957,959,961,965,967,968,969,975,980,985,989,998,999,1002,1006,1015,1017,1019,1020,1021,1023,1033,1034,1035,1036,1042,1043,1051,1052,1053,1060,1061,1062,1063,1064,1066,1069,1070,1077,1081,1091,1093,1095,1096,1099,1100,1101,1103,1104,1105,1107,1109,1110,1112,1114,1119,1122,1130,1135,1150,1194,1198,1199,1200,1204,1205,1206,1207,1208,1209,1210,1213,1215,1216,1217,1218,1219,1220,1221,1223,1228,1231,1242,1243,1250,1256,1257,1267,1268,1269,1270,1271,1272,1273,1274,1276,1277,1278,1279,1280,1281,1282,1283,1284,1285,1287,1289,1290,1292,1293],whilst:43,whitespac:[40,41,42],who:43,whose:[43,847,849,855,856,859,860,869,870,873,874,884,909,999,1006,1011,1213,1214,1215,1216,1217,1219,1221],why:[1250,1251],width:[1112,1117],wiki:1296,wikipedia:1296,window:[1112,1117,1231,1232,1233,1234,1235,1236,1237,1238,1267,1268,1269,1270,1271,1272,1273,1274],wise:[40,41,43,855,857,863,866,884,903,909,999,1012,1027,1030,1031,1056,1058,1068,1096,1099,1101,1103,1105,1127,1128,1129,1130,1131,1133,1134,1135,1138,1139,1140,1141,1142,1144,1223,1224,1225,1226,1227,1228,1229,1230],wish:1293,with_bia:[1267,1277],with_cal:[999,1023],with_default_key_color:[40,41],with_entries_as_list:[40,41],with_grad:[1096,1106],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1150,with_partial_v:[1279,1280],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,442,471,999,1077,1150],with_to_kv_fn:[1267,1278],with_to_out_fn:[1267,1278],with_to_q_fn:[1267,1278],within:[15,18,19,43,999,1002,1119,1125,1206,1210],without:[40,41,43,999,1065,1067,1073,1194,1196,1293],wonder:1250,word:[15,16,17,999,1002,1206,1210,1256,1257],work:[43,1292],worker:[925,934,935,1150],worker_class:[925,934,935,1150],worker_kwarg:1150,would:[43,1223,1228,1250,1293,1296],wrap:[15,40,41,42,43,440,442,476,481,485,489,490,492,999,1011,1096,1110,1250],wrapper:43,write:[40,41,43,1250,1251,1296],written:[43,1250,1296],ws_new:[1096,1099,1101,1103,1104,1105],x1_i:[855,857,863,999,1027,1130,1138],x2_i:[855,857,863,999,1027,1130,1138],x_feat_dim:[1231,1242],x_i:[855,856,858,859,860,861,862,865,866,867],x_in:[1250,1292],x_inv:[1119,1121],x_max:[442,999,1012],x_min:[442,999,1012],x_sub:1150,xkk:1296,xkkm1:1296,xkm1km1:1296,xs0:1150,xs_t:1150,year:[1250,1296],yet:[1194,1203,1296],yield:[999,1093],you:[43,1250,1292,1293,1296],your:[1250,1251,1292,1293,1296],your_awesome_project:1293,yourself:[43,1250],yourslef:43,youtub:43,zero:[40,41,77,208,392,517,649,847,849,855,866,869,872,880,881,882,999,1016,1061,1063,1069,1070,1094,1095,1096,1098,1099,1103,1104,1231,1239,1250,1258,1267,1268,1269,1270,1271,1272,1273,1274,1275,1277,1283,1284,1285,1286],zero_pad:[296,442,573,706,999],zeros_lik:[130,296,442,573,706,999],zip:1150,zk_e:1296},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","bitwise_and","ceil","isfinite","isnan","less","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","meshgrid","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","one_hot","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","matrix_norm","qr","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","det","diagonal","slogdet","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","builtin_lt","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","array_equal","broadcast_to","cast","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linear algebra","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","ones","tril","zeros","Data type functions","finfo","iinfo","Data types","Elementwise functions","asinh","bitwise_and","ceil","cos","cosh","isfinite","isnan","less","log1p","log2","logical_not","sqrt","Function and method signatures","Linear algebra","diagonal","slodget","vector_norm","Manipulation functions","flip","Searching functions","Set functions","Sorting functions","argsort","Statistical functions","Utility functions","all","any","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","qr","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_or","Math","acos","acosh","asin","atan","atan2","atanh","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":1023,"function":[77,81,86,99,103,105,106,107,109,110,208,212,217,225,231,233,234,235,237,238,392,396,401,414,420,422,423,424,426,427,517,521,526,539,545,547,548,549,551,552,649,653,658,671,677,679,680,681,683,684,847,851,855,868,873,875,876,877,879,880],Ones:1263,Using:1293,abs:[297,574,707,1000],aco:[795,1131],acosh:[796,1132],activ:[192,379,503,641,825,1223,1253],adam:1284,adam_step:1098,adam_upd:1099,algebra:[100,170,226,354,415,485,540,620,672,783,869],all:[111,239,428,553,685,881],all_equ:1001,all_nested_indic:1195,ani:[112,240,429,554,686,882],api:[0,43,75,114,206,242,390,431,515,556,647,688,845],arang:[131,298,443,575,708,1002],arg_nam:1003,argmax:[132,444,576,709,1004],argmin:[133,445,577,710,1005],args_to_ivi:16,args_to_n:17,argsort:[108,236,425,550,682,878],arithmet:[1,115,243,432,557,689],arrai:[0,3,43,75,113,114,116,134,206,241,242,244,251,299,390,430,431,433,446,515,555,556,558,578,647,687,688,690,711,845,884,1006],array_equ:[300,712,1007],arrays_equ:1008,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[797,1133],asinh:[87,402,527,659,856],assert_supports_inplac:1009,atan2:[799,1135],atan:[798,1134],atanh:[800,1136],attribut:[5,117,245,434,559,691],backend:[43,73],bilinear_resampl:[167,351,482,617,780,1113],binary_cross_entropi:1245,bitwis:[7,118,246,435,560,692],bitwise_and:[88,218,403,528,660,857],broadcast_to:[301,713,1010],builder:51,builtin:[113,241,251,430,555,687,884],builtin_ab:[252,885],builtin_add:[253,886],builtin_and:[254,887],builtin_bool:[255,888],builtin_contain:[256,889],builtin_deepcopi:[257,890],builtin_dir:[258,891],builtin_eq:[259,892],builtin_float:[260,893],builtin_floordiv:[261,894],builtin_g:[262,895],builtin_getattr:[263,896],builtin_getattribut:[264,897],builtin_getitem:[265,898],builtin_gt:[266,899],builtin_int:[267,900],builtin_invert:[268,901],builtin_l:[269,902],builtin_lt:[270,562,694,903],builtin_mul:[271,904],builtin_n:[272,905],builtin_neg:[273,906],builtin_or:[274,907],builtin_po:[275,908],builtin_pow:[276,909],builtin_radd:[277,910],builtin_rand:[278,911],builtin_rfloordiv:[279,912],builtin_rmul:[280,913],builtin_ror:[281,914],builtin_rpow:[282,915],builtin_rsub:[283,916],builtin_rtruediv:[284,917],builtin_rxor:[285,918],builtin_setitem:[286,919],builtin_sub:[287,920],builtin_truediv:[288,921],builtin_xor:[289,922],cache_fn:1011,cast:[135,302,447,579,714,979],ceil:[89,219,404,529,661,858],choleski:[784,1120],choose_random_framework:61,citat:1250,clear_framework_stack:62,clear_mem_on_dev:[700,941],clip:[303,715,1012],clip_matrix_norm:1013,clip_vector_norm:1014,clone:1165,clone_arrai:1166,clone_it:1167,clone_nest:1168,clonedit:1152,cloneditem:1151,clonednest:1153,closest_valid_dtyp:980,code:1296,comparison:[9,119,247,436,561,693],compil:[304,448,716,923,924],concaten:[136,305,449,580,717,1015],constant:[76,207,391,516,648,846],constant_pad:[306,581,718,1016],contain:[40,41],container_typ:[719,1017],content:1250,contribut:43,conv1d:[198,382,507,837,1232,1268],conv1d_transpos:[199,383,508,838,1233],conv1dtranspos:1269,conv2d:[200,384,509,643,839,1234,1270],conv2d_transpos:[201,385,510,840,1235],conv2dtranspos:1271,conv3d:[202,386,511,644,841,1236,1272],conv3d_transpos:[203,387,512,842,1237],conv3dtranspos:1273,convers:15,convert:[194,833,1256],convert_dtyp:981,copy_arrai:[720,1018],copy_nest:1196,core:[122,250,439,565,697,883],cos:[90,405,530,662,859],cosh:[91,406,531,663,801,860,1137],cprint:1295,creat:43,creation:[77,208,392,517,649,847],cross:[307,721,1019],cross_entropi:1246,cumprod:[137,308,450,722,1020],cumsum:[723,1021],current_framework:63,current_framework_str:[724,1022],data:[81,85,212,216,396,400,521,525,653,657,851,854],debug_mod:45,debugg:44,default_devic:942,default_dtyp:982,default_float_dtyp:983,default_int_dtyp:984,default_nod:1169,depthwise_conv2d:[204,388,513,645,843,1238],depthwiseconv2d:1274,design:43,det:[227,416,541,673],dev:[125,292,568,701,943],dev_clon:944,dev_clone_arrai:945,dev_clone_it:946,dev_clone_nest:947,dev_dist:948,dev_dist_arrai:949,dev_dist_it:950,dev_dist_nest:951,dev_from_str:[126,293,569,702,952],dev_to_str:[127,294,570,703,953],dev_unifi:954,dev_unify_arrai:955,dev_unify_it:956,dev_unify_nest:957,dev_util:958,devclonedit:928,devcloneditem:927,devclonednest:929,devdistit:931,devdistitem:930,devdistnest:932,devic:[20,123,290,440,566,698,925],devmapp:934,devmappermultiproc:935,diagon:[101,228,417,542,674,870],distribute_nest:1170,divid:1138,document:1250,dropout:[1239,1275],dtype:[138,309,451,582,725,975,985],dtype_bit:[139,310,452,583,726,986],dtype_from_str:[140,311,453,584,727,987],dtype_to_str:[141,312,454,585,728,988],ecosystem:52,einops_rearrang:1024,einops_reduc:1025,einops_repeat:1026,einsum:[184,370,495,633,817,1214],elementwis:[86,217,401,526,658,855],equal:[586,729,1027],erf:[491,802,1139],execute_with_gradi:[164,346,477,612,774,1100],exist:1028,exp:[803,1140],expand_dim:[313,730,1029],finfo:[83,214,398,523,655,852],firstlayersiren:1260,flip:[104,232,421,546,678,874],float_img_to_uint8_img:1114,floor:[314,731,1030],floormod:[315,732,1031],fomaml_step:1147,fork:43,fourier_encod:1032,framework:59,full:[142,316,455,587,733,1033],func:72,gather:[143,317,456,588,734,1034],gather_nd:[144,318,457,589,735,1035],geglu:1254,gelu:[380,504,826,1224,1255],gener:[22,130,296,442,573,706,999],get_all_arrays_in_memori:1036,get_all_arrays_on_dev:959,get_framework:64,get_min_bas:1037,get_min_denomin:1038,get_num_dim:[736,1039],get_referrers_recurs:1040,glorotuniform:1261,gpu_is_avail:[960,1171],gradient:[24,163,345,476,611,773,1096],gradient_descent_upd:1101,gradient_imag:[168,352,483,618,781,1115],gym:53,handler:59,has_nan:1041,ident:[145,319,458,590,737,1042],iinfo:[84,215,399,524,656,853],imag:[26,166,350,481,616,779,1112],index_nest:1197,indices_wher:[146,320,459,738,1043],initi:1258,inplac:[11,120,248,437,563,695],inplace_arrays_support:1044,inplace_decr:[147,321,460,591,739,1045],inplace_incr:[148,322,461,592,740,1046],inplace_upd:[149,323,462,593,741,1047],inplace_variables_support:1048,inv:[785,1121],invalid_dtyp:989,is_arrai:[150,324,463,594,742,1049],is_float_dtyp:990,is_int_dtyp:991,is_vari:[165,347,478,613,775,1102],isfinit:[92,220,407,532,664,861],isinf:[325,595,743,1050],isnan:[93,221,408,533,665,862],issu:43,ivi:[43,50,51,52,53,54,55,56,57,58,844,1292,1293,1296],ivymodul:[195,834],jax:74,keep:43,lamb:1285,lamb_upd:1103,lar:1286,lars_upd:1104,layer:[197,381,506,642,836,1231,1267],layer_norm:1249,layernorm:1282,leaky_relu:[827,1225],less:[94,222,409,534,666,863],linalg:[28,1119],linear:[100,170,226,354,415,485,540,620,672,783,869,1240,1277],linear_resampl:[151,326,464,596,744,1051],linspac:[152,327,465,597,745,1052],list:43,log1p:[95,410,535,667,864],log2:[96,411,536,668,865],log:[804,1141],logic:[30,174,360,489,625,791,1127],logical_and:[361,792,1128],logical_not:[97,223,412,537,669,866],logical_or:[362,793,1129],logspac:[153,328,466,598,746,1053],loss:1244,lstm:1276,lstm_updat:1241,maml_step:1148,manipul:[103,231,420,545,677,873],map:1198,map_nest_at_index:1199,map_nest_at_indic:1200,match_kwarg:1054,math:[32,175,363,490,626,794,1130],matmul:[329,599,747,1055],matrix_norm:[171,355,486,621,786,1122],maximum:[748,1056],mech:54,memori:55,meshgrid:[330,749,1057],meta:[34,1146],method:[99,225,414,539,671,868],minimum:[750,1058],model:56,modul:[1279,1280,1292],multi:1150,multi_head_attent:1242,multi_index_nest:1201,multidevcontain:42,multidevit:938,multidevitem:937,multidevnest:939,multiheadattent:1278,multinodeit:1156,multinodeitem:1155,multinodenest:1157,multinomi:[177,365,493,628,810,1207],multiprocess:[751,1059],mxnet:205,nativ:1292,nest:1194,nested_indices_wher:1202,nested_map:1203,network:1292,next:1250,node:[1150,1172],node_dist:1173,node_dist_arrai:1174,node_dist_it:1175,node_str:1176,node_to_str:1177,node_util:1178,nodedistit:1159,nodedistitem:1158,nodedistnest:1160,nodemapp:1162,nodemappermultiproc:1163,norm:[1248,1281],num_arrays_in_memori:1060,num_arrays_on_dev:961,num_cpu_cor:962,num_gpu:[128,963,1179],numpi:389,nutshel:1250,one_hot:[154,467,600,752,1061],ones:[78,209,393,518,650,848,1062],ones_lik:[155,331,468,601,753,1063],oper:[1,3,7,9,11,13,43,115,116,118,119,120,121,243,244,246,247,248,249,432,433,435,436,437,438,557,558,560,561,563,564,689,690,692,693,695,696],optim:[1283,1287],optimizer_upd:1105,overview:1250,percent_used_mem_on_dev:964,percent_used_mem_on_nod:1180,pinv:[356,787,1123],portabl:1296,print_all_arrays_in_memori:1064,print_all_arrays_on_dev:965,profil:[124,291,441,567,699,940,1164],pull:43,queue_timeout:1065,randint:[178,366,629,811,1208],random:[36,176,364,492,627,809,1206],random_crop:1116,random_norm:[179,367,630,812,1209],random_uniform:[180,368,631,813,1210],reduce_max:[185,371,496,634,818,1215],reduce_mean:[186,372,497,635,819,1216],reduce_min:[187,373,498,636,820,1217],reduce_prod:[188,374,499,637,821,1218],reduce_std:[375,1219],reduce_sum:[189,376,500,638,822,1220],reduce_var:[190,377,501,639,823,1221],reduct:[38,183,369,494,632,816,1213],reflect:[13,121,249,438,564,696],relu:[828,1226],repeat:[332,754,1066],reptile_step:1149,request:43,reshap:[755,1067],robot:57,round:[333,756,1068],run:1293,scaled_dot_product_attent:1243,scatter_flat:[156,334,469,602,757,1069],scatter_nd:[157,335,470,603,758,1070],search:[105,233,422,547,679,875],seed:[181,814,1211],sequenti:[1289,1290],set:[106,234,423,548,680,876],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:966,set_default_dtyp:992,set_default_float_dtyp:993,set_default_int_dtyp:994,set_default_nod:1181,set_exception_debug_mod:48,set_framework:65,set_min_bas:1071,set_min_denomin:1072,set_nest_at_index:1204,set_nest_at_indic:1205,set_queue_timeout:1073,set_split_factor:[967,1182],set_tmp_dir:1074,set_with_grad:1106,sgd:1288,shape:[759,1075],shape_to_tupl:1076,shuffl:[182,815,1212],sigmoid:[829,1227],signatur:[99,225,414,539,671,868],sin:[805,1142],sinh:[806,1143],siren:1264,slodget:871,slogdet:[229,418,543,675],softmax:[193,505,830,1228],softplu:[831,1229],sort:[107,235,424,549,681,877],sparse_cross_entropi:1247,split:[158,336,471,604,760,1077],split_factor:[968,1183],split_func_cal:[969,1184],sqrt:[98,224,413,538,670,867],squeez:[159,337,472,605,761,1078],stable_divid:1079,stable_pow:1080,stack:[338,762,1081],stack_imag:[169,353,484,619,782,1117],standard:43,statist:[109,237,426,551,683,879],stop_gradi:[348,479,614,776,1107],str_to_nod:1185,submodul:43,supports_inplac:1082,svd:[358,623,789,1125],swapax:[606,763,1083],tan:[807,1144],tanh:[808,832,1145,1230],tensorflow:514,tile:[339,607,764,1084],tmp_dir:1085,to_dev:[129,295,571,704,970],to_ivi:18,to_ivy_modul:[196,835,1257],to_list:[765,1086],to_n:19,to_nod:1186,to_numpi:[766,1087],to_scalar:[767,1088],todo:43,torch:646,total_mem_on_dev:971,total_mem_on_nod:1187,tpu_is_avail:[572,705,972,1188],train:1292,trainabl:1292,transpos:[160,340,473,768,1089],tree:1250,tril:[79,210,394,519,651,849],try_else_non:1090,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[81,85,212,216,396,400,521,525,653,657,851,854],uint8_img_to_float_img:1118,unifi:1189,unify_arrai:1190,unify_it:1191,unify_nest:1192,unset_debug_mod:49,unset_default_devic:973,unset_default_dtyp:995,unset_default_float_dtyp:996,unset_default_int_dtyp:997,unset_framework:71,unset_with_grad:1108,unstack:[161,341,474,608,769,1091],updat:43,used_mem_on_dev:974,used_mem_on_nod:1193,util:[110,238,427,552,684,880],valid_dtyp:998,value_is_nan:1092,variabl:[349,480,615,777,1109],variable_data:[778,1110],vector_norm:[102,230,419,544,676,872],vector_to_skew_symmetric_matrix:[173,359,488,624,790,1126],verbos:1294,vision:58,where:[342,770,1093,1250],why:1296,with_grad:1111,wrapper:72,write:1293,your:43,zero:[80,211,395,520,652,850,1266],zero_pad:[343,609,771,1094],zeros_lik:[162,344,475,610,772,1095]}})
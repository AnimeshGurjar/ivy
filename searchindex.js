Search.setIndex({docnames:["array/array_api","array/array_api/arithmetic_operators","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators","array/array_api/array_operators","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators","array/array_api/attributes","array/array_api/attributes/ArrayWithArrayAPIAttributes","array/array_api/bitwise_operators","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators","array/array_api/comparison_operators","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators","array/array_api/inplace_operators","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators","array/array_api/reflected_operators","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators","array/conversions","array/conversions/args_to_ivy","array/conversions/args_to_native","array/conversions/to_ivy","array/conversions/to_native","array/device","array/device/ArrayWithDevice","array/general","array/general/ArrayWithGeneral","array/gradients","array/gradients/ArrayWithGradients","array/image","array/image/ArrayWithImage","array/linalg","array/linalg/ArrayWithLinalg","array/logic","array/logic/ArrayWithLogic","array/math","array/math/ArrayWithMath","array/meta","array/meta/ArrayWithMeta","array/random","array/random/ArrayWithRandom","array/reductions","array/reductions/ArrayWithReductions","container","container/Container","container/MultiDevContainer","contributing","debugger","debugger/debug_mode","debugger/set_breakpoint_debug_mode","debugger/set_debug_mode","debugger/set_exception_debug_mode","debugger/unset_debug_mode","docs/ivy","docs/ivy_builder","docs/ivy_ecosystem","docs/ivy_gym","docs/ivy_mech","docs/ivy_memory","docs/ivy_models","docs/ivy_robot","docs/ivy_vision","framework_handler","framework_handler/ContextManager:\n    def __init__","framework_handler/choose_random_framework","framework_handler/clear_framework_stack","framework_handler/current_framework","framework_handler/get_framework","framework_handler/set_framework","framework_handler/try_import_ivy_jax","framework_handler/try_import_ivy_mxnet","framework_handler/try_import_ivy_numpy","framework_handler/try_import_ivy_tf","framework_handler/try_import_ivy_torch","framework_handler/unset_framework","func_wrapper","functional/backends","functional/backends/jax","functional/backends/jax/array_api","functional/backends/jax/array_api/constants","functional/backends/jax/array_api/creation_functions","functional/backends/jax/array_api/data_type_functions","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/jax/array_api/data_type_functions/finfo","functional/backends/jax/array_api/data_type_functions/iinfo","functional/backends/jax/array_api/data_types","functional/backends/jax/array_api/elementwise_functions","functional/backends/jax/array_api/elementwise_functions/isfinite","functional/backends/jax/array_api/function_and_method_signatures","functional/backends/jax/array_api/linear_algebra_extension","functional/backends/jax/array_api/linear_algebra_functions","functional/backends/jax/array_api/manipulation_functions","functional/backends/jax/array_api/searching_functions","functional/backends/jax/array_api/set_functions","functional/backends/jax/array_api/sorting_functions","functional/backends/jax/array_api/statistical_functions","functional/backends/jax/array_api/utility_functions","functional/backends/jax/array_api/utility_functions/all","functional/backends/jax/array_builtins","functional/backends/jax/array_builtins/array_api","functional/backends/jax/array_builtins/array_api/arithmetic_operators","functional/backends/jax/array_builtins/array_api/array_operators","functional/backends/jax/array_builtins/array_api/attributes","functional/backends/jax/array_builtins/array_api/bitwise_operators","functional/backends/jax/array_builtins/array_api/comparison_operators","functional/backends/jax/array_builtins/array_api/inplace_operators","functional/backends/jax/array_builtins/array_api/reflected_operators","functional/backends/jax/core","functional/backends/jax/core/device","functional/backends/jax/core/device/Profiler","functional/backends/jax/core/device/dev","functional/backends/jax/core/device/dev_from_str","functional/backends/jax/core/device/dev_to_str","functional/backends/jax/core/device/num_gpus","functional/backends/jax/core/device/to_dev","functional/backends/jax/core/general","functional/backends/jax/core/general/arange","functional/backends/jax/core/general/argmax","functional/backends/jax/core/general/argmin","functional/backends/jax/core/general/array","functional/backends/jax/core/general/cast","functional/backends/jax/core/general/concatenate","functional/backends/jax/core/general/cumprod","functional/backends/jax/core/general/dtype","functional/backends/jax/core/general/dtype_bits","functional/backends/jax/core/general/dtype_from_str","functional/backends/jax/core/general/dtype_to_str","functional/backends/jax/core/general/flip","functional/backends/jax/core/general/full","functional/backends/jax/core/general/gather","functional/backends/jax/core/general/gather_nd","functional/backends/jax/core/general/identity","functional/backends/jax/core/general/indices_where","functional/backends/jax/core/general/inplace_decrement","functional/backends/jax/core/general/inplace_increment","functional/backends/jax/core/general/inplace_update","functional/backends/jax/core/general/is_array","functional/backends/jax/core/general/linear_resample","functional/backends/jax/core/general/linspace","functional/backends/jax/core/general/logspace","functional/backends/jax/core/general/one_hot","functional/backends/jax/core/general/ones","functional/backends/jax/core/general/ones_like","functional/backends/jax/core/general/scatter_flat","functional/backends/jax/core/general/scatter_nd","functional/backends/jax/core/general/split","functional/backends/jax/core/general/squeeze","functional/backends/jax/core/general/transpose","functional/backends/jax/core/general/unstack","functional/backends/jax/core/general/zeros","functional/backends/jax/core/general/zeros_like","functional/backends/jax/core/gradients","functional/backends/jax/core/gradients/execute_with_gradients","functional/backends/jax/core/gradients/is_variable","functional/backends/jax/core/image","functional/backends/jax/core/image/bilinear_resample","functional/backends/jax/core/image/gradient_image","functional/backends/jax/core/image/stack_images","functional/backends/jax/core/linalg","functional/backends/jax/core/linalg/matrix_norm","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/jax/core/logic","functional/backends/jax/core/math","functional/backends/jax/core/random","functional/backends/jax/core/random/multinomial","functional/backends/jax/core/random/randint","functional/backends/jax/core/random/random_normal","functional/backends/jax/core/random/random_uniform","functional/backends/jax/core/random/seed","functional/backends/jax/core/random/shuffle","functional/backends/jax/core/reductions","functional/backends/jax/core/reductions/einsum","functional/backends/jax/core/reductions/reduce_max","functional/backends/jax/core/reductions/reduce_mean","functional/backends/jax/core/reductions/reduce_min","functional/backends/jax/core/reductions/reduce_prod","functional/backends/jax/core/reductions/reduce_sum","functional/backends/jax/core/reductions/reduce_var","functional/backends/jax/nn","functional/backends/jax/nn/activations","functional/backends/jax/nn/activations/softmax","functional/backends/jax/nn/converters","functional/backends/jax/nn/converters/IvyModule","functional/backends/jax/nn/converters/to_ivy_module","functional/backends/jax/nn/layers","functional/backends/jax/nn/layers/conv1d","functional/backends/jax/nn/layers/conv1d_transpose","functional/backends/jax/nn/layers/conv2d","functional/backends/jax/nn/layers/conv2d_transpose","functional/backends/jax/nn/layers/conv3d","functional/backends/jax/nn/layers/conv3d_transpose","functional/backends/jax/nn/layers/depthwise_conv2d","functional/backends/mxnet","functional/backends/mxnet/array_api","functional/backends/mxnet/array_api/constants","functional/backends/mxnet/array_api/creation_functions","functional/backends/mxnet/array_api/data_type_functions","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/mxnet/array_api/data_type_functions/finfo","functional/backends/mxnet/array_api/data_type_functions/iinfo","functional/backends/mxnet/array_api/data_types","functional/backends/mxnet/array_api/elementwise_functions","functional/backends/mxnet/array_api/elementwise_functions/isfinite","functional/backends/mxnet/array_api/function_and_method_signatures","functional/backends/mxnet/array_api/linear_algebra_extension","functional/backends/mxnet/array_api/linear_algebra_functions","functional/backends/mxnet/array_api/manipulation_functions","functional/backends/mxnet/array_api/searching_functions","functional/backends/mxnet/array_api/set_functions","functional/backends/mxnet/array_api/sorting_functions","functional/backends/mxnet/array_api/statistical_functions","functional/backends/mxnet/array_api/utility_functions","functional/backends/mxnet/array_api/utility_functions/all","functional/backends/mxnet/array_builtins","functional/backends/mxnet/array_builtins/array_api","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators","functional/backends/mxnet/array_builtins/array_api/array_operators","functional/backends/mxnet/array_builtins/array_api/attributes","functional/backends/mxnet/array_builtins/array_api/bitwise_operators","functional/backends/mxnet/array_builtins/array_api/comparison_operators","functional/backends/mxnet/array_builtins/array_api/inplace_operators","functional/backends/mxnet/array_builtins/array_api/reflected_operators","functional/backends/mxnet/core","functional/backends/mxnet/core/array_builtins","functional/backends/mxnet/core/array_builtins/builtin_abs","functional/backends/mxnet/core/array_builtins/builtin_add","functional/backends/mxnet/core/array_builtins/builtin_and","functional/backends/mxnet/core/array_builtins/builtin_bool","functional/backends/mxnet/core/array_builtins/builtin_contains","functional/backends/mxnet/core/array_builtins/builtin_deepcopy","functional/backends/mxnet/core/array_builtins/builtin_dir","functional/backends/mxnet/core/array_builtins/builtin_eq","functional/backends/mxnet/core/array_builtins/builtin_float","functional/backends/mxnet/core/array_builtins/builtin_floordiv","functional/backends/mxnet/core/array_builtins/builtin_ge","functional/backends/mxnet/core/array_builtins/builtin_getattr","functional/backends/mxnet/core/array_builtins/builtin_getattribute","functional/backends/mxnet/core/array_builtins/builtin_getitem","functional/backends/mxnet/core/array_builtins/builtin_gt","functional/backends/mxnet/core/array_builtins/builtin_int","functional/backends/mxnet/core/array_builtins/builtin_invert","functional/backends/mxnet/core/array_builtins/builtin_le","functional/backends/mxnet/core/array_builtins/builtin_lt","functional/backends/mxnet/core/array_builtins/builtin_mul","functional/backends/mxnet/core/array_builtins/builtin_ne","functional/backends/mxnet/core/array_builtins/builtin_neg","functional/backends/mxnet/core/array_builtins/builtin_or","functional/backends/mxnet/core/array_builtins/builtin_pos","functional/backends/mxnet/core/array_builtins/builtin_pow","functional/backends/mxnet/core/array_builtins/builtin_radd","functional/backends/mxnet/core/array_builtins/builtin_rand","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv","functional/backends/mxnet/core/array_builtins/builtin_rmul","functional/backends/mxnet/core/array_builtins/builtin_ror","functional/backends/mxnet/core/array_builtins/builtin_rpow","functional/backends/mxnet/core/array_builtins/builtin_rsub","functional/backends/mxnet/core/array_builtins/builtin_rtruediv","functional/backends/mxnet/core/array_builtins/builtin_rxor","functional/backends/mxnet/core/array_builtins/builtin_setitem","functional/backends/mxnet/core/array_builtins/builtin_sub","functional/backends/mxnet/core/array_builtins/builtin_truediv","functional/backends/mxnet/core/array_builtins/builtin_xor","functional/backends/mxnet/core/device","functional/backends/mxnet/core/device/Profiler","functional/backends/mxnet/core/device/dev","functional/backends/mxnet/core/device/dev_from_str","functional/backends/mxnet/core/device/dev_to_str","functional/backends/mxnet/core/device/to_dev","functional/backends/mxnet/core/general","functional/backends/mxnet/core/general/abs","functional/backends/mxnet/core/general/arange","functional/backends/mxnet/core/general/array","functional/backends/mxnet/core/general/array_equal","functional/backends/mxnet/core/general/broadcast_to","functional/backends/mxnet/core/general/cast","functional/backends/mxnet/core/general/ceil","functional/backends/mxnet/core/general/clip","functional/backends/mxnet/core/general/compile","functional/backends/mxnet/core/general/concatenate","functional/backends/mxnet/core/general/constant_pad","functional/backends/mxnet/core/general/cross","functional/backends/mxnet/core/general/cumprod","functional/backends/mxnet/core/general/dtype","functional/backends/mxnet/core/general/dtype_bits","functional/backends/mxnet/core/general/dtype_from_str","functional/backends/mxnet/core/general/dtype_to_str","functional/backends/mxnet/core/general/expand_dims","functional/backends/mxnet/core/general/flip","functional/backends/mxnet/core/general/floor","functional/backends/mxnet/core/general/floormod","functional/backends/mxnet/core/general/full","functional/backends/mxnet/core/general/gather","functional/backends/mxnet/core/general/gather_nd","functional/backends/mxnet/core/general/identity","functional/backends/mxnet/core/general/indices_where","functional/backends/mxnet/core/general/inplace_decrement","functional/backends/mxnet/core/general/inplace_increment","functional/backends/mxnet/core/general/inplace_update","functional/backends/mxnet/core/general/is_array","functional/backends/mxnet/core/general/isinf","functional/backends/mxnet/core/general/isnan","functional/backends/mxnet/core/general/linear_resample","functional/backends/mxnet/core/general/linspace","functional/backends/mxnet/core/general/logspace","functional/backends/mxnet/core/general/matmul","functional/backends/mxnet/core/general/meshgrid","functional/backends/mxnet/core/general/ones","functional/backends/mxnet/core/general/ones_like","functional/backends/mxnet/core/general/repeat","functional/backends/mxnet/core/general/round","functional/backends/mxnet/core/general/scatter_flat","functional/backends/mxnet/core/general/scatter_nd","functional/backends/mxnet/core/general/split","functional/backends/mxnet/core/general/squeeze","functional/backends/mxnet/core/general/stack","functional/backends/mxnet/core/general/tile","functional/backends/mxnet/core/general/transpose","functional/backends/mxnet/core/general/unstack","functional/backends/mxnet/core/general/where","functional/backends/mxnet/core/general/zero_pad","functional/backends/mxnet/core/general/zeros","functional/backends/mxnet/core/general/zeros_like","functional/backends/mxnet/core/gradients","functional/backends/mxnet/core/gradients/execute_with_gradients","functional/backends/mxnet/core/gradients/is_variable","functional/backends/mxnet/core/gradients/stop_gradient","functional/backends/mxnet/core/gradients/variable","functional/backends/mxnet/core/image","functional/backends/mxnet/core/image/bilinear_resample","functional/backends/mxnet/core/image/gradient_image","functional/backends/mxnet/core/image/stack_images","functional/backends/mxnet/core/linalg","functional/backends/mxnet/core/linalg/det","functional/backends/mxnet/core/linalg/matrix_norm","functional/backends/mxnet/core/linalg/pinv","functional/backends/mxnet/core/linalg/slogdet","functional/backends/mxnet/core/linalg/svd","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/mxnet/core/logic","functional/backends/mxnet/core/logic/logical_and","functional/backends/mxnet/core/logic/logical_not","functional/backends/mxnet/core/logic/logical_or","functional/backends/mxnet/core/math","functional/backends/mxnet/core/random","functional/backends/mxnet/core/random/multinomial","functional/backends/mxnet/core/random/randint","functional/backends/mxnet/core/random/random_normal","functional/backends/mxnet/core/random/random_uniform","functional/backends/mxnet/core/reductions","functional/backends/mxnet/core/reductions/einsum","functional/backends/mxnet/core/reductions/reduce_max","functional/backends/mxnet/core/reductions/reduce_mean","functional/backends/mxnet/core/reductions/reduce_min","functional/backends/mxnet/core/reductions/reduce_prod","functional/backends/mxnet/core/reductions/reduce_std","functional/backends/mxnet/core/reductions/reduce_sum","functional/backends/mxnet/core/reductions/reduce_var","functional/backends/mxnet/nn","functional/backends/mxnet/nn/activations","functional/backends/mxnet/nn/activations/gelu","functional/backends/mxnet/nn/layers","functional/backends/mxnet/nn/layers/conv1d","functional/backends/mxnet/nn/layers/conv1d_transpose","functional/backends/mxnet/nn/layers/conv2d","functional/backends/mxnet/nn/layers/conv2d_transpose","functional/backends/mxnet/nn/layers/conv3d","functional/backends/mxnet/nn/layers/conv3d_transpose","functional/backends/mxnet/nn/layers/depthwise_conv2d","functional/backends/numpy","functional/backends/numpy/array_api","functional/backends/numpy/array_api/constants","functional/backends/numpy/array_api/creation_functions","functional/backends/numpy/array_api/data_type_functions","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/numpy/array_api/data_type_functions/finfo","functional/backends/numpy/array_api/data_type_functions/iinfo","functional/backends/numpy/array_api/data_types","functional/backends/numpy/array_api/elementwise_functions","functional/backends/numpy/array_api/elementwise_functions/isfinite","functional/backends/numpy/array_api/function_and_method_signatures","functional/backends/numpy/array_api/linear_algebra_extension","functional/backends/numpy/array_api/linear_algebra_functions","functional/backends/numpy/array_api/manipulation_functions","functional/backends/numpy/array_api/searching_functions","functional/backends/numpy/array_api/set_functions","functional/backends/numpy/array_api/sorting_functions","functional/backends/numpy/array_api/statistical_functions","functional/backends/numpy/array_api/utility_functions","functional/backends/numpy/array_api/utility_functions/all","functional/backends/numpy/array_builtins","functional/backends/numpy/array_builtins/array_api","functional/backends/numpy/array_builtins/array_api/arithmetic_operators","functional/backends/numpy/array_builtins/array_api/array_operators","functional/backends/numpy/array_builtins/array_api/attributes","functional/backends/numpy/array_builtins/array_api/bitwise_operators","functional/backends/numpy/array_builtins/array_api/comparison_operators","functional/backends/numpy/array_builtins/array_api/inplace_operators","functional/backends/numpy/array_builtins/array_api/reflected_operators","functional/backends/numpy/core","functional/backends/numpy/core/device","functional/backends/numpy/core/device/Profiler","functional/backends/numpy/core/general","functional/backends/numpy/core/general/arange","functional/backends/numpy/core/general/argmax","functional/backends/numpy/core/general/argmin","functional/backends/numpy/core/general/array","functional/backends/numpy/core/general/cast","functional/backends/numpy/core/general/compile","functional/backends/numpy/core/general/concatenate","functional/backends/numpy/core/general/cumprod","functional/backends/numpy/core/general/dtype","functional/backends/numpy/core/general/dtype_bits","functional/backends/numpy/core/general/dtype_from_str","functional/backends/numpy/core/general/dtype_to_str","functional/backends/numpy/core/general/flip","functional/backends/numpy/core/general/full","functional/backends/numpy/core/general/gather","functional/backends/numpy/core/general/gather_nd","functional/backends/numpy/core/general/identity","functional/backends/numpy/core/general/indices_where","functional/backends/numpy/core/general/inplace_decrement","functional/backends/numpy/core/general/inplace_increment","functional/backends/numpy/core/general/inplace_update","functional/backends/numpy/core/general/is_array","functional/backends/numpy/core/general/linear_resample","functional/backends/numpy/core/general/linspace","functional/backends/numpy/core/general/logspace","functional/backends/numpy/core/general/one_hot","functional/backends/numpy/core/general/ones","functional/backends/numpy/core/general/ones_like","functional/backends/numpy/core/general/scatter_flat","functional/backends/numpy/core/general/scatter_nd","functional/backends/numpy/core/general/split","functional/backends/numpy/core/general/squeeze","functional/backends/numpy/core/general/transpose","functional/backends/numpy/core/general/unstack","functional/backends/numpy/core/general/zeros","functional/backends/numpy/core/general/zeros_like","functional/backends/numpy/core/gradients","functional/backends/numpy/core/gradients/execute_with_gradients","functional/backends/numpy/core/gradients/is_variable","functional/backends/numpy/core/gradients/stop_gradient","functional/backends/numpy/core/gradients/variable","functional/backends/numpy/core/image","functional/backends/numpy/core/image/bilinear_resample","functional/backends/numpy/core/image/gradient_image","functional/backends/numpy/core/image/stack_images","functional/backends/numpy/core/linalg","functional/backends/numpy/core/linalg/det","functional/backends/numpy/core/linalg/matrix_norm","functional/backends/numpy/core/linalg/slogdet","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/numpy/core/logic","functional/backends/numpy/core/math","functional/backends/numpy/core/math/erf","functional/backends/numpy/core/random","functional/backends/numpy/core/random/multinomial","functional/backends/numpy/core/reductions","functional/backends/numpy/core/reductions/einsum","functional/backends/numpy/core/reductions/reduce_max","functional/backends/numpy/core/reductions/reduce_mean","functional/backends/numpy/core/reductions/reduce_min","functional/backends/numpy/core/reductions/reduce_prod","functional/backends/numpy/core/reductions/reduce_sum","functional/backends/numpy/core/reductions/reduce_var","functional/backends/numpy/nn","functional/backends/numpy/nn/activations","functional/backends/numpy/nn/activations/gelu","functional/backends/numpy/nn/activations/softmax","functional/backends/numpy/nn/layers","functional/backends/numpy/nn/layers/conv1d","functional/backends/numpy/nn/layers/conv1d_transpose","functional/backends/numpy/nn/layers/conv2d","functional/backends/numpy/nn/layers/conv2d_transpose","functional/backends/numpy/nn/layers/conv3d","functional/backends/numpy/nn/layers/conv3d_transpose","functional/backends/numpy/nn/layers/depthwise_conv2d","functional/backends/tensorflow","functional/backends/tensorflow/array_api","functional/backends/tensorflow/array_api/constants","functional/backends/tensorflow/array_api/creation_functions","functional/backends/tensorflow/array_api/data_type_functions","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/tensorflow/array_api/data_type_functions/finfo","functional/backends/tensorflow/array_api/data_type_functions/iinfo","functional/backends/tensorflow/array_api/data_types","functional/backends/tensorflow/array_api/elementwise_functions","functional/backends/tensorflow/array_api/elementwise_functions/isfinite","functional/backends/tensorflow/array_api/function_and_method_signatures","functional/backends/tensorflow/array_api/linear_algebra_extension","functional/backends/tensorflow/array_api/linear_algebra_functions","functional/backends/tensorflow/array_api/manipulation_functions","functional/backends/tensorflow/array_api/searching_functions","functional/backends/tensorflow/array_api/set_functions","functional/backends/tensorflow/array_api/sorting_functions","functional/backends/tensorflow/array_api/statistical_functions","functional/backends/tensorflow/array_api/utility_functions","functional/backends/tensorflow/array_api/utility_functions/all","functional/backends/tensorflow/array_builtins","functional/backends/tensorflow/array_builtins/array_api","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators","functional/backends/tensorflow/array_builtins/array_api/array_operators","functional/backends/tensorflow/array_builtins/array_api/attributes","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators","functional/backends/tensorflow/array_builtins/array_api/comparison_operators","functional/backends/tensorflow/array_builtins/array_api/inplace_operators","functional/backends/tensorflow/array_builtins/array_api/reflected_operators","functional/backends/tensorflow/core","functional/backends/tensorflow/core/device","functional/backends/tensorflow/core/device/Profiler","functional/backends/tensorflow/core/device/dev","functional/backends/tensorflow/core/device/dev_from_str","functional/backends/tensorflow/core/device/dev_to_str","functional/backends/tensorflow/core/device/to_dev","functional/backends/tensorflow/core/device/tpu_is_available","functional/backends/tensorflow/core/general","functional/backends/tensorflow/core/general/abs","functional/backends/tensorflow/core/general/arange","functional/backends/tensorflow/core/general/argmax","functional/backends/tensorflow/core/general/argmin","functional/backends/tensorflow/core/general/array","functional/backends/tensorflow/core/general/cast","functional/backends/tensorflow/core/general/concatenate","functional/backends/tensorflow/core/general/constant_pad","functional/backends/tensorflow/core/general/dtype","functional/backends/tensorflow/core/general/dtype_bits","functional/backends/tensorflow/core/general/dtype_from_str","functional/backends/tensorflow/core/general/dtype_to_str","functional/backends/tensorflow/core/general/equal","functional/backends/tensorflow/core/general/flip","functional/backends/tensorflow/core/general/full","functional/backends/tensorflow/core/general/gather","functional/backends/tensorflow/core/general/gather_nd","functional/backends/tensorflow/core/general/identity","functional/backends/tensorflow/core/general/inplace_decrement","functional/backends/tensorflow/core/general/inplace_increment","functional/backends/tensorflow/core/general/inplace_update","functional/backends/tensorflow/core/general/is_array","functional/backends/tensorflow/core/general/isinf","functional/backends/tensorflow/core/general/isnan","functional/backends/tensorflow/core/general/linear_resample","functional/backends/tensorflow/core/general/linspace","functional/backends/tensorflow/core/general/logspace","functional/backends/tensorflow/core/general/matmul","functional/backends/tensorflow/core/general/one_hot","functional/backends/tensorflow/core/general/ones","functional/backends/tensorflow/core/general/ones_like","functional/backends/tensorflow/core/general/scatter_flat","functional/backends/tensorflow/core/general/scatter_nd","functional/backends/tensorflow/core/general/split","functional/backends/tensorflow/core/general/squeeze","functional/backends/tensorflow/core/general/swapaxes","functional/backends/tensorflow/core/general/tile","functional/backends/tensorflow/core/general/unstack","functional/backends/tensorflow/core/general/zero_pad","functional/backends/tensorflow/core/general/zeros","functional/backends/tensorflow/core/general/zeros_like","functional/backends/tensorflow/core/gradients","functional/backends/tensorflow/core/gradients/execute_with_gradients","functional/backends/tensorflow/core/gradients/is_variable","functional/backends/tensorflow/core/gradients/stop_gradient","functional/backends/tensorflow/core/gradients/variable","functional/backends/tensorflow/core/image","functional/backends/tensorflow/core/image/bilinear_resample","functional/backends/tensorflow/core/image/gradient_image","functional/backends/tensorflow/core/image/stack_images","functional/backends/tensorflow/core/linalg","functional/backends/tensorflow/core/linalg/det","functional/backends/tensorflow/core/linalg/matrix_norm","functional/backends/tensorflow/core/linalg/slogdet","functional/backends/tensorflow/core/linalg/svd","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/tensorflow/core/logic","functional/backends/tensorflow/core/math","functional/backends/tensorflow/core/random","functional/backends/tensorflow/core/random/multinomial","functional/backends/tensorflow/core/random/randint","functional/backends/tensorflow/core/random/random_normal","functional/backends/tensorflow/core/random/random_uniform","functional/backends/tensorflow/core/reductions","functional/backends/tensorflow/core/reductions/einsum","functional/backends/tensorflow/core/reductions/reduce_max","functional/backends/tensorflow/core/reductions/reduce_mean","functional/backends/tensorflow/core/reductions/reduce_min","functional/backends/tensorflow/core/reductions/reduce_prod","functional/backends/tensorflow/core/reductions/reduce_sum","functional/backends/tensorflow/core/reductions/reduce_var","functional/backends/tensorflow/nn","functional/backends/tensorflow/nn/activations","functional/backends/tensorflow/nn/layers","functional/backends/tensorflow/nn/layers/conv2d","functional/backends/tensorflow/nn/layers/conv3d","functional/backends/tensorflow/nn/layers/depthwise_conv2d","functional/backends/torch","functional/backends/torch/array_api","functional/backends/torch/array_api/constants","functional/backends/torch/array_api/creation_functions","functional/backends/torch/array_api/data_type_functions","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__","functional/backends/torch/array_api/data_type_functions/finfo","functional/backends/torch/array_api/data_type_functions/iinfo","functional/backends/torch/array_api/data_types","functional/backends/torch/array_api/elementwise_functions","functional/backends/torch/array_api/elementwise_functions/isfinite","functional/backends/torch/array_api/function_and_method_signatures","functional/backends/torch/array_api/linear_algebra_extension","functional/backends/torch/array_api/linear_algebra_functions","functional/backends/torch/array_api/manipulation_functions","functional/backends/torch/array_api/searching_functions","functional/backends/torch/array_api/set_functions","functional/backends/torch/array_api/sorting_functions","functional/backends/torch/array_api/statistical_functions","functional/backends/torch/array_api/utility_functions","functional/backends/torch/array_api/utility_functions/all","functional/backends/torch/array_builtins","functional/backends/torch/array_builtins/array_api","functional/backends/torch/array_builtins/array_api/arithmetic_operators","functional/backends/torch/array_builtins/array_api/array_operators","functional/backends/torch/array_builtins/array_api/attributes","functional/backends/torch/array_builtins/array_api/bitwise_operators","functional/backends/torch/array_builtins/array_api/comparison_operators","functional/backends/torch/array_builtins/array_api/inplace_operators","functional/backends/torch/array_builtins/array_api/reflected_operators","functional/backends/torch/core","functional/backends/torch/core/device","functional/backends/torch/core/device/Profiler","functional/backends/torch/core/device/clear_mem_on_dev","functional/backends/torch/core/device/dev","functional/backends/torch/core/device/dev_from_str","functional/backends/torch/core/device/dev_to_str","functional/backends/torch/core/device/to_dev","functional/backends/torch/core/device/tpu_is_available","functional/backends/torch/core/general","functional/backends/torch/core/general/abs","functional/backends/torch/core/general/arange","functional/backends/torch/core/general/argmax","functional/backends/torch/core/general/argmin","functional/backends/torch/core/general/argsort","functional/backends/torch/core/general/array","functional/backends/torch/core/general/array_equal","functional/backends/torch/core/general/broadcast_to","functional/backends/torch/core/general/cast","functional/backends/torch/core/general/ceil","functional/backends/torch/core/general/clip","functional/backends/torch/core/general/compile","functional/backends/torch/core/general/concatenate","functional/backends/torch/core/general/constant_pad","functional/backends/torch/core/general/container_types","functional/backends/torch/core/general/copy_array","functional/backends/torch/core/general/cross","functional/backends/torch/core/general/cumprod","functional/backends/torch/core/general/cumsum","functional/backends/torch/core/general/current_framework_str","functional/backends/torch/core/general/dtype","functional/backends/torch/core/general/dtype_bits","functional/backends/torch/core/general/dtype_from_str","functional/backends/torch/core/general/dtype_to_str","functional/backends/torch/core/general/equal","functional/backends/torch/core/general/expand_dims","functional/backends/torch/core/general/flip","functional/backends/torch/core/general/floor","functional/backends/torch/core/general/floormod","functional/backends/torch/core/general/full","functional/backends/torch/core/general/gather","functional/backends/torch/core/general/gather_nd","functional/backends/torch/core/general/get_num_dims","functional/backends/torch/core/general/identity","functional/backends/torch/core/general/indices_where","functional/backends/torch/core/general/inplace_decrement","functional/backends/torch/core/general/inplace_increment","functional/backends/torch/core/general/inplace_update","functional/backends/torch/core/general/is_array","functional/backends/torch/core/general/isinf","functional/backends/torch/core/general/isnan","functional/backends/torch/core/general/linear_resample","functional/backends/torch/core/general/linspace","functional/backends/torch/core/general/logspace","functional/backends/torch/core/general/matmul","functional/backends/torch/core/general/maximum","functional/backends/torch/core/general/meshgrid","functional/backends/torch/core/general/minimum","functional/backends/torch/core/general/multiprocessing","functional/backends/torch/core/general/one_hot","functional/backends/torch/core/general/ones","functional/backends/torch/core/general/ones_like","functional/backends/torch/core/general/repeat","functional/backends/torch/core/general/reshape","functional/backends/torch/core/general/round","functional/backends/torch/core/general/scatter_flat","functional/backends/torch/core/general/scatter_nd","functional/backends/torch/core/general/shape","functional/backends/torch/core/general/split","functional/backends/torch/core/general/squeeze","functional/backends/torch/core/general/stack","functional/backends/torch/core/general/swapaxes","functional/backends/torch/core/general/tile","functional/backends/torch/core/general/to_list","functional/backends/torch/core/general/to_numpy","functional/backends/torch/core/general/to_scalar","functional/backends/torch/core/general/transpose","functional/backends/torch/core/general/unstack","functional/backends/torch/core/general/where","functional/backends/torch/core/general/zero_pad","functional/backends/torch/core/general/zeros","functional/backends/torch/core/general/zeros_like","functional/backends/torch/core/gradients","functional/backends/torch/core/gradients/execute_with_gradients","functional/backends/torch/core/gradients/is_variable","functional/backends/torch/core/gradients/stop_gradient","functional/backends/torch/core/gradients/variable","functional/backends/torch/core/gradients/variable_data","functional/backends/torch/core/image","functional/backends/torch/core/image/bilinear_resample","functional/backends/torch/core/image/gradient_image","functional/backends/torch/core/image/stack_images","functional/backends/torch/core/linalg","functional/backends/torch/core/linalg/cholesky","functional/backends/torch/core/linalg/det","functional/backends/torch/core/linalg/inv","functional/backends/torch/core/linalg/matrix_norm","functional/backends/torch/core/linalg/pinv","functional/backends/torch/core/linalg/slogdet","functional/backends/torch/core/linalg/svd","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix","functional/backends/torch/core/logic","functional/backends/torch/core/logic/logical_and","functional/backends/torch/core/logic/logical_not","functional/backends/torch/core/logic/logical_or","functional/backends/torch/core/math","functional/backends/torch/core/math/acos","functional/backends/torch/core/math/acosh","functional/backends/torch/core/math/asin","functional/backends/torch/core/math/asinh","functional/backends/torch/core/math/atan","functional/backends/torch/core/math/atan2","functional/backends/torch/core/math/atanh","functional/backends/torch/core/math/cos","functional/backends/torch/core/math/cosh","functional/backends/torch/core/math/erf","functional/backends/torch/core/math/exp","functional/backends/torch/core/math/log","functional/backends/torch/core/math/sin","functional/backends/torch/core/math/sinh","functional/backends/torch/core/math/tan","functional/backends/torch/core/math/tanh","functional/backends/torch/core/random","functional/backends/torch/core/random/multinomial","functional/backends/torch/core/random/randint","functional/backends/torch/core/random/random_normal","functional/backends/torch/core/random/random_uniform","functional/backends/torch/core/random/seed","functional/backends/torch/core/random/shuffle","functional/backends/torch/core/reductions","functional/backends/torch/core/reductions/einsum","functional/backends/torch/core/reductions/reduce_max","functional/backends/torch/core/reductions/reduce_mean","functional/backends/torch/core/reductions/reduce_min","functional/backends/torch/core/reductions/reduce_prod","functional/backends/torch/core/reductions/reduce_sum","functional/backends/torch/core/reductions/reduce_var","functional/backends/torch/nn","functional/backends/torch/nn/activations","functional/backends/torch/nn/activations/gelu","functional/backends/torch/nn/activations/leaky_relu","functional/backends/torch/nn/activations/relu","functional/backends/torch/nn/activations/sigmoid","functional/backends/torch/nn/activations/softmax","functional/backends/torch/nn/activations/softplus","functional/backends/torch/nn/activations/tanh","functional/backends/torch/nn/converters","functional/backends/torch/nn/converters/IvyModule","functional/backends/torch/nn/converters/to_ivy_module","functional/backends/torch/nn/layers","functional/backends/torch/nn/layers/conv1d","functional/backends/torch/nn/layers/conv1d_transpose","functional/backends/torch/nn/layers/conv2d","functional/backends/torch/nn/layers/conv2d_transpose","functional/backends/torch/nn/layers/conv3d","functional/backends/torch/nn/layers/conv3d_transpose","functional/backends/torch/nn/layers/depthwise_conv2d","functional/ivy","functional/ivy/array_api","functional/ivy/array_api/constants","functional/ivy/array_api/creation_functions","functional/ivy/array_api/data_type_functions","functional/ivy/array_api/data_type_functions/finfo","functional/ivy/array_api/data_type_functions/iinfo","functional/ivy/array_api/data_types","functional/ivy/array_api/elementwise_functions","functional/ivy/array_api/elementwise_functions/isfinite","functional/ivy/array_api/function_and_method_signatures","functional/ivy/array_api/linear_algebra_extension","functional/ivy/array_api/linear_algebra_functions","functional/ivy/array_api/manipulation_functions","functional/ivy/array_api/searching_functions","functional/ivy/array_api/set_functions","functional/ivy/array_api/sorting_functions","functional/ivy/array_api/statistical_functions","functional/ivy/array_api/utility_functions","functional/ivy/array_api/utility_functions/all","functional/ivy/core","functional/ivy/core/array_builtins","functional/ivy/core/array_builtins/builtin_abs","functional/ivy/core/array_builtins/builtin_add","functional/ivy/core/array_builtins/builtin_and","functional/ivy/core/array_builtins/builtin_bool","functional/ivy/core/array_builtins/builtin_contains","functional/ivy/core/array_builtins/builtin_deepcopy","functional/ivy/core/array_builtins/builtin_dir","functional/ivy/core/array_builtins/builtin_eq","functional/ivy/core/array_builtins/builtin_float","functional/ivy/core/array_builtins/builtin_floordiv","functional/ivy/core/array_builtins/builtin_ge","functional/ivy/core/array_builtins/builtin_getattr","functional/ivy/core/array_builtins/builtin_getattribute","functional/ivy/core/array_builtins/builtin_getitem","functional/ivy/core/array_builtins/builtin_gt","functional/ivy/core/array_builtins/builtin_int","functional/ivy/core/array_builtins/builtin_invert","functional/ivy/core/array_builtins/builtin_le","functional/ivy/core/array_builtins/builtin_lt","functional/ivy/core/array_builtins/builtin_mul","functional/ivy/core/array_builtins/builtin_ne","functional/ivy/core/array_builtins/builtin_neg","functional/ivy/core/array_builtins/builtin_or","functional/ivy/core/array_builtins/builtin_pos","functional/ivy/core/array_builtins/builtin_pow","functional/ivy/core/array_builtins/builtin_radd","functional/ivy/core/array_builtins/builtin_rand","functional/ivy/core/array_builtins/builtin_rfloordiv","functional/ivy/core/array_builtins/builtin_rmul","functional/ivy/core/array_builtins/builtin_ror","functional/ivy/core/array_builtins/builtin_rpow","functional/ivy/core/array_builtins/builtin_rsub","functional/ivy/core/array_builtins/builtin_rtruediv","functional/ivy/core/array_builtins/builtin_rxor","functional/ivy/core/array_builtins/builtin_setitem","functional/ivy/core/array_builtins/builtin_sub","functional/ivy/core/array_builtins/builtin_truediv","functional/ivy/core/array_builtins/builtin_xor","functional/ivy/core/compilation","functional/ivy/core/compilation/compile","functional/ivy/core/device","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/device/DevClonedItem","functional/ivy/core/device/DevClonedIter","functional/ivy/core/device/DevClonedNest","functional/ivy/core/device/DevDistItem","functional/ivy/core/device/DevDistIter","functional/ivy/core/device/DevDistNest","functional/ivy/core/device/DevManager:\n\n    def __init__","functional/ivy/core/device/DevMapper","functional/ivy/core/device/DevMapperMultiProc","functional/ivy/core/device/MultiDev:\n\n    def __init__","functional/ivy/core/device/MultiDevItem","functional/ivy/core/device/MultiDevIter","functional/ivy/core/device/MultiDevNest","functional/ivy/core/device/Profiler","functional/ivy/core/device/clear_mem_on_dev","functional/ivy/core/device/default_device","functional/ivy/core/device/dev","functional/ivy/core/device/dev_clone","functional/ivy/core/device/dev_clone_array","functional/ivy/core/device/dev_clone_iter","functional/ivy/core/device/dev_clone_nest","functional/ivy/core/device/dev_dist","functional/ivy/core/device/dev_dist_array","functional/ivy/core/device/dev_dist_iter","functional/ivy/core/device/dev_dist_nest","functional/ivy/core/device/dev_from_str","functional/ivy/core/device/dev_to_str","functional/ivy/core/device/dev_unify","functional/ivy/core/device/dev_unify_array","functional/ivy/core/device/dev_unify_iter","functional/ivy/core/device/dev_unify_nest","functional/ivy/core/device/dev_util","functional/ivy/core/device/get_all_arrays_on_dev","functional/ivy/core/device/gpu_is_available","functional/ivy/core/device/num_arrays_on_dev","functional/ivy/core/device/num_cpu_cores","functional/ivy/core/device/num_gpus","functional/ivy/core/device/percent_used_mem_on_dev","functional/ivy/core/device/print_all_arrays_on_dev","functional/ivy/core/device/set_default_device","functional/ivy/core/device/set_split_factor","functional/ivy/core/device/split_factor","functional/ivy/core/device/split_func_call","functional/ivy/core/device/to_dev","functional/ivy/core/device/total_mem_on_dev","functional/ivy/core/device/tpu_is_available","functional/ivy/core/device/unset_default_device","functional/ivy/core/device/used_mem_on_dev","functional/ivy/core/dtype","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/dtype/cast","functional/ivy/core/dtype/closest_valid_dtype","functional/ivy/core/dtype/convert_dtype","functional/ivy/core/dtype/default_dtype","functional/ivy/core/dtype/default_float_dtype","functional/ivy/core/dtype/default_int_dtype","functional/ivy/core/dtype/dtype","functional/ivy/core/dtype/dtype_bits","functional/ivy/core/dtype/dtype_from_str","functional/ivy/core/dtype/dtype_to_str","functional/ivy/core/dtype/invalid_dtype","functional/ivy/core/dtype/is_float_dtype","functional/ivy/core/dtype/is_int_dtype","functional/ivy/core/dtype/set_default_dtype","functional/ivy/core/dtype/set_default_float_dtype","functional/ivy/core/dtype/set_default_int_dtype","functional/ivy/core/dtype/unset_default_dtype","functional/ivy/core/dtype/unset_default_float_dtype","functional/ivy/core/dtype/unset_default_int_dtype","functional/ivy/core/dtype/valid_dtype","functional/ivy/core/general","functional/ivy/core/general/abs","functional/ivy/core/general/all_equal","functional/ivy/core/general/arange","functional/ivy/core/general/arg_names","functional/ivy/core/general/argmax","functional/ivy/core/general/argmin","functional/ivy/core/general/argsort","functional/ivy/core/general/array","functional/ivy/core/general/array_equal","functional/ivy/core/general/arrays_equal","functional/ivy/core/general/assert_supports_inplace","functional/ivy/core/general/broadcast_to","functional/ivy/core/general/cache_fn","functional/ivy/core/general/ceil","functional/ivy/core/general/clip","functional/ivy/core/general/clip_matrix_norm","functional/ivy/core/general/clip_vector_norm","functional/ivy/core/general/concatenate","functional/ivy/core/general/constant_pad","functional/ivy/core/general/container_types","functional/ivy/core/general/copy_array","functional/ivy/core/general/cross","functional/ivy/core/general/cumprod","functional/ivy/core/general/cumsum","functional/ivy/core/general/current_framework_str","functional/ivy/core/general/default","functional/ivy/core/general/einops_rearrange","functional/ivy/core/general/einops_reduce","functional/ivy/core/general/einops_repeat","functional/ivy/core/general/equal","functional/ivy/core/general/exists","functional/ivy/core/general/expand_dims","functional/ivy/core/general/flip","functional/ivy/core/general/floor","functional/ivy/core/general/floormod","functional/ivy/core/general/fourier_encode","functional/ivy/core/general/full","functional/ivy/core/general/gather","functional/ivy/core/general/gather_nd","functional/ivy/core/general/get_all_arrays_in_memory","functional/ivy/core/general/get_min_base","functional/ivy/core/general/get_min_denominator","functional/ivy/core/general/get_num_dims","functional/ivy/core/general/get_referrers_recursive","functional/ivy/core/general/has_nans","functional/ivy/core/general/identity","functional/ivy/core/general/indices_where","functional/ivy/core/general/inplace_arrays_supported","functional/ivy/core/general/inplace_decrement","functional/ivy/core/general/inplace_increment","functional/ivy/core/general/inplace_update","functional/ivy/core/general/inplace_variables_supported","functional/ivy/core/general/is_array","functional/ivy/core/general/isinf","functional/ivy/core/general/isnan","functional/ivy/core/general/linear_resample","functional/ivy/core/general/linspace","functional/ivy/core/general/logspace","functional/ivy/core/general/match_kwargs","functional/ivy/core/general/matmul","functional/ivy/core/general/maximum","functional/ivy/core/general/meshgrid","functional/ivy/core/general/minimum","functional/ivy/core/general/multiprocessing","functional/ivy/core/general/num_arrays_in_memory","functional/ivy/core/general/one_hot","functional/ivy/core/general/ones","functional/ivy/core/general/ones_like","functional/ivy/core/general/print_all_arrays_in_memory","functional/ivy/core/general/queue_timeout","functional/ivy/core/general/repeat","functional/ivy/core/general/reshape","functional/ivy/core/general/round","functional/ivy/core/general/scatter_flat","functional/ivy/core/general/scatter_nd","functional/ivy/core/general/set_min_base","functional/ivy/core/general/set_min_denominator","functional/ivy/core/general/set_queue_timeout","functional/ivy/core/general/set_tmp_dir","functional/ivy/core/general/shape","functional/ivy/core/general/shape_to_tuple","functional/ivy/core/general/split","functional/ivy/core/general/squeeze","functional/ivy/core/general/stable_divide","functional/ivy/core/general/stable_pow","functional/ivy/core/general/stack","functional/ivy/core/general/supports_inplace","functional/ivy/core/general/swapaxes","functional/ivy/core/general/tile","functional/ivy/core/general/tmp_dir","functional/ivy/core/general/to_list","functional/ivy/core/general/to_numpy","functional/ivy/core/general/to_scalar","functional/ivy/core/general/transpose","functional/ivy/core/general/try_else_none","functional/ivy/core/general/unstack","functional/ivy/core/general/value_is_nan","functional/ivy/core/general/where","functional/ivy/core/general/zero_pad","functional/ivy/core/general/zeros","functional/ivy/core/general/zeros_like","functional/ivy/core/gradients","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__","functional/ivy/core/gradients/adam_step","functional/ivy/core/gradients/adam_update","functional/ivy/core/gradients/execute_with_gradients","functional/ivy/core/gradients/gradient_descent_update","functional/ivy/core/gradients/is_variable","functional/ivy/core/gradients/lamb_update","functional/ivy/core/gradients/lars_update","functional/ivy/core/gradients/optimizer_update","functional/ivy/core/gradients/set_with_grads","functional/ivy/core/gradients/stop_gradient","functional/ivy/core/gradients/unset_with_grads","functional/ivy/core/gradients/variable","functional/ivy/core/gradients/variable_data","functional/ivy/core/gradients/with_grads","functional/ivy/core/image","functional/ivy/core/image/bilinear_resample","functional/ivy/core/image/float_img_to_uint8_img","functional/ivy/core/image/gradient_image","functional/ivy/core/image/random_crop","functional/ivy/core/image/stack_images","functional/ivy/core/image/uint8_img_to_float_img","functional/ivy/core/linalg","functional/ivy/core/linalg/cholesky","functional/ivy/core/linalg/inv","functional/ivy/core/linalg/matrix_norm","functional/ivy/core/linalg/pinv","functional/ivy/core/linalg/slodget","functional/ivy/core/linalg/svd","functional/ivy/core/linalg/vector_norm","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix","functional/ivy/core/logic","functional/ivy/core/logic/logical_and","functional/ivy/core/logic/logical_not","functional/ivy/core/logic/logical_or","functional/ivy/core/math","functional/ivy/core/math/acos","functional/ivy/core/math/acosh","functional/ivy/core/math/asin","functional/ivy/core/math/asinh","functional/ivy/core/math/atan","functional/ivy/core/math/atan2","functional/ivy/core/math/atanh","functional/ivy/core/math/cos","functional/ivy/core/math/cosh","functional/ivy/core/math/divide","functional/ivy/core/math/erf","functional/ivy/core/math/exp","functional/ivy/core/math/log","functional/ivy/core/math/sin","functional/ivy/core/math/sinh","functional/ivy/core/math/tan","functional/ivy/core/math/tanh","functional/ivy/core/meta","functional/ivy/core/meta/fomaml_step","functional/ivy/core/meta/maml_step","functional/ivy/core/meta/reptile_step","functional/ivy/core/multi_node","functional/ivy/core/multi_node/ClonedItem","functional/ivy/core/multi_node/ClonedIter","functional/ivy/core/multi_node/ClonedNest","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__","functional/ivy/core/multi_node/MultiNodeItem","functional/ivy/core/multi_node/MultiNodeIter","functional/ivy/core/multi_node/MultiNodeNest","functional/ivy/core/multi_node/NodeDistItem","functional/ivy/core/multi_node/NodeDistIter","functional/ivy/core/multi_node/NodeDistNest","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__","functional/ivy/core/multi_node/NodeMapper","functional/ivy/core/multi_node/NodeMapperMultiProc","functional/ivy/core/multi_node/Profiler","functional/ivy/core/multi_node/clone","functional/ivy/core/multi_node/clone_array","functional/ivy/core/multi_node/clone_iter","functional/ivy/core/multi_node/clone_nest","functional/ivy/core/multi_node/default_node","functional/ivy/core/multi_node/distribute_nest","functional/ivy/core/multi_node/gpu_is_available","functional/ivy/core/multi_node/node","functional/ivy/core/multi_node/node_dist","functional/ivy/core/multi_node/node_dist_array","functional/ivy/core/multi_node/node_dist_iter","functional/ivy/core/multi_node/node_str","functional/ivy/core/multi_node/node_to_str","functional/ivy/core/multi_node/node_util","functional/ivy/core/multi_node/num_gpus","functional/ivy/core/multi_node/percent_used_mem_on_node","functional/ivy/core/multi_node/set_default_node","functional/ivy/core/multi_node/set_split_factor","functional/ivy/core/multi_node/split_factor","functional/ivy/core/multi_node/split_func_call","functional/ivy/core/multi_node/str_to_node","functional/ivy/core/multi_node/to_node","functional/ivy/core/multi_node/total_mem_on_node","functional/ivy/core/multi_node/tpu_is_available","functional/ivy/core/multi_node/unify","functional/ivy/core/multi_node/unify_array","functional/ivy/core/multi_node/unify_iter","functional/ivy/core/multi_node/unify_nest","functional/ivy/core/multi_node/used_mem_on_node","functional/ivy/core/nest","functional/ivy/core/nest/all_nested_indices","functional/ivy/core/nest/copy_nest","functional/ivy/core/nest/index_nest","functional/ivy/core/nest/map","functional/ivy/core/nest/map_nest_at_index","functional/ivy/core/nest/map_nest_at_indices","functional/ivy/core/nest/multi_index_nest","functional/ivy/core/nest/nested_indices_where","functional/ivy/core/nest/nested_map","functional/ivy/core/nest/set_nest_at_index","functional/ivy/core/nest/set_nest_at_indices","functional/ivy/core/random","functional/ivy/core/random/multinomial","functional/ivy/core/random/randint","functional/ivy/core/random/random_normal","functional/ivy/core/random/random_uniform","functional/ivy/core/random/seed","functional/ivy/core/random/shuffle","functional/ivy/core/reductions","functional/ivy/core/reductions/einsum","functional/ivy/core/reductions/reduce_max","functional/ivy/core/reductions/reduce_mean","functional/ivy/core/reductions/reduce_min","functional/ivy/core/reductions/reduce_prod","functional/ivy/core/reductions/reduce_std","functional/ivy/core/reductions/reduce_sum","functional/ivy/core/reductions/reduce_var","functional/ivy/nn","functional/ivy/nn/activations","functional/ivy/nn/activations/gelu","functional/ivy/nn/activations/leaky_relu","functional/ivy/nn/activations/relu","functional/ivy/nn/activations/sigmoid","functional/ivy/nn/activations/softmax","functional/ivy/nn/activations/softplus","functional/ivy/nn/activations/tanh","functional/ivy/nn/layers","functional/ivy/nn/layers/conv1d","functional/ivy/nn/layers/conv1d_transpose","functional/ivy/nn/layers/conv2d","functional/ivy/nn/layers/conv2d_transpose","functional/ivy/nn/layers/conv3d","functional/ivy/nn/layers/conv3d_transpose","functional/ivy/nn/layers/depthwise_conv2d","functional/ivy/nn/layers/dropout","functional/ivy/nn/layers/linear","functional/ivy/nn/layers/lstm_update","functional/ivy/nn/layers/multi_head_attention","functional/ivy/nn/layers/scaled_dot_product_attention","functional/ivy/nn/losses","functional/ivy/nn/losses/binary_cross_entropy","functional/ivy/nn/losses/cross_entropy","functional/ivy/nn/losses/sparse_cross_entropy","functional/ivy/nn/norms","functional/ivy/nn/norms/layer_norm","graph_compiler/compiler","graph_compiler/compiler/compile_graph","graph_compiler/compiler/show_graph","graph_compiler/globals","graph_compiler/globals/log_global_inference_abs_times","graph_compiler/globals/log_global_inference_rel_times","graph_compiler/graph","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__","graph_compiler/helpers","graph_compiler/op_logging","graph_compiler/param","graph_compiler/param/Param:\n\n    def __init__","index","index_append","index_prepend","stateful/activations","stateful/activations/GEGLU","stateful/activations/GELU","stateful/converters","stateful/converters/to_ivy_module","stateful/initializers","stateful/initializers/Constant:\n\n    def __init__","stateful/initializers/FirstLayerSiren","stateful/initializers/GlorotUniform","stateful/initializers/KaimingNormal:\n\n    def __init__","stateful/initializers/Ones","stateful/initializers/Siren","stateful/initializers/Uniform:\n\n    def __init__","stateful/initializers/Zeros","stateful/layers","stateful/layers/Conv1D","stateful/layers/Conv1DTranspose","stateful/layers/Conv2D","stateful/layers/Conv2DTranspose","stateful/layers/Conv3D","stateful/layers/Conv3DTranspose","stateful/layers/DepthwiseConv2D","stateful/layers/Dropout","stateful/layers/LSTM","stateful/layers/Linear","stateful/layers/MultiHeadAttention","stateful/module","stateful/module/Module","stateful/norms","stateful/norms/LayerNorm","stateful/optimizers","stateful/optimizers/Adam","stateful/optimizers/LAMB","stateful/optimizers/LARS","stateful/optimizers/Optimizer","stateful/optimizers/SGD","stateful/sequential","stateful/sequential/Sequential","supported_frameworks","training_a_network","using_ivy","verbosity","verbosity/cprint","why_ivy"],envversion:{"sphinx.domains.c":2,"sphinx.domains.changeset":1,"sphinx.domains.citation":1,"sphinx.domains.cpp":3,"sphinx.domains.index":1,"sphinx.domains.javascript":2,"sphinx.domains.math":2,"sphinx.domains.python":2,"sphinx.domains.rst":2,"sphinx.domains.std":1,"sphinx.ext.viewcode":1,sphinx:56},filenames:["array/array_api.rst","array/array_api/arithmetic_operators.rst","array/array_api/arithmetic_operators/ArrayWithArrayAPIArithmeticOperators.rst","array/array_api/array_operators.rst","array/array_api/array_operators/ArrayWithArrayAPIArrayOperators.rst","array/array_api/attributes.rst","array/array_api/attributes/ArrayWithArrayAPIAttributes.rst","array/array_api/bitwise_operators.rst","array/array_api/bitwise_operators/ArrayWithArrayAPIBitwiseOperators.rst","array/array_api/comparison_operators.rst","array/array_api/comparison_operators/ArrayWithArrayAPIComparisonOperators.rst","array/array_api/inplace_operators.rst","array/array_api/inplace_operators/ArrayWithArrayAPIInplaceOperators.rst","array/array_api/reflected_operators.rst","array/array_api/reflected_operators/ArrayWithArrayAPIReflectedOperators.rst","array/conversions.rst","array/conversions/args_to_ivy.rst","array/conversions/args_to_native.rst","array/conversions/to_ivy.rst","array/conversions/to_native.rst","array/device.rst","array/device/ArrayWithDevice.rst","array/general.rst","array/general/ArrayWithGeneral.rst","array/gradients.rst","array/gradients/ArrayWithGradients.rst","array/image.rst","array/image/ArrayWithImage.rst","array/linalg.rst","array/linalg/ArrayWithLinalg.rst","array/logic.rst","array/logic/ArrayWithLogic.rst","array/math.rst","array/math/ArrayWithMath.rst","array/meta.rst","array/meta/ArrayWithMeta.rst","array/random.rst","array/random/ArrayWithRandom.rst","array/reductions.rst","array/reductions/ArrayWithReductions.rst","container.rst","container/Container.rst","container/MultiDevContainer.rst","contributing.rst","debugger.rst","debugger/debug_mode.rst","debugger/set_breakpoint_debug_mode.rst","debugger/set_debug_mode.rst","debugger/set_exception_debug_mode.rst","debugger/unset_debug_mode.rst","docs/ivy.rst","docs/ivy_builder.rst","docs/ivy_ecosystem.rst","docs/ivy_gym.rst","docs/ivy_mech.rst","docs/ivy_memory.rst","docs/ivy_models.rst","docs/ivy_robot.rst","docs/ivy_vision.rst","framework_handler.rst","framework_handler/ContextManager:\n    def __init__.rst","framework_handler/choose_random_framework.rst","framework_handler/clear_framework_stack.rst","framework_handler/current_framework.rst","framework_handler/get_framework.rst","framework_handler/set_framework.rst","framework_handler/try_import_ivy_jax.rst","framework_handler/try_import_ivy_mxnet.rst","framework_handler/try_import_ivy_numpy.rst","framework_handler/try_import_ivy_tf.rst","framework_handler/try_import_ivy_torch.rst","framework_handler/unset_framework.rst","func_wrapper.rst","functional/backends.rst","functional/backends/jax.rst","functional/backends/jax/array_api.rst","functional/backends/jax/array_api/constants.rst","functional/backends/jax/array_api/creation_functions.rst","functional/backends/jax/array_api/data_type_functions.rst","functional/backends/jax/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/jax/array_api/data_type_functions/finfo.rst","functional/backends/jax/array_api/data_type_functions/iinfo.rst","functional/backends/jax/array_api/data_types.rst","functional/backends/jax/array_api/elementwise_functions.rst","functional/backends/jax/array_api/elementwise_functions/isfinite.rst","functional/backends/jax/array_api/function_and_method_signatures.rst","functional/backends/jax/array_api/linear_algebra_extension.rst","functional/backends/jax/array_api/linear_algebra_functions.rst","functional/backends/jax/array_api/manipulation_functions.rst","functional/backends/jax/array_api/searching_functions.rst","functional/backends/jax/array_api/set_functions.rst","functional/backends/jax/array_api/sorting_functions.rst","functional/backends/jax/array_api/statistical_functions.rst","functional/backends/jax/array_api/utility_functions.rst","functional/backends/jax/array_api/utility_functions/all.rst","functional/backends/jax/array_builtins.rst","functional/backends/jax/array_builtins/array_api.rst","functional/backends/jax/array_builtins/array_api/arithmetic_operators.rst","functional/backends/jax/array_builtins/array_api/array_operators.rst","functional/backends/jax/array_builtins/array_api/attributes.rst","functional/backends/jax/array_builtins/array_api/bitwise_operators.rst","functional/backends/jax/array_builtins/array_api/comparison_operators.rst","functional/backends/jax/array_builtins/array_api/inplace_operators.rst","functional/backends/jax/array_builtins/array_api/reflected_operators.rst","functional/backends/jax/core.rst","functional/backends/jax/core/device.rst","functional/backends/jax/core/device/Profiler.rst","functional/backends/jax/core/device/dev.rst","functional/backends/jax/core/device/dev_from_str.rst","functional/backends/jax/core/device/dev_to_str.rst","functional/backends/jax/core/device/num_gpus.rst","functional/backends/jax/core/device/to_dev.rst","functional/backends/jax/core/general.rst","functional/backends/jax/core/general/arange.rst","functional/backends/jax/core/general/argmax.rst","functional/backends/jax/core/general/argmin.rst","functional/backends/jax/core/general/array.rst","functional/backends/jax/core/general/cast.rst","functional/backends/jax/core/general/concatenate.rst","functional/backends/jax/core/general/cumprod.rst","functional/backends/jax/core/general/dtype.rst","functional/backends/jax/core/general/dtype_bits.rst","functional/backends/jax/core/general/dtype_from_str.rst","functional/backends/jax/core/general/dtype_to_str.rst","functional/backends/jax/core/general/flip.rst","functional/backends/jax/core/general/full.rst","functional/backends/jax/core/general/gather.rst","functional/backends/jax/core/general/gather_nd.rst","functional/backends/jax/core/general/identity.rst","functional/backends/jax/core/general/indices_where.rst","functional/backends/jax/core/general/inplace_decrement.rst","functional/backends/jax/core/general/inplace_increment.rst","functional/backends/jax/core/general/inplace_update.rst","functional/backends/jax/core/general/is_array.rst","functional/backends/jax/core/general/linear_resample.rst","functional/backends/jax/core/general/linspace.rst","functional/backends/jax/core/general/logspace.rst","functional/backends/jax/core/general/one_hot.rst","functional/backends/jax/core/general/ones.rst","functional/backends/jax/core/general/ones_like.rst","functional/backends/jax/core/general/scatter_flat.rst","functional/backends/jax/core/general/scatter_nd.rst","functional/backends/jax/core/general/split.rst","functional/backends/jax/core/general/squeeze.rst","functional/backends/jax/core/general/transpose.rst","functional/backends/jax/core/general/unstack.rst","functional/backends/jax/core/general/zeros.rst","functional/backends/jax/core/general/zeros_like.rst","functional/backends/jax/core/gradients.rst","functional/backends/jax/core/gradients/execute_with_gradients.rst","functional/backends/jax/core/gradients/is_variable.rst","functional/backends/jax/core/image.rst","functional/backends/jax/core/image/bilinear_resample.rst","functional/backends/jax/core/image/gradient_image.rst","functional/backends/jax/core/image/stack_images.rst","functional/backends/jax/core/linalg.rst","functional/backends/jax/core/linalg/matrix_norm.rst","functional/backends/jax/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/jax/core/logic.rst","functional/backends/jax/core/math.rst","functional/backends/jax/core/random.rst","functional/backends/jax/core/random/multinomial.rst","functional/backends/jax/core/random/randint.rst","functional/backends/jax/core/random/random_normal.rst","functional/backends/jax/core/random/random_uniform.rst","functional/backends/jax/core/random/seed.rst","functional/backends/jax/core/random/shuffle.rst","functional/backends/jax/core/reductions.rst","functional/backends/jax/core/reductions/einsum.rst","functional/backends/jax/core/reductions/reduce_max.rst","functional/backends/jax/core/reductions/reduce_mean.rst","functional/backends/jax/core/reductions/reduce_min.rst","functional/backends/jax/core/reductions/reduce_prod.rst","functional/backends/jax/core/reductions/reduce_sum.rst","functional/backends/jax/core/reductions/reduce_var.rst","functional/backends/jax/nn.rst","functional/backends/jax/nn/activations.rst","functional/backends/jax/nn/activations/softmax.rst","functional/backends/jax/nn/converters.rst","functional/backends/jax/nn/converters/IvyModule.rst","functional/backends/jax/nn/converters/to_ivy_module.rst","functional/backends/jax/nn/layers.rst","functional/backends/jax/nn/layers/conv1d.rst","functional/backends/jax/nn/layers/conv1d_transpose.rst","functional/backends/jax/nn/layers/conv2d.rst","functional/backends/jax/nn/layers/conv2d_transpose.rst","functional/backends/jax/nn/layers/conv3d.rst","functional/backends/jax/nn/layers/conv3d_transpose.rst","functional/backends/jax/nn/layers/depthwise_conv2d.rst","functional/backends/mxnet.rst","functional/backends/mxnet/array_api.rst","functional/backends/mxnet/array_api/constants.rst","functional/backends/mxnet/array_api/creation_functions.rst","functional/backends/mxnet/array_api/data_type_functions.rst","functional/backends/mxnet/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/mxnet/array_api/data_type_functions/finfo.rst","functional/backends/mxnet/array_api/data_type_functions/iinfo.rst","functional/backends/mxnet/array_api/data_types.rst","functional/backends/mxnet/array_api/elementwise_functions.rst","functional/backends/mxnet/array_api/elementwise_functions/isfinite.rst","functional/backends/mxnet/array_api/function_and_method_signatures.rst","functional/backends/mxnet/array_api/linear_algebra_extension.rst","functional/backends/mxnet/array_api/linear_algebra_functions.rst","functional/backends/mxnet/array_api/manipulation_functions.rst","functional/backends/mxnet/array_api/searching_functions.rst","functional/backends/mxnet/array_api/set_functions.rst","functional/backends/mxnet/array_api/sorting_functions.rst","functional/backends/mxnet/array_api/statistical_functions.rst","functional/backends/mxnet/array_api/utility_functions.rst","functional/backends/mxnet/array_api/utility_functions/all.rst","functional/backends/mxnet/array_builtins.rst","functional/backends/mxnet/array_builtins/array_api.rst","functional/backends/mxnet/array_builtins/array_api/arithmetic_operators.rst","functional/backends/mxnet/array_builtins/array_api/array_operators.rst","functional/backends/mxnet/array_builtins/array_api/attributes.rst","functional/backends/mxnet/array_builtins/array_api/bitwise_operators.rst","functional/backends/mxnet/array_builtins/array_api/comparison_operators.rst","functional/backends/mxnet/array_builtins/array_api/inplace_operators.rst","functional/backends/mxnet/array_builtins/array_api/reflected_operators.rst","functional/backends/mxnet/core.rst","functional/backends/mxnet/core/array_builtins.rst","functional/backends/mxnet/core/array_builtins/builtin_abs.rst","functional/backends/mxnet/core/array_builtins/builtin_add.rst","functional/backends/mxnet/core/array_builtins/builtin_and.rst","functional/backends/mxnet/core/array_builtins/builtin_bool.rst","functional/backends/mxnet/core/array_builtins/builtin_contains.rst","functional/backends/mxnet/core/array_builtins/builtin_deepcopy.rst","functional/backends/mxnet/core/array_builtins/builtin_dir.rst","functional/backends/mxnet/core/array_builtins/builtin_eq.rst","functional/backends/mxnet/core/array_builtins/builtin_float.rst","functional/backends/mxnet/core/array_builtins/builtin_floordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_ge.rst","functional/backends/mxnet/core/array_builtins/builtin_getattr.rst","functional/backends/mxnet/core/array_builtins/builtin_getattribute.rst","functional/backends/mxnet/core/array_builtins/builtin_getitem.rst","functional/backends/mxnet/core/array_builtins/builtin_gt.rst","functional/backends/mxnet/core/array_builtins/builtin_int.rst","functional/backends/mxnet/core/array_builtins/builtin_invert.rst","functional/backends/mxnet/core/array_builtins/builtin_le.rst","functional/backends/mxnet/core/array_builtins/builtin_lt.rst","functional/backends/mxnet/core/array_builtins/builtin_mul.rst","functional/backends/mxnet/core/array_builtins/builtin_ne.rst","functional/backends/mxnet/core/array_builtins/builtin_neg.rst","functional/backends/mxnet/core/array_builtins/builtin_or.rst","functional/backends/mxnet/core/array_builtins/builtin_pos.rst","functional/backends/mxnet/core/array_builtins/builtin_pow.rst","functional/backends/mxnet/core/array_builtins/builtin_radd.rst","functional/backends/mxnet/core/array_builtins/builtin_rand.rst","functional/backends/mxnet/core/array_builtins/builtin_rfloordiv.rst","functional/backends/mxnet/core/array_builtins/builtin_rmul.rst","functional/backends/mxnet/core/array_builtins/builtin_ror.rst","functional/backends/mxnet/core/array_builtins/builtin_rpow.rst","functional/backends/mxnet/core/array_builtins/builtin_rsub.rst","functional/backends/mxnet/core/array_builtins/builtin_rtruediv.rst","functional/backends/mxnet/core/array_builtins/builtin_rxor.rst","functional/backends/mxnet/core/array_builtins/builtin_setitem.rst","functional/backends/mxnet/core/array_builtins/builtin_sub.rst","functional/backends/mxnet/core/array_builtins/builtin_truediv.rst","functional/backends/mxnet/core/array_builtins/builtin_xor.rst","functional/backends/mxnet/core/device.rst","functional/backends/mxnet/core/device/Profiler.rst","functional/backends/mxnet/core/device/dev.rst","functional/backends/mxnet/core/device/dev_from_str.rst","functional/backends/mxnet/core/device/dev_to_str.rst","functional/backends/mxnet/core/device/to_dev.rst","functional/backends/mxnet/core/general.rst","functional/backends/mxnet/core/general/abs.rst","functional/backends/mxnet/core/general/arange.rst","functional/backends/mxnet/core/general/array.rst","functional/backends/mxnet/core/general/array_equal.rst","functional/backends/mxnet/core/general/broadcast_to.rst","functional/backends/mxnet/core/general/cast.rst","functional/backends/mxnet/core/general/ceil.rst","functional/backends/mxnet/core/general/clip.rst","functional/backends/mxnet/core/general/compile.rst","functional/backends/mxnet/core/general/concatenate.rst","functional/backends/mxnet/core/general/constant_pad.rst","functional/backends/mxnet/core/general/cross.rst","functional/backends/mxnet/core/general/cumprod.rst","functional/backends/mxnet/core/general/dtype.rst","functional/backends/mxnet/core/general/dtype_bits.rst","functional/backends/mxnet/core/general/dtype_from_str.rst","functional/backends/mxnet/core/general/dtype_to_str.rst","functional/backends/mxnet/core/general/expand_dims.rst","functional/backends/mxnet/core/general/flip.rst","functional/backends/mxnet/core/general/floor.rst","functional/backends/mxnet/core/general/floormod.rst","functional/backends/mxnet/core/general/full.rst","functional/backends/mxnet/core/general/gather.rst","functional/backends/mxnet/core/general/gather_nd.rst","functional/backends/mxnet/core/general/identity.rst","functional/backends/mxnet/core/general/indices_where.rst","functional/backends/mxnet/core/general/inplace_decrement.rst","functional/backends/mxnet/core/general/inplace_increment.rst","functional/backends/mxnet/core/general/inplace_update.rst","functional/backends/mxnet/core/general/is_array.rst","functional/backends/mxnet/core/general/isinf.rst","functional/backends/mxnet/core/general/isnan.rst","functional/backends/mxnet/core/general/linear_resample.rst","functional/backends/mxnet/core/general/linspace.rst","functional/backends/mxnet/core/general/logspace.rst","functional/backends/mxnet/core/general/matmul.rst","functional/backends/mxnet/core/general/meshgrid.rst","functional/backends/mxnet/core/general/ones.rst","functional/backends/mxnet/core/general/ones_like.rst","functional/backends/mxnet/core/general/repeat.rst","functional/backends/mxnet/core/general/round.rst","functional/backends/mxnet/core/general/scatter_flat.rst","functional/backends/mxnet/core/general/scatter_nd.rst","functional/backends/mxnet/core/general/split.rst","functional/backends/mxnet/core/general/squeeze.rst","functional/backends/mxnet/core/general/stack.rst","functional/backends/mxnet/core/general/tile.rst","functional/backends/mxnet/core/general/transpose.rst","functional/backends/mxnet/core/general/unstack.rst","functional/backends/mxnet/core/general/where.rst","functional/backends/mxnet/core/general/zero_pad.rst","functional/backends/mxnet/core/general/zeros.rst","functional/backends/mxnet/core/general/zeros_like.rst","functional/backends/mxnet/core/gradients.rst","functional/backends/mxnet/core/gradients/execute_with_gradients.rst","functional/backends/mxnet/core/gradients/is_variable.rst","functional/backends/mxnet/core/gradients/stop_gradient.rst","functional/backends/mxnet/core/gradients/variable.rst","functional/backends/mxnet/core/image.rst","functional/backends/mxnet/core/image/bilinear_resample.rst","functional/backends/mxnet/core/image/gradient_image.rst","functional/backends/mxnet/core/image/stack_images.rst","functional/backends/mxnet/core/linalg.rst","functional/backends/mxnet/core/linalg/det.rst","functional/backends/mxnet/core/linalg/matrix_norm.rst","functional/backends/mxnet/core/linalg/pinv.rst","functional/backends/mxnet/core/linalg/slogdet.rst","functional/backends/mxnet/core/linalg/svd.rst","functional/backends/mxnet/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/mxnet/core/logic.rst","functional/backends/mxnet/core/logic/logical_and.rst","functional/backends/mxnet/core/logic/logical_not.rst","functional/backends/mxnet/core/logic/logical_or.rst","functional/backends/mxnet/core/math.rst","functional/backends/mxnet/core/random.rst","functional/backends/mxnet/core/random/multinomial.rst","functional/backends/mxnet/core/random/randint.rst","functional/backends/mxnet/core/random/random_normal.rst","functional/backends/mxnet/core/random/random_uniform.rst","functional/backends/mxnet/core/reductions.rst","functional/backends/mxnet/core/reductions/einsum.rst","functional/backends/mxnet/core/reductions/reduce_max.rst","functional/backends/mxnet/core/reductions/reduce_mean.rst","functional/backends/mxnet/core/reductions/reduce_min.rst","functional/backends/mxnet/core/reductions/reduce_prod.rst","functional/backends/mxnet/core/reductions/reduce_std.rst","functional/backends/mxnet/core/reductions/reduce_sum.rst","functional/backends/mxnet/core/reductions/reduce_var.rst","functional/backends/mxnet/nn.rst","functional/backends/mxnet/nn/activations.rst","functional/backends/mxnet/nn/activations/gelu.rst","functional/backends/mxnet/nn/layers.rst","functional/backends/mxnet/nn/layers/conv1d.rst","functional/backends/mxnet/nn/layers/conv1d_transpose.rst","functional/backends/mxnet/nn/layers/conv2d.rst","functional/backends/mxnet/nn/layers/conv2d_transpose.rst","functional/backends/mxnet/nn/layers/conv3d.rst","functional/backends/mxnet/nn/layers/conv3d_transpose.rst","functional/backends/mxnet/nn/layers/depthwise_conv2d.rst","functional/backends/numpy.rst","functional/backends/numpy/array_api.rst","functional/backends/numpy/array_api/constants.rst","functional/backends/numpy/array_api/creation_functions.rst","functional/backends/numpy/array_api/data_type_functions.rst","functional/backends/numpy/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/numpy/array_api/data_type_functions/finfo.rst","functional/backends/numpy/array_api/data_type_functions/iinfo.rst","functional/backends/numpy/array_api/data_types.rst","functional/backends/numpy/array_api/elementwise_functions.rst","functional/backends/numpy/array_api/elementwise_functions/isfinite.rst","functional/backends/numpy/array_api/function_and_method_signatures.rst","functional/backends/numpy/array_api/linear_algebra_extension.rst","functional/backends/numpy/array_api/linear_algebra_functions.rst","functional/backends/numpy/array_api/manipulation_functions.rst","functional/backends/numpy/array_api/searching_functions.rst","functional/backends/numpy/array_api/set_functions.rst","functional/backends/numpy/array_api/sorting_functions.rst","functional/backends/numpy/array_api/statistical_functions.rst","functional/backends/numpy/array_api/utility_functions.rst","functional/backends/numpy/array_api/utility_functions/all.rst","functional/backends/numpy/array_builtins.rst","functional/backends/numpy/array_builtins/array_api.rst","functional/backends/numpy/array_builtins/array_api/arithmetic_operators.rst","functional/backends/numpy/array_builtins/array_api/array_operators.rst","functional/backends/numpy/array_builtins/array_api/attributes.rst","functional/backends/numpy/array_builtins/array_api/bitwise_operators.rst","functional/backends/numpy/array_builtins/array_api/comparison_operators.rst","functional/backends/numpy/array_builtins/array_api/inplace_operators.rst","functional/backends/numpy/array_builtins/array_api/reflected_operators.rst","functional/backends/numpy/core.rst","functional/backends/numpy/core/device.rst","functional/backends/numpy/core/device/Profiler.rst","functional/backends/numpy/core/general.rst","functional/backends/numpy/core/general/arange.rst","functional/backends/numpy/core/general/argmax.rst","functional/backends/numpy/core/general/argmin.rst","functional/backends/numpy/core/general/array.rst","functional/backends/numpy/core/general/cast.rst","functional/backends/numpy/core/general/compile.rst","functional/backends/numpy/core/general/concatenate.rst","functional/backends/numpy/core/general/cumprod.rst","functional/backends/numpy/core/general/dtype.rst","functional/backends/numpy/core/general/dtype_bits.rst","functional/backends/numpy/core/general/dtype_from_str.rst","functional/backends/numpy/core/general/dtype_to_str.rst","functional/backends/numpy/core/general/flip.rst","functional/backends/numpy/core/general/full.rst","functional/backends/numpy/core/general/gather.rst","functional/backends/numpy/core/general/gather_nd.rst","functional/backends/numpy/core/general/identity.rst","functional/backends/numpy/core/general/indices_where.rst","functional/backends/numpy/core/general/inplace_decrement.rst","functional/backends/numpy/core/general/inplace_increment.rst","functional/backends/numpy/core/general/inplace_update.rst","functional/backends/numpy/core/general/is_array.rst","functional/backends/numpy/core/general/linear_resample.rst","functional/backends/numpy/core/general/linspace.rst","functional/backends/numpy/core/general/logspace.rst","functional/backends/numpy/core/general/one_hot.rst","functional/backends/numpy/core/general/ones.rst","functional/backends/numpy/core/general/ones_like.rst","functional/backends/numpy/core/general/scatter_flat.rst","functional/backends/numpy/core/general/scatter_nd.rst","functional/backends/numpy/core/general/split.rst","functional/backends/numpy/core/general/squeeze.rst","functional/backends/numpy/core/general/transpose.rst","functional/backends/numpy/core/general/unstack.rst","functional/backends/numpy/core/general/zeros.rst","functional/backends/numpy/core/general/zeros_like.rst","functional/backends/numpy/core/gradients.rst","functional/backends/numpy/core/gradients/execute_with_gradients.rst","functional/backends/numpy/core/gradients/is_variable.rst","functional/backends/numpy/core/gradients/stop_gradient.rst","functional/backends/numpy/core/gradients/variable.rst","functional/backends/numpy/core/image.rst","functional/backends/numpy/core/image/bilinear_resample.rst","functional/backends/numpy/core/image/gradient_image.rst","functional/backends/numpy/core/image/stack_images.rst","functional/backends/numpy/core/linalg.rst","functional/backends/numpy/core/linalg/det.rst","functional/backends/numpy/core/linalg/matrix_norm.rst","functional/backends/numpy/core/linalg/slogdet.rst","functional/backends/numpy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/numpy/core/logic.rst","functional/backends/numpy/core/math.rst","functional/backends/numpy/core/math/erf.rst","functional/backends/numpy/core/random.rst","functional/backends/numpy/core/random/multinomial.rst","functional/backends/numpy/core/reductions.rst","functional/backends/numpy/core/reductions/einsum.rst","functional/backends/numpy/core/reductions/reduce_max.rst","functional/backends/numpy/core/reductions/reduce_mean.rst","functional/backends/numpy/core/reductions/reduce_min.rst","functional/backends/numpy/core/reductions/reduce_prod.rst","functional/backends/numpy/core/reductions/reduce_sum.rst","functional/backends/numpy/core/reductions/reduce_var.rst","functional/backends/numpy/nn.rst","functional/backends/numpy/nn/activations.rst","functional/backends/numpy/nn/activations/gelu.rst","functional/backends/numpy/nn/activations/softmax.rst","functional/backends/numpy/nn/layers.rst","functional/backends/numpy/nn/layers/conv1d.rst","functional/backends/numpy/nn/layers/conv1d_transpose.rst","functional/backends/numpy/nn/layers/conv2d.rst","functional/backends/numpy/nn/layers/conv2d_transpose.rst","functional/backends/numpy/nn/layers/conv3d.rst","functional/backends/numpy/nn/layers/conv3d_transpose.rst","functional/backends/numpy/nn/layers/depthwise_conv2d.rst","functional/backends/tensorflow.rst","functional/backends/tensorflow/array_api.rst","functional/backends/tensorflow/array_api/constants.rst","functional/backends/tensorflow/array_api/creation_functions.rst","functional/backends/tensorflow/array_api/data_type_functions.rst","functional/backends/tensorflow/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/tensorflow/array_api/data_type_functions/finfo.rst","functional/backends/tensorflow/array_api/data_type_functions/iinfo.rst","functional/backends/tensorflow/array_api/data_types.rst","functional/backends/tensorflow/array_api/elementwise_functions.rst","functional/backends/tensorflow/array_api/elementwise_functions/isfinite.rst","functional/backends/tensorflow/array_api/function_and_method_signatures.rst","functional/backends/tensorflow/array_api/linear_algebra_extension.rst","functional/backends/tensorflow/array_api/linear_algebra_functions.rst","functional/backends/tensorflow/array_api/manipulation_functions.rst","functional/backends/tensorflow/array_api/searching_functions.rst","functional/backends/tensorflow/array_api/set_functions.rst","functional/backends/tensorflow/array_api/sorting_functions.rst","functional/backends/tensorflow/array_api/statistical_functions.rst","functional/backends/tensorflow/array_api/utility_functions.rst","functional/backends/tensorflow/array_api/utility_functions/all.rst","functional/backends/tensorflow/array_builtins.rst","functional/backends/tensorflow/array_builtins/array_api.rst","functional/backends/tensorflow/array_builtins/array_api/arithmetic_operators.rst","functional/backends/tensorflow/array_builtins/array_api/array_operators.rst","functional/backends/tensorflow/array_builtins/array_api/attributes.rst","functional/backends/tensorflow/array_builtins/array_api/bitwise_operators.rst","functional/backends/tensorflow/array_builtins/array_api/comparison_operators.rst","functional/backends/tensorflow/array_builtins/array_api/inplace_operators.rst","functional/backends/tensorflow/array_builtins/array_api/reflected_operators.rst","functional/backends/tensorflow/core.rst","functional/backends/tensorflow/core/device.rst","functional/backends/tensorflow/core/device/Profiler.rst","functional/backends/tensorflow/core/device/dev.rst","functional/backends/tensorflow/core/device/dev_from_str.rst","functional/backends/tensorflow/core/device/dev_to_str.rst","functional/backends/tensorflow/core/device/to_dev.rst","functional/backends/tensorflow/core/device/tpu_is_available.rst","functional/backends/tensorflow/core/general.rst","functional/backends/tensorflow/core/general/abs.rst","functional/backends/tensorflow/core/general/arange.rst","functional/backends/tensorflow/core/general/argmax.rst","functional/backends/tensorflow/core/general/argmin.rst","functional/backends/tensorflow/core/general/array.rst","functional/backends/tensorflow/core/general/cast.rst","functional/backends/tensorflow/core/general/concatenate.rst","functional/backends/tensorflow/core/general/constant_pad.rst","functional/backends/tensorflow/core/general/dtype.rst","functional/backends/tensorflow/core/general/dtype_bits.rst","functional/backends/tensorflow/core/general/dtype_from_str.rst","functional/backends/tensorflow/core/general/dtype_to_str.rst","functional/backends/tensorflow/core/general/equal.rst","functional/backends/tensorflow/core/general/flip.rst","functional/backends/tensorflow/core/general/full.rst","functional/backends/tensorflow/core/general/gather.rst","functional/backends/tensorflow/core/general/gather_nd.rst","functional/backends/tensorflow/core/general/identity.rst","functional/backends/tensorflow/core/general/inplace_decrement.rst","functional/backends/tensorflow/core/general/inplace_increment.rst","functional/backends/tensorflow/core/general/inplace_update.rst","functional/backends/tensorflow/core/general/is_array.rst","functional/backends/tensorflow/core/general/isinf.rst","functional/backends/tensorflow/core/general/isnan.rst","functional/backends/tensorflow/core/general/linear_resample.rst","functional/backends/tensorflow/core/general/linspace.rst","functional/backends/tensorflow/core/general/logspace.rst","functional/backends/tensorflow/core/general/matmul.rst","functional/backends/tensorflow/core/general/one_hot.rst","functional/backends/tensorflow/core/general/ones.rst","functional/backends/tensorflow/core/general/ones_like.rst","functional/backends/tensorflow/core/general/scatter_flat.rst","functional/backends/tensorflow/core/general/scatter_nd.rst","functional/backends/tensorflow/core/general/split.rst","functional/backends/tensorflow/core/general/squeeze.rst","functional/backends/tensorflow/core/general/swapaxes.rst","functional/backends/tensorflow/core/general/tile.rst","functional/backends/tensorflow/core/general/unstack.rst","functional/backends/tensorflow/core/general/zero_pad.rst","functional/backends/tensorflow/core/general/zeros.rst","functional/backends/tensorflow/core/general/zeros_like.rst","functional/backends/tensorflow/core/gradients.rst","functional/backends/tensorflow/core/gradients/execute_with_gradients.rst","functional/backends/tensorflow/core/gradients/is_variable.rst","functional/backends/tensorflow/core/gradients/stop_gradient.rst","functional/backends/tensorflow/core/gradients/variable.rst","functional/backends/tensorflow/core/image.rst","functional/backends/tensorflow/core/image/bilinear_resample.rst","functional/backends/tensorflow/core/image/gradient_image.rst","functional/backends/tensorflow/core/image/stack_images.rst","functional/backends/tensorflow/core/linalg.rst","functional/backends/tensorflow/core/linalg/det.rst","functional/backends/tensorflow/core/linalg/matrix_norm.rst","functional/backends/tensorflow/core/linalg/slogdet.rst","functional/backends/tensorflow/core/linalg/svd.rst","functional/backends/tensorflow/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/tensorflow/core/logic.rst","functional/backends/tensorflow/core/math.rst","functional/backends/tensorflow/core/random.rst","functional/backends/tensorflow/core/random/multinomial.rst","functional/backends/tensorflow/core/random/randint.rst","functional/backends/tensorflow/core/random/random_normal.rst","functional/backends/tensorflow/core/random/random_uniform.rst","functional/backends/tensorflow/core/reductions.rst","functional/backends/tensorflow/core/reductions/einsum.rst","functional/backends/tensorflow/core/reductions/reduce_max.rst","functional/backends/tensorflow/core/reductions/reduce_mean.rst","functional/backends/tensorflow/core/reductions/reduce_min.rst","functional/backends/tensorflow/core/reductions/reduce_prod.rst","functional/backends/tensorflow/core/reductions/reduce_sum.rst","functional/backends/tensorflow/core/reductions/reduce_var.rst","functional/backends/tensorflow/nn.rst","functional/backends/tensorflow/nn/activations.rst","functional/backends/tensorflow/nn/layers.rst","functional/backends/tensorflow/nn/layers/conv2d.rst","functional/backends/tensorflow/nn/layers/conv3d.rst","functional/backends/tensorflow/nn/layers/depthwise_conv2d.rst","functional/backends/torch.rst","functional/backends/torch/array_api.rst","functional/backends/torch/array_api/constants.rst","functional/backends/torch/array_api/creation_functions.rst","functional/backends/torch/array_api/data_type_functions.rst","functional/backends/torch/array_api/data_type_functions/Finfo:\n\n    def __init__.rst","functional/backends/torch/array_api/data_type_functions/finfo.rst","functional/backends/torch/array_api/data_type_functions/iinfo.rst","functional/backends/torch/array_api/data_types.rst","functional/backends/torch/array_api/elementwise_functions.rst","functional/backends/torch/array_api/elementwise_functions/isfinite.rst","functional/backends/torch/array_api/function_and_method_signatures.rst","functional/backends/torch/array_api/linear_algebra_extension.rst","functional/backends/torch/array_api/linear_algebra_functions.rst","functional/backends/torch/array_api/manipulation_functions.rst","functional/backends/torch/array_api/searching_functions.rst","functional/backends/torch/array_api/set_functions.rst","functional/backends/torch/array_api/sorting_functions.rst","functional/backends/torch/array_api/statistical_functions.rst","functional/backends/torch/array_api/utility_functions.rst","functional/backends/torch/array_api/utility_functions/all.rst","functional/backends/torch/array_builtins.rst","functional/backends/torch/array_builtins/array_api.rst","functional/backends/torch/array_builtins/array_api/arithmetic_operators.rst","functional/backends/torch/array_builtins/array_api/array_operators.rst","functional/backends/torch/array_builtins/array_api/attributes.rst","functional/backends/torch/array_builtins/array_api/bitwise_operators.rst","functional/backends/torch/array_builtins/array_api/comparison_operators.rst","functional/backends/torch/array_builtins/array_api/inplace_operators.rst","functional/backends/torch/array_builtins/array_api/reflected_operators.rst","functional/backends/torch/core.rst","functional/backends/torch/core/device.rst","functional/backends/torch/core/device/Profiler.rst","functional/backends/torch/core/device/clear_mem_on_dev.rst","functional/backends/torch/core/device/dev.rst","functional/backends/torch/core/device/dev_from_str.rst","functional/backends/torch/core/device/dev_to_str.rst","functional/backends/torch/core/device/to_dev.rst","functional/backends/torch/core/device/tpu_is_available.rst","functional/backends/torch/core/general.rst","functional/backends/torch/core/general/abs.rst","functional/backends/torch/core/general/arange.rst","functional/backends/torch/core/general/argmax.rst","functional/backends/torch/core/general/argmin.rst","functional/backends/torch/core/general/argsort.rst","functional/backends/torch/core/general/array.rst","functional/backends/torch/core/general/array_equal.rst","functional/backends/torch/core/general/broadcast_to.rst","functional/backends/torch/core/general/cast.rst","functional/backends/torch/core/general/ceil.rst","functional/backends/torch/core/general/clip.rst","functional/backends/torch/core/general/compile.rst","functional/backends/torch/core/general/concatenate.rst","functional/backends/torch/core/general/constant_pad.rst","functional/backends/torch/core/general/container_types.rst","functional/backends/torch/core/general/copy_array.rst","functional/backends/torch/core/general/cross.rst","functional/backends/torch/core/general/cumprod.rst","functional/backends/torch/core/general/cumsum.rst","functional/backends/torch/core/general/current_framework_str.rst","functional/backends/torch/core/general/dtype.rst","functional/backends/torch/core/general/dtype_bits.rst","functional/backends/torch/core/general/dtype_from_str.rst","functional/backends/torch/core/general/dtype_to_str.rst","functional/backends/torch/core/general/equal.rst","functional/backends/torch/core/general/expand_dims.rst","functional/backends/torch/core/general/flip.rst","functional/backends/torch/core/general/floor.rst","functional/backends/torch/core/general/floormod.rst","functional/backends/torch/core/general/full.rst","functional/backends/torch/core/general/gather.rst","functional/backends/torch/core/general/gather_nd.rst","functional/backends/torch/core/general/get_num_dims.rst","functional/backends/torch/core/general/identity.rst","functional/backends/torch/core/general/indices_where.rst","functional/backends/torch/core/general/inplace_decrement.rst","functional/backends/torch/core/general/inplace_increment.rst","functional/backends/torch/core/general/inplace_update.rst","functional/backends/torch/core/general/is_array.rst","functional/backends/torch/core/general/isinf.rst","functional/backends/torch/core/general/isnan.rst","functional/backends/torch/core/general/linear_resample.rst","functional/backends/torch/core/general/linspace.rst","functional/backends/torch/core/general/logspace.rst","functional/backends/torch/core/general/matmul.rst","functional/backends/torch/core/general/maximum.rst","functional/backends/torch/core/general/meshgrid.rst","functional/backends/torch/core/general/minimum.rst","functional/backends/torch/core/general/multiprocessing.rst","functional/backends/torch/core/general/one_hot.rst","functional/backends/torch/core/general/ones.rst","functional/backends/torch/core/general/ones_like.rst","functional/backends/torch/core/general/repeat.rst","functional/backends/torch/core/general/reshape.rst","functional/backends/torch/core/general/round.rst","functional/backends/torch/core/general/scatter_flat.rst","functional/backends/torch/core/general/scatter_nd.rst","functional/backends/torch/core/general/shape.rst","functional/backends/torch/core/general/split.rst","functional/backends/torch/core/general/squeeze.rst","functional/backends/torch/core/general/stack.rst","functional/backends/torch/core/general/swapaxes.rst","functional/backends/torch/core/general/tile.rst","functional/backends/torch/core/general/to_list.rst","functional/backends/torch/core/general/to_numpy.rst","functional/backends/torch/core/general/to_scalar.rst","functional/backends/torch/core/general/transpose.rst","functional/backends/torch/core/general/unstack.rst","functional/backends/torch/core/general/where.rst","functional/backends/torch/core/general/zero_pad.rst","functional/backends/torch/core/general/zeros.rst","functional/backends/torch/core/general/zeros_like.rst","functional/backends/torch/core/gradients.rst","functional/backends/torch/core/gradients/execute_with_gradients.rst","functional/backends/torch/core/gradients/is_variable.rst","functional/backends/torch/core/gradients/stop_gradient.rst","functional/backends/torch/core/gradients/variable.rst","functional/backends/torch/core/gradients/variable_data.rst","functional/backends/torch/core/image.rst","functional/backends/torch/core/image/bilinear_resample.rst","functional/backends/torch/core/image/gradient_image.rst","functional/backends/torch/core/image/stack_images.rst","functional/backends/torch/core/linalg.rst","functional/backends/torch/core/linalg/cholesky.rst","functional/backends/torch/core/linalg/det.rst","functional/backends/torch/core/linalg/inv.rst","functional/backends/torch/core/linalg/matrix_norm.rst","functional/backends/torch/core/linalg/pinv.rst","functional/backends/torch/core/linalg/slogdet.rst","functional/backends/torch/core/linalg/svd.rst","functional/backends/torch/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/backends/torch/core/logic.rst","functional/backends/torch/core/logic/logical_and.rst","functional/backends/torch/core/logic/logical_not.rst","functional/backends/torch/core/logic/logical_or.rst","functional/backends/torch/core/math.rst","functional/backends/torch/core/math/acos.rst","functional/backends/torch/core/math/acosh.rst","functional/backends/torch/core/math/asin.rst","functional/backends/torch/core/math/asinh.rst","functional/backends/torch/core/math/atan.rst","functional/backends/torch/core/math/atan2.rst","functional/backends/torch/core/math/atanh.rst","functional/backends/torch/core/math/cos.rst","functional/backends/torch/core/math/cosh.rst","functional/backends/torch/core/math/erf.rst","functional/backends/torch/core/math/exp.rst","functional/backends/torch/core/math/log.rst","functional/backends/torch/core/math/sin.rst","functional/backends/torch/core/math/sinh.rst","functional/backends/torch/core/math/tan.rst","functional/backends/torch/core/math/tanh.rst","functional/backends/torch/core/random.rst","functional/backends/torch/core/random/multinomial.rst","functional/backends/torch/core/random/randint.rst","functional/backends/torch/core/random/random_normal.rst","functional/backends/torch/core/random/random_uniform.rst","functional/backends/torch/core/random/seed.rst","functional/backends/torch/core/random/shuffle.rst","functional/backends/torch/core/reductions.rst","functional/backends/torch/core/reductions/einsum.rst","functional/backends/torch/core/reductions/reduce_max.rst","functional/backends/torch/core/reductions/reduce_mean.rst","functional/backends/torch/core/reductions/reduce_min.rst","functional/backends/torch/core/reductions/reduce_prod.rst","functional/backends/torch/core/reductions/reduce_sum.rst","functional/backends/torch/core/reductions/reduce_var.rst","functional/backends/torch/nn.rst","functional/backends/torch/nn/activations.rst","functional/backends/torch/nn/activations/gelu.rst","functional/backends/torch/nn/activations/leaky_relu.rst","functional/backends/torch/nn/activations/relu.rst","functional/backends/torch/nn/activations/sigmoid.rst","functional/backends/torch/nn/activations/softmax.rst","functional/backends/torch/nn/activations/softplus.rst","functional/backends/torch/nn/activations/tanh.rst","functional/backends/torch/nn/converters.rst","functional/backends/torch/nn/converters/IvyModule.rst","functional/backends/torch/nn/converters/to_ivy_module.rst","functional/backends/torch/nn/layers.rst","functional/backends/torch/nn/layers/conv1d.rst","functional/backends/torch/nn/layers/conv1d_transpose.rst","functional/backends/torch/nn/layers/conv2d.rst","functional/backends/torch/nn/layers/conv2d_transpose.rst","functional/backends/torch/nn/layers/conv3d.rst","functional/backends/torch/nn/layers/conv3d_transpose.rst","functional/backends/torch/nn/layers/depthwise_conv2d.rst","functional/ivy.rst","functional/ivy/array_api.rst","functional/ivy/array_api/constants.rst","functional/ivy/array_api/creation_functions.rst","functional/ivy/array_api/data_type_functions.rst","functional/ivy/array_api/data_type_functions/finfo.rst","functional/ivy/array_api/data_type_functions/iinfo.rst","functional/ivy/array_api/data_types.rst","functional/ivy/array_api/elementwise_functions.rst","functional/ivy/array_api/elementwise_functions/isfinite.rst","functional/ivy/array_api/function_and_method_signatures.rst","functional/ivy/array_api/linear_algebra_extension.rst","functional/ivy/array_api/linear_algebra_functions.rst","functional/ivy/array_api/manipulation_functions.rst","functional/ivy/array_api/searching_functions.rst","functional/ivy/array_api/set_functions.rst","functional/ivy/array_api/sorting_functions.rst","functional/ivy/array_api/statistical_functions.rst","functional/ivy/array_api/utility_functions.rst","functional/ivy/array_api/utility_functions/all.rst","functional/ivy/core.rst","functional/ivy/core/array_builtins.rst","functional/ivy/core/array_builtins/builtin_abs.rst","functional/ivy/core/array_builtins/builtin_add.rst","functional/ivy/core/array_builtins/builtin_and.rst","functional/ivy/core/array_builtins/builtin_bool.rst","functional/ivy/core/array_builtins/builtin_contains.rst","functional/ivy/core/array_builtins/builtin_deepcopy.rst","functional/ivy/core/array_builtins/builtin_dir.rst","functional/ivy/core/array_builtins/builtin_eq.rst","functional/ivy/core/array_builtins/builtin_float.rst","functional/ivy/core/array_builtins/builtin_floordiv.rst","functional/ivy/core/array_builtins/builtin_ge.rst","functional/ivy/core/array_builtins/builtin_getattr.rst","functional/ivy/core/array_builtins/builtin_getattribute.rst","functional/ivy/core/array_builtins/builtin_getitem.rst","functional/ivy/core/array_builtins/builtin_gt.rst","functional/ivy/core/array_builtins/builtin_int.rst","functional/ivy/core/array_builtins/builtin_invert.rst","functional/ivy/core/array_builtins/builtin_le.rst","functional/ivy/core/array_builtins/builtin_lt.rst","functional/ivy/core/array_builtins/builtin_mul.rst","functional/ivy/core/array_builtins/builtin_ne.rst","functional/ivy/core/array_builtins/builtin_neg.rst","functional/ivy/core/array_builtins/builtin_or.rst","functional/ivy/core/array_builtins/builtin_pos.rst","functional/ivy/core/array_builtins/builtin_pow.rst","functional/ivy/core/array_builtins/builtin_radd.rst","functional/ivy/core/array_builtins/builtin_rand.rst","functional/ivy/core/array_builtins/builtin_rfloordiv.rst","functional/ivy/core/array_builtins/builtin_rmul.rst","functional/ivy/core/array_builtins/builtin_ror.rst","functional/ivy/core/array_builtins/builtin_rpow.rst","functional/ivy/core/array_builtins/builtin_rsub.rst","functional/ivy/core/array_builtins/builtin_rtruediv.rst","functional/ivy/core/array_builtins/builtin_rxor.rst","functional/ivy/core/array_builtins/builtin_setitem.rst","functional/ivy/core/array_builtins/builtin_sub.rst","functional/ivy/core/array_builtins/builtin_truediv.rst","functional/ivy/core/array_builtins/builtin_xor.rst","functional/ivy/core/compilation.rst","functional/ivy/core/compilation/compile.rst","functional/ivy/core/device.rst","functional/ivy/core/device/DefaultDevice:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/device/DevClonedItem.rst","functional/ivy/core/device/DevClonedIter.rst","functional/ivy/core/device/DevClonedNest.rst","functional/ivy/core/device/DevDistItem.rst","functional/ivy/core/device/DevDistIter.rst","functional/ivy/core/device/DevDistNest.rst","functional/ivy/core/device/DevManager:\n\n    def __init__.rst","functional/ivy/core/device/DevMapper.rst","functional/ivy/core/device/DevMapperMultiProc.rst","functional/ivy/core/device/MultiDev:\n\n    def __init__.rst","functional/ivy/core/device/MultiDevItem.rst","functional/ivy/core/device/MultiDevIter.rst","functional/ivy/core/device/MultiDevNest.rst","functional/ivy/core/device/Profiler.rst","functional/ivy/core/device/clear_mem_on_dev.rst","functional/ivy/core/device/default_device.rst","functional/ivy/core/device/dev.rst","functional/ivy/core/device/dev_clone.rst","functional/ivy/core/device/dev_clone_array.rst","functional/ivy/core/device/dev_clone_iter.rst","functional/ivy/core/device/dev_clone_nest.rst","functional/ivy/core/device/dev_dist.rst","functional/ivy/core/device/dev_dist_array.rst","functional/ivy/core/device/dev_dist_iter.rst","functional/ivy/core/device/dev_dist_nest.rst","functional/ivy/core/device/dev_from_str.rst","functional/ivy/core/device/dev_to_str.rst","functional/ivy/core/device/dev_unify.rst","functional/ivy/core/device/dev_unify_array.rst","functional/ivy/core/device/dev_unify_iter.rst","functional/ivy/core/device/dev_unify_nest.rst","functional/ivy/core/device/dev_util.rst","functional/ivy/core/device/get_all_arrays_on_dev.rst","functional/ivy/core/device/gpu_is_available.rst","functional/ivy/core/device/num_arrays_on_dev.rst","functional/ivy/core/device/num_cpu_cores.rst","functional/ivy/core/device/num_gpus.rst","functional/ivy/core/device/percent_used_mem_on_dev.rst","functional/ivy/core/device/print_all_arrays_on_dev.rst","functional/ivy/core/device/set_default_device.rst","functional/ivy/core/device/set_split_factor.rst","functional/ivy/core/device/split_factor.rst","functional/ivy/core/device/split_func_call.rst","functional/ivy/core/device/to_dev.rst","functional/ivy/core/device/total_mem_on_dev.rst","functional/ivy/core/device/tpu_is_available.rst","functional/ivy/core/device/unset_default_device.rst","functional/ivy/core/device/used_mem_on_dev.rst","functional/ivy/core/dtype.rst","functional/ivy/core/dtype/DefaultDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultFloatDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/DefaultIntDtype:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/dtype/cast.rst","functional/ivy/core/dtype/closest_valid_dtype.rst","functional/ivy/core/dtype/convert_dtype.rst","functional/ivy/core/dtype/default_dtype.rst","functional/ivy/core/dtype/default_float_dtype.rst","functional/ivy/core/dtype/default_int_dtype.rst","functional/ivy/core/dtype/dtype.rst","functional/ivy/core/dtype/dtype_bits.rst","functional/ivy/core/dtype/dtype_from_str.rst","functional/ivy/core/dtype/dtype_to_str.rst","functional/ivy/core/dtype/invalid_dtype.rst","functional/ivy/core/dtype/is_float_dtype.rst","functional/ivy/core/dtype/is_int_dtype.rst","functional/ivy/core/dtype/set_default_dtype.rst","functional/ivy/core/dtype/set_default_float_dtype.rst","functional/ivy/core/dtype/set_default_int_dtype.rst","functional/ivy/core/dtype/unset_default_dtype.rst","functional/ivy/core/dtype/unset_default_float_dtype.rst","functional/ivy/core/dtype/unset_default_int_dtype.rst","functional/ivy/core/dtype/valid_dtype.rst","functional/ivy/core/general.rst","functional/ivy/core/general/abs.rst","functional/ivy/core/general/all_equal.rst","functional/ivy/core/general/arange.rst","functional/ivy/core/general/arg_names.rst","functional/ivy/core/general/argmax.rst","functional/ivy/core/general/argmin.rst","functional/ivy/core/general/argsort.rst","functional/ivy/core/general/array.rst","functional/ivy/core/general/array_equal.rst","functional/ivy/core/general/arrays_equal.rst","functional/ivy/core/general/assert_supports_inplace.rst","functional/ivy/core/general/broadcast_to.rst","functional/ivy/core/general/cache_fn.rst","functional/ivy/core/general/ceil.rst","functional/ivy/core/general/clip.rst","functional/ivy/core/general/clip_matrix_norm.rst","functional/ivy/core/general/clip_vector_norm.rst","functional/ivy/core/general/concatenate.rst","functional/ivy/core/general/constant_pad.rst","functional/ivy/core/general/container_types.rst","functional/ivy/core/general/copy_array.rst","functional/ivy/core/general/cross.rst","functional/ivy/core/general/cumprod.rst","functional/ivy/core/general/cumsum.rst","functional/ivy/core/general/current_framework_str.rst","functional/ivy/core/general/default.rst","functional/ivy/core/general/einops_rearrange.rst","functional/ivy/core/general/einops_reduce.rst","functional/ivy/core/general/einops_repeat.rst","functional/ivy/core/general/equal.rst","functional/ivy/core/general/exists.rst","functional/ivy/core/general/expand_dims.rst","functional/ivy/core/general/flip.rst","functional/ivy/core/general/floor.rst","functional/ivy/core/general/floormod.rst","functional/ivy/core/general/fourier_encode.rst","functional/ivy/core/general/full.rst","functional/ivy/core/general/gather.rst","functional/ivy/core/general/gather_nd.rst","functional/ivy/core/general/get_all_arrays_in_memory.rst","functional/ivy/core/general/get_min_base.rst","functional/ivy/core/general/get_min_denominator.rst","functional/ivy/core/general/get_num_dims.rst","functional/ivy/core/general/get_referrers_recursive.rst","functional/ivy/core/general/has_nans.rst","functional/ivy/core/general/identity.rst","functional/ivy/core/general/indices_where.rst","functional/ivy/core/general/inplace_arrays_supported.rst","functional/ivy/core/general/inplace_decrement.rst","functional/ivy/core/general/inplace_increment.rst","functional/ivy/core/general/inplace_update.rst","functional/ivy/core/general/inplace_variables_supported.rst","functional/ivy/core/general/is_array.rst","functional/ivy/core/general/isinf.rst","functional/ivy/core/general/isnan.rst","functional/ivy/core/general/linear_resample.rst","functional/ivy/core/general/linspace.rst","functional/ivy/core/general/logspace.rst","functional/ivy/core/general/match_kwargs.rst","functional/ivy/core/general/matmul.rst","functional/ivy/core/general/maximum.rst","functional/ivy/core/general/meshgrid.rst","functional/ivy/core/general/minimum.rst","functional/ivy/core/general/multiprocessing.rst","functional/ivy/core/general/num_arrays_in_memory.rst","functional/ivy/core/general/one_hot.rst","functional/ivy/core/general/ones.rst","functional/ivy/core/general/ones_like.rst","functional/ivy/core/general/print_all_arrays_in_memory.rst","functional/ivy/core/general/queue_timeout.rst","functional/ivy/core/general/repeat.rst","functional/ivy/core/general/reshape.rst","functional/ivy/core/general/round.rst","functional/ivy/core/general/scatter_flat.rst","functional/ivy/core/general/scatter_nd.rst","functional/ivy/core/general/set_min_base.rst","functional/ivy/core/general/set_min_denominator.rst","functional/ivy/core/general/set_queue_timeout.rst","functional/ivy/core/general/set_tmp_dir.rst","functional/ivy/core/general/shape.rst","functional/ivy/core/general/shape_to_tuple.rst","functional/ivy/core/general/split.rst","functional/ivy/core/general/squeeze.rst","functional/ivy/core/general/stable_divide.rst","functional/ivy/core/general/stable_pow.rst","functional/ivy/core/general/stack.rst","functional/ivy/core/general/supports_inplace.rst","functional/ivy/core/general/swapaxes.rst","functional/ivy/core/general/tile.rst","functional/ivy/core/general/tmp_dir.rst","functional/ivy/core/general/to_list.rst","functional/ivy/core/general/to_numpy.rst","functional/ivy/core/general/to_scalar.rst","functional/ivy/core/general/transpose.rst","functional/ivy/core/general/try_else_none.rst","functional/ivy/core/general/unstack.rst","functional/ivy/core/general/value_is_nan.rst","functional/ivy/core/general/where.rst","functional/ivy/core/general/zero_pad.rst","functional/ivy/core/general/zeros.rst","functional/ivy/core/general/zeros_like.rst","functional/ivy/core/gradients.rst","functional/ivy/core/gradients/GradientTracking:\n    # noinspection PyShadowingNames\n    def __init__.rst","functional/ivy/core/gradients/adam_step.rst","functional/ivy/core/gradients/adam_update.rst","functional/ivy/core/gradients/execute_with_gradients.rst","functional/ivy/core/gradients/gradient_descent_update.rst","functional/ivy/core/gradients/is_variable.rst","functional/ivy/core/gradients/lamb_update.rst","functional/ivy/core/gradients/lars_update.rst","functional/ivy/core/gradients/optimizer_update.rst","functional/ivy/core/gradients/set_with_grads.rst","functional/ivy/core/gradients/stop_gradient.rst","functional/ivy/core/gradients/unset_with_grads.rst","functional/ivy/core/gradients/variable.rst","functional/ivy/core/gradients/variable_data.rst","functional/ivy/core/gradients/with_grads.rst","functional/ivy/core/image.rst","functional/ivy/core/image/bilinear_resample.rst","functional/ivy/core/image/float_img_to_uint8_img.rst","functional/ivy/core/image/gradient_image.rst","functional/ivy/core/image/random_crop.rst","functional/ivy/core/image/stack_images.rst","functional/ivy/core/image/uint8_img_to_float_img.rst","functional/ivy/core/linalg.rst","functional/ivy/core/linalg/cholesky.rst","functional/ivy/core/linalg/inv.rst","functional/ivy/core/linalg/matrix_norm.rst","functional/ivy/core/linalg/pinv.rst","functional/ivy/core/linalg/slodget.rst","functional/ivy/core/linalg/svd.rst","functional/ivy/core/linalg/vector_norm.rst","functional/ivy/core/linalg/vector_to_skew_symmetric_matrix.rst","functional/ivy/core/logic.rst","functional/ivy/core/logic/logical_and.rst","functional/ivy/core/logic/logical_not.rst","functional/ivy/core/logic/logical_or.rst","functional/ivy/core/math.rst","functional/ivy/core/math/acos.rst","functional/ivy/core/math/acosh.rst","functional/ivy/core/math/asin.rst","functional/ivy/core/math/asinh.rst","functional/ivy/core/math/atan.rst","functional/ivy/core/math/atan2.rst","functional/ivy/core/math/atanh.rst","functional/ivy/core/math/cos.rst","functional/ivy/core/math/cosh.rst","functional/ivy/core/math/divide.rst","functional/ivy/core/math/erf.rst","functional/ivy/core/math/exp.rst","functional/ivy/core/math/log.rst","functional/ivy/core/math/sin.rst","functional/ivy/core/math/sinh.rst","functional/ivy/core/math/tan.rst","functional/ivy/core/math/tanh.rst","functional/ivy/core/meta.rst","functional/ivy/core/meta/fomaml_step.rst","functional/ivy/core/meta/maml_step.rst","functional/ivy/core/meta/reptile_step.rst","functional/ivy/core/multi_node.rst","functional/ivy/core/multi_node/ClonedItem.rst","functional/ivy/core/multi_node/ClonedIter.rst","functional/ivy/core/multi_node/ClonedNest.rst","functional/ivy/core/multi_node/MultiNode:\n\n    def __init__.rst","functional/ivy/core/multi_node/MultiNodeItem.rst","functional/ivy/core/multi_node/MultiNodeIter.rst","functional/ivy/core/multi_node/MultiNodeNest.rst","functional/ivy/core/multi_node/NodeDistItem.rst","functional/ivy/core/multi_node/NodeDistIter.rst","functional/ivy/core/multi_node/NodeDistNest.rst","functional/ivy/core/multi_node/NodeManager:\n\n    def __init__.rst","functional/ivy/core/multi_node/NodeMapper.rst","functional/ivy/core/multi_node/NodeMapperMultiProc.rst","functional/ivy/core/multi_node/Profiler.rst","functional/ivy/core/multi_node/clone.rst","functional/ivy/core/multi_node/clone_array.rst","functional/ivy/core/multi_node/clone_iter.rst","functional/ivy/core/multi_node/clone_nest.rst","functional/ivy/core/multi_node/default_node.rst","functional/ivy/core/multi_node/distribute_nest.rst","functional/ivy/core/multi_node/gpu_is_available.rst","functional/ivy/core/multi_node/node.rst","functional/ivy/core/multi_node/node_dist.rst","functional/ivy/core/multi_node/node_dist_array.rst","functional/ivy/core/multi_node/node_dist_iter.rst","functional/ivy/core/multi_node/node_str.rst","functional/ivy/core/multi_node/node_to_str.rst","functional/ivy/core/multi_node/node_util.rst","functional/ivy/core/multi_node/num_gpus.rst","functional/ivy/core/multi_node/percent_used_mem_on_node.rst","functional/ivy/core/multi_node/set_default_node.rst","functional/ivy/core/multi_node/set_split_factor.rst","functional/ivy/core/multi_node/split_factor.rst","functional/ivy/core/multi_node/split_func_call.rst","functional/ivy/core/multi_node/str_to_node.rst","functional/ivy/core/multi_node/to_node.rst","functional/ivy/core/multi_node/total_mem_on_node.rst","functional/ivy/core/multi_node/tpu_is_available.rst","functional/ivy/core/multi_node/unify.rst","functional/ivy/core/multi_node/unify_array.rst","functional/ivy/core/multi_node/unify_iter.rst","functional/ivy/core/multi_node/unify_nest.rst","functional/ivy/core/multi_node/used_mem_on_node.rst","functional/ivy/core/nest.rst","functional/ivy/core/nest/all_nested_indices.rst","functional/ivy/core/nest/copy_nest.rst","functional/ivy/core/nest/index_nest.rst","functional/ivy/core/nest/map.rst","functional/ivy/core/nest/map_nest_at_index.rst","functional/ivy/core/nest/map_nest_at_indices.rst","functional/ivy/core/nest/multi_index_nest.rst","functional/ivy/core/nest/nested_indices_where.rst","functional/ivy/core/nest/nested_map.rst","functional/ivy/core/nest/set_nest_at_index.rst","functional/ivy/core/nest/set_nest_at_indices.rst","functional/ivy/core/random.rst","functional/ivy/core/random/multinomial.rst","functional/ivy/core/random/randint.rst","functional/ivy/core/random/random_normal.rst","functional/ivy/core/random/random_uniform.rst","functional/ivy/core/random/seed.rst","functional/ivy/core/random/shuffle.rst","functional/ivy/core/reductions.rst","functional/ivy/core/reductions/einsum.rst","functional/ivy/core/reductions/reduce_max.rst","functional/ivy/core/reductions/reduce_mean.rst","functional/ivy/core/reductions/reduce_min.rst","functional/ivy/core/reductions/reduce_prod.rst","functional/ivy/core/reductions/reduce_std.rst","functional/ivy/core/reductions/reduce_sum.rst","functional/ivy/core/reductions/reduce_var.rst","functional/ivy/nn.rst","functional/ivy/nn/activations.rst","functional/ivy/nn/activations/gelu.rst","functional/ivy/nn/activations/leaky_relu.rst","functional/ivy/nn/activations/relu.rst","functional/ivy/nn/activations/sigmoid.rst","functional/ivy/nn/activations/softmax.rst","functional/ivy/nn/activations/softplus.rst","functional/ivy/nn/activations/tanh.rst","functional/ivy/nn/layers.rst","functional/ivy/nn/layers/conv1d.rst","functional/ivy/nn/layers/conv1d_transpose.rst","functional/ivy/nn/layers/conv2d.rst","functional/ivy/nn/layers/conv2d_transpose.rst","functional/ivy/nn/layers/conv3d.rst","functional/ivy/nn/layers/conv3d_transpose.rst","functional/ivy/nn/layers/depthwise_conv2d.rst","functional/ivy/nn/layers/dropout.rst","functional/ivy/nn/layers/linear.rst","functional/ivy/nn/layers/lstm_update.rst","functional/ivy/nn/layers/multi_head_attention.rst","functional/ivy/nn/layers/scaled_dot_product_attention.rst","functional/ivy/nn/losses.rst","functional/ivy/nn/losses/binary_cross_entropy.rst","functional/ivy/nn/losses/cross_entropy.rst","functional/ivy/nn/losses/sparse_cross_entropy.rst","functional/ivy/nn/norms.rst","functional/ivy/nn/norms/layer_norm.rst","graph_compiler/compiler.rst","graph_compiler/compiler/compile_graph.rst","graph_compiler/compiler/show_graph.rst","graph_compiler/globals.rst","graph_compiler/globals/log_global_inference_abs_times.rst","graph_compiler/globals/log_global_inference_rel_times.rst","graph_compiler/graph.rst","graph_compiler/graph/Graph:\n\n    # noinspection PyProtectedMember\n    def __init__.rst","graph_compiler/helpers.rst","graph_compiler/op_logging.rst","graph_compiler/param.rst","graph_compiler/param/Param:\n\n    def __init__.rst","index.rst","index_append.rst","index_prepend.rst","stateful/activations.rst","stateful/activations/GEGLU.rst","stateful/activations/GELU.rst","stateful/converters.rst","stateful/converters/to_ivy_module.rst","stateful/initializers.rst","stateful/initializers/Constant:\n\n    def __init__.rst","stateful/initializers/FirstLayerSiren.rst","stateful/initializers/GlorotUniform.rst","stateful/initializers/KaimingNormal:\n\n    def __init__.rst","stateful/initializers/Ones.rst","stateful/initializers/Siren.rst","stateful/initializers/Uniform:\n\n    def __init__.rst","stateful/initializers/Zeros.rst","stateful/layers.rst","stateful/layers/Conv1D.rst","stateful/layers/Conv1DTranspose.rst","stateful/layers/Conv2D.rst","stateful/layers/Conv2DTranspose.rst","stateful/layers/Conv3D.rst","stateful/layers/Conv3DTranspose.rst","stateful/layers/DepthwiseConv2D.rst","stateful/layers/Dropout.rst","stateful/layers/LSTM.rst","stateful/layers/Linear.rst","stateful/layers/MultiHeadAttention.rst","stateful/module.rst","stateful/module/Module.rst","stateful/norms.rst","stateful/norms/LayerNorm.rst","stateful/optimizers.rst","stateful/optimizers/Adam.rst","stateful/optimizers/LAMB.rst","stateful/optimizers/LARS.rst","stateful/optimizers/Optimizer.rst","stateful/optimizers/SGD.rst","stateful/sequential.rst","stateful/sequential/Sequential.rst","supported_frameworks.rst","training_a_network.rst","using_ivy.rst","verbosity.rst","verbosity/cprint.rst","why_ivy.rst"],objects:{"ivy.array":{array_api:[0,0,0,"-"],conversions:[15,0,0,"-"],device:[20,0,0,"-"],general:[22,0,0,"-"],gradients:[24,0,0,"-"],image:[26,0,0,"-"],linalg:[28,0,0,"-"],logic:[30,0,0,"-"],math:[32,0,0,"-"],meta:[34,0,0,"-"],random:[36,0,0,"-"],reductions:[38,0,0,"-"]},"ivy.array.array_api":{ArrayWithArrayAPI:[0,1,1,""],arithmetic_operators:[1,0,0,"-"],array_operators:[3,0,0,"-"],attributes:[5,0,0,"-"],bitwise_operators:[7,0,0,"-"],comparison_operators:[9,0,0,"-"],inplace_operators:[11,0,0,"-"],reflected_operators:[13,0,0,"-"]},"ivy.array.array_api.arithmetic_operators":{ArrayWithArrayAPIArithmeticOperators:[2,1,1,""]},"ivy.array.array_api.array_operators":{ArrayWithArrayAPIArrayOperators:[4,1,1,""]},"ivy.array.array_api.attributes":{ArrayWithArrayAPIAttributes:[6,1,1,""]},"ivy.array.array_api.bitwise_operators":{ArrayWithArrayAPIBitwiseOperators:[8,1,1,""]},"ivy.array.array_api.comparison_operators":{ArrayWithArrayAPIComparisonOperators:[10,1,1,""]},"ivy.array.array_api.inplace_operators":{ArrayWithArrayAPIInplaceOperators:[12,1,1,""]},"ivy.array.array_api.reflected_operators":{ArrayWithArrayAPIReflectedOperators:[14,1,1,""]},"ivy.array.conversions":{args_to_ivy:[16,2,1,""],args_to_native:[17,2,1,""],to_ivy:[18,2,1,""],to_native:[19,2,1,""]},"ivy.array.device":{ArrayWithDevice:[21,1,1,""]},"ivy.array.general":{ArrayWithGeneral:[23,1,1,""]},"ivy.array.gradients":{ArrayWithGradients:[25,1,1,""]},"ivy.array.image":{ArrayWithImage:[27,1,1,""]},"ivy.array.linalg":{ArrayWithLinalg:[29,1,1,""]},"ivy.array.logic":{ArrayWithLogic:[31,1,1,""]},"ivy.array.math":{ArrayWithMath:[33,1,1,""]},"ivy.array.meta":{ArrayWithMeta:[35,1,1,""]},"ivy.array.random":{ArrayWithRandom:[37,1,1,""]},"ivy.array.reductions":{ArrayWithReductions:[39,1,1,""]},"ivy.container":{Container:[41,1,1,""],MultiDevContainer:[42,1,1,""]},"ivy.container.Container":{__init__:[41,3,1,""],all_false:[41,3,1,""],all_key_chains:[41,3,1,""],all_true:[41,3,1,""],arrays_as_lists:[41,3,1,""],as_arrays:[41,3,1,""],as_bools:[41,3,1,""],as_ones:[41,3,1,""],as_random_uniform:[41,3,1,""],as_variables:[41,3,1,""],as_zeros:[41,3,1,""],assert_contains_sub_container:[41,3,1,""],assert_contains_sub_structure:[41,3,1,""],assert_identical:[41,3,1,""],assert_identical_structure:[41,3,1,""],at_key_chain:[41,3,1,""],at_key_chains:[41,3,1,""],at_keys:[41,3,1,""],clip:[41,3,1,""],clip_vector_norm:[41,3,1,""],combine:[41,3,1,""],common_key_chains:[41,3,1,""],concat:[41,3,1,""],config:[41,3,1,""],contains_sub_container:[41,3,1,""],contains_sub_structure:[41,3,1,""],copy:[41,3,1,""],create_if_absent:[41,3,1,""],cutoff_at_depth:[41,3,1,""],cutoff_at_height:[41,3,1,""],deep_copy:[41,3,1,""],dev:[41,3,1,""],dev_clone:[41,3,1,""],dev_dist:[41,3,1,""],dev_str:[41,3,1,""],diff:[41,3,1,""],dtype:[41,3,1,""],einops_rearrange:[41,3,1,""],einops_reduce:[41,3,1,""],einops_repeat:[41,3,1,""],einsum:[41,3,1,""],expand_dims:[41,3,1,""],find_sub_container:[41,3,1,""],find_sub_structure:[41,3,1,""],flatten_key_chain:[41,3,1,""],flatten_key_chains:[41,3,1,""],flip:[41,3,1,""],format_key_chains:[41,3,1,""],from_disk_as_hdf5:[41,3,1,""],from_disk_as_json:[41,3,1,""],from_disk_as_pickled:[41,3,1,""],from_flat_list:[41,3,1,""],from_numpy:[41,3,1,""],gather:[41,3,1,""],gather_nd:[41,3,1,""],h5_file_size:[41,3,1,""],has_key:[41,3,1,""],has_key_chain:[41,3,1,""],has_nans:[41,3,1,""],identical:[41,3,1,""],identical_array_shapes:[41,3,1,""],identical_configs:[41,3,1,""],identical_structure:[41,3,1,""],if_exists:[41,3,1,""],inplace_update:[41,3,1,""],ivy:[41,3,1,""],key_chains_containing:[41,3,1,""],list_join:[41,3,1,""],list_stack:[41,3,1,""],map:[41,3,1,""],map_conts:[41,3,1,""],matrix_norm:[41,3,1,""],max_depth:[41,3,1,""],maximum:[41,3,1,""],minimum:[41,3,1,""],multi_map:[41,3,1,""],num_arrays:[41,3,1,""],overwrite_at_key_chain:[41,3,1,""],overwrite_at_key_chains:[41,3,1,""],prune_empty:[41,3,1,""],prune_key_chain:[41,3,1,""],prune_key_chains:[41,3,1,""],prune_key_from_key_chains:[41,3,1,""],prune_keys:[41,3,1,""],prune_keys_from_key_chains:[41,3,1,""],reduce:[41,3,1,""],reduce_max:[41,3,1,""],reduce_mean:[41,3,1,""],reduce_min:[41,3,1,""],reduce_prod:[41,3,1,""],reduce_std:[41,3,1,""],reduce_sum:[41,3,1,""],reduce_var:[41,3,1,""],remove_key_length_limit:[41,3,1,""],remove_print_limit:[41,3,1,""],repeat:[41,3,1,""],reshape:[41,3,1,""],reshape_like:[41,3,1,""],restructure:[41,3,1,""],restructure_key_chains:[41,3,1,""],set_at_key_chain:[41,3,1,""],set_at_key_chains:[41,3,1,""],set_at_keys:[41,3,1,""],set_framework:[41,3,1,""],set_ivy_backend:[41,3,1,""],shape:[41,3,1,""],shapes:[41,3,1,""],show:[41,3,1,""],show_sub_container:[41,3,1,""],shuffle:[41,3,1,""],shuffle_h5_file:[41,3,1,""],size_ordered_arrays:[41,3,1,""],slice_keys:[41,3,1,""],slice_via_key:[41,3,1,""],sort_by_key:[41,3,1,""],split:[41,3,1,""],stack:[41,3,1,""],stop_gradients:[41,3,1,""],structural_diff:[41,3,1,""],swapaxes:[41,3,1,""],to_dev:[41,3,1,""],to_dict:[41,3,1,""],to_disk_as_hdf5:[41,3,1,""],to_disk_as_json:[41,3,1,""],to_disk_as_pickled:[41,3,1,""],to_flat_list:[41,3,1,""],to_iterator:[41,3,1,""],to_iterator_keys:[41,3,1,""],to_iterator_values:[41,3,1,""],to_ivy:[41,3,1,""],to_jsonable:[41,3,1,""],to_list:[41,3,1,""],to_multi_dev:[41,3,1,""],to_native:[41,3,1,""],to_numpy:[41,3,1,""],to_raw:[41,3,1,""],trim_key:[41,3,1,""],try_kc:[41,3,1,""],unify:[41,3,1,""],unstack:[41,3,1,""],update_config:[41,3,1,""],vector_norm:[41,3,1,""],with_default_key_color:[41,3,1,""],with_entries_as_lists:[41,3,1,""],with_ivy_backend:[41,3,1,""],with_key_length_limit:[41,3,1,""],with_print_indent:[41,3,1,""],with_print_limit:[41,3,1,""],with_print_line_spacing:[41,3,1,""]},"ivy.container.MultiDevContainer":{__init__:[42,3,1,""],at_dev:[42,3,1,""],at_devs:[42,3,1,""]},"ivy.debugger":{debug_mode:[45,2,1,""],set_breakpoint_debug_mode:[46,2,1,""],set_debug_mode:[47,2,1,""],set_exception_debug_mode:[48,2,1,""],unset_debug_mode:[49,2,1,""]},"ivy.framework_handler":{ContextManager:[59,1,1,""],choose_random_framework:[61,2,1,""],clear_framework_stack:[62,2,1,""],current_framework:[63,2,1,""],get_framework:[64,2,1,""],set_framework:[65,2,1,""],try_import_ivy_jax:[66,2,1,""],try_import_ivy_mxnet:[67,2,1,""],try_import_ivy_numpy:[68,2,1,""],try_import_ivy_tf:[69,2,1,""],try_import_ivy_torch:[70,2,1,""],unset_framework:[71,2,1,""]},"ivy.framework_handler.ContextManager":{__init__:[59,3,1,""]},"ivy.functional":{backends:[73,0,0,"-"],ivy:[777,0,0,"-"]},"ivy.functional.backends.numpy.array_api":{constants:[367,0,0,"-"],creation_functions:[368,0,0,"-"],data_type_functions:[369,0,0,"-"],data_types:[373,0,0,"-"],elementwise_functions:[374,0,0,"-"],function_and_method_signatures:[376,0,0,"-"],linear_algebra_extension:[377,0,0,"-"],linear_algebra_functions:[378,0,0,"-"],manipulation_functions:[379,0,0,"-"],searching_functions:[380,0,0,"-"],set_functions:[381,0,0,"-"],sorting_functions:[382,0,0,"-"],statistical_functions:[383,0,0,"-"]},"ivy.functional.backends.numpy.array_api.data_type_functions":{Finfo:[369,1,1,""],finfo:[371,2,1,""],iinfo:[372,2,1,""]},"ivy.functional.backends.numpy.array_api.data_type_functions.Finfo":{__init__:[369,3,1,""],bits:[369,3,1,""],eps:[369,3,1,""],max:[369,3,1,""],min:[369,3,1,""],smallest_normal:[369,3,1,""]},"ivy.functional.backends.numpy.array_api.elementwise_functions":{isfinite:[375,2,1,""]},"ivy.functional.ivy":{array_api:[778,0,0,"-"],core:[797,0,0,"-"],nn:[1145,0,0,"-"]},"ivy.functional.ivy.array_api":{constants:[779,0,0,"-"],creation_functions:[780,0,0,"-"],data_type_functions:[781,0,0,"-"],data_types:[784,0,0,"-"],elementwise_functions:[785,0,0,"-"],function_and_method_signatures:[787,0,0,"-"],linear_algebra_extension:[788,0,0,"-"],linear_algebra_functions:[789,0,0,"-"],manipulation_functions:[790,0,0,"-"],searching_functions:[791,0,0,"-"],set_functions:[792,0,0,"-"],sorting_functions:[793,0,0,"-"],statistical_functions:[794,0,0,"-"],utility_functions:[795,0,0,"-"]},"ivy.functional.ivy.array_api.data_type_functions":{finfo:[782,2,1,""],iinfo:[783,2,1,""]},"ivy.functional.ivy.array_api.elementwise_functions":{isfinite:[786,2,1,""]},"ivy.functional.ivy.array_api.utility_functions":{all:[796,2,1,""]},"ivy.functional.ivy.core":{array_builtins:[798,0,0,"-"],compilation:[837,0,0,"-"],device:[839,0,0,"-"],dtype:[889,0,0,"-"],general:[913,0,0,"-"],gradients:[1015,0,0,"-"],image:[1031,0,0,"-"],linalg:[1038,0,0,"-"],logic:[1047,0,0,"-"],math:[1051,0,0,"-"],meta:[1069,0,0,"-"],multi_node:[1073,0,0,"-"],nest:[1117,0,0,"-"],random:[1129,0,0,"-"],reductions:[1136,0,0,"-"]},"ivy.functional.ivy.core.array_builtins":{builtin_abs:[799,2,1,""],builtin_add:[800,2,1,""],builtin_and:[801,2,1,""],builtin_bool:[802,2,1,""],builtin_contains:[803,2,1,""],builtin_deepcopy:[804,2,1,""],builtin_dir:[805,2,1,""],builtin_eq:[806,2,1,""],builtin_float:[807,2,1,""],builtin_floordiv:[808,2,1,""],builtin_ge:[809,2,1,""],builtin_getattr:[810,2,1,""],builtin_getattribute:[811,2,1,""],builtin_getitem:[812,2,1,""],builtin_gt:[813,2,1,""],builtin_int:[814,2,1,""],builtin_invert:[815,2,1,""],builtin_le:[816,2,1,""],builtin_lt:[817,2,1,""],builtin_mul:[818,2,1,""],builtin_ne:[819,2,1,""],builtin_neg:[820,2,1,""],builtin_or:[821,2,1,""],builtin_pos:[822,2,1,""],builtin_pow:[823,2,1,""],builtin_radd:[824,2,1,""],builtin_rand:[825,2,1,""],builtin_rfloordiv:[826,2,1,""],builtin_rmul:[827,2,1,""],builtin_ror:[828,2,1,""],builtin_rpow:[829,2,1,""],builtin_rsub:[830,2,1,""],builtin_rtruediv:[831,2,1,""],builtin_rxor:[832,2,1,""],builtin_setitem:[833,2,1,""],builtin_sub:[834,2,1,""],builtin_truediv:[835,2,1,""],builtin_xor:[836,2,1,""]},"ivy.functional.ivy.core.compilation":{compile:[838,2,1,""]},"ivy.functional.ivy.core.device":{DefaultDevice:[839,1,1,""],DevClonedItem:[841,1,1,""],DevClonedIter:[842,1,1,""],DevClonedNest:[843,1,1,""],DevDistItem:[844,1,1,""],DevDistIter:[845,1,1,""],DevDistNest:[846,1,1,""],DevManager:[839,1,1,""],DevMapper:[848,1,1,""],DevMapperMultiProc:[849,1,1,""],MultiDev:[839,1,1,""],MultiDevItem:[851,1,1,""],MultiDevIter:[852,1,1,""],MultiDevNest:[853,1,1,""],Profiler:[854,1,1,""],clear_mem_on_dev:[855,2,1,""],default_device:[856,2,1,""],dev:[857,2,1,""],dev_clone:[858,2,1,""],dev_clone_array:[859,2,1,""],dev_clone_iter:[860,2,1,""],dev_clone_nest:[861,2,1,""],dev_dist:[862,2,1,""],dev_dist_array:[863,2,1,""],dev_dist_iter:[864,2,1,""],dev_dist_nest:[865,2,1,""],dev_from_str:[866,2,1,""],dev_to_str:[867,2,1,""],dev_unify:[868,2,1,""],dev_unify_array:[869,2,1,""],dev_unify_iter:[870,2,1,""],dev_unify_nest:[871,2,1,""],dev_util:[872,2,1,""],get_all_arrays_on_dev:[873,2,1,""],gpu_is_available:[874,2,1,""],num_arrays_on_dev:[875,2,1,""],num_cpu_cores:[876,2,1,""],num_gpus:[877,2,1,""],percent_used_mem_on_dev:[878,2,1,""],print_all_arrays_on_dev:[879,2,1,""],set_default_device:[880,2,1,""],set_split_factor:[881,2,1,""],split_factor:[882,2,1,""],split_func_call:[883,2,1,""],to_dev:[884,2,1,""],total_mem_on_dev:[885,2,1,""],tpu_is_available:[886,2,1,""],unset_default_device:[887,2,1,""],used_mem_on_dev:[888,2,1,""]},"ivy.functional.ivy.core.device.DefaultDevice":{__init__:[839,3,1,""]},"ivy.functional.ivy.core.device.DevManager":{__init__:[839,3,1,""],da_tune_step:[839,3,1,""],dim_size:[839,3,1,""],ds_tune_step:[839,3,1,""],map:[839,3,1,""],repeated_config_check:[839,3,1,""],tune_step:[839,3,1,""],tuned:[839,3,1,""]},"ivy.functional.ivy.core.device.DevMapper":{__init__:[848,3,1,""],map:[848,3,1,""]},"ivy.functional.ivy.core.device.DevMapperMultiProc":{__init__:[849,3,1,""]},"ivy.functional.ivy.core.device.MultiDev":{__init__:[839,3,1,""]},"ivy.functional.ivy.core.device.MultiDevItem":{__init__:[851,3,1,""],items:[851,3,1,""],keys:[851,3,1,""],shape:[851,3,1,""],values:[851,3,1,""]},"ivy.functional.ivy.core.device.MultiDevIter":{__init__:[852,3,1,""],at_dev:[852,3,1,""],at_devs:[852,3,1,""]},"ivy.functional.ivy.core.device.MultiDevNest":{__init__:[853,3,1,""],at_dev:[853,3,1,""]},"ivy.functional.ivy.core.device.Profiler":{__init__:[854,3,1,""],start:[854,3,1,""],stop:[854,3,1,""]},"ivy.functional.ivy.core.dtype":{DefaultDtype:[889,1,1,""],DefaultFloatDtype:[889,1,1,""],DefaultIntDtype:[889,1,1,""],astype:[889,2,1,""],cast:[893,2,1,""],closest_valid_dtype:[894,2,1,""],convert_dtype:[895,2,1,""],default_dtype:[896,2,1,""],default_float_dtype:[897,2,1,""],default_int_dtype:[898,2,1,""],dtype:[899,2,1,""],dtype_bits:[900,2,1,""],dtype_from_str:[901,2,1,""],dtype_to_str:[902,2,1,""],invalid_dtype:[903,2,1,""],is_float_dtype:[904,2,1,""],is_int_dtype:[905,2,1,""],set_default_dtype:[906,2,1,""],set_default_float_dtype:[907,2,1,""],set_default_int_dtype:[908,2,1,""],unset_default_dtype:[909,2,1,""],unset_default_float_dtype:[910,2,1,""],unset_default_int_dtype:[911,2,1,""],valid_dtype:[912,2,1,""]},"ivy.functional.ivy.core.dtype.DefaultDtype":{__init__:[889,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultFloatDtype":{__init__:[889,3,1,""]},"ivy.functional.ivy.core.dtype.DefaultIntDtype":{__init__:[889,3,1,""]},"ivy.functional.ivy.core.general":{"default":[939,2,1,""],abs:[914,2,1,""],all_equal:[915,2,1,""],arange:[916,2,1,""],arg_names:[917,2,1,""],argmax:[918,2,1,""],argmin:[919,2,1,""],argsort:[920,2,1,""],array:[921,2,1,""],array_equal:[922,2,1,""],arrays_equal:[923,2,1,""],asarray:[913,2,1,""],assert_supports_inplace:[924,2,1,""],broadcast_to:[925,2,1,""],cache_fn:[926,2,1,""],ceil:[927,2,1,""],clip:[928,2,1,""],clip_matrix_norm:[929,2,1,""],clip_vector_norm:[930,2,1,""],concatenate:[931,2,1,""],constant_pad:[932,2,1,""],container_types:[933,2,1,""],copy_array:[934,2,1,""],cross:[935,2,1,""],cumprod:[936,2,1,""],cumsum:[937,2,1,""],current_framework_str:[938,2,1,""],einops_rearrange:[940,2,1,""],einops_reduce:[941,2,1,""],einops_repeat:[942,2,1,""],equal:[943,2,1,""],exists:[944,2,1,""],expand_dims:[945,2,1,""],flip:[946,2,1,""],floor:[947,2,1,""],floormod:[948,2,1,""],fourier_encode:[949,2,1,""],full:[950,2,1,""],gather:[951,2,1,""],gather_nd:[952,2,1,""],get_all_arrays_in_memory:[953,2,1,""],get_min_base:[954,2,1,""],get_min_denominator:[955,2,1,""],get_num_dims:[956,2,1,""],get_referrers_recursive:[957,2,1,""],has_nans:[958,2,1,""],identity:[959,2,1,""],indices_where:[960,2,1,""],inplace_arrays_supported:[961,2,1,""],inplace_decrement:[962,2,1,""],inplace_increment:[963,2,1,""],inplace_update:[964,2,1,""],inplace_variables_supported:[965,2,1,""],is_array:[966,2,1,""],isinf:[967,2,1,""],isnan:[968,2,1,""],linear_resample:[969,2,1,""],linspace:[970,2,1,""],logspace:[971,2,1,""],match_kwargs:[972,2,1,""],matmul:[973,2,1,""],maximum:[974,2,1,""],meshgrid:[975,2,1,""],minimum:[976,2,1,""],multiprocessing:[977,2,1,""],num_arrays_in_memory:[978,2,1,""],one_hot:[979,2,1,""],ones:[980,2,1,""],ones_like:[981,2,1,""],print_all_arrays_in_memory:[982,2,1,""],queue_timeout:[983,2,1,""],repeat:[984,2,1,""],reshape:[985,2,1,""],round:[986,2,1,""],scatter_flat:[987,2,1,""],scatter_nd:[988,2,1,""],set_min_base:[989,2,1,""],set_min_denominator:[990,2,1,""],set_queue_timeout:[991,2,1,""],set_tmp_dir:[992,2,1,""],shape:[993,2,1,""],shape_to_tuple:[994,2,1,""],split:[995,2,1,""],squeeze:[996,2,1,""],stable_divide:[997,2,1,""],stable_pow:[998,2,1,""],stack:[999,2,1,""],supports_inplace:[1000,2,1,""],swapaxes:[1001,2,1,""],tile:[1002,2,1,""],tmp_dir:[1003,2,1,""],to_list:[1004,2,1,""],to_numpy:[1005,2,1,""],to_scalar:[1006,2,1,""],transpose:[1007,2,1,""],try_else_none:[1008,2,1,""],unstack:[1009,2,1,""],value_is_nan:[1010,2,1,""],where:[1011,2,1,""],zero_pad:[1012,2,1,""],zeros:[1013,2,1,""],zeros_like:[1014,2,1,""]},"ivy.functional.ivy.core.gradients":{GradientTracking:[1015,1,1,""],adam_step:[1017,2,1,""],adam_update:[1018,2,1,""],execute_with_gradients:[1019,2,1,""],gradient_descent_update:[1020,2,1,""],is_variable:[1021,2,1,""],lamb_update:[1022,2,1,""],lars_update:[1023,2,1,""],optimizer_update:[1024,2,1,""],set_with_grads:[1025,2,1,""],stop_gradient:[1026,2,1,""],unset_with_grads:[1027,2,1,""],variable:[1028,2,1,""],variable_data:[1029,2,1,""],with_grads:[1030,2,1,""]},"ivy.functional.ivy.core.gradients.GradientTracking":{__init__:[1015,3,1,""]},"ivy.functional.ivy.core.image":{bilinear_resample:[1032,2,1,""],float_img_to_uint8_img:[1033,2,1,""],gradient_image:[1034,2,1,""],random_crop:[1035,2,1,""],stack_images:[1036,2,1,""],uint8_img_to_float_img:[1037,2,1,""]},"ivy.functional.ivy.core.linalg":{cholesky:[1039,2,1,""],inv:[1040,2,1,""],matrix_norm:[1041,2,1,""],pinv:[1042,2,1,""],slodget:[1043,2,1,""],svd:[1044,2,1,""],vector_norm:[1045,2,1,""],vector_to_skew_symmetric_matrix:[1046,2,1,""]},"ivy.functional.ivy.core.logic":{logical_and:[1048,2,1,""],logical_not:[1049,2,1,""],logical_or:[1050,2,1,""]},"ivy.functional.ivy.core.math":{acos:[1052,2,1,""],acosh:[1053,2,1,""],asin:[1054,2,1,""],asinh:[1055,2,1,""],atan2:[1057,2,1,""],atan:[1056,2,1,""],atanh:[1058,2,1,""],cos:[1059,2,1,""],cosh:[1060,2,1,""],divide:[1061,2,1,""],erf:[1062,2,1,""],exp:[1063,2,1,""],log:[1064,2,1,""],sin:[1065,2,1,""],sinh:[1066,2,1,""],tan:[1067,2,1,""],tanh:[1068,2,1,""]},"ivy.functional.ivy.core.meta":{fomaml_step:[1070,2,1,""],maml_step:[1071,2,1,""],reptile_step:[1072,2,1,""]},"ivy.functional.ivy.core.multi_node":{split_factors:[1073,4,1,""]},"ivy.functional.ivy.core.nest":{all_nested_indices:[1118,2,1,""],copy_nest:[1119,2,1,""],index_nest:[1120,2,1,""],map:[1121,2,1,""],map_nest_at_index:[1122,2,1,""],map_nest_at_indices:[1123,2,1,""],multi_index_nest:[1124,2,1,""],nested_indices_where:[1125,2,1,""],nested_map:[1126,2,1,""],set_nest_at_index:[1127,2,1,""],set_nest_at_indices:[1128,2,1,""]},"ivy.functional.ivy.core.random":{multinomial:[1130,2,1,""],randint:[1131,2,1,""],random_normal:[1132,2,1,""],random_uniform:[1133,2,1,""],seed:[1134,2,1,""],shuffle:[1135,2,1,""]},"ivy.functional.ivy.core.reductions":{einsum:[1137,2,1,""],reduce_max:[1138,2,1,""],reduce_mean:[1139,2,1,""],reduce_min:[1140,2,1,""],reduce_prod:[1141,2,1,""],reduce_std:[1142,2,1,""],reduce_sum:[1143,2,1,""],reduce_var:[1144,2,1,""]},"ivy.functional.ivy.nn":{activations:[1146,0,0,"-"],layers:[1154,0,0,"-"],losses:[1167,0,0,"-"],norms:[1171,0,0,"-"]},"ivy.functional.ivy.nn.activations":{gelu:[1147,2,1,""],leaky_relu:[1148,2,1,""],relu:[1149,2,1,""],sigmoid:[1150,2,1,""],softmax:[1151,2,1,""],softplus:[1152,2,1,""],tanh:[1153,2,1,""]},"ivy.functional.ivy.nn.layers":{conv1d:[1155,2,1,""],conv1d_transpose:[1156,2,1,""],conv2d:[1157,2,1,""],conv2d_transpose:[1158,2,1,""],conv3d:[1159,2,1,""],conv3d_transpose:[1160,2,1,""],depthwise_conv2d:[1161,2,1,""],dropout:[1162,2,1,""],linear:[1163,2,1,""],lstm_update:[1164,2,1,""],multi_head_attention:[1165,2,1,""],scaled_dot_product_attention:[1166,2,1,""]},"ivy.functional.ivy.nn.losses":{binary_cross_entropy:[1168,2,1,""],cross_entropy:[1169,2,1,""],sparse_cross_entropy:[1170,2,1,""]},"ivy.functional.ivy.nn.norms":{layer_norm:[1172,2,1,""]},"ivy.graph_compiler":{compiler:[1173,0,0,"-"],globals:[1176,0,0,"-"],graph:[1179,0,0,"-"],helpers:[1181,0,0,"-"],op_logging:[1182,0,0,"-"],param:[1183,0,0,"-"]},"ivy.graph_compiler.compiler":{compile_graph:[1174,2,1,""],show_graph:[1175,2,1,""]},"ivy.graph_compiler.globals":{log_global_inference_abs_times:[1177,2,1,""],log_global_inference_rel_times:[1178,2,1,""]},"ivy.graph_compiler.graph":{Graph:[1179,1,1,""]},"ivy.graph_compiler.graph.Graph":{__init__:[1179,3,1,""],add_fn_to_dict:[1179,3,1,""],add_param:[1179,3,1,""],compiled:[1179,3,1,""],connect:[1179,3,1,""],debug_info:[1179,3,1,""],get_param:[1179,3,1,""],get_param_recursive:[1179,3,1,""],include_generators:[1179,3,1,""],increment_param_count:[1179,3,1,""],log_all_ops:[1179,3,1,""],params_all_empty:[1179,3,1,""],save_debug_info:[1179,3,1,""],set_param:[1179,3,1,""],show:[1179,3,1,""],show_debug_info:[1179,3,1,""],update_inference_times:[1179,3,1,""],with_array_caching:[1179,3,1,""]},"ivy.graph_compiler.param":{Param:[1183,1,1,""]},"ivy.graph_compiler.param.Param":{__init__:[1183,3,1,""],count:[1183,3,1,""],depth:[1183,3,1,""],get:[1183,3,1,""],is_var:[1183,3,1,""],ptype:[1183,3,1,""],set:[1183,3,1,""],set_count:[1183,3,1,""],shape:[1183,3,1,""]},"ivy.stateful":{activations:[1188,0,0,"-"],converters:[1191,0,0,"-"],initializers:[1193,0,0,"-"],layers:[1202,0,0,"-"],module:[1214,0,0,"-"],norms:[1216,0,0,"-"],optimizers:[1218,0,0,"-"],sequential:[1224,0,0,"-"]},"ivy.stateful.activations":{GEGLU:[1189,1,1,""],GELU:[1190,1,1,""]},"ivy.stateful.activations.GEGLU":{__init__:[1189,3,1,""]},"ivy.stateful.activations.GELU":{__init__:[1190,3,1,""]},"ivy.stateful.converters":{to_ivy_module:[1192,2,1,""]},"ivy.stateful.initializers":{Constant:[1193,1,1,""],FirstLayerSiren:[1195,1,1,""],GlorotUniform:[1196,1,1,""],KaimingNormal:[1193,1,1,""],Ones:[1198,1,1,""],Siren:[1199,1,1,""],Uniform:[1193,1,1,""],Zeros:[1201,1,1,""]},"ivy.stateful.initializers.Constant":{__init__:[1193,3,1,""],create_variables:[1193,3,1,""]},"ivy.stateful.initializers.FirstLayerSiren":{__init__:[1195,3,1,""]},"ivy.stateful.initializers.GlorotUniform":{__init__:[1196,3,1,""]},"ivy.stateful.initializers.KaimingNormal":{__init__:[1193,3,1,""],create_variables:[1193,3,1,""]},"ivy.stateful.initializers.Ones":{__init__:[1198,3,1,""]},"ivy.stateful.initializers.Siren":{__init__:[1199,3,1,""]},"ivy.stateful.initializers.Uniform":{__init__:[1193,3,1,""],create_variables:[1193,3,1,""]},"ivy.stateful.initializers.Zeros":{__init__:[1201,3,1,""]},"ivy.stateful.layers":{Conv1D:[1203,1,1,""],Conv1DTranspose:[1204,1,1,""],Conv2D:[1205,1,1,""],Conv2DTranspose:[1206,1,1,""],Conv3D:[1207,1,1,""],Conv3DTranspose:[1208,1,1,""],DepthwiseConv2D:[1209,1,1,""],Dropout:[1210,1,1,""],LSTM:[1211,1,1,""],Linear:[1212,1,1,""],MultiHeadAttention:[1213,1,1,""]},"ivy.stateful.layers.Conv1D":{__init__:[1203,3,1,""]},"ivy.stateful.layers.Conv1DTranspose":{__init__:[1204,3,1,""]},"ivy.stateful.layers.Conv2D":{__init__:[1205,3,1,""]},"ivy.stateful.layers.Conv2DTranspose":{__init__:[1206,3,1,""]},"ivy.stateful.layers.Conv3D":{__init__:[1207,3,1,""]},"ivy.stateful.layers.Conv3DTranspose":{__init__:[1208,3,1,""]},"ivy.stateful.layers.DepthwiseConv2D":{__init__:[1209,3,1,""]},"ivy.stateful.layers.Dropout":{__init__:[1210,3,1,""]},"ivy.stateful.layers.LSTM":{__init__:[1211,3,1,""],get_initial_state:[1211,3,1,""]},"ivy.stateful.layers.Linear":{__init__:[1212,3,1,""]},"ivy.stateful.layers.MultiHeadAttention":{__init__:[1213,3,1,""]},"ivy.stateful.module":{Module:[1215,1,1,""]},"ivy.stateful.module.Module":{__init__:[1215,3,1,""],build:[1215,3,1,""],build_mode:[1215,3,1,""],built:[1215,3,1,""],check_submod_rets:[1215,3,1,""],compile_graph:[1215,3,1,""],compile_on_next_step:[1215,3,1,""],get_mod_key:[1215,3,1,""],mod_depth:[1215,3,1,""],mod_height:[1215,3,1,""],mod_with_top_mod_key_chain:[1215,3,1,""],save_weights:[1215,3,1,""],show_graph:[1215,3,1,""],show_mod_in_top_mod:[1215,3,1,""],show_structure:[1215,3,1,""],show_v_in_top_v:[1215,3,1,""],sub_mods:[1215,3,1,""],track_submod_call_order:[1215,3,1,""],track_submod_rets:[1215,3,1,""],v_with_top_v_key_chains:[1215,3,1,""]},"ivy.stateful.norms":{LayerNorm:[1217,1,1,""]},"ivy.stateful.norms.LayerNorm":{__init__:[1217,3,1,""]},"ivy.stateful.optimizers":{Adam:[1219,1,1,""],LAMB:[1220,1,1,""],LARS:[1221,1,1,""],Optimizer:[1222,1,1,""],SGD:[1223,1,1,""]},"ivy.stateful.optimizers.Adam":{__init__:[1219,3,1,""],set_state:[1219,3,1,""],state:[1219,3,1,""]},"ivy.stateful.optimizers.LAMB":{__init__:[1220,3,1,""],set_state:[1220,3,1,""],state:[1220,3,1,""]},"ivy.stateful.optimizers.LARS":{__init__:[1221,3,1,""],set_state:[1221,3,1,""],state:[1221,3,1,""]},"ivy.stateful.optimizers.Optimizer":{__init__:[1222,3,1,""],compile_graph:[1222,3,1,""],compile_on_next_step:[1222,3,1,""],set_state:[1222,3,1,""],show_graph:[1222,3,1,""],step:[1222,3,1,""]},"ivy.stateful.optimizers.SGD":{__init__:[1223,3,1,""],set_state:[1223,3,1,""],state:[1223,3,1,""]},"ivy.stateful.sequential":{Sequential:[1225,1,1,""]},"ivy.stateful.sequential.Sequential":{__init__:[1225,3,1,""]},"ivy.verbosity":{cprint:[1230,2,1,""]},ivy:{"debugger":[44,0,0,"-"],container:[40,0,0,"-"],framework_handler:[59,0,0,"-"],func_wrapper:[72,0,0,"-"],verbosity:[1229,0,0,"-"]}},objnames:{"0":["py","module","Python module"],"1":["py","class","Python class"],"2":["py","function","Python function"],"3":["py","method","Python method"],"4":["py","data","Python data"]},objtypes:{"0":"py:module","1":"py:class","2":"py:function","3":"py:method","4":"py:data"},terms:{"0001":[1218,1219,1220],"02886":1185,"100":[1073,1185,1227],"2021":1185,"2102":1185,"360":[1051,1059,1065,1067],"754":[781,782],"999":[1015,1017,1018,1022,1218,1219,1220],"abstract":[839,854,1185,1218,1222],"boolean":[40,41,839,874,886,889,903,912,913,915,922,923,958,960,961,965,966,967,968,1000,1010,1015,1021,1047,1048,1049,1050,1069,1070,1071,1073],"break":43,"case":[15,18,19,40,41,42,43,839,878,885,888,913,916,985,987,988,1038,1041,1045,1073,1117,1120,1124,1185,1202,1213,1214,1215,1218,1222,1231],"catch":[913,939],"class":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,59,369,781,783,839,841,842,843,844,845,846,848,849,851,852,853,854,866,867,889,913,917,972,980,1015,1029,1073,1117,1119,1126,1167,1169,1170,1179,1183,1185,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1231],"default":[15,18,19,40,41,42,43,795,796,837,838,839,848,849,856,857,861,862,863,864,865,868,869,870,871,878,881,882,883,888,889,896,897,898,899,913,915,916,918,919,920,929,930,931,932,935,936,937,946,949,950,951,956,958,959,969,971,972,975,977,980,983,984,987,988,991,993,995,997,998,1007,1009,1010,1013,1015,1018,1020,1021,1022,1023,1024,1026,1030,1038,1041,1045,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1129,1130,1132,1133,1136,1138,1139,1140,1141,1142,1143,1144,1146,1147,1151,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225],"final":[40,41,913,949,970,971,1073,1202,1213,1228],"float":[40,41,42,43,781,782,798,823,839,848,849,872,878,881,885,888,889,897,904,913,916,929,930,932,949,950,954,955,971,989,990,991,997,998,1015,1017,1018,1020,1022,1023,1024,1031,1033,1037,1051,1061,1069,1070,1071,1072,1073,1129,1132,1133,1146,1148,1154,1162,1165,1166,1167,1168,1169,1170,1171,1172,1202,1210,1213,1216,1217,1218,1219,1220,1221,1222,1223],"function":[15,40,41,43,371,372,375,782,783,786,796,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1185,1188,1189,1190,1218,1221,1222,1223,1227,1228,1231],"import":[43,1185,1228,1231],"int":[40,41,42,43,781,782,783,795,796,798,823,837,838,839,861,862,863,864,865,868,869,870,871,876,877,883,889,898,900,905,913,918,919,920,925,931,932,936,937,940,941,942,945,946,949,950,951,956,959,969,970,971,979,980,984,985,987,988,993,994,995,996,999,1001,1002,1007,1009,1012,1013,1015,1017,1018,1022,1031,1035,1036,1038,1041,1045,1069,1070,1071,1072,1073,1117,1126,1129,1130,1131,1133,1134,1136,1138,1139,1140,1141,1142,1143,1144,1146,1151,1154,1155,1156,1157,1158,1159,1160,1161,1165,1167,1169,1170,1171,1172,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1216,1217],"long":[1154,1164],"new":[40,41,43,889,893,913,914,925,940,941,942,945,949,950,951,952,980,985,987,988,989,990,997,998,999,1013,1015,1018,1020,1022,1023,1024,1031,1033,1035,1037,1051,1053,1055,1058,1060,1066,1068,1073,1117,1127,1128,1129,1130,1171,1172,1185,1191,1192,1202,1212,1216,1217,1218,1219,1220,1221,1222,1223,1228,1231],"public":[913,933],"return":[15,16,17,18,19,40,41,42,43,781,782,783,785,786,795,796,798,823,837,838,839,848,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,874,875,877,878,882,883,884,885,886,888,889,893,894,895,896,897,898,899,900,901,902,903,904,905,912,913,914,915,916,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,956,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,984,985,986,987,988,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1026,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1185,1191,1192,1202,1211,1212,1218,1222,1227,1228,1231],"short":[1154,1164,1185,1231],"static":[40,41,837,838],"super":1073,"true":[40,41,42,785,786,795,796,837,838,839,913,915,924,926,944,949,958,960,1010,1011,1015,1018,1020,1021,1022,1023,1024,1026,1038,1041,1045,1069,1070,1071,1072,1073,1117,1118,1125,1129,1130,1136,1138,1139,1140,1141,1142,1143,1144,1146,1147,1154,1162,1167,1168,1169,1170,1173,1174,1175,1179,1202,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223],"try":[40,41,913,1008,1073],"var":[40,41,1069,1070,1071,1231],"while":[40,41,42,1073],AND:[795,796,1047,1048],But:1231,For:[43,913,916,928,999,1015,1021,1029,1051,1052,1185,1191,1192,1228,1231],Its:[1051,1056],NOT:[1047,1049],One:[40,41,913,941,985,1129,1131,1231],Ones:[1185,1193],Such:[913,933],That:1228,The:[15,16,17,18,19,40,41,42,43,785,786,795,796,798,823,837,838,839,848,849,855,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,878,881,882,883,884,885,888,889,893,894,895,900,901,902,903,912,913,916,920,921,922,925,926,929,930,931,932,934,935,938,939,943,946,949,951,952,959,962,963,964,966,969,971,973,975,977,980,981,984,985,987,988,989,990,991,994,995,996,997,998,999,1002,1010,1013,1014,1015,1017,1018,1020,1022,1023,1024,1026,1029,1031,1033,1035,1037,1038,1041,1044,1051,1052,1054,1056,1059,1061,1062,1063,1064,1065,1067,1069,1070,1071,1072,1073,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1132,1133,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1185,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1213,1214,1215,1216,1217,1218,1220,1221,1222,1228,1231],There:[43,1185,1228],These:[43,1185],Used:[1117,1118,1125,1214,1215],Using:[1185,1186,1231],With:[40,41,1038,1041,1045,1136,1138,1139,1140,1141,1142,1143,1144,1185,1227,1231],__array__:[913,921],__call__:[1202,1213,1214,1215],__del__:1073,__dict__:[1073,1228],__enter__:1073,__exit__:1073,__getitem__:1073,__getstate__:1073,__init__:[40,41,42,43,59,60,79,194,369,370,479,595,839,840,847,848,849,850,851,852,853,854,889,890,891,892,1015,1016,1073,1077,1084,1179,1180,1183,1184,1185,1188,1189,1190,1193,1194,1195,1196,1197,1198,1199,1200,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1231],__iter__:1073,__len__:1073,__next__:1073,__pow__:43,__repr__:1073,_assign_vari:1227,_axi:1073,_base:[1117,1118,1125],_compute_node_da_ratio:1073,_compute_node_strs_da:1073,_concat_unify_arrai:1073,_counter:1073,_cur_framework:[43,1073],_da_direct:1073,_da_directions_flip:1073,_da_step_tim:1073,_da_tim:1073,_da_tune_count:1073,_data:1073,_delta_da_dim_s:1073,_delta_sf:1073,_dict:1073,_dim_siz:1073,_first_da_tune_step:1073,_first_ns_tune_step:1073,_fn:1073,_forward:[1185,1227],_get_kalman_param:1231,_get_prior:1231,_get_some_model:1231,_handle_flat_arrays_in_out:43,_index:[1117,1118,1125],_input_queu:1073,_length:1073,_max_depth:1073,_max_node_dim_step_ratio:1073,_max_node_dim_step_s:1073,_max_split_factor_step_s:1073,_mean_unify_arrai:1073,_min_bas:[913,998,1171,1172,1216,1217],_min_denomin:[913,997],_min_node_dim_s:1073,_min_sf_tune_step:1073,_min_unit_node_tune_step:1073,_model:1231,_native_wrapp:43,_node_mapp:1073,_node_percent_mem:1073,_node_str:1073,_node_str_da_ratio:1073,_node_strs_da:1073,_node_strs_kei:1073,_node_strs_n:1073,_node_util:1073,_ns_step_tim:1073,_ns_time:1073,_ns_tune_count:1073,_num_nod:1073,_num_work:1073,_observed_config:1073,_output_queu:1073,_paramet:1227,_percent_mem_inc_per_sf:1073,_percent_mem_inc_per_unit_da_dim:1073,_percent_util_inc_per_unit_da_dim:1073,_ret_fn:1073,_safety_factor:1073,_save_dir:1073,_shift_da_split:1073,_shift_n:1073,_slice:1073,_step:[1218,1222],_sum_unify_arrai:1073,_timeout:1073,_tune:1073,_tune_da:1073,_tune_n:1073,_tune_step:1073,_unit_da_tune_count:1073,_unroll_step:1231,_with_node_mappig:1073,_worker:1073,_worker_class:1073,_worker_fn:1073,abc:[1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,839,848,854,1073,1214,1215,1218,1222],abil:1185,abl:[40,41],about:[781,782,783],abov:[43,1129,1131],above_height:[40,41],abs:[265,512,629,913,1073],absolut:[40,41,913,914,1038,1043],abstractmethod:1073,accept:[15,43,1185],access:[40,41,1228],accord:[40,41,781,782,913,932,951,987,988,1007,1012],accordingli:[795,796],accur:[59,369,839,851,852,853,854,889,1015,1179,1183,1193,1195,1196,1198,1199,1201],aco:[725,1051],acosh:[725,1051],across:[40,41,839,848,849,858,859,861,862,863,864,865,871,881,882,913,918,919,922,923,1073,1117,1121],activ:[1147,1148,1149,1150,1151,1152,1153,1185,1189,1190],actual:1228,adam:[1015,1017,1018,1022,1185,1218,1220,1227],adam_step:1015,adam_upd:1015,adapt:[1015,1023,1218,1221],add:[40,41,43,1073,1167,1168,1169,1170,1171,1172,1185,1216,1217,1228],add_fn_to_dict:1179,add_param:1179,added:[43,913,997,998,1224,1225],adding:[913,925],addit:[40,41,43,913,940,941,942,1171,1172,1202,1212],adher:43,adjac:[913,916],adopt:[913,933],affect:[913,916],affin:[1216,1217],after:[913,969,1015,1018,1019,1020,1022,1023,1024,1031,1032,1171,1172,1218,1219,1220,1221,1222,1223,1231],after_1:[913,932,1012],after_n:[913,932,1012],again:43,against:[40,41,1038,1041,1045,1136,1138,1139,1140,1141,1142,1143,1144],agnost:[43,1185,1227,1228],aim:1231,algebra:1038,algorithm:[1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209,1231],align:[40,41,43,913,925],aliv:[839,873,875,879,913,953,978,982],all:[15,16,17,18,19,40,41,43,93,208,384,493,609,795,837,838,839,848,873,879,913,914,915,922,923,933,946,953,959,982,996,1069,1070,1071,1072,1073,1117,1118,1119,1125,1126,1129,1130,1133,1136,1138,1139,1140,1141,1142,1143,1144,1154,1164,1185,1228,1231],all_depth:[40,41],all_equ:913,all_fals:[40,41],all_key_chain:[40,41],all_nested_indic:1117,all_tru:[40,41],alloc:[839,1073],allow:[913,970,971,972,1214,1215],allow_dupl:[913,972],alon:[839,878,888,1073,1185],along:[40,41,43,795,796,839,862,863,864,865,868,869,870,871,883,913,920,931,936,937,946,951,969,970,971,984,995,999,1002,1009,1038,1041,1045,1069,1070,1071,1072,1073,1129,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144],alongsid:[1227,1228],alpha:[1146,1148],alphabet:[40,41,42],alphabetical_kei:[40,41,42],alreadi:[40,41,43,839,1073],also:[40,41,43,913,916,1015,1018,1069,1070,1071,1072,1117,1118,1119,1125,1126,1154,1163,1202,1212,1227],altern:1227,alwai:[40,41,43,1015,1021,1026],among:[40,41],amount:[839,885,1073,1185],angl:[1051,1052,1057],ani:[15,16,17,18,19,40,41,43,837,838,839,841,844,848,849,851,860,861,864,865,870,913,915,916,921,939,940,941,942,943,944,958,966,972,997,998,1015,1019,1073,1117,1118,1121,1125,1126,1127,1128,1129,1133,1185,1191,1192,1214,1215,1227,1228,1231],anoth:[40,41,889,895,1185],another_backend:43,anyth:[43,1231],anywai:43,apart:43,api:[1185,1186],appear:[913,945],append:[40,41,1073],appli:[15,18,19,40,41,913,940,941,942,1015,1022,1023,1038,1044,1047,1048,1049,1050,1069,1070,1071,1117,1121,1124,1126,1146,1147,1148,1149,1150,1151,1152,1153,1154,1163,1165,1166,1171,1172,1185,1188,1189,1190,1216,1217],applic:[1117,1121,1126,1154,1165,1166,1185,1231],approxim:[43,798,823,1146,1147],arang:[112,265,398,512,629,913,970,971],arbitrari:[40,41,839,868,869,871,1073],arc:[1051,1057],arcco:[1051,1052],arctan:[1051,1056],area:1185,arg:[15,16,17,40,41,43,59,63,839,848,861,865,871,883,913,940,941,942,988,1073,1173,1174,1175,1179,1191,1192,1214,1215],arg_nam:913,arg_stateful_idx:[1173,1174,1175,1179,1214,1215],argmax:[112,398,512,629,913],argmin:[112,398,512,629,913],args_clon:1073,args_dist:1073,args_to_ivi:[15,1185],args_to_n:[15,1185],args_uni:1073,argsort:[629,913],argument:[15,16,17,18,19,40,41,42,43,59,63,837,838,839,848,849,861,865,871,913,916,917,926,939,972,988,1051,1052,1073,1117,1121,1191,1192,1214,1215],aris:[1185,1231],arithmet:[43,1136,1139,1142,1144],arithmetic_oper:[0,1,2,43],around:[40,41,42,43],arrai:[1,2,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,112,265,398,512,629,781,782,783,785,786,795,796,823,839,857,858,859,862,863,864,865,868,869,870,871,873,875,879,883,884,889,893,899,904,905,913,914,915,916,918,919,920,922,923,924,925,927,928,929,930,931,932,934,935,936,937,940,941,942,943,945,946,947,948,949,950,951,952,953,956,958,959,960,961,962,963,964,966,967,968,969,970,971,973,974,975,976,978,979,980,981,982,984,985,986,987,988,993,995,996,999,1000,1001,1002,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1015,1017,1018,1021,1022,1026,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1073,1117,1119,1126,1129,1130,1131,1132,1133,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1185,1186,1202,1210,1211,1213,1218,1222,1227,1228],arrang:[913,940],array_api:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,43,369,371,372,374,375,781,782,783,785,786,795,796],array_builtin:[43,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836],array_equ:[265,629,913],array_lik:[913,921],array_oper:[0,3,4],arrays_as_list:[40,41],arrays_equ:[40,41,913],arraywitharrayapi:0,arraywitharrayapiarithmeticoper:[0,1],arraywitharrayapiarrayoper:[0,3],arraywitharrayapiattribut:[0,5],arraywitharrayapibitwiseoper:[0,7],arraywitharrayapicomparisonoper:[0,9],arraywitharrayapiinplaceoper:[0,11],arraywitharrayapireflectedoper:[0,13],arraywithdevic:[20,1185],arraywithgener:[22,1185],arraywithgradi:[24,1185],arraywithimag:[26,1185],arraywithlinalg:[28,1185],arraywithlog:[30,1185],arraywithmath:[32,1185],arraywithmeta:[34,1185],arraywithrandom:[36,1185],arraywithreduct:[38,1185],arriv:[40,41,42],articl:1185,arxiv:1185,as_arrai:[40,41,913,956,993],as_bool:[40,41],as_on:[40,41],as_random_uniform:[40,41],as_str:[839,857,889,896,897,898,899],as_vari:[40,41],as_zero:[40,41],asarrai:913,asin:[725,1051],asinh:[725,1051],aspect:[1031,1036],assert:[40,41,913,924,1073],assert_contains_sub_contain:[40,41],assert_contains_sub_structur:[40,41],assert_ident:[40,41],assert_identical_structur:[40,41],assert_is_bool:[40,41],assert_supports_inplac:913,associ:[43,1038,1046],assum:[1228,1231],astyp:889,asynchron:[40,41,42],at_dev:[40,42,839,852,853],at_kei:[40,41],at_key_chain:[40,41],at_nod:1073,atan2:[725,1051],atan:[725,1051],atanh:[725,1051],attent:[1154,1165,1166,1202,1213],attribut:[0,6,40,41,781,782,783,913,981,1014],audienc:[1185,1228],author:1185,avail:[40,41,839,874,876,877,886,913,941,1073],averag:[1015,1017,1018,1022,1069,1070,1071,1136,1139],average_across_step:[1069,1070,1071],avoid:[839,1073,1228],axes:[40,41,43,795,796,839,883,913,918,919,932,945,946,1001,1007,1012,1038,1041,1045,1073,1136,1138,1139,1140,1141,1142,1143,1144],axes_length:[40,41,913,940,941,942],axi:[40,41,795,796,839,841,844,851,862,863,864,865,868,869,870,871,883,913,918,919,920,931,932,935,936,937,945,946,951,969,970,971,984,995,996,999,1001,1002,1009,1012,1038,1045,1073,1129,1135,1136,1138,1139,1140,1141,1142,1143,1144,1146,1151,1167,1169,1170],axis0:[40,41,913,1001],axis1:[40,41,913,1001],back:[1214,1215,1218,1222],backend:[15,17,19,40,41,369,371,372,374,375,839,874,877,886,889,895,903,912,913,961,965,1015,1018,1020,1022,1023,1024,1029,1073,1185,1186,1191,1192,1218,1219,1220,1221,1222,1223,1227,1228,1231],background:[1185,1228],backprop:1231,backward:[795,796,1227],band:[913,949],base:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,59,369,798,823,839,841,842,843,844,845,846,848,849,851,852,853,854,889,913,954,971,989,998,1015,1073,1136,1137,1179,1183,1185,1188,1189,1190,1193,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1231],batch:[40,41,839,881,882,913,946,949,959,1031,1035,1038,1044,1069,1070,1071,1072,1073,1154,1163,1171,1172,1216,1217],batch_shap:[913,946,959,979,1031,1032,1033,1034,1035,1036,1037,1038,1046,1129,1130,1154,1164,1165,1166,1202,1211],batch_siz:[1073,1129,1130,1154,1155,1156,1157,1158,1159,1160,1161],bayesian:1231,becaus:[43,913,916],becom:[913,928,1051,1057,1231],been:[913,940,941,942,1129,1130],befor:[40,41,43,839,883,1069,1070,1071,1073,1117,1126,1136,1138,1139,1140,1141,1142,1143,1144,1154,1165,1166,1231],before_1:[913,932,1012],before_n:[913,932,1012],begin:[1117,1118,1125,1228],behaviour:[43,1231],behind:[1015,1018,1020,1022,1023,1024,1185],being:[40,41,43,913,916,983,991,1073],belong:[40,41],below:[43,1185,1228,1231],below_depth:[40,41],benefit:1185,bernoul:[1154,1162,1202,1210],best:[913,972,1185],beta1:[1015,1017,1018,1022,1218,1219,1220],beta2:[1015,1017,1018,1022,1218,1219,1220],beta:[1171,1172],between:[40,41,42,781,782,913,916,1117,1121,1129,1131,1167,1169,1170,1218,1220],bia:[1154,1163,1164,1202,1203,1204,1205,1206,1207,1208,1209,1212],bias_initi:[1202,1203,1204,1205,1206,1207,1208,1209,1212],bilinear:[1031,1032],bilinear_resampl:[151,324,440,559,708,1031],bilinearli:[1031,1032],binari:[1167,1168],binary_cross_entropi:1167,bit:[369,781,782,783,889,900,1031,1033,1037,1185],bitwise_oper:[0,7,8],block:[1185,1228],bool:[15,18,19,40,41,42,43,785,786,795,796,837,838,839,857,870,874,878,883,886,888,889,899,913,915,922,923,936,939,943,944,949,956,958,966,972,993,995,1009,1010,1011,1015,1018,1019,1020,1021,1022,1023,1024,1026,1038,1041,1045,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1129,1130,1136,1138,1139,1140,1141,1142,1143,1144,1146,1147,1154,1162,1191,1192,1202,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223],both:[43,913,935],bottom:1185,boundari:[40,41,1129,1133],branch:[837,838],brittl:43,broadcast:[40,41,43,795,796,798,823,913,925,943,974,975,976,984,1038,1041,1045,1051,1057,1061,1136,1138,1139,1140,1141,1142,1143,1144],broadcast_to:[265,629,913],build:[1073,1185,1202,1213,1214,1215],build_mod:[1202,1213,1214,1215],builder:1185,built:[839,913,916,1073,1202,1213,1214,1215],builtin:43,builtin_ab:[220,798],builtin_add:[220,798],builtin_and:[220,798],builtin_bool:[220,798],builtin_contain:[220,798],builtin_deepcopi:[220,798],builtin_dir:[220,798],builtin_eq:[220,798],builtin_float:[220,798],builtin_floordiv:[220,798],builtin_g:[220,798],builtin_getattr:[220,798],builtin_getattribut:[220,798],builtin_getitem:[220,798],builtin_gt:[220,798],builtin_int:[220,798],builtin_invert:[220,798],builtin_l:[220,798],builtin_lt:[220,798],builtin_mul:[220,798],builtin_n:[220,798],builtin_neg:[220,798],builtin_or:[220,798],builtin_po:[220,798],builtin_pow:[43,220,798],builtin_radd:[220,798],builtin_rand:[220,798],builtin_rfloordiv:[220,798],builtin_rmul:[220,798],builtin_ror:[220,798],builtin_rpow:[220,798],builtin_rsub:[220,798],builtin_rtruediv:[220,798],builtin_rxor:[220,798],builtin_setitem:[220,798],builtin_some_op:43,builtin_sub:[220,798],builtin_truediv:[220,798],builtin_xor:[220,798],bypass:1228,cach:[839,855,913,926],cache_fn:913,calcul:[40,41,42,43,798,823,1051,1061],call:[43,839,883,913,983,991,1008,1015,1019,1073,1117,1118,1121,1125,1202,1213,1214,1215,1218,1222,1228,1231],callabl:[40,41,837,838,839,848,849,883,913,926,939,941,972,1008,1069,1070,1071,1072,1073,1117,1121,1122,1123,1125,1126,1154,1165],can:[43,839,881,882,883,913,985,1031,1033,1073,1185,1227,1228,1231],cancel_join_thread:1073,captur:1185,cast:[40,41,112,265,398,512,629,889,913,931,1031,1033,1037],catch_except:[913,939],categori:43,ceil:[265,629,913,916],cell:[1154,1164,1202,1211],certain:[40,41,913,916,970,971],chain:[40,41,1069,1070,1071,1224,1225],chang:[839,913,985,1073,1117,1119,1126,1185,1227],channel:[913,949,1031,1033,1034,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212],check:[15,16,17,18,19,40,41,839,878,888,889,894,903,912,913,924,944,958,966,1000,1010,1015,1021,1073,1117,1118,1125,1185,1228],check_nest:[1117,1125],check_shap:[40,41],check_submod_ret:[1214,1215],check_typ:[40,41],choic:[1185,1228],choleski:[712,1038],choos:[913,1011,1051,1057,1185],choose_random_framework:59,chosen:[40,41,913,916,1011],chunk:[839,881,882,883,1073],chunk_siz:[839,883,1073],circl:[1051,1052,1054],clark:1185,clear:[839,855,1073],clear_framework_stack:59,clear_mem_on_dev:[621,839],click:1185,clip:[40,41,265,629,913,929,930,974,976,1185],clip_matrix_norm:913,clip_max:[40,41],clip_min:[40,41],clip_vector_norm:[40,41,913],clipped_delta:1073,clone:[40,41,839,858,859,860,861,1073],clone_arrai:1073,clone_it:1073,clone_nest:1073,clonedit:1073,cloneditem:1073,clonednest:1073,close:[43,1031,1036,1051,1054,1073,1231],closest:[889,894],closest_valid_dtyp:889,code:[40,41,42,43,1185,1186,1227,1228],codebas:[839,881,882,1073,1185,1228,1231],collect:[15,40,41,798,837,839,889,913,1015,1031,1038,1047,1051,1073,1117,1129,1136,1146,1154,1167,1171,1188,1202,1216,1218],color:[40,41,42,1229,1230],column:[913,959],combin:[40,41,42,1031,1036,1185,1231],combined_batch_s:1073,come:1228,command:1185,commit:1231,common:[40,41,1051,1057],common_key_chain:[40,41],commun:[1185,1228],compar:[40,41,913,915,922,923],comparison_oper:[0,9,10],compat:[43,795,796,798,823,913,943,985,1051,1061,1185,1231],compil:[265,398,629,1174,1175,1179,1185,1214,1215,1218,1219,1220,1221,1222,1223],compile_graph:[1173,1185,1214,1215,1218,1222],compile_on_next_step:[1214,1215,1218,1219,1220,1221,1222,1223],complet:[40,41,1073],complex:[1228,1231],compon:[913,935],composit:43,comput:[40,41,839,883,913,929,930,936,937,943,973,1015,1017,1018,1019,1020,1022,1023,1024,1026,1028,1031,1034,1038,1039,1040,1041,1042,1043,1045,1047,1048,1049,1050,1051,1052,1054,1056,1057,1059,1062,1063,1064,1065,1067,1117,1121,1136,1137,1138,1139,1140,1141,1142,1143,1144,1154,1155,1156,1157,1158,1159,1160,1161,1163,1165,1167,1168,1169,1170],concat:[40,41,839,868,869,870,871,883,913,949,1073],concaten:[40,41,112,265,398,512,629,913,949,1073,1185],concatten:[40,41,839,868,869,870,871,883,1073],condit:[837,838,913,1011,1117,1125],conditon:[1117,1125],config:[40,41,1073],config_list:1073,configur:[40,41],conjunct:1228,connect:[1179,1202,1212,1213],consid:[40,41,1038,1045,1227,1231],consist:[40,41,839,871,1073,1136,1137,1214,1215,1228],constant:[839,848,849,913,932,1073,1117,1121,1167,1168,1169,1170,1171,1172,1193,1194,1198,1201,1214,1215,1216,1217,1228],constant_kwarg:1073,constant_pad:[265,512,629,913],constitu:[40,41],construct:[913,1002,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227],constructor:[40,41,42,913,917,1224,1225],consum:[839,1073],cont_feat_dim:[1154,1165],contaienr:[40,41],contain:[15,18,19,42,43,785,786,795,796,798,823,839,858,862,883,889,893,913,914,918,919,920,928,929,930,933,943,958,974,976,986,997,998,1015,1017,1018,1020,1022,1023,1024,1051,1061,1069,1070,1071,1072,1073,1129,1130,1136,1138,1139,1140,1142,1144,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225],container0:[40,41],container_combine_method:[40,41,42],container_rightmost:[40,41],container_typ:[629,913],contains_sub_contain:[40,41],contains_sub_structur:[40,41],content:[40,41],context:[913,977,1154,1165,1202,1213],context_dim:[1202,1213],contextmanag:[59,60],continu:[43,1073,1228],contract:[40,41,1136,1137],contribut:[1185,1186],contributor:1185,control:1185,conv1d:[181,357,466,769,1154,1185,1202],conv1d_transpos:[181,357,466,769,1154],conv1dtranspos:[1185,1202],conv2d:[181,357,466,586,769,1154,1185,1202],conv2d_transpos:[181,357,466,769,1154],conv2dtranspos:[1185,1202],conv3d:[181,357,466,586,769,1154,1185,1202],conv3d_transpos:[181,357,466,769,1154],conv3dtranspos:[1185,1202],convent:[40,41,1136,1137],conver:[839,855,866,878,885,888,1073],convers:[16,17,18,19,40,41,1073,1185],convert:[15,16,17,18,19,40,41,43,839,866,867,889,895,901,902,913,994,1005,1006,1031,1033,1037,1038,1046,1073,1117,1119,1126,1185,1192],convert_dtyp:889,convolut:[1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209],cool:43,cooler:43,coordin:[913,975,1051,1052,1054,1057],copi:[40,41,913,934,1073,1117,1119],copy_arrai:[629,913],copy_nest:1117,core:[798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1185],correct:[43,1185,1228],correctli:[40,41,1038,1041,1045,1051,1057,1136,1138,1139,1140,1141,1142,1143,1144],correspond:[40,41,43,798,823,913,931,1129,1130],cos:[725,913,949,1051,1052,1067,1228],cosh:[725,1051],cosin:[1051,1052,1053,1059,1060],cost:[1015,1017,1018,1020,1022,1023,1024,1069,1070,1071,1072],cost_fn:[1069,1072],could:1231,count:[40,41,795,796,1073,1136,1141,1143,1183],cprint:1229,cpu:[40,41,43,839,876,878,884,885,888,913,916,921,951,952,959,970,971,979,980,981,987,988,1013,1014,1073,1129,1130,1131,1132,1133,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225,1227,1228],creat:[40,41,839,848,849,913,916,921,950,951,952,959,970,971,979,980,981,987,988,1004,1013,1014,1015,1028,1073,1129,1130,1131,1132,1133,1185,1191,1192,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227,1231],create_if_abs:[40,41],create_vari:1193,creation:[40,41,42,43],crop:[1031,1035],crop_siz:[1031,1035],cross:[265,629,913,1167,1168,1169,1170],cross_entropi:1167,cuda:[40,41,839,848,867,884,913,916,921,951,952,959,970,971,979,980,981,987,988,1013,1014,1073,1129,1130,1131,1132,1133,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225],cumprod:[112,265,398,629,913],cumsum:[629,913],cumul:[913,936,937],current:[40,41,42,43,839,848,872,873,875,879,889,895,903,912,913,938,953,961,965,978,982,1073,1117,1118,1125,1185,1231],current_framework:59,current_framework_str:[629,913,1073],custom:43,cutoff_at_depth:[40,41],cutoff_at_height:[40,41],cv2_label:1179,d_in:[1154,1155,1156,1157,1158,1159,1160],d_out:[1154,1155,1156,1157,1158,1159,1160],da_can_termin:1073,da_dim_s:[839,1073],da_direct:1073,da_tune_step:[839,1073],dai:1231,daniel:1185,data:[40,41,42,43,782,783,785,786,795,796,798,823,839,841,842,843,844,845,846,851,852,853,867,889,893,894,895,899,900,901,902,903,904,905,912,913,916,921,943,950,959,966,980,981,985,996,1000,1013,1014,1015,1021,1029,1051,1061,1073,1154,1163,1185],data_format:[1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209],data_type_funct:[369,371,372,781,782,783],dataset:[40,41],datatyp:[40,41,889,894,904,905],dcdw:[1015,1017,1018,1020,1022,1023],debug_info:1179,debug_mod:44,debug_mode_in:[44,47],debugg:[45,46,47,48,49],decai:[1015,1022,1023,1218,1220,1221],decay_lambda:[1015,1022,1023,1218,1220,1221],decid:[40,41,1231],decompos:[1038,1039],decomposit:[1038,1039,1044],decor:43,decrement:[913,962],dedic:[1015,1029,1191,1192],deep:[40,41,1185],deep_copi:[40,41],deeper:[839,861,865,871,1073,1117,1126,1185],deepli:[1117,1119],def:[43,60,79,194,370,479,595,840,847,850,890,891,892,1016,1073,1077,1084,1180,1184,1185,1194,1197,1200,1227,1228,1231],default_dev:43,default_devic:839,default_dtyp:[43,889],default_float_dtyp:889,default_int_dtyp:889,default_key_color:[40,41,42],default_nod:1073,default_v:[913,939],defaultdevic:[839,840],defaultdtyp:[889,890],defaultfloatdtyp:[889,891],defaultintdtyp:[889,892],defer:43,defin:[43,913,935,979,981,1014,1129,1131],degre:[1051,1059,1065,1067],del:1073,delta:[1015,1017,1073,1179],delta_dim_s:1073,delta_percent_mem:1073,delta_sf:1073,delta_util:1073,demo:1185,denomin:[913,948,955,990,997,998,1171,1172,1216,1217],dens:[1202,1212],depend:[43,798,823,913,1011,1038,1044,1185],depth:[40,41,839,861,865,871,913,957,979,1073,1117,1126,1179,1183,1214,1215],depth_cutoff:[40,41],depthwis:[1154,1161,1202,1209],depthwise_conv2d:[181,357,466,586,769,1154],depthwiseconv2d:[1185,1202],deriv:[1015,1017,1018,1020,1022,1023,1024,1117,1119,1126,1185,1214,1218,1222,1224],descend:[1038,1044],descent:[1015,1020,1218,1223],describ:[40,41,1136,1137],design:[1185,1186],desir:[40,41,839,884,889,893,913,916,921,959,960,980,981,1013,1014,1031,1036,1073,1136,1138,1139,1140,1142,1144],desired_aspect_ratio:[1031,1036],desired_percent_increas:1073,det:[328,444,563,712],detail:1231,detect:[40,41,1117,1118,1125],detect_key_diff:[40,41],detect_shape_diff:[40,41],detect_value_diff:[40,41],determin:[40,41,43,785,786,795,796,798,823,839,874,876,877,886,889,893,894,900,903,904,905,912,913,915,916,921,922,923,958,961,965,966,1000,1010,1015,1021,1038,1043,1051,1061,1069,1070,1071,1072,1073,1154,1165],dev:[40,41,42,43,105,259,505,621,839,842,843,845,846,848,849,852,853,855,856,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,875,878,879,880,881,882,883,884,885,888,913,916,921,951,952,959,970,971,979,980,981,987,988,1013,1014,1015,1030,1129,1130,1131,1132,1133,1191,1192,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225],dev_clon:[40,41,839],dev_clone_arrai:839,dev_clone_it:839,dev_clone_nest:839,dev_dist:[40,41,839],dev_dist_arrai:839,dev_dist_it:839,dev_dist_nest:839,dev_from_str:[43,105,259,505,621,839],dev_mapp:839,dev_str:[40,41],dev_to_str:[105,259,505,621,839],dev_unifi:839,dev_unify_arrai:839,dev_unify_it:839,dev_unify_nest:839,dev_util:839,devclonedit:839,devcloneditem:839,devclonednest:839,devdistit:839,devdistitem:839,devdistnest:839,develop:[1185,1228,1231],deviat:[40,41,1129,1132,1136,1142,1171,1172,1216,1217],devic:[21,40,41,43,841,842,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,913,916,921,950,951,952,959,970,971,979,980,981,987,988,1013,1014,1015,1030,1129,1130,1131,1132,1133,1185,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225],devmanag:[839,847],devmapp:[839,849],devmappermultiproc:839,diag:[1038,1044],diagon:[913,959],dict:[15,16,17,18,19,40,41,42,839,841,844,848,849,851,861,862,863,864,865,913,940,941,942,972,1069,1070,1071,1073,1117,1119,1120,1121,1124,1126,1191,1192],dict_in:[40,41,42],dictat:43,dictionari:[40,41,42],diff:[40,41],diff_kei:[40,41],differ:[40,41,42,43,781,782,839,858,859,862,863,1073,1154,1163,1185,1228,1231],differenti:[1185,1228],dilat:[1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209],dim:[40,41,43,913,979,1031,1032,1036,1038,1044,1073,1202,1213],dim_siz:[40,41,839,1073],dimens:[40,41,42,795,796,839,870,913,925,931,935,940,941,942,945,949,956,969,979,984,985,995,996,999,1007,1009,1031,1035,1038,1041,1044,1045,1069,1070,1071,1072,1073,1129,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1151,1154,1155,1156,1157,1158,1159,1160,1161,1164,1167,1169,1170,1202,1203,1204,1205,1206,1207,1208,1209,1212,1213],dimension:[40,41,795,796,913,995,996,1038,1044],direct:1073,directli:[43,1117,1126,1228,1231],directori:[913,992,1003],discret:[1167,1169],disk:[40,41,1031,1033],distanc:[913,916],distribut:[40,41,839,858,862,863,864,865,1073,1129,1130,1131,1132,1133,1154,1162,1202,1210,1214,1215],distribute_nest:1073,distributedarrai:[40,41],distrubt:[1167,1169],dive:[1185,1228],divid:[40,41,913,995,997,1051],dividend:[1051,1061],divis:[913,948,955,990,997,998,1015,1017,1018,1022,1051,1061,1218,1219,1220],divisor:[1015,1017,1018,1022,1051,1061,1218,1219,1220],doc:1185,docstr:43,doe:[40,41,43,913,916,995,1227],doesn:1185,doing:43,domain:[1051,1052],don:1185,door:1231,dot:[1038,1040,1154,1165,1166,1202,1213],down:1227,downscal:[913,929,930],drag:[1185,1231],draw:[1129,1130,1132,1133],drawn:[1129,1130,1131,1132,1133],drop:[1185,1231],dropout:[1154,1185,1202,1213],dropout_r:[1202,1213],ds_tune_step:839,dtype:[40,41,43,112,265,369,371,372,398,512,629,781,782,783,893,894,895,896,897,898,900,901,902,903,904,905,906,907,908,909,910,911,912,913,916,921,950,959,979,980,981,1013,1014],dtype_bit:[112,265,398,512,629,889],dtype_from_str:[43,112,265,398,512,629,889],dtype_in:[889,895,900,901,902,903,904,905,912],dtype_to_str:[112,265,398,512,629,889],duplic:[40,41],dure:[40,41,43,837,838,913,1008,1015,1017,1018,1022,1069,1070,1071,1072,1214,1215,1218,1219,1220,1222],dynam:[837,838],each:[40,41,42,43,785,786,798,823,839,848,849,858,859,860,861,862,863,864,870,882,883,913,914,915,920,932,943,984,995,999,1002,1012,1015,1018,1020,1022,1023,1024,1031,1034,1038,1044,1051,1054,1061,1063,1064,1073,1117,1121,1129,1130,1136,1137,1154,1155,1156,1157,1158,1159,1160,1161,1162,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1213,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1228],eager:1228,easi:1231,easili:1185,econom:1231,ecosystem:1185,edg:[913,928,932,1012],effect:[1015,1024],effective_grad:[1015,1024],effici:1231,einop:[40,41,913,940,941,942],einops_rearrang:[40,41,913],einops_reduc:[40,41,913],einops_repeat:[40,41,913],einstein:[40,41,1136,1137],einsum:[40,41,167,345,454,576,749,1136],either:[40,41,913,939,972,975,977,1069,1070,1071,1072,1073,1202,1213,1214,1215,1228],eleg:1073,element:[40,41,43,785,786,795,796,798,823,839,860,864,870,889,893,913,914,916,918,919,920,922,923,927,928,929,930,936,937,943,946,947,948,959,960,974,976,984,986,995,1006,1011,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1073,1136,1137,1139,1141,1143,1146,1147,1148,1149,1150,1151,1152,1153,1154,1162,1202,1210],elementwis:[40,41],elementwise_affin:[1216,1217],elementwise_funct:[374,375,785,786],elemtn:[1129,1130],elif:1073,els:[913,924,939,944,1073],elsewher:[913,1011],emphas:1185,empti:[40,41,1073],enabl:[40,41,42,1185],encapsul:[781,783],encod:[913,949,1031,1033],end:[913,916,1185,1228],ensur:43,entir:[40,41,795,796,839,883,1073,1185,1202,1211],entri:[40,41,913,946,970,971,995,996],entropi:[1167,1168,1169,1170],enumer:1073,environ:1185,eps:[369,781,782],epsilon:[1015,1017,1018,1022,1167,1168,1169,1170,1171,1172,1216,1217,1218,1219,1220],equal:[40,41,512,629,785,786,913,915,922,923,932,995,1012,1051,1059,1065,1067,1129,1133],equality_matrix:[913,915],equat:[40,41,1136,1137],equival:[913,916,1051,1067],erf:[450,725,1051],error:[40,41,839,913,996,1051,1062,1073,1146,1147,1214,1215,1218,1222],essenti:43,etc:[40,41,43,839,884,913,916,921,951,952,959,970,971,979,980,981,987,988,1013,1014,1073,1129,1130,1131,1132,1133,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225,1231],evalu:[40,41,795,796,913,975,1117,1118,1125],even:1231,evenli:[40,41,913,916,970,971,995],everi:[913,915,1231],exact:[40,41],exampl:[43,837,838,913,928,999,1185,1227,1228,1231],example_input:[837,838],exc_tb:1073,exc_typ:1073,exc_val:1073,exce:[913,976],except:[40,41,44,47,795,796,913,916,924,931,939,1008,1073],excess_s:1073,excit:[1185,1228],exclud:[59,61,913,916,1129,1133],exclus:[40,41,913,936,966,1015,1021,1129,1131],execut:[43,913,1008,1228],execute_with_gradi:[148,319,435,554,702,1015,1185,1227],exist:[40,41,913,939,1073,1185,1218,1222,1231],exp:[725,1051],expand:[40,41,913,945,949],expand_dim:[40,41,265,629,913,1073],expect:[913,917],explain:1228,explicitli:[1202,1211,1213,1214,1215,1228],expon:[43,798,823,913,998],exponenti:[43,798,823,1051,1062,1063],expos:[913,921,933],express:[913,975],exsit:[40,41],extend:43,extra:[40,41,42,1015,1019],eye:[1038,1040],fabian:1185,fabio:1185,factor:[839,848,881,882,883,1015,1017,1018,1022,1023,1038,1044,1073,1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209,1218,1219,1220,1221],falck:1185,fall:[1214,1215,1218,1222],fallback_to_non_compil:[1214,1215,1218,1222],fals:[15,18,19,40,41,42,59,66,67,68,69,70,785,786,795,796,839,857,870,878,883,888,889,896,897,898,899,913,915,936,939,944,949,956,966,972,993,995,1009,1011,1015,1018,1019,1020,1021,1022,1023,1024,1038,1041,1045,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1136,1138,1139,1140,1141,1142,1143,1144,1173,1174,1175,1179,1183,1191,1192,1214,1215,1218,1219,1220,1221,1222,1223],fan_in:1193,fan_mod:1193,fan_out:1193,far:[1117,1118,1125,1227],faster:[837,838],favourit:[1185,1227],feasibl:1231,feat_dim:[1154,1165,1166],fed:[839,883,1073],feed:[839,883,1073],field:1231,file:[40,41,43,913,992,1003,1214,1215],filepath:[40,41],fill:[40,41,913,950,980,1013,1129,1131],fill_valu:[913,950],filter:[1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209,1231],filter_s:[1202,1203,1204],filter_shap:[1202,1205,1206,1207,1208,1209],find:[40,41,1231],find_sub_contain:[40,41],find_sub_structur:[40,41],finfo:[78,79,193,194,369,370,478,479,594,595,781],finish:[1185,1231],finit:[785,786],first:[40,41,837,838,839,870,913,922,931,935,943,970,971,999,1001,1015,1019,1038,1044,1069,1070,1071,1072,1073,1117,1118,1125,1129,1135,1136,1141,1143,1202,1213,1214,1215,1218,1222,1228,1231],firstlayersiren:[1185,1193],firstli:[1228,1231],fist:[839,883,1073],fit:[40,41,913,984,1031,1036],fkt:1231,flag:[40,41,1015,1021],flat:[40,41,43,913,984,987],flat_list:[40,41],flatten:[40,41,913,949,984,1038,1045,1136,1138,1139,1140,1142,1144],flatten_key_chain:[40,41,1214,1215],flexibl:[1185,1228],flip:[40,41,112,265,398,512,629,913],float32:[43,889,893,901,902,913,916,921,959,980,981,1013,1014],float_dtyp:[889,897,907],float_img_to_uint8_img:1031,floor:[265,629,913,948,1073],floormod:[265,629,913],fluid:1231,fname:[1173,1175,1179,1214,1215],folder:[43,1185],follow:[40,41,43,781,783,839,883,913,962,963,964,997,998,1015,1018,1020,1022,1023,1024,1073,1117,1121,1126,1154,1165,1166,1185,1202,1212,1218,1222],followng:[781,782],fomaml_step:1069,forget:[1015,1017,1018,1022,1218,1219,1220],fork:[913,977],forkserv:[913,977,1073],form:[15,16,17,18,19,40,41,913,921,1015,1018,1020,1022,1023,1024,1117,1119,1126,1154],format:[40,41,43,839,857,889,893,895,899,913,916,921,959,980,981,1013,1014,1073,1136,1137,1185,1227,1228],format_fn:[40,41],format_key_chain:[40,41],forward:[1214,1215,1218,1222,1227],found:[40,41,42],fourier:[913,949],fourier_encod:913,framework:[2,4,6,8,10,12,14,15,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,94,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,154,156,157,161,162,163,164,165,166,168,169,170,171,172,173,174,177,179,180,182,183,184,185,186,187,188,194,195,196,199,209,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,325,326,327,329,330,331,332,333,334,336,337,338,341,342,343,344,346,347,348,349,350,351,352,353,356,358,359,360,361,362,363,364,370,371,372,375,385,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,441,442,443,445,446,447,448,451,453,455,456,457,458,459,460,461,464,465,467,468,469,470,471,472,473,479,480,481,484,494,506,507,508,509,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,555,556,557,558,560,561,562,564,565,566,567,568,572,573,574,575,577,578,579,580,581,582,583,587,588,589,595,596,597,600,610,622,623,624,625,626,627,628,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,703,704,705,706,707,709,710,711,713,714,715,716,717,718,719,720,722,723,724,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,743,744,745,746,747,748,750,751,752,753,754,755,756,759,760,761,762,763,764,765,767,768,770,771,772,773,774,775,776,782,783,786,796,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1073,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1147,1148,1149,1150,1151,1152,1153,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1172,1174,1175,1177,1178,1180,1184,1185,1189,1190,1191,1192,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1228,1230,1231],framework_handl:[59,61,62,63,64,65,66,67,68,69,70,71],framework_str:1073,framewrk:[913,977],freeli:43,frequenc:[913,949],from:[40,41,42,43,795,796,839,848,849,883,889,895,913,939,946,951,952,959,985,996,1004,1011,1015,1018,1022,1031,1035,1069,1070,1071,1072,1073,1117,1119,1126,1129,1130,1131,1132,1133,1136,1141,1143,1154,1162,1165,1185,1191,1192,1202,1210,1213,1218,1222,1227,1228],from_cal:[1214,1215],from_disk_as_hdf5:[40,41],from_disk_as_json:[40,41],from_disk_as_pickl:[40,41],from_flat_list:[40,41],from_numpi:[40,41],full:[112,265,398,512,629,781,782,913,1185],full_matric:[1038,1044],fulli:[43,1185,1202,1212,1213,1227],func:[40,41,837,838,839,883,913,926,1015,1019,1073],further:1231,furthermor:1231,futur:1231,gain:1193,gamma:[1171,1172],gather:[40,41,112,265,398,512,629,913,952],gather_nd:[40,41,112,265,398,512,629,913],gauss:[1051,1062],gaussian:[1146,1147],geglu:[1185,1188],gelu:[355,463,758,1146,1185,1188],gener:[23,40,41,43,837,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1021,1129,1131,1133,1134,1185,1218,1222],geometr:[913,949],get:[40,41,781,782,783,839,848,849,857,872,873,878,882,885,888,889,899,900,913,917,953,954,955,983,1073,1183,1185,1202,1211,1231],get_all_arrays_in_memori:913,get_all_arrays_on_dev:839,get_framework:59,get_initial_st:[1202,1211],get_min_bas:913,get_min_denomin:913,get_mod_kei:[1214,1215],get_num_dim:[629,913],get_param:1179,get_param_recurs:1179,get_referrers_recurs:913,getfullargspec:1073,gist:1185,give:[913,920,985,1228],given:[40,41,43,839,872,878,881,882,883,885,888,889,893,913,916,920,921,928,936,937,946,952,970,971,980,981,984,987,988,995,1002,1007,1009,1013,1014,1015,1017,1018,1020,1022,1023,1024,1038,1040,1046,1051,1052,1073,1117,1122,1123,1129,1132,1133,1135,1136,1139,1141,1142,1143,1144,1154,1155,1156,1157,1158,1159,1160,1161,1191,1192,1231],global:[40,41,42,839,848,849,856,881,882,883,889,896,897,898,913,938,954,955,983,989,990,991,997,998,1015,1030,1073,1171,1172,1177,1178,1185,1216,1217],global_framework:[59,63],global_norm:[40,41],glorotuniform:[1185,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212],got:1185,gpu0:43,gpu2:43,gpu:[839,874,877,1073],gpu_is_avail:[839,1073],grad:[1185,1218,1222,1227],gradient:[25,40,41,839,883,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1034,1069,1070,1071,1072,1185,1218,1219,1220,1221,1222,1223,1227,1231],gradient_descent_upd:[1015,1069,1070,1071,1072],gradient_imag:[151,324,440,559,708,1031],gradienttrack:[1015,1016],graph:[1015,1018,1020,1022,1023,1024,1173,1174,1175,1180,1185,1214,1215],graph_compil:[1173,1174,1175,1176,1177,1178,1179,1183],greater:[40,41,913,916,947,996,1129,1133],green:[40,41,42,1229,1230],grid:[913,975],group:[1031,1036],guid:[1185,1186,1231],gym:1185,h5_file_s:[40,41],h5_obj_or_filepath:[40,41],h5py:[40,41],had:1231,half:[913,916,1073,1129,1133],hand:1185,handl:[40,41,42,43,837,838,839,855,857,866,867,878,885,888,1015,1018,1020,1022,1023,1024,1073,1218,1219,1220,1221,1222,1223],has:[40,41,43,913,999,1038,1043,1051,1056],has_kei:[40,41],has_key_chain:[40,41],has_nan:[40,41,913],hasattr:1073,have:[40,41,43,781,782,785,786,795,796,798,823,913,931,935,940,941,942,943,950,999,1015,1021,1029,1038,1044,1051,1061,1073,1185,1227,1228],hdf5:[40,41,1214,1215],head:[1154,1165,1202,1213],head_dim:[1202,1213],height:[1031,1036],height_cutoff:[40,41],help:[59,369,839,851,852,853,854,889,1015,1179,1183,1185,1193,1195,1196,1198,1199,1201],helper:1185,here:[43,1185],hidden:[1154,1164,1202,1211],hierarch:[913,933],hierarchi:[40,41],high:[40,41,1129,1131,1133],higher:[1015,1018,1020,1022,1023,1024,1038,1044],highest:[1129,1131],highest_util:1073,highest_util_nod:1073,highli:1185,highlight:1231,highlight_subgraph:[1173,1175,1179],hint:43,hkt:1231,hold:[889,893,913,916,921,987,988],host:1185,hot:[913,979],how:[1185,1202,1213,1214,1215,1228,1231],howev:[43,1228],http:1231,hyperbol:[1051,1053,1055,1058,1060,1066,1068,1146,1153],hypothet:1231,icon:1185,idea:1185,ident:[40,41,43,112,265,398,512,629,913],identical_array_shap:[40,41],identical_config:[40,41],identical_structur:[40,41],ieee:[781,782],if_exist:[40,41],ignor:[40,41,1218,1222],ignore_key_error:[40,41],ignore_miss:[1218,1222],ignore_non:[40,41],iinfo:[78,193,369,478,594,781],imag:[27,913,969,1032,1033,1034,1035,1036,1037,1154,1155,1156,1157,1158,1160,1161,1185,1231],image_dim:[1031,1035],imkkhk:1231,immedi:[1185,1228,1231],implement:[43,798,823,1185,1228,1231],in_featur:[1154,1163],includ:[40,41,43,795,796,913,916,958,997,998,1010,1117,1118,1129,1133,1202,1212,1213,1216,1217,1227],include_deriv:[1117,1119,1126],include_empti:[40,41],include_gener:[1173,1174,1175,1179,1214,1215],include_inf:[40,41,913,958,1010],include_nest:[1117,1118],include_self:[40,41],inclus:[1129,1131],incom:[1154,1163],increas:[839,861,865,871,913,932,945,1012,1073,1117,1126],increasingli:1231,increment:[913,963,1073],increment_param_count:1179,inde:1185,indent:[40,41,42],independ:[1129,1130],index:[40,41,913,918,919,951,952,975,996,999,1117,1120,1122,1123,1124,1127],index_nest:1117,indic:[40,41,913,918,919,920,951,952,960,979,987,988,1117,1118,1120,1122,1123,1124,1125,1127,1128,1129,1130,1146,1151,1154,1155,1156,1157,1158,1159,1160,1161,1171,1172,1202,1203,1204,1205,1206,1207,1208,1209,1214,1215],indices_wher:[112,265,398,629,913],inevit:1231,inf:[40,41,913,958,967,1010,1051,1056],infer:[837,838,913,946,956,959,985,993,1031,1035,1228,1231],infin:[785,786,913,967],inform:[781,782,783,1015,1026],init_c:[1154,1164],init_h:[1154,1164],init_on_first_step:[1218,1222],initi:[40,41,42,59,369,839,851,852,853,854,889,1015,1073,1154,1164,1179,1183,1185,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1218,1222],initialz:[1214,1215],inner:[1069,1070,1071,1072],inner_batch_fn:[1069,1070,1071],inner_batch_shap:[1154,1163],inner_cost_fn:[1069,1070,1071],inner_grad_step:[1069,1070,1071,1072],inner_learning_r:[1069,1070,1071,1072],inner_optimization_step:[1069,1070,1071,1072],inner_v:[1069,1070,1071],inp:1073,inplac:[40,41,913,924,961,965,1000,1015,1018,1020,1022,1023,1024,1191,1192,1218,1219,1220,1221,1222,1223],inplace_arrays_support:913,inplace_decr:[112,265,398,512,629,913],inplace_incr:[112,265,398,512,629,913],inplace_oper:[0,11,12],inplace_upd:[40,41,112,265,398,512,629,913,1191,1192],inplace_variables_support:913,input:[15,18,19,40,41,42,43,785,786,795,796,837,838,839,848,849,856,857,858,861,862,865,871,883,884,889,893,894,896,897,898,899,900,904,905,913,914,915,918,919,920,922,923,924,925,927,928,929,930,931,932,934,936,937,939,940,941,942,943,944,945,946,947,948,949,956,958,959,960,962,963,964,966,967,968,969,973,974,975,976,984,986,993,994,996,999,1000,1001,1002,1004,1005,1006,1007,1009,1010,1012,1015,1019,1021,1026,1030,1031,1032,1033,1034,1035,1037,1038,1041,1044,1045,1047,1048,1049,1050,1051,1053,1055,1056,1058,1059,1060,1061,1065,1066,1067,1068,1069,1070,1071,1072,1073,1129,1130,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1171,1172,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1228],input_ax:[839,883,1073],input_channel:[1202,1203,1204,1205,1206,1207,1208,1211,1212],input_queu:1073,inputs_split:1073,insert:[913,945],insid:43,inspect:1073,inspir:1231,instal:1185,instanc:[15,16,17,18,19,40,41,43,798,823,839,848,1073,1191,1192,1224,1225],instead:[40,41,1136,1138,1139,1140,1141,1142,1143,1144,1231],int32:43,int64:[889,893,913,916,921,959,980,981,1013,1014],int_dtyp:[889,898,908],integ:[40,41,781,783,795,796,889,905,913,916,927,947,986,995,1038,1045,1129,1131,1134],integr:1185,intend:43,inter:1185,interchang:[40,41,913,1001],interest:1185,interfac:[913,921,1228],intermedi:[40,41],intern:[40,41,839,1015,1029,1073,1117,1118,1125,1126,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1224,1225],interpol:[913,969],intersect:[1051,1052],interv:[40,41,795,796,913,916,928,970,971,1051,1054,1129,1133],introduc:1231,inv:[712,1038,1231],invalid:[795,796],invalid_dtyp:889,invers:[1038,1040,1042,1051,1052,1053,1054,1055,1056,1058,1231],invert:[1038,1040,1042],invest:1231,invoc:[837,838],irrespect:1185,is_al:1073,is_arrai:[112,265,398,512,629,913,1073],is_float_dtyp:889,is_int_dtyp:889,is_mean:1073,is_sum:1073,is_var:[1179,1183],is_vari:[148,319,435,554,702,1015],isfinit:[83,198,374,483,599,785],isinf:[265,512,629,913],isinst:1073,isnan:[265,512,629,913],isnumer:1073,item:[15,19,40,41,798,810,811,839,848,849,851,858,860,862,864,870,889,896,913,933,957,997,998,1073,1117,1121,1122,1123,1126,1127,1128,1185,1214,1215,1227],iter:[15,16,17,18,19,40,41,42,837,838,839,842,843,845,846,848,849,852,853,860,862,863,864,865,870,883,913,915,925,931,932,946,959,975,980,984,985,988,993,995,999,1002,1007,1012,1013,1073,1117,1118,1119,1121,1125,1126],iterbal:[839,860,864,870,1073],its:[839,883,913,920,959,985,1001,1007,1073,1185],itself:[43,1117,1126],ivi:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,369,371,372,374,375,781,782,783,785,786,795,796,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1073,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1183,1185,1186,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1229,1230],ivy_backend:[40,41],ivy_bay:1231,ivyfcmodel:1227,ivyh:[40,41,42],ivymodul:[178,766],jame:1185,jax:[1015,1021,1185,1231],jax_concat:1185,jnp:1185,join:[40,41,913,931,999,1073],journal:1185,json:[40,41],json_filepath:[40,41],jsonabl:[40,41],just:[43,1185,1202,1211,1231],kaimingnorm:[1193,1197],kalman:1231,kalman_filt:1231,kalman_filter_step:1231,kalman_filter_upd:1231,keep:[40,41,839,884,913,1009,1073,1185,1231],keep_inner_v:[1069,1070,1071],keep_non:[40,41],keep_orig:[40,41],keep_outer_v:[1069,1070,1071],keepdim:[40,41,795,796,913,1009,1038,1041,1045,1136,1138,1139,1140,1141,1142,1143,1144],kei:[15,16,17,40,41,42,798,803,839,851,913,933,1069,1070,1071,1073,1117,1120,1124,1154,1165,1166,1185,1191,1192,1202,1213,1218,1222],kept:[40,41,42,1069,1070,1071],kera:1231,kernel:[1154,1164],key1:[40,41],key2:[40,41],key3:[40,41],key_chain:[40,41],key_chains_contain:[40,41],key_length_limit:[40,41,42],key_slic:[40,41],keychain:[40,41],keychain_map:[40,41],keyword:[15,16,17,40,41,42,839,848,849,861,865,871,913,917,940,941,942,972,1073,1117,1121,1214,1215],keyword_color_dict:[40,41,42],kind:[781,782,783,1231],kwarg:[15,16,17,40,41,42,59,63,839,848,861,865,871,913,972,1073,1173,1174,1175,1179,1191,1192,1214,1215],kwarg_stateful_idx:[1173,1174,1175,1179,1214,1215],kwargs_clon:1073,kwargs_dist:1073,kwargs_uni:1073,label:[1167,1168,1169,1170],lamb:[1015,1022,1185,1218],lamb_upd:1015,lambda:[1073,1218,1221,1223,1227],lar:[1015,1022,1023,1185,1218],larger:[781,782,913,928],largest:[40,41,781,782,783,913,918,947],lars_upd:1015,last:[40,41,795,796,913,916,935,969,995,999,1038,1041,1044,1136,1141,1143,1146,1151,1154,1164,1202,1212],later:[40,41,913,926],latest:[1202,1211],layer:[1015,1018,1020,1022,1024,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1171,1172,1185,1193,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225,1231],layer_norm:1171,layernorm:[1185,1216],layerwis:[1015,1023,1218,1221],lead:[40,41,42],leading_shap:[40,41],leaf:[15,18,19,40,41,1117,1118,1125],leaf_keys_onli:[40,41],leafwis:[40,41],leaki:[1146,1147,1148],leaky_relu:[758,1146],learn:[1015,1018,1020,1022,1023,1024,1069,1070,1071,1072,1129,1135,1185,1218,1219,1220,1221,1222,1223,1228,1231],learnabl:[1171,1172,1216,1217],leav:[15,18,19,40,41,1117,1118,1119,1125,1126],left:[40,41,1038,1041,1045,1136,1138,1139,1140,1141,1142,1143,1144,1185],leftmost:[40,41],len:1073,length:[40,41,42,913,916,985,996,1007],lenton2021ivi:1185,lenton:1185,less:[40,41,43,913,927,1073,1129,1133],less_util_node_str:1073,let:[1228,1231],level:1185,librari:[1185,1227,1231],lightweight:1185,like:[43,1015,1021,1129,1133,1185,1227,1228,1231],limit:[40,41,42,781,782,783,913,928,929,930],linalg:[29,1039,1040,1041,1042,1043,1044,1045,1046,1185],linear0:[1185,1227],linear1:1185,linear2:1227,linear:[913,949,969,1038,1146,1147,1148,1149,1154,1162,1185,1202,1203,1204,1205,1206,1207,1208,1209,1227],linear_resampl:[112,265,398,512,629,913],linearli:[913,949],link:1185,linspac:[112,265,398,512,629,913,916],list:[15,18,19,40,41,43,795,796,839,848,849,858,859,861,862,863,865,868,869,883,913,916,921,923,975,994,995,1004,1009,1069,1070,1071,1073,1117,1118,1119,1121,1125,1126,1154,1155,1156,1157,1158,1159,1160,1161,1185,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209],list_join:[40,41,42],list_stack:[40,41],littl:1228,load:[40,41],loaded_kwarg:1073,loader:1185,local_set:[913,957],locat:[43,913,967,968,1129,1130],log:[725,913,971,1038,1043,1051,1073,1167,1168,1169,1170,1185],log_all_op:1179,log_global_inference_abs_tim:[1176,1185],log_global_inference_rel_tim:[1176,1185],logarithm:[1038,1043,1051,1064],logic:[31,795,796,1048,1049,1050,1185],logical_and:[335,721,1047],logical_not:[335,721,1047],logical_or:[335,721,1047],logit:[1167,1170],logspac:[112,265,398,512,629,913],look:[43,1228,1231],loop:[1069,1070,1071,1072],loss:[1168,1169,1170,1185,1227],loss_fn:[1185,1227],lot:1228,low:[40,41,1129,1131,1133],lower:[40,41,913,974,1129,1133],lower_depth:[1214,1215],lowest:[15,18,19,40,41,1117,1126,1129,1131],lstm:[1154,1164,1185,1202],lstm_updat:[43,1154],machin:[781,782,783,1129,1135,1185,1228,1231],mai:[913,916,939,943,1185,1228,1231],main:[913,959,1185],mainli:1185,make:[43,839,1073,1185,1228],maml:[1069,1070,1071],maml_step:1069,manag:[839,1073],mani:[40,41,43,913,995,1185],manner:[15,18,19,40,41,43,1117,1126],manual:[1117,1118,1125,1231],map:[40,41,42,839,848,913,967,968,1073,1117,1122,1123,1126,1202,1213,1227],map_cont:[40,41],map_nest_at_index:1117,map_nest_at_indic:1117,map_sequ:[40,41],mapper:[839,848,849,1073],mask:[1154,1165,1166],match:[40,41,913,972],match_kwarg:913,math:[33,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1073,1185],mathbb:[1038,1046],mathbf:[1038,1046],matmul:[43,265,512,629,913,1231],matplotlib:1228,matric:[1154,1163],matrix:[40,41,913,915,929,973,1038,1039,1040,1041,1042,1043,1046,1154,1163,1202,1212],matrix_norm:[40,41,155,328,444,563,712,1038],matter:1185,max:[40,41,369,781,782,783,913,929,930,941,974,987,988,1073,1136,1138,1218,1220],max_batch_s:[40,41],max_chunk_s:[839,883,1073],max_depth:[40,41,839,843,846,853,861,865,871,913,957,1073,1117,1126],max_dev_dim_step_ratio:839,max_freq:[913,949],max_length:[40,41],max_node_dim_step_ratio:1073,max_norm:[40,41,913,929,930],max_split_factor_step_s:[839,1073],max_trust_ratio:[1015,1022,1218,1220],maxim:[1185,1228,1231],maximis:1185,maximum:[40,41,42,629,839,861,865,871,883,913,918,928,929,930,949,1015,1022,1073,1117,1126,1136,1138],mayb:[15,18,19],mdi:1073,mean:[40,41,839,868,869,870,871,883,913,941,1069,1070,1071,1072,1073,1117,1121,1129,1132,1136,1139,1142,1144,1193,1227,1231],measur:[1154,1165,1202,1213],mech:1185,mechan:[1185,1231],medic:1231,memori:[839,855,878,883,885,888,1073,1154,1164,1185],meshgrid:[265,629,913],messag:[1229,1230],meta:[35,1070,1071,1072,1185],method:[40,41,42,43,913,921,933,975,987,988,1015,1022,1023,1073,1117,1118,1125,1126,1185,1202,1213,1214,1215,1228],might:[913,939,1231],min:[40,41,369,781,782,783,913,941,976,987,988,997,1073,1136,1140],min_bas:[913,998],min_denomin:[913,997],min_dev_dim_s:839,min_node_dim_s:1073,min_sf_tune_step:[839,1073],min_unit_dev_tune_step:839,min_unit_node_tune_step:1073,mind:1185,mini:[1171,1172,1216,1217],minimum:[40,41,629,839,889,893,913,916,919,921,928,954,955,989,990,997,998,1073,1136,1140],miss:[1218,1222],ml_framework:[913,916],mod:[913,948],mod_depth:[1214,1215],mod_height:[1214,1215],mod_with_top_mod_key_chain:[1214,1215],mode:[40,41,837,838,839,868,869,870,871,883,1038,1044,1073,1228],model:[1185,1227],modul:[40,41,42,59,913,977,1073,1185,1186,1188,1189,1190,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1216,1217,1224,1225,1231],moment:[1015,1017,1018,1022,1218,1219,1220],more:[43,913,999,1073,1185,1228,1231],more_util_node_str:1073,most:[40,41,43,1185,1231],move:[40,41,43,839,884,1073],much:[1185,1231],multi:[913,977,1154,1165,1202,1213],multi_head_attent:1154,multi_index_nest:1117,multi_map:[40,41],multi_nod:1073,multidev:[839,850,851,852,871],multidevcontain:[40,41],multidevic:[839,848],multidevit:[839,842,845,848,849,853],multidevitem:[839,841,844],multidevnest:[839,843,846],multiheadattent:[1185,1202],multinod:[1073,1077],multinodecontain:1073,multinodeit:1073,multinodeitem:1073,multinodenest:1073,multinomi:[160,340,452,571,742,1129],multipl:[40,41,795,796,913,972,995,1038,1040,1136,1138,1139,1140,1141,1142,1144,1171,1172,1202,1212,1228],multipli:[40,41,913,936,1136,1141],multiprocess:[40,41,42,629,839,848,913,1073],must:[40,41,42,43,785,786,795,796,798,823,839,868,869,870,871,883,913,916,931,933,935,943,974,976,988,999,1051,1057,1061,1073,1129,1134,1218,1222],mutabl:[1117,1119,1126],mutlidevic:[839,848],mutlinod:1073,mw_tm1:[1015,1018,1022],mx_concat:1185,mxnet:[43,1185,1231],my_func:43,mymodel:1185,name:[837,838,1173,1174,1175,1179,1227],namespac:[43,1228],nan:[40,41,785,786,913,958,968,1010],nativ:[15,17,18,19,40,41,43,839,855,857,866,867,878,885,888,889,894,901,902,1073,1185,1186,1191,1192],native_modul:[1191,1192],native_module_class:[1191,1192],nativearrai:[15,18,19,43,781,782,783,785,786,795,796,798,823,839,857,883,884,889,893,899,904,905,913,914,915,916,918,919,920,921,922,923,925,927,928,929,930,931,932,934,935,936,937,940,941,942,943,945,946,947,948,949,951,952,956,958,959,960,967,968,969,970,971,973,974,975,976,979,980,981,984,985,986,987,988,993,995,996,999,1001,1002,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1073,1117,1119,1126],natur:[1038,1043,1051,1064,1231],ncdhw:[1154,1159,1160,1202,1207,1208],nchw:[1154,1157,1158,1161,1202,1205,1206,1209],ncw:[1154,1155,1156,1202,1203,1204],ndarrai:[43,369,371,372,374,375,913,1005],ndhwc:[1154,1159,1160,1202,1207,1208],nearest:[913,986],need:[43,913,929,930,1154,1156,1158,1160,1185,1202,1204,1206,1208,1231],neg:[40,41,785,786,795,796,1136,1141,1143,1146,1148],negative_slop:1193,neither:1073,nest:[15,16,17,18,19,40,41,42,839,861,865,871,913,921,1004,1069,1070,1071,1073,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1214,1215,1218,1219,1220,1221,1222,1223],nested_indices_wher:1117,nested_map:[1073,1117],network:[1154,1163,1185,1186,1188,1202,1214,1215,1231],neural:[1154,1185,1188,1202,1227],new_node_percent_mem:1073,new_node_util:1073,new_node_utils_kei:1073,new_std:[1171,1172,1216,1217],newli:[837,838,913,925,926],newlin:[40,41,42],newshap:[913,925,985],next:[781,782,1073,1214,1215,1218,1219,1220,1221,1222,1223],nhwc:[1154,1157,1158,1161,1202,1205,1206,1209],node:[40,41,1117,1118,1125],node_clon:1073,node_dist:1073,node_dist_arrai:1073,node_dist_it:1073,node_in:1073,node_mapp:1073,node_str:1073,node_to_str:1073,node_util:1073,nodedistit:1073,nodedistitem:1073,nodedistnest:1073,nodemanag:[1073,1084],nodemapp:1073,nodemappermultiproc:1073,noinspect:[43,840,890,891,892,1016,1073,1180],non:[40,41,795,796,837,838,889,903,1214,1215,1218,1222,1228],none:[40,41,42,43,59,61,64,781,782,783,795,796,837,838,839,848,849,855,856,881,882,883,884,889,896,897,898,913,916,921,938,939,944,946,950,951,952,957,959,961,962,963,964,965,970,971,977,979,980,981,984,987,988,989,990,995,996,997,998,1007,1008,1013,1014,1015,1018,1020,1022,1023,1024,1030,1031,1035,1038,1041,1045,1069,1070,1071,1072,1073,1117,1118,1121,1125,1126,1129,1130,1131,1132,1133,1136,1138,1139,1140,1141,1142,1143,1144,1154,1156,1158,1160,1163,1164,1165,1166,1171,1172,1173,1174,1175,1179,1183,1191,1192,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225],norm:[40,41,913,929,930,1038,1041,1045,1172,1185,1217,1218,1220],normal:[1129,1132,1171,1172,1216,1217],normalized_idx:[1171,1172],normalized_shap:[1216,1217],notat:[40,41,1136,1137],note:43,noth:[40,41,1228],notimplementederror:1073,now:[40,41,839,884,913,914,1073,1185,1202,1213,1214,1215,1227,1228,1231],np_concat:1185,np_finfo:369,ns_tune_step:1073,num:[913,970,971],num_arrai:[40,41],num_arrays_in_memori:913,num_arrays_on_dev:839,num_band:[913,949],num_channel:[1202,1209],num_chunk:1073,num_chunks_floor:1073,num_class:[1129,1130],num_cpu_cor:839,num_gpu:[105,839,1073],num_head:[1154,1165,1202,1213],num_kei:[1154,1165,1166],num_lay:[1202,1211],num_or_size_split:[40,41,913,995],num_output:1073,num_queri:[1154,1165,1166],num_sampl:[913,969,1031,1032,1129,1130],num_task:[1069,1070,1071,1072],number:[40,41,42,781,782,783,795,796,837,838,839,875,876,877,889,900,904,905,913,916,928,932,945,949,956,959,968,969,970,971,974,978,984,995,1002,1006,1010,1012,1038,1044,1069,1070,1071,1072,1073,1129,1130,1134,1136,1138,1139,1140,1142,1144,1154,1165,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1228,1231],numer:[43,785,786,798,823,913,954,955,989,990,997,998,1051,1061,1193],numhead:[1154,1165],numpi:[40,41,369,371,372,374,375,913,1005,1038,1044,1136,1137,1185,1227,1228,1231],nwc:[1154,1155,1156,1202,1203,1204],obj:[40,41],object:[40,41,42,59,369,781,782,783,839,889,893,913,916,921,1015,1117,1120,1122,1123,1124,1127,1128,1129,1135,1179,1183,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1214,1215],object_in:[913,921],observ:1073,occupi:[781,782,783,913,987,988],off:[913,916],offer:1185,offset:[1171,1172],often:1228,old:[40,41],on_init:[1202,1213,1214,1215],onc:[839,883,1073,1129,1130,1185],one:[40,41,43,839,868,869,870,871,883,889,895,913,959,972,979,987,988,996,999,1038,1041,1045,1073,1136,1137,1138,1139,1140,1141,1142,1143,1144,1185,1228,1231],one_hot:[112,398,512,629,913],onearrai:[913,945],ones:[40,41,112,265,398,512,629,913,959,979,981,1185],ones_lik:[112,265,398,512,629,913],ongo:43,onli:[40,41,43,839,1073,1117,1118,1119,1125,1218,1219,1220,1221,1222,1223,1227,1228],onlin:1185,onto:[839,868,869,884,1073,1117,1121,1126],oom:[839,1073],open:[913,916,1129,1133,1185,1231],opencv:1228,oper:[40,41,913,924,940,941,942,970,971,1000,1015,1018,1020,1022,1023,1024,1047,1048,1049,1050,1154,1155,1156,1157,1158,1159,1160,1161,1163,1185,1186],operand:[40,41,1136,1137],oppos:[913,949],optim:[839,1015,1018,1020,1022,1023,1024,1069,1070,1071,1072,1073,1185,1219,1220,1221,1223,1227,1231],optimizer_upd:1015,option:[15,18,19,40,41,42,43,795,796,837,838,839,848,849,857,861,862,863,864,865,868,869,870,871,878,881,882,883,884,888,889,894,899,903,912,913,915,916,918,919,920,921,929,930,931,936,938,939,946,949,950,951,952,956,958,959,966,969,970,971,972,975,977,979,980,981,984,987,988,991,993,995,996,997,998,999,1007,1009,1010,1013,1014,1015,1018,1020,1021,1022,1023,1024,1026,1031,1035,1038,1041,1045,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1129,1130,1136,1138,1139,1140,1141,1142,1143,1144,1146,1147,1151,1154,1162,1163,1165,1166,1167,1168,1169,1170,1171,1172,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1228],ord:[913,946,1038,1044],order:[40,41,42,43,913,920,1015,1018,1020,1022,1023,1024,1038,1041,1045,1069,1070,1071,1224,1225],ordered_node_util_kei:1073,org:1231,organ:43,origin:[40,41,42,913,981,985,1014,1038,1041,1045],other:[40,41,43,798,800,801,806,808,809,813,815,816,817,818,819,821,823,824,825,826,827,828,830,831,832,834,835,836,837,838,913,915,916,959,1015,1019,1129,1133,1185,1227,1228,1231],other_i:[43,798,823],otherwis:[15,16,17,18,19,40,41,785,786,795,796,839,856,889,896,897,898,913,924,1007,1008,1011,1015,1021,1026,1030,1069,1070,1071,1073,1136,1138,1139,1140,1142,1144],our:[1185,1231],out:[913,916,1051,1056,1154,1162,1164,1185,1202,1210],out_feat_dim:[1154,1165],out_featur:[1154,1162,1163],out_i:[785,786],outdat:1231,outer:[1069,1070,1071,1072],outer_batch_fn:[1069,1070,1071],outer_batch_shap:[1154,1163],outer_cost_fn:[1069,1070,1071],outer_v:[1069,1070,1071],outlin:1228,output:[40,41,43,839,848,849,883,913,916,926,950,959,984,1002,1015,1019,1051,1057,1073,1129,1131,1132,1133,1154,1156,1158,1160,1162,1164,1165,1166,1185,1202,1203,1204,1205,1206,1207,1208,1210,1211,1212,1213],output_ax:[839,883,1073],output_axi:1073,output_channel:[1202,1203,1204,1205,1206,1207,1208,1211,1212],output_connected_onli:[1173,1175,1179,1214,1215],output_queu:1073,output_shap:[1154,1156,1158,1160,1202,1204,1206,1208],outsid:[913,928],over:[40,41,795,796,913,946,1038,1041,1045,1129,1133,1136,1138,1139,1140,1142,1144,1171,1172,1216,1217],overal:1228,overflow:[913,916],overhead:1228,overrid:[913,979,981,1014],overriden:[1218,1222],overwrit:[40,41,839,883,1073],overwrite_at_key_chain:[40,41],own:[1185,1228,1231],packag:[43,1228],pad:[913,932,949,1012,1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209],pad_width:[913,932,1012],page:1185,pair:[1154,1166],parallel:[839,848,849,1073],parallelis:[839,848,849,1073],param:[40,41,42,43,839,883,913,914,951,952,979,980,1013,1073,1184,1185,1214,1215,1227],paramet:[15,16,17,18,19,40,41,42,781,782,783,785,786,795,796,798,823,837,838,839,848,849,855,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,878,881,882,883,884,885,888,889,893,894,895,899,900,901,902,903,904,905,912,913,915,916,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,934,935,936,937,939,940,941,942,943,944,945,946,947,948,949,950,951,952,956,958,959,960,962,963,964,966,967,968,969,970,971,972,973,974,975,976,977,980,981,984,985,986,987,988,989,990,991,993,994,995,996,997,998,999,1000,1001,1002,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1026,1028,1029,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227],parameter:[1129,1132,1133],params_all_empti:1179,pardo:1185,pars:[913,933],part:[1015,1018,1020,1022,1023,1024,1051,1056,1185,1214,1215,1228],partial:[40,41,1214,1215],particl:1231,particular:1231,pass:[40,41,42,839,848,883,889,894,913,926,1015,1029,1069,1070,1071,1073,1191,1192,1214,1215,1218,1222,1224,1225],pattern:[40,41,913,940,941,942],per:[839,1073,1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209],percent_used_mem_on_dev:839,percent_used_mem_on_nod:1073,percentag:[839,878,1073],perf_count:1073,perform:[40,41,43,795,796,839,913,918,919,920,936,940,941,942,962,963,964,969,970,971,1015,1018,1020,1022,1023,1024,1031,1032,1069,1070,1071,1072,1073,1117,1122,1123,1136,1138,1139,1140,1141,1142,1143,1144,1146,1151,1154,1162,1164],permissable_step:1073,permit:43,permut:[913,1001,1007],perpendicular:[913,935],person:1185,physci:1231,pickl:[40,41,1073],pickle_filepath:[40,41],pid:1179,pinv:[328,712,1038],pip:1185,pipelin:1227,pkk:1231,pkkm1:1231,pkm1km1:1231,place:[40,41,43,839,884,913,945,950,962,963,964,1073,1218,1219,1220,1221,1222,1223],placehold:[1117,1126],point:[781,782,889,904,913,916,1051,1061],popul:[40,41,1129,1130],popular:1231,population_s:[1129,1130],portabl:[1185,1186],posit:[15,16,17,781,782,785,786,839,861,865,871,913,914,916,945,949,1073,1129,1134,1191,1192],possibi:[40,41],possibl:[913,972,1004,1031,1036,1231],post:[1171,1172],post_shap:[40,41],power:[43,798,823,829,913,954,989,998,1193],practic:1185,pre:[839,1073,1185],pre_shap:[40,41],precis:[781,782],pred:[1167,1168,1169,1170],predict:[1167,1168,1169,1170,1231],preprint:1185,present:[40,41],preserv:[40,41,42,913,946,1015,1026],preserve_typ:[40,41,1015,1026],press:1185,prevent:[43,1015,1017,1018,1022,1073,1218,1219,1220],previou:[1015,1018,1022],previous:[913,926],prime:1185,print:[40,41,42,839,879,913,982,1185,1227],print_all_arrays_in_memori:913,print_all_arrays_on_dev:839,print_ind:[40,41,42],print_limit:[40,41,42],print_line_spac:[40,41,42],prioriti:[40,41,59,63],privat:[1218,1222],prob:[1129,1130,1154,1162,1202,1210],probabl:[1129,1130,1154,1162,1202,1210],problem:[43,1231],process:[43,839,848,849,878,888,913,977,1073],process_specif:[839,878,888,1073],prod:[40,41,913,941],produc:[839,848,849,1073],product:[40,41,913,935,936,973,1136,1137,1154,1165,1166,1202,1213],profil:[105,259,396,505,621,839,1073],project:[1185,1227,1228,1231],promot:[43,798,823,1051,1061],prompt:1185,properli:43,properti:[40,41,369,839,851,1073,1179,1183,1214,1215,1218,1219,1220,1221,1223],provid:[40,41,43,795,796,837,838,839,856,889,896,897,898,903,912,913,939,979,981,988,1014,1015,1018,1020,1022,1023,1024,1030,1073,1185,1202,1211,1218,1219,1220,1221,1222,1223,1228],prune:[40,41],prune_empti:[40,41],prune_kei:[40,41],prune_key_chain:[40,41],prune_key_from_key_chain:[40,41],prune_keys_from_key_chain:[40,41],prune_unappli:[40,41],pseudo:[1038,1042],ptype:[1179,1183],pure:[40,41,1185,1231],purpos:1231,put:1073,pybroadexcept:1073,pyprotectedmemb:[1073,1180],pyshadowingbuiltin:43,pyshadowingnam:[840,890,891,892,1016,1073],python:[40,41,839,878,888,913,916,1073,1185],pytorch:[1015,1018,1020,1022,1023,1024,1185,1218,1219,1220,1221,1222,1223,1227,1228,1231],pyunresolvedrefer:1073,quadrant:[1051,1057],queri:[40,41,798,812,833,839,872,882,1073,1154,1165,1166,1202,1213],query_dim:[1202,1213],query_kei:[40,41],queue:[40,41,42,839,848,849,913,983,991,1073],queue_class:[839,848,849,1073],queue_load_s:[40,41,42],queue_timeout:[40,41,42,913,1073],quick:1185,quickli:1227,radian:[1051,1052,1054,1057,1059,1065,1067],rai:[1051,1052],rais:[40,41,43,795,796,798,823,913,924,954,989,996,998,1008,1073,1214,1215,1218,1222],ram:[839,878,885,888,1073],randint:[160,340,571,742,1129],random:[37,40,41,1130,1131,1132,1133,1134,1135,1185],random_crop:1031,random_norm:[160,340,571,742,1129],random_uniform:[160,340,571,742,1129],randomli:[1031,1035,1154,1162,1202,1210],randomness_factor:[1173,1175,1179,1214,1215],rang:[913,916,970,971,1051,1057,1073,1185,1227,1231],rank:[795,796,913,932,1009,1012],rate:[1015,1018,1020,1022,1023,1024,1069,1070,1071,1072,1202,1213,1218,1219,1220,1221,1222,1223],rather:[40,41,839,883,913,916,966,1015,1021,1073],ratio:[839,1015,1022,1031,1036,1073,1218,1220],raw:[40,41],raw_delta:1073,reach:[839,861,865,871,1073,1117,1126],read:[40,41],readi:[1073,1227],real:[1051,1052,1056],realiti:1228,rearrang:[40,41,913,940,942],rebuild:[40,41,42],rebuild_child_contain:[40,41,42],rece:[1069,1071],receiv:[839,848,849,913,917,972,1073,1202,1212],receivess:[839,1073],receiving_fn:1179,receivng:[1069,1072],recev:[1069,1070,1071],recognit:1231,recommend:1185,rectifi:[1146,1148,1149],recurr:[1154,1164],recurrent_bia:[1154,1164],recurrent_kernel:[1154,1164],recurs:[40,41,1117,1118,1119,1125,1126],redefin:43,reduc:[40,41,795,796,839,883,913,941,1073,1136,1138,1139,1140,1141,1142,1143,1144],reduce_max:[40,41,167,345,454,576,749,1136],reduce_mean:[40,41,167,345,454,576,749,1136,1185,1227],reduce_min:[40,41,167,345,454,576,749,1136],reduce_prod:[40,41,167,345,454,576,749,1136],reduce_std:[40,41,345,1136],reduce_sum:[40,41,167,345,454,576,749,1073,1136],reduce_var:[40,41,167,345,454,576,749,1136],reduct:[39,40,41,795,796,913,941,987,988,1137,1138,1139,1140,1141,1142,1143,1144,1185],refactor:43,refer:[795,796,1015,1017,1018,1038,1046,1202,1212,1231],reflected_oper:[0,13,14],regard:[839,1073],regardless:[40,41,837,838],register_paramet:1227,reimplement:1231,rel:[1015,1018,1020,1022,1023,1024],rel_slice_obj:1073,relev:[1218,1219,1220,1221,1222,1223],relu:[758,1146,1147,1148,1185,1227],remain:[43,913,985,1117,1121],remaind:[40,41,913,948,995],remov:[40,41,913,996,1069,1070,1071],remove_key_length_limit:[40,41],remove_print_limit:[40,41],reorder:[40,41,913,946],rep:[913,1002],repeat:[40,41,265,629,913,942,1002,1073,1228],repeated_config_check:[839,1073],repeatedli:[1117,1124],repetit:[40,41,913,984,1002],replac:[40,41,43,913,928,987,988,1129,1130],repo:1185,repres:[43,889,895,900,1154,1163],represent:[40,41,42,43,781,782,783,839,866,867,889,895,901,902,913,994,1004,1073],reptil:[1069,1072],reptile_step:1069,requir:[43,837,838,889,893,913,916,921,1191,1192],resampl:[913,969],reshap:[40,41,43,629,913],reshape_lik:[40,41],respect:[913,943,1015,1017,1018,1019,1020,1022,1023,1024,1051,1061,1069,1070,1071,1072],respons:1073,restor:[40,41],restructur:[40,41],restructure_key_chain:[40,41],result:[40,41,42,43,785,786,795,796,798,823,839,848,913,916,943,987,988,999,1038,1041,1045,1047,1048,1049,1050,1051,1061,1073,1136,1138,1139,1140,1141,1142,1143,1144,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1185],ret:1073,ret_dict:1073,ret_fn:[839,848,849,1073],retain:[1015,1019],retain_grad:[1015,1019],retreiv:1073,retrn:[913,994],return_cont:[40,41],return_dict:[40,41],return_graph:[1173,1174,1175],return_inner_v:[1069,1070,1071,1072],return_sequ:[1202,1211],return_st:[1202,1211],rev:[913,939],revers:[40,41,913,939,946,1007],right:[40,41],rk_e:1231,robot:1185,ronald:1185,round:[265,629,913,916,1073],row:[913,959,1129,1130],rule:[43,798,823,913,916,1051,1061],run:[839,848,1015,1017,1018,1022,1069,1070,1071,1072,1073,1185,1186,1202,1213,1214,1215],safe:[839,848,1073],safety_factor:[839,1073],same:[15,16,17,40,41,43,839,848,849,883,884,889,893,913,914,927,931,947,948,951,952,979,981,986,987,988,999,1014,1015,1021,1026,1038,1044,1051,1056,1069,1070,1071,1073,1136,1137,1154,1155,1156,1157,1158,1159,1160,1161,1185,1202,1203,1204,1205,1206,1207,1208,1209,1227,1231],same_arrai:[40,41],sampl:[913,969,1031,1032,1129,1130,1132,1133,1154,1162,1185,1202,1210],satisfi:[913,921,1038,1040,1046],save:[40,41,913,992,1003,1031,1033,1214,1215],save_debug_info:1179,save_dir:[839,854,1073],save_to_disk:[1173,1175,1179,1214,1215],save_weight:[1214,1215],scalar:[913,928,979,1006,1010],scale:[839,881,882,1015,1023,1073,1154,1162,1165,1166,1171,1172,1202,1210,1213,1218,1221],scaled_dot_product_attent:1154,scatter:[913,979,987,988],scatter_flat:[112,265,398,512,629,913],scatter_nd:[112,265,398,512,629,913],scene:[1015,1018,1020,1022,1023,1024],schemat:1185,screen:[40,41],search:[15,18,19,40,41],second:[40,41,839,870,913,922,935,943,983,991,1001,1015,1017,1018,1022,1069,1071,1073,1218,1219,1220],secondli:1231,see:[43,59,369,795,796,798,823,839,851,852,853,854,889,913,916,970,971,1015,1051,1061,1179,1183,1185,1193,1195,1196,1198,1199,1201],seed:[40,41,160,742,1129],seed_valu:[40,41,1129,1134],seem:1185,seen_set:[913,957],select:[913,921,996,1228,1231],self:[40,41,43,59,369,798,823,839,851,852,853,854,889,1015,1073,1179,1183,1185,1193,1195,1196,1198,1199,1201,1218,1222,1227,1231],sent:1073,seper:[913,949],seq:[40,41,42,1136,1137,1214,1215],sequenc:[15,16,17,40,41,42,43,837,838,839,848,849,858,859,860,861,862,863,864,865,868,869,883,889,893,913,916,921,923,925,931,932,946,959,972,975,980,984,985,988,995,999,1002,1007,1012,1013,1015,1019,1031,1035,1036,1038,1041,1045,1073,1117,1128,1129,1131,1133,1136,1138,1139,1140,1141,1142,1143,1144,1154,1155,1156,1157,1158,1159,1160,1161,1171,1172,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1211,1214,1215,1216,1217,1218,1222,1224,1225],sequenti:1185,set:[15,18,19,40,41,839,868,869,881,882,883,913,915,938,959,989,990,991,992,1015,1018,1020,1021,1022,1023,1024,1038,1041,1045,1073,1117,1118,1125,1127,1128,1129,1130,1134,1136,1138,1139,1140,1141,1142,1143,1144,1183,1185,1202,1211,1218,1219,1220,1221,1222,1223,1228,1231],set_at_kei:[40,41],set_at_key_chain:[40,41],set_breakpoint_debug_mod:44,set_count:1183,set_debug_mod:44,set_default_devic:839,set_default_dtyp:889,set_default_float_dtyp:889,set_default_int_dtyp:889,set_default_nod:1073,set_exception_debug_mod:44,set_framework:[40,41,59,1073,1185,1227,1228,1231],set_ivy_backend:[40,41],set_min_bas:913,set_min_denomin:913,set_nest_at_index:1117,set_nest_at_indic:1117,set_param:1179,set_queue_timeout:913,set_split_factor:[839,1073],set_stat:[1218,1219,1220,1221,1222,1223],set_tmp_dir:913,set_with_grad:1015,setter:1073,sever:1231,sgd:[1185,1218],shape0:1073,shape:[40,41,43,629,839,851,889,893,913,914,925,927,931,932,945,946,947,948,950,952,956,959,979,980,981,984,985,986,987,988,994,996,999,1012,1013,1014,1031,1035,1038,1040,1051,1056,1057,1073,1129,1131,1132,1133,1136,1137,1154,1156,1158,1160,1179,1183,1202,1204,1205,1206,1207,1208,1209,1216,1217],shape_slic:[40,41],shape_to_tupl:913,share:[40,41,1185,1228],shift:1073,should:[40,41,42,43,785,786,798,823,837,838,839,913,925,926,933,979,985,1015,1018,1020,1022,1023,1024,1051,1061,1073,1136,1137,1185],show:[40,41,1179,1185,1231],show_debug_info:1179,show_graph:[1173,1185,1214,1215,1218,1222],show_mod_in_top_mod:[1214,1215],show_structur:[1214,1215],show_sub_contain:[40,41],show_v:[1214,1215],show_v_in_top_v:[1214,1215],shown:[40,41],shp:1073,shuffl:[40,41,160,742,1129],shuffle_h5_fil:[40,41],sigmoid:[758,1146,1185,1227],sign:[1038,1043],signatur:[43,59,369,839,851,852,853,854,889,1015,1179,1183,1193,1195,1196,1198,1199,1201],signific:1231,similar:[43,1154,1165,1202,1213],simpl:[43,913,944,1185,1228,1231],simplest:1228,simpli:[40,41,43,1185,1228,1231],simultan:1185,sin:[725,913,949,1051,1067,1228],sinco:1228,sine:[1051,1054,1055,1065,1066],singl:[40,41,837,838,839,848,849,868,869,870,871,913,996,1006,1010,1031,1036,1073,1129,1132,1133,1136,1138,1139,1140,1141,1142,1143,1144,1185,1228,1231],singleton:[795,796],singular:[1038,1044],sinh:[725,1051],siren:[1185,1193],size:[40,41,42,839,862,863,864,865,881,882,883,913,916,925,970,971,987,995,1031,1035,1038,1041,1044,1045,1073,1129,1130,1132,1133,1136,1138,1139,1140,1141,1142,1143,1144,1202,1203,1204],size_ordered_arrai:[40,41],skew:[1038,1046],skinv:1231,skip:[40,41],slice:[40,41,913,920,951,952,1073,1117,1124],slice_kei:[40,41],slice_obj:[40,41,1073],slice_via_kei:[40,41],slide:[1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209],slodget:1038,slogdet:[328,444,563,712,1038,1043],slope:[1146,1148],small:[1167,1168,1169,1170,1171,1172,1185,1216,1217,1228],smaller:[913,928],smallest:[40,41,781,782,783,913,919,927],smallest_norm:[369,781,782],softmax:[176,463,758,1146,1154,1165,1166],softplu:[758,1146],solv:1231,some:[40,41,43,913,916,1015,1017,1018,1020,1022,1023,1024,1029,1154,1162,1185,1202,1210,1228,1231],some_backend:43,some_namespac:43,someth:[43,1231],something_cool:43,somewher:[40,41],sort:[40,41,42,913,920,1038,1044,1073],sort_by_kei:[40,41],sourc:[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,44,45,46,47,48,49,59,61,62,63,64,65,66,67,68,69,70,71,369,371,372,374,375,781,782,783,785,786,795,796,798,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,837,838,839,841,842,843,844,845,846,848,849,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1031,1032,1033,1034,1035,1036,1037,1038,1039,1040,1041,1042,1043,1044,1045,1046,1047,1048,1049,1050,1051,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1069,1070,1071,1072,1117,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1129,1130,1131,1132,1133,1134,1135,1136,1137,1138,1139,1140,1141,1142,1143,1144,1146,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1167,1168,1169,1170,1171,1172,1173,1174,1175,1176,1177,1178,1179,1183,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1229,1230,1231],space:[913,916,949,970,971],spars:[1167,1170],sparse_cross_entropi:1167,spawn:[913,977],specif:[40,41,43,839,881,913,933,940,941,942,977,1069,1070,1071,1072,1073,1129,1135,1185,1214,1215,1227,1228],specifc:[1129,1130],specifi:[40,41,43,795,796,839,858,859,860,861,862,863,864,865,868,869,873,875,879,882,883,884,889,893,895,913,916,918,919,921,928,931,932,950,951,952,958,970,971,999,1009,1012,1038,1041,1045,1073,1117,1122,1123,1127,1128,1136,1137,1138,1139,1140,1141,1142,1143,1144],split:[40,41,112,265,398,512,629,839,848,862,863,864,865,881,882,883,913,972,1073],split_arg:1073,split_factor:[839,848,1073],split_func_cal:[839,1073],split_siz:1073,spread:[839,871,1073],squar:[913,959,1038,1040,1043],squeez:[112,265,398,512,629,913],stabil:[913,997,998],stabl:[913,954,955,989,990,997,998],stable_divid:913,stable_pow:913,stack:[40,41,265,629,913,1031,1036,1117,1118,1125,1202,1211],stack_imag:[151,324,440,559,708,1031],stacked_dim_s:1073,stage:43,standard:[40,41,43,781,782,1129,1132,1136,1142,1171,1172,1216,1217],start:[40,41,839,854,913,916,970,971,1073,1185,1228],starting_index:[40,41],starting_split_factor:[839,1073],state:[1073,1154,1164,1173,1174,1175,1179,1185,1188,1189,1190,1191,1192,1193,1195,1196,1198,1199,1201,1202,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225,1227],statement:1228,static_argnam:[837,838],static_argnum:[837,838],std:[1129,1132],step:[40,41,839,913,916,970,971,1015,1017,1018,1020,1022,1023,1024,1069,1070,1071,1072,1073,1185,1218,1219,1220,1221,1222,1223,1227,1231],stephen:1185,stick:1185,still:[40,41],stochast:[1218,1223],stop:[40,41,839,854,883,913,916,970,971,1015,1018,1020,1022,1023,1024,1026,1069,1070,1071,1072,1073,1218,1219,1220,1221,1222,1223],stop_gradi:[40,41,319,435,554,702,839,883,1015,1018,1020,1022,1023,1024,1069,1070,1071,1072,1073,1218,1219,1220,1221,1222,1223],stopiter:1073,store:[40,41,913,949,995,1015,1029,1214,1215],store_var:[1214,1215],str:[15,16,17,40,41,42,43,369,371,372,781,782,783,837,838,839,848,849,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,883,889,894,895,900,901,902,903,904,905,912,913,921,938,940,941,942,975,977,980,987,988,1038,1041,1045,1069,1070,1071,1072,1073,1117,1121,1136,1137,1191,1192,1202,1213,1214,1215],str_to_nod:1073,straight:1228,strength:[1185,1231],stride:[1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209],string:[40,41,43,839,855,857,866,867,872,878,884,885,888,889,893,899,901,902,903,912,913,916,921,938,959,980,981,1013,1014,1073,1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209,1214,1215],structur:[40,41,42,43,913,933],structural_diff:[40,41],sub:[40,41,839,862,863,868,869,870,871,913,995,1069,1070,1071,1072,1073],sub_cont:[40,41],sub_cont_or_keychain:[40,41],sub_cont_to_find:[40,41],sub_item:1073,sub_mod:[1214,1215],sub_modul:[1224,1225],sub_str:[40,41],sub_struc_to_find:[40,41],submodul:[1185,1186,1216,1217,1224,1225],subsequ:43,subset:43,substr:[40,41],suggest:1185,suitabl:[1031,1036],sum:[40,41,839,868,869,870,871,883,913,937,941,987,988,1073,1136,1137,1143],summat:[40,41,1136,1137],support:[2,4,6,8,10,12,14,16,17,18,19,21,23,25,27,29,31,33,35,37,39,40,41,42,43,45,46,47,48,49,60,61,62,63,64,65,66,67,68,69,70,71,79,80,81,84,94,106,107,108,109,110,111,113,114,115,116,117,118,119,120,121,122,123,124,125,126,127,128,129,130,131,132,133,134,135,136,137,138,139,140,141,142,143,144,145,146,147,149,150,152,153,154,156,157,161,162,163,164,165,166,168,169,170,171,172,173,174,177,179,180,182,183,184,185,186,187,188,194,195,196,199,209,221,222,223,224,225,226,227,228,229,230,231,232,233,234,235,236,237,238,239,240,241,242,243,244,245,246,247,248,249,250,251,252,253,254,255,256,257,258,260,261,262,263,264,266,267,268,269,270,271,272,273,274,275,276,277,278,279,280,281,282,283,284,285,286,287,288,289,290,291,292,293,294,295,296,297,298,299,300,301,302,303,304,305,306,307,308,309,310,311,312,313,314,315,316,317,318,320,321,322,323,325,326,327,329,330,331,332,333,334,336,337,338,341,342,343,344,346,347,348,349,350,351,352,353,356,358,359,360,361,362,363,364,370,371,372,375,385,397,399,400,401,402,403,404,405,406,407,408,409,410,411,412,413,414,415,416,417,418,419,420,421,422,423,424,425,426,427,428,429,430,431,432,433,434,436,437,438,439,441,442,443,445,446,447,448,451,453,455,456,457,458,459,460,461,464,465,467,468,469,470,471,472,473,479,480,481,484,494,506,507,508,509,510,511,513,514,515,516,517,518,519,520,521,522,523,524,525,526,527,528,529,530,531,532,533,534,535,536,537,538,539,540,541,542,543,544,545,546,547,548,549,550,551,552,553,555,556,557,558,560,561,562,564,565,566,567,568,572,573,574,575,577,578,579,580,581,582,583,587,588,589,595,596,597,600,610,622,623,624,625,626,627,628,630,631,632,633,634,635,636,637,638,639,640,641,642,643,644,645,646,647,648,649,650,651,652,653,654,655,656,657,658,659,660,661,662,663,664,665,666,667,668,669,670,671,672,673,674,675,676,677,678,679,680,681,682,683,684,685,686,687,688,689,690,691,692,693,694,695,696,697,698,699,700,701,703,704,705,706,707,709,710,711,713,714,715,716,717,718,719,720,722,723,724,726,727,728,729,730,731,732,733,734,735,736,737,738,739,740,741,743,744,745,746,747,748,750,751,752,753,754,755,756,759,760,761,762,763,764,765,767,768,770,771,772,773,774,775,776,782,783,786,796,799,800,801,802,803,804,805,806,807,808,809,810,811,812,813,814,815,816,817,818,819,820,821,822,823,824,825,826,827,828,829,830,831,832,833,834,835,836,838,840,841,842,843,844,845,846,847,848,849,850,851,852,853,854,855,856,857,858,859,860,861,862,863,864,865,866,867,868,869,870,871,872,873,874,875,876,877,878,879,880,881,882,883,884,885,886,887,888,889,890,891,892,893,894,895,896,897,898,899,900,901,902,903,904,905,906,907,908,909,910,911,912,913,914,915,916,917,918,919,920,921,922,923,924,925,926,927,928,929,930,931,932,933,934,935,936,937,938,939,940,941,942,943,944,945,946,947,948,949,950,951,952,953,954,955,956,957,958,959,960,961,962,963,964,965,966,967,968,969,970,971,972,973,974,975,976,977,978,979,980,981,982,983,984,985,986,987,988,989,990,991,992,993,994,995,996,997,998,999,1000,1001,1002,1003,1004,1005,1006,1007,1008,1009,1010,1011,1012,1013,1014,1015,1016,1017,1018,1019,1020,1021,1022,1023,1024,1025,1026,1027,1028,1029,1030,1032,1033,1034,1035,1036,1037,1039,1040,1041,1042,1043,1044,1045,1046,1048,1049,1050,1052,1053,1054,1055,1056,1057,1058,1059,1060,1061,1062,1063,1064,1065,1066,1067,1068,1070,1071,1072,1074,1075,1076,1077,1078,1079,1080,1081,1082,1083,1084,1085,1086,1087,1088,1089,1090,1091,1092,1093,1094,1095,1096,1097,1098,1099,1100,1101,1102,1103,1104,1105,1106,1107,1108,1109,1110,1111,1112,1113,1114,1115,1116,1118,1119,1120,1121,1122,1123,1124,1125,1126,1127,1128,1130,1131,1132,1133,1134,1135,1137,1138,1139,1140,1141,1142,1143,1144,1147,1148,1149,1150,1151,1152,1153,1154,1155,1156,1157,1158,1159,1160,1161,1162,1163,1164,1165,1166,1168,1169,1170,1172,1174,1175,1177,1178,1180,1184,1185,1189,1190,1192,1194,1195,1196,1197,1198,1199,1200,1201,1203,1204,1205,1206,1207,1208,1209,1210,1211,1212,1213,1215,1217,1218,1219,1220,1221,1222,1223,1225,1226,1227,1228,1230,1231],supports_inplac:913,suppos:1231,svd:[328,563,712,1038],swap:[40,41,913,1001],swapax:[40,41,512,629,913,1231],symmetr:[1038,1046],tab:1185,take:[913,969],taken:[1136,1138,1139,1140,1142,1144],tan:[725,1051,1056],tangent:[1051,1056,1057,1058,1067,1068,1146,1153],tanh:[725,758,1051,1146],target:[40,41,839,855,858,859,860,861,862,863,864,865,868,869,870,871,884,1073,1185],target_dict:[40,41],task:[1069,1070,1071,1072],team:1231,templat:1185,temporari:[913,992,1003],tensor:[40,41,43,839,857,889,899,913,916,918,919,920,925,970,971,974,976,979,980,981,985,987,988,995,1013,1014,1073,1129,1130,1131,1154,1162,1164,1185,1202,1210,1212,1218,1219,1220,1221,1222,1223,1227,1228],tensorflow:[1154,1156,1158,1160,1185,1202,1204,1206,1208,1228,1231],term:[40,41,1154,1164,1185,1202,1212],termcolor:[40,41,42],termin:[40,41,42,1073],test:[785,786,795,796,889,904,905],tf_concat:1185,than:[40,41,781,782,839,883,913,916,927,928,947,966,974,996,999,1015,1021,1073,1129,1133,1185,1228],thei:[40,41,43,1051,1057,1069,1070,1071,1129,1130,1185,1224,1225,1228],them:[1185,1231],themselv:[1117,1118],therefor:43,thi:[40,41,42,43,839,861,865,871,878,883,888,913,916,949,983,985,991,1015,1018,1020,1021,1022,1023,1024,1029,1038,1041,1043,1045,1073,1117,1121,1126,1136,1138,1139,1140,1141,1142,1143,1144,1154,1163,1185,1214,1215,1218,1219,1220,1221,1222,1223,1227,1228,1231],thing:[43,1185],those:[40,41,913,928,1015,1029,1038,1044,1073],though:43,threshold:[913,974,976],through:[40,41],tile:[265,512,629,913],time:[913,1002,1015,1018,1022,1069,1070,1071,1072,1073,1129,1130,1154,1164,1202,1213,1214,1215,1231],time_chronolog:[1173,1174,1179],time_infer:[1173,1174],timeout:[40,41,42,839,848,849,913,983,991,1073],timestep:[1154,1164,1202,1211],timing_fnam:[1173,1174],titl:1185,tmp_dir:913,tmp_dr:[913,992],to_appli:[40,41],to_clon:[839,1073],to_dev:[40,41,105,259,505,621,839],to_dict:[40,41],to_disk_as_hdf5:[40,41],to_disk_as_json:[40,41],to_disk_as_pickl:[40,41],to_distribut:[839,1073],to_flat_list:[40,41],to_iter:[40,41],to_iterator_kei:[40,41],to_iterator_valu:[40,41],to_ivi:[15,40,41,1185],to_ivy_modul:[178,766,1185,1191],to_json:[40,41],to_kv_fn:[1154,1165],to_kv_v:[1154,1165],to_list:[40,41,629,913],to_multi_dev:[40,41],to_mut:[1117,1119,1126],to_n:[15,40,41,1185],to_nod:1073,to_numpi:[40,41,629,913,1185,1227],to_out_fn:[1154,1165],to_out_v:[1154,1165],to_q_fn:[1154,1165],to_q_v:[1154,1165],to_raw:[40,41],to_scalar:[629,913],todo:1073,togeth:[40,41,1224,1225],tool:[1185,1228],top_mod:[1214,1215],topic:1231,torch:[43,837,838,1185,1227,1228,1231],torch_concat:1185,torchfcmodel:1227,total:[40,41,42,839,885,1073],total_mem_on_dev:839,total_mem_on_nod:1073,tpu:[839,886,1073],tpu_is_avail:[505,621,839,1073],tpye:[889,900],trace:[40,41,913,966],track:[839,1073,1117,1126,1214,1215],track_submod_call_ord:[1214,1215],track_submod_ret:[1214,1215],trail:[1216,1217],train:[1015,1017,1018,1022,1185,1186],trainabl:[1015,1021,1185,1186,1191,1192,1214,1215,1224],trainer:1185,tran:1231,transform:[1154,1162,1163],transpos:[40,41,112,265,398,629,839,870,913,1073,1154,1156,1158,1160,1202,1204,1206,1208],travers:[15,18,19,40,41,1117,1126],treat:[40,41,837,838],tree_depth:1183,tree_height:1179,tri:[40,41],trigonometr:[1051,1052,1056,1059,1065],trim_kei:[40,41],trust:[1015,1022,1218,1220],truth:[913,943,1047,1048,1049,1050],try_else_non:913,try_import_ivy_jax:59,try_import_ivy_mxnet:59,try_import_ivy_numpi:59,try_import_ivy_tf:59,try_import_ivy_torch:59,try_kc:[40,41],tune:[839,1073],tune_dev_alloc:839,tune_dev_split:839,tune_node_alloc:1073,tune_node_split:1073,tune_step:[839,1073],tupl:[15,16,17,18,19,40,41,43,795,796,837,838,913,932,949,950,994,1012,1073,1117,1118,1119,1120,1122,1123,1124,1125,1126,1127,1128,1129,1131,1136,1138,1139,1140,1141,1142,1143,1144],two:[40,41,913,916,922,935,973,1001,1038,1041,1043,1044],type:[15,18,40,41,42,43,59,371,372,782,783,785,786,795,796,798,823,839,851,852,853,854,866,867,871,883,889,893,894,895,899,900,901,902,903,904,905,912,913,914,916,921,927,931,933,943,947,948,950,959,966,979,980,981,986,1000,1010,1013,1014,1015,1021,1026,1051,1061,1073,1179,1183,1185,1193,1195,1196,1198,1199,1201,1214,1215,1228],types_to_iteratively_nest:[40,41,42],uint8:[1031,1033,1037],uint8_img_to_float_img:1031,unchang:[15,16,17,18,19],unif:1073,unifi:[40,41,839,868,869,870,871,883,1073,1185],uniform:[40,41,1129,1130,1132,1133,1193,1195,1196,1199,1200],uniformli:[1129,1131,1133],unify_arrai:1073,unify_it:1073,unify_nest:1073,union:[15,18,19,40,41,43,369,371,372,781,782,783,785,786,795,796,798,823,837,838,839,857,862,863,864,865,883,884,889,893,894,895,899,900,901,902,903,904,905,912,913,914,915,916,918,919,920,921,922,923,925,927,928,929,930,931,932,934,935,936,937,940,941,942,943,945,946,947,948,949,950,951,952,956,958,959,960,967,968,969,970,971,973,974,975,976,979,980,981,984,985,986,987,988,993,994,995,996,999,1001,1002,1004,1005,1006,1007,1009,1010,1011,1012,1013,1014,1073,1117,1118,1119,1125,1126],uniqu:[839,848,849,1069,1070,1071,1072,1073,1117,1121],unique_kwarg:1073,unit:[839,1051,1052,1054,1073,1146,1147,1148,1149],unitari:[1038,1044],unless:[913,979,981,1014],unlik:[839,1073],unnorm:[1129,1130],unpack:[913,1009],unrol:[1154,1164],unset:1228,unset_debug_mod:44,unset_default_devic:839,unset_default_dtyp:889,unset_default_float_dtyp:889,unset_default_int_dtyp:889,unset_framework:[59,1228],unset_with_grad:1015,unstack:[40,41,112,265,398,512,629,913],unus:[837,838],updat:[40,41,839,848,913,964,987,988,1015,1017,1018,1020,1022,1023,1024,1069,1070,1071,1073,1117,1122,1123,1127,1128,1154,1164,1191,1192,1218,1219,1220,1221,1222,1223,1228,1231],update_backend:[40,41],update_config:[40,41],update_inference_tim:1179,upper:[40,41,1129,1133],upper_depth:[1214,1215],usabl:[1185,1231],usag:[839,883,1073],use:[40,41,42,43,839,848,849,874,886,913,984,997,998,1073,1154,1165,1171,1172,1185,1216,1217,1228,1231],used:[40,41,43,839,848,878,881,882,888,889,900,913,954,955,972,981,987,988,989,990,1014,1015,1022,1023,1038,1041,1069,1070,1071,1072,1073,1117,1126,1202,1213,1218,1220,1221,1227,1228],used_dev:[839,848],used_mem_on_dev:839,used_mem_on_nod:1073,used_node_str:1073,used_node_strs_dict:1073,useful:[40,41,839,883,1073,1154,1163,1185,1228],user:[1185,1202,1213,1214,1215,1228,1231],uses:1185,using:[40,41,1015,1017,1018,1117,1120,1124,1136,1137,1154,1162,1166,1185,1202,1210,1227,1228,1231],util:[839,872,1073],utility_funct:[795,796],v_with_top_v_key_chain:[1214,1215],val:[40,41,798,833,913,962,963,964,989,990,1183],valid:[795,796,889,894,913,997,998,1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209],valid_dtyp:889,valu:[40,41,839,851,882,883,913,914,916,918,919,920,928,929,930,932,933,939,943,949,950,951,952,967,968,970,971,974,976,983,984,985,986,987,988,989,990,991,1007,1010,1011,1012,1015,1019,1022,1031,1037,1038,1043,1044,1047,1048,1049,1050,1051,1062,1063,1064,1069,1070,1071,1073,1117,1121,1122,1123,1127,1128,1129,1132,1133,1136,1138,1140,1154,1165,1166,1171,1172,1179,1202,1213,1216,1217,1218,1220],value_is_nan:913,vanilla:[1069,1071],var_shap:1193,variabl:[15,16,17,18,19,40,41,319,435,554,702,913,924,962,963,964,965,966,1000,1015,1018,1019,1020,1021,1022,1023,1024,1026,1029,1069,1070,1071,1072,1154,1165,1171,1172,1191,1192,1193,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223,1224,1225],variable_data:[702,1015],varianc:[40,41,1136,1144,1231],varieti:1228,variou:[43,1185],vector:[40,41,913,930,935,1038,1044,1045,1046,1154,1163,1202,1212],vector_norm:[40,41,1038],vector_to_skew_symmetric_matrix:[155,328,444,563,712,1038],verbos:1230,veri:[43,1185],version:43,via:[1117,1118,1125,1228],view:[1031,1036],vision:1185,visual:1228,volum:[1154,1159],vw_tm1:[1015,1018,1022],wai:[1228,1231],wait:[40,41,42],want:[1185,1228,1231],warn:[59,66,67,68,69,70],warp:[1031,1032],watch:1227,weight:[1015,1017,1018,1020,1022,1023,1024,1154,1163,1164,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1214,1215,1218,1220,1221],weight_initi:[1202,1203,1204,1205,1206,1207,1208,1209,1211,1212],weights_path:[1214,1215],well:[40,41,913,958],were:[40,41,1073],what:1185,when:[40,41,42,43,839,913,926,998,1011,1038,1044,1073,1185,1214,1215,1228,1231],where:[40,41,43,265,629,795,796,798,823,913,916,925,928,932,945,960,967,968,979,1012,1038,1044,1117,1118,1125,1129,1130],wherea:43,wherebi:[1117,1126],whether:[15,18,19,40,41,42,795,796,837,838,839,857,870,874,878,883,886,888,889,899,903,904,905,912,913,915,922,923,936,939,944,949,956,958,961,965,966,972,993,1000,1009,1010,1015,1018,1019,1020,1021,1022,1023,1024,1026,1069,1070,1071,1072,1073,1117,1118,1119,1121,1125,1126,1129,1130,1146,1147,1154,1162,1185,1191,1192,1202,1210,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1221,1222,1223],which:[40,41,42,43,781,782,783,795,796,837,838,839,848,849,857,862,863,864,865,868,869,870,871,873,875,879,881,882,883,889,894,899,903,912,913,916,921,931,933,935,936,937,939,946,950,951,952,953,959,960,969,970,971,978,979,980,981,982,984,987,988,995,999,1009,1011,1013,1014,1015,1018,1019,1020,1022,1023,1024,1026,1028,1029,1031,1033,1038,1041,1045,1051,1057,1073,1117,1121,1122,1123,1127,1128,1129,1130,1131,1132,1133,1136,1138,1139,1140,1141,1142,1143,1144,1146,1151,1154,1165,1166,1185,1191,1192,1202,1203,1204,1205,1206,1207,1208,1209,1211,1212,1213,1214,1215,1216,1217,1218,1219,1220,1222,1224,1225,1227,1228],whitespac:[40,41,42],whose:[43,798,823,913,921,926,1136,1137,1138,1139,1140,1142,1144],why:[1185,1186],width:[1031,1036],wiki:1231,wikipedia:1231,window:[1031,1036,1154,1155,1156,1157,1158,1159,1160,1161,1202,1203,1204,1205,1206,1207,1208,1209],wise:[40,41,43,798,823,913,927,928,943,947,948,974,976,986,1015,1018,1020,1022,1024,1047,1048,1049,1050,1051,1052,1054,1056,1057,1059,1061,1062,1063,1064,1065,1067,1146,1147,1148,1149,1150,1151,1152,1153],wish:1228,with_arg_label:[1173,1175,1179,1214,1215],with_array_cach:[1173,1174,1175,1179],with_bia:[1202,1212],with_cal:[913,939],with_default_key_color:[40,41],with_edge_label:[1173,1175,1179,1214,1215],with_entries_as_list:[40,41],with_grad:[1015,1025,1214,1215],with_ivy_backend:[40,41],with_key_length_limit:[40,41],with_node_map:1073,with_output_label:[1173,1175,1179,1214,1215],with_partial_v:[1214,1215],with_print_ind:[40,41],with_print_limit:[40,41],with_print_line_spac:[40,41],with_remaind:[40,41,913,995,1073],with_to_kv_fn:[1202,1213],with_to_out_fn:[1202,1213],with_to_q_fn:[1202,1213],within:[15,18,19,913,916,1038,1044,1129,1133],without:[40,41,43,913,983,985,991,1117,1119,1228],wonder:1185,word:[15,16,17,913,916,1129,1133,1191,1192],work:[43,1227],worker:[839,848,849,1073],worker_class:[839,848,849,1073],worker_kwarg:1073,would:[43,913,920,1146,1151,1185,1228,1231],wrap:[15,40,41,42,43,913,926,1015,1029,1185],wrapper:43,write:[40,41,43,1185,1186,1231],written:[43,1185,1231],ws_new:[1015,1018,1020,1022,1023,1024],x1_i:[913,943,1051,1061],x2_i:[913,943,1051,1061],x_feat_dim:[1154,1165],x_i:[785,786],x_in:[1185,1227],x_inv:[1038,1040],x_max:[913,928],x_min:[913,928],x_sub:1073,xkk:1231,xkkm1:1231,xkm1km1:1231,xs0:1073,xs_t:1073,year:[1185,1231],yet:[1117,1126,1231],yield:[913,1011],you:[1185,1227,1228,1231],your:[1185,1227,1228,1231],your_awesome_project:1228,yourself:1185,zero:[40,41,112,265,398,512,629,795,796,913,932,979,981,987,988,1012,1014,1015,1017,1018,1022,1023,1154,1162,1185,1193,1202,1203,1204,1205,1206,1207,1208,1209,1210,1212,1218,1219,1220,1221],zero_pad:[265,512,629,913],zeros_lik:[112,265,398,512,629,913],zip:1073,zk_e:1231},titles:["Array api","Arithmetic operators","ArrayWithArrayAPIArithmeticOperators","Array operators","ArrayWithArrayAPIArrayOperators","Attributes","ArrayWithArrayAPIAttributes","Bitwise operators","ArrayWithArrayAPIBitwiseOperators","Comparison operators","ArrayWithArrayAPIComparisonOperators","Inplace operators","ArrayWithArrayAPIInplaceOperators","Reflected operators","ArrayWithArrayAPIReflectedOperators","Conversions","args_to_ivy","args_to_native","to_ivy","to_native","Device","ArrayWithDevice","General","ArrayWithGeneral","Gradients","ArrayWithGradients","Image","ArrayWithImage","Linalg","ArrayWithLinalg","Logic","ArrayWithLogic","Math","ArrayWithMath","Meta","ArrayWithMeta","Random","ArrayWithRandom","Reductions","ArrayWithReductions","Container","Container","MultiDevContainer","Contributing to Ivy","Debugger","debug_mode","set_breakpoint_debug_mode","set_debug_mode","set_exception_debug_mode","unset_debug_mode","Ivy","Ivy builder","Ivy ecosystem","Ivy gym","Ivy mech","Ivy memory","Ivy models","Ivy robot","Ivy vision","Framework handler","&lt;no title&gt;","choose_random_framework","clear_framework_stack","current_framework","get_framework","set_framework","try_import_ivy_jax","try_import_ivy_mxnet","try_import_ivy_numpy","try_import_ivy_tf","try_import_ivy_torch","unset_framework","Func wrapper","Backends","Jax","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","num_gpus","to_dev","General","arange","argmax","argmin","array","cast","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","matrix_norm","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","softmax","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Mxnet","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","General","abs","arange","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","cross","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","expand_dims","flip","floor","floormod","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","meshgrid","ones","ones_like","repeat","round","scatter_flat","scatter_nd","split","squeeze","stack","tile","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","det","matrix_norm","pinv","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Numpy","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","General","arange","argmax","argmin","array","cast","compile","concatenate","cumprod","dtype","dtype_bits","dtype_from_str","dtype_to_str","flip","full","gather","gather_nd","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","linear_resample","linspace","logspace","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","transpose","unstack","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","det","matrix_norm","slogdet","vector_to_skew_symmetric_matrix","Logic","Math","erf","Random","multinomial","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","softmax","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Tensorflow","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","array","cast","concatenate","constant_pad","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","flip","full","gather","gather_nd","identity","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","one_hot","ones","ones_like","scatter_flat","scatter_nd","split","squeeze","swapaxes","tile","unstack","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","Image","bilinear_resample","gradient_image","stack_images","Linalg","det","matrix_norm","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","Math","Random","multinomial","randint","random_normal","random_uniform","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","Layers","conv2d","conv3d","depthwise_conv2d","Torch","Array api","Constants","Creation functions","Data type functions","&lt;no title&gt;","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Array builtins","Array api","Arithmetic operators","Array operators","Attributes","Bitwise operators","Comparison operators","Inplace operators","Reflected operators","Core","Device","Profiler","clear_mem_on_dev","dev","dev_from_str","dev_to_str","to_dev","tpu_is_available","General","abs","arange","argmax","argmin","argsort","array","array_equal","broadcast_to","cast","ceil","clip","compile","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","dtype","dtype_bits","dtype_from_str","dtype_to_str","equal","expand_dims","flip","floor","floormod","full","gather","gather_nd","get_num_dims","identity","indices_where","inplace_decrement","inplace_increment","inplace_update","is_array","isinf","isnan","linear_resample","linspace","logspace","matmul","maximum","meshgrid","minimum","multiprocessing","one_hot","ones","ones_like","repeat","reshape","round","scatter_flat","scatter_nd","shape","split","squeeze","stack","swapaxes","tile","to_list","to_numpy","to_scalar","transpose","unstack","where","zero_pad","zeros","zeros_like","Gradients","execute_with_gradients","is_variable","stop_gradient","variable","variable_data","Image","bilinear_resample","gradient_image","stack_images","Linalg","cholesky","det","inv","matrix_norm","pinv","slogdet","svd","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","erf","exp","log","sin","sinh","tan","tanh","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Converters","IvyModule","to_ivy_module","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","Ivy","Array api","Constants","Creation functions","Data type functions","finfo","iinfo","Data types","Elementwise functions","isfinite","Function and method signatures","Linear algebra extension","Linear algebra functions","Manipulation functions","Searching functions","Set functions","Sorting functions","Statistical functions","Utility functions","all","Core","Array builtins","builtin_abs","builtin_add","builtin_and","builtin_bool","builtin_contains","builtin_deepcopy","builtin_dir","builtin_eq","builtin_float","builtin_floordiv","builtin_ge","builtin_getattr","builtin_getattribute","builtin_getitem","builtin_gt","builtin_int","builtin_invert","builtin_le","builtin_lt","builtin_mul","builtin_ne","builtin_neg","builtin_or","builtin_pos","builtin_pow","builtin_radd","builtin_rand","builtin_rfloordiv","builtin_rmul","builtin_ror","builtin_rpow","builtin_rsub","builtin_rtruediv","builtin_rxor","builtin_setitem","builtin_sub","builtin_truediv","builtin_xor","Compilation","compile","Device","&lt;no title&gt;","DevClonedItem","DevClonedIter","DevClonedNest","DevDistItem","DevDistIter","DevDistNest","&lt;no title&gt;","DevMapper","DevMapperMultiProc","&lt;no title&gt;","MultiDevItem","MultiDevIter","MultiDevNest","Profiler","clear_mem_on_dev","default_device","dev","dev_clone","dev_clone_array","dev_clone_iter","dev_clone_nest","dev_dist","dev_dist_array","dev_dist_iter","dev_dist_nest","dev_from_str","dev_to_str","dev_unify","dev_unify_array","dev_unify_iter","dev_unify_nest","dev_util","get_all_arrays_on_dev","gpu_is_available","num_arrays_on_dev","num_cpu_cores","num_gpus","percent_used_mem_on_dev","print_all_arrays_on_dev","set_default_device","set_split_factor","split_factor","split_func_call","to_dev","total_mem_on_dev","tpu_is_available","unset_default_device","used_mem_on_dev","Dtype","&lt;no title&gt;","&lt;no title&gt;","&lt;no title&gt;","cast","closest_valid_dtype","convert_dtype","default_dtype","default_float_dtype","default_int_dtype","dtype","dtype_bits","dtype_from_str","dtype_to_str","invalid_dtype","is_float_dtype","is_int_dtype","set_default_dtype","set_default_float_dtype","set_default_int_dtype","unset_default_dtype","unset_default_float_dtype","unset_default_int_dtype","valid_dtype","General","abs","all_equal","arange","arg_names","argmax","argmin","argsort","array","array_equal","arrays_equal","assert_supports_inplace","broadcast_to","cache_fn","ceil","clip","clip_matrix_norm","clip_vector_norm","concatenate","constant_pad","container_types","copy_array","cross","cumprod","cumsum","current_framework_str","default","einops_rearrange","einops_reduce","einops_repeat","equal","exists","expand_dims","flip","floor","floormod","fourier_encode","full","gather","gather_nd","get_all_arrays_in_memory","get_min_base","get_min_denominator","get_num_dims","get_referrers_recursive","has_nans","identity","indices_where","inplace_arrays_supported","inplace_decrement","inplace_increment","inplace_update","inplace_variables_supported","is_array","isinf","isnan","linear_resample","linspace","logspace","match_kwargs","matmul","maximum","meshgrid","minimum","multiprocessing","num_arrays_in_memory","one_hot","ones","ones_like","print_all_arrays_in_memory","queue_timeout","repeat","reshape","round","scatter_flat","scatter_nd","set_min_base","set_min_denominator","set_queue_timeout","set_tmp_dir","shape","shape_to_tuple","split","squeeze","stable_divide","stable_pow","stack","supports_inplace","swapaxes","tile","tmp_dir","to_list","to_numpy","to_scalar","transpose","try_else_none","unstack","value_is_nan","where","zero_pad","zeros","zeros_like","Gradients","&lt;no title&gt;","adam_step","adam_update","execute_with_gradients","gradient_descent_update","is_variable","lamb_update","lars_update","optimizer_update","set_with_grads","stop_gradient","unset_with_grads","variable","variable_data","with_grads","Image","bilinear_resample","float_img_to_uint8_img","gradient_image","random_crop","stack_images","uint8_img_to_float_img","Linalg","cholesky","inv","matrix_norm","pinv","slodget","svd","vector_norm","vector_to_skew_symmetric_matrix","Logic","logical_and","logical_not","logical_or","Math","acos","acosh","asin","asinh","atan","atan2","atanh","cos","cosh","divide","erf","exp","log","sin","sinh","tan","tanh","Meta","fomaml_step","maml_step","reptile_step","Multi node","ClonedItem","ClonedIter","ClonedNest","&lt;no title&gt;","MultiNodeItem","MultiNodeIter","MultiNodeNest","NodeDistItem","NodeDistIter","NodeDistNest","&lt;no title&gt;","NodeMapper","NodeMapperMultiProc","Profiler","clone","clone_array","clone_iter","clone_nest","default_node","distribute_nest","gpu_is_available","node","node_dist","node_dist_array","node_dist_iter","node_str","node_to_str","node_util","num_gpus","percent_used_mem_on_node","set_default_node","set_split_factor","split_factor","split_func_call","str_to_node","to_node","total_mem_on_node","tpu_is_available","unify","unify_array","unify_iter","unify_nest","used_mem_on_node","Nest","all_nested_indices","copy_nest","index_nest","map","map_nest_at_index","map_nest_at_indices","multi_index_nest","nested_indices_where","nested_map","set_nest_at_index","set_nest_at_indices","Random","multinomial","randint","random_normal","random_uniform","seed","shuffle","Reductions","einsum","reduce_max","reduce_mean","reduce_min","reduce_prod","reduce_std","reduce_sum","reduce_var","Nn","Activations","gelu","leaky_relu","relu","sigmoid","softmax","softplus","tanh","Layers","conv1d","conv1d_transpose","conv2d","conv2d_transpose","conv3d","conv3d_transpose","depthwise_conv2d","dropout","linear","lstm_update","multi_head_attention","scaled_dot_product_attention","Losses","binary_cross_entropy","cross_entropy","sparse_cross_entropy","Norms","layer_norm","Compiler","compile_graph","show_graph","Globals","log_global_inference_abs_times","log_global_inference_rel_times","Graph","&lt;no title&gt;","Helpers","Op logging","Param","&lt;no title&gt;","Contents","&lt;no title&gt;","&lt;no title&gt;","Activations","GEGLU","GELU","Converters","to_ivy_module","Initializers","&lt;no title&gt;","FirstLayerSiren","GlorotUniform","&lt;no title&gt;","Ones","Siren","&lt;no title&gt;","Zeros","Layers","Conv1D","Conv1DTranspose","Conv2D","Conv2DTranspose","Conv3D","Conv3DTranspose","DepthwiseConv2D","Dropout","LSTM","Linear","MultiHeadAttention","Module","Module","Norms","LayerNorm","Optimizers","Adam","LAMB","LARS","Optimizer","SGD","Sequential","Sequential","&lt;no title&gt;","Training a Network","Using Ivy","Verbosity","cprint","Why Ivy?"],titleterms:{"default":939,"function":[77,78,83,85,87,88,89,90,91,92,93,192,193,198,200,202,203,204,205,206,207,208,368,369,374,376,378,379,380,381,382,383,384,477,478,483,485,487,488,489,490,491,492,493,593,594,599,601,603,604,605,606,607,608,609,780,781,785,787,789,790,791,792,793,794,795],Ones:1198,Using:1228,abs:[266,513,630,914],aco:[726,1052],acosh:[727,1053],activ:[176,355,463,585,758,1146,1188],adam:1219,adam_step:1017,adam_upd:1018,algebra:[86,87,201,202,377,378,486,487,602,603,788,789],all:[94,209,385,494,610,796],all_equ:915,all_nested_indic:1118,api:[0,43,75,96,190,211,366,387,475,496,591,612,778],arang:[113,267,399,514,631,916],arg_nam:917,argmax:[114,400,515,632,918],argmin:[115,401,516,633,919],args_to_ivi:16,args_to_n:17,argsort:[634,920],arithmet:[1,97,212,388,497,613],arrai:[0,3,43,75,95,96,98,116,190,210,211,213,220,268,366,386,387,389,402,475,495,496,498,517,591,611,612,614,635,778,798,921],array_equ:[269,636,922],arrays_equ:923,arraywitharrayapiarithmeticoper:2,arraywitharrayapiarrayoper:4,arraywitharrayapiattribut:6,arraywitharrayapibitwiseoper:8,arraywitharrayapicomparisonoper:10,arraywitharrayapiinplaceoper:12,arraywitharrayapireflectedoper:14,arraywithdevic:21,arraywithgener:23,arraywithgradi:25,arraywithimag:27,arraywithlinalg:29,arraywithlog:31,arraywithmath:33,arraywithmeta:35,arraywithrandom:37,arraywithreduct:39,asin:[728,1054],asinh:[729,1055],assert_supports_inplac:924,atan2:[731,1057],atan:[730,1056],atanh:[732,1058],attribut:[5,99,214,390,499,615],backend:[43,73],bilinear_resampl:[152,325,441,560,709,1032],binary_cross_entropi:1168,bitwis:[7,100,215,391,500,616],broadcast_to:[270,637,925],builder:51,builtin:[95,210,220,386,495,611,798],builtin_ab:[221,799],builtin_add:[222,800],builtin_and:[223,801],builtin_bool:[224,802],builtin_contain:[225,803],builtin_deepcopi:[226,804],builtin_dir:[227,805],builtin_eq:[228,806],builtin_float:[229,807],builtin_floordiv:[230,808],builtin_g:[231,809],builtin_getattr:[232,810],builtin_getattribut:[233,811],builtin_getitem:[234,812],builtin_gt:[235,813],builtin_int:[236,814],builtin_invert:[237,815],builtin_l:[238,816],builtin_lt:[239,817],builtin_mul:[240,818],builtin_n:[241,819],builtin_neg:[242,820],builtin_or:[243,821],builtin_po:[244,822],builtin_pow:[245,823],builtin_radd:[246,824],builtin_rand:[247,825],builtin_rfloordiv:[248,826],builtin_rmul:[249,827],builtin_ror:[250,828],builtin_rpow:[251,829],builtin_rsub:[252,830],builtin_rtruediv:[253,831],builtin_rxor:[254,832],builtin_setitem:[255,833],builtin_sub:[256,834],builtin_truediv:[257,835],builtin_xor:[258,836],cache_fn:926,cast:[117,271,403,518,638,893],ceil:[272,639,927],choleski:[713,1039],choose_random_framework:61,citat:1185,clear_framework_stack:62,clear_mem_on_dev:[623,855],clip:[273,640,928],clip_matrix_norm:929,clip_vector_norm:930,clone:1088,clone_arrai:1089,clone_it:1090,clone_nest:1091,clonedit:1075,cloneditem:1074,clonednest:1076,closest_valid_dtyp:894,code:1231,comparison:[9,101,216,392,501,617],compil:[274,404,641,837,838,1173],compile_graph:1174,concaten:[118,275,405,519,642,931],constant:[76,191,367,476,592,779],constant_pad:[276,520,643,932],contain:[40,41],container_typ:[644,933],content:1185,contribut:43,conv1d:[182,358,467,770,1155,1203],conv1d_transpos:[183,359,468,771,1156],conv1dtranspos:1204,conv2d:[184,360,469,587,772,1157,1205],conv2d_transpos:[185,361,470,773,1158],conv2dtranspos:1206,conv3d:[186,362,471,588,774,1159,1207],conv3d_transpos:[187,363,472,775,1160],conv3dtranspos:1208,convers:15,convert:[178,766,1191],convert_dtyp:895,copy_arrai:[645,934],copy_nest:1119,core:[104,219,395,504,620,797],cos:[733,1059],cosh:[734,1060],cprint:1230,creation:[77,192,368,477,593,780],cross:[277,646,935],cross_entropi:1169,cumprod:[119,278,406,647,936],cumsum:[648,937],current_framework:63,current_framework_str:[649,938],data:[78,82,193,197,369,373,478,482,594,598,781,784],debug_mod:45,debugg:44,default_devic:856,default_dtyp:896,default_float_dtyp:897,default_int_dtyp:898,default_nod:1092,depthwise_conv2d:[188,364,473,589,776,1161],depthwiseconv2d:1209,design:43,det:[329,445,564,714],dev:[107,261,507,624,857],dev_clon:858,dev_clone_arrai:859,dev_clone_it:860,dev_clone_nest:861,dev_dist:862,dev_dist_arrai:863,dev_dist_it:864,dev_dist_nest:865,dev_from_str:[108,262,508,625,866],dev_to_str:[109,263,509,626,867],dev_unifi:868,dev_unify_arrai:869,dev_unify_it:870,dev_unify_nest:871,dev_util:872,devclonedit:842,devcloneditem:841,devclonednest:843,devdistit:845,devdistitem:844,devdistnest:846,devic:[20,105,259,396,505,621,839],devmapp:848,devmappermultiproc:849,distribute_nest:1093,divid:1061,document:1185,dropout:[1162,1210],dtype:[120,279,407,521,650,889,899],dtype_bit:[121,280,408,522,651,900],dtype_from_str:[122,281,409,523,652,901],dtype_to_str:[123,282,410,524,653,902],ecosystem:52,einops_rearrang:940,einops_reduc:941,einops_repeat:942,einsum:[168,346,455,577,750,1137],elementwis:[83,198,374,483,599,785],equal:[525,654,943],erf:[451,735,1062],execute_with_gradi:[149,320,436,555,703,1019],exist:944,exp:[736,1063],expand_dim:[283,655,945],extens:[86,201,377,486,602,788],finfo:[80,195,371,480,596,782],firstlayersiren:1195,flip:[124,284,411,526,656,946],float_img_to_uint8_img:1033,floor:[285,657,947],floormod:[286,658,948],fomaml_step:1070,fourier_encod:949,framework:59,full:[125,287,412,527,659,950],func:72,gather:[126,288,413,528,660,951],gather_nd:[127,289,414,529,661,952],geglu:1189,gelu:[356,464,759,1147,1190],gener:[22,112,265,398,512,629,913],get_all_arrays_in_memori:953,get_all_arrays_on_dev:873,get_framework:64,get_min_bas:954,get_min_denomin:955,get_num_dim:[662,956],get_referrers_recurs:957,global:1176,glorotuniform:1196,gpu_is_avail:[874,1094],gradient:[24,148,319,435,554,702,1015],gradient_descent_upd:1020,gradient_imag:[153,326,442,561,710,1034],graph:1179,gym:53,handler:59,has_nan:958,helper:1181,ident:[128,290,415,530,663,959],iinfo:[81,196,372,481,597,783],imag:[26,151,324,440,559,708,1031],index_nest:1120,indices_wher:[129,291,416,664,960],initi:1193,inplac:[11,102,217,393,502,618],inplace_arrays_support:961,inplace_decr:[130,292,417,531,665,962],inplace_incr:[131,293,418,532,666,963],inplace_upd:[132,294,419,533,667,964],inplace_variables_support:965,inv:[715,1040],invalid_dtyp:903,is_arrai:[133,295,420,534,668,966],is_float_dtyp:904,is_int_dtyp:905,is_vari:[150,321,437,556,704,1021],isfinit:[84,199,375,484,600,786],isinf:[296,535,669,967],isnan:[297,536,670,968],ivi:[43,50,51,52,53,54,55,56,57,58,777,1227,1228,1231],ivymodul:[179,767],jax:74,lamb:1220,lamb_upd:1022,lar:1221,lars_upd:1023,layer:[181,357,466,586,769,1154,1202],layer_norm:1172,layernorm:1217,leaky_relu:[760,1148],linalg:[28,155,328,444,563,712,1038],linear:[86,87,201,202,377,378,486,487,602,603,788,789,1163,1212],linear_resampl:[134,298,421,537,671,969],linspac:[135,299,422,538,672,970],log:[737,1064,1182],log_global_inference_abs_tim:1177,log_global_inference_rel_tim:1178,logic:[30,158,335,449,569,721,1047],logical_and:[336,722,1048],logical_not:[337,723,1049],logical_or:[338,724,1050],logspac:[136,300,423,539,673,971],loss:1167,lstm:1211,lstm_updat:1164,maml_step:1071,manipul:[88,203,379,488,604,790],map:1121,map_nest_at_index:1122,map_nest_at_indic:1123,match_kwarg:972,math:[32,159,339,450,570,725,1051],matmul:[301,540,674,973],matrix_norm:[156,330,446,565,716,1041],maximum:[675,974],mech:54,memori:55,meshgrid:[302,676,975],meta:[34,1069],method:[85,200,376,485,601,787],minimum:[677,976],model:56,modul:[1214,1215,1227],multi:1073,multi_head_attent:1165,multi_index_nest:1124,multidevcontain:42,multidevit:852,multidevitem:851,multidevnest:853,multiheadattent:1213,multinodeit:1079,multinodeitem:1078,multinodenest:1080,multinomi:[161,341,453,572,743,1130],multiprocess:[678,977],mxnet:189,nativ:1227,nest:1117,nested_indices_wher:1125,nested_map:1126,network:1227,next:1185,node:[1073,1095],node_dist:1096,node_dist_arrai:1097,node_dist_it:1098,node_str:1099,node_to_str:1100,node_util:1101,nodedistit:1082,nodedistitem:1081,nodedistnest:1083,nodemapp:1085,nodemappermultiproc:1086,norm:[1171,1216],num_arrays_in_memori:978,num_arrays_on_dev:875,num_cpu_cor:876,num_gpu:[110,877,1102],numpi:365,nutshel:1185,one_hot:[137,424,541,679,979],ones:[138,303,425,542,680,980],ones_lik:[139,304,426,543,681,981],oper:[1,3,7,9,11,13,43,97,98,100,101,102,103,212,213,215,216,217,218,388,389,391,392,393,394,497,498,500,501,502,503,613,614,616,617,618,619],optim:[1218,1222],optimizer_upd:1024,overview:1185,param:1183,percent_used_mem_on_dev:878,percent_used_mem_on_nod:1103,pinv:[331,717,1042],portabl:1231,print_all_arrays_in_memori:982,print_all_arrays_on_dev:879,profil:[106,260,397,506,622,854,1087],queue_timeout:983,randint:[162,342,573,744,1131],random:[36,160,340,452,571,742,1129],random_crop:1035,random_norm:[163,343,574,745,1132],random_uniform:[164,344,575,746,1133],reduce_max:[169,347,456,578,751,1138],reduce_mean:[170,348,457,579,752,1139],reduce_min:[171,349,458,580,753,1140],reduce_prod:[172,350,459,581,754,1141],reduce_std:[351,1142],reduce_sum:[173,352,460,582,755,1143],reduce_var:[174,353,461,583,756,1144],reduct:[38,167,345,454,576,749,1136],reflect:[13,103,218,394,503,619],relu:[761,1149],repeat:[305,682,984],reptile_step:1072,reshap:[683,985],robot:57,round:[306,684,986],run:1228,scaled_dot_product_attent:1166,scatter_flat:[140,307,427,544,685,987],scatter_nd:[141,308,428,545,686,988],search:[89,204,380,489,605,791],seed:[165,747,1134],sequenti:[1224,1225],set:[90,205,381,490,606,792],set_breakpoint_debug_mod:46,set_debug_mod:47,set_default_devic:880,set_default_dtyp:906,set_default_float_dtyp:907,set_default_int_dtyp:908,set_default_nod:1104,set_exception_debug_mod:48,set_framework:65,set_min_bas:989,set_min_denomin:990,set_nest_at_index:1127,set_nest_at_indic:1128,set_queue_timeout:991,set_split_factor:[881,1105],set_tmp_dir:992,set_with_grad:1025,sgd:1223,shape:[687,993],shape_to_tupl:994,show_graph:1175,shuffl:[166,748,1135],sigmoid:[762,1150],signatur:[85,200,376,485,601,787],sin:[738,1065],sinh:[739,1066],siren:1199,slodget:1043,slogdet:[332,447,566,718],softmax:[177,465,763,1151],softplu:[764,1152],sort:[91,206,382,491,607,793],sparse_cross_entropi:1170,split:[142,309,429,546,688,995],split_factor:[882,1106],split_func_cal:[883,1107],squeez:[143,310,430,547,689,996],stable_divid:997,stable_pow:998,stack:[311,690,999],stack_imag:[154,327,443,562,711,1036],statist:[92,207,383,492,608,794],stop_gradi:[322,438,557,705,1026],str_to_nod:1108,submodul:43,supports_inplac:1000,svd:[333,567,719,1044],swapax:[548,691,1001],tan:[740,1067],tanh:[741,765,1068,1153],tensorflow:474,tile:[312,549,692,1002],tmp_dir:1003,to_dev:[111,264,510,627,884],to_ivi:18,to_ivy_modul:[180,768,1192],to_list:[693,1004],to_n:19,to_nod:1109,to_numpi:[694,1005],to_scalar:[695,1006],torch:590,total_mem_on_dev:885,total_mem_on_nod:1110,tpu_is_avail:[511,628,886,1111],train:1227,trainabl:1227,transpos:[144,313,431,696,1007],tree:1185,try_else_non:1008,try_import_ivy_jax:66,try_import_ivy_mxnet:67,try_import_ivy_numpi:68,try_import_ivy_tf:69,try_import_ivy_torch:70,type:[78,82,193,197,369,373,478,482,594,598,781,784],uint8_img_to_float_img:1037,unifi:1112,unify_arrai:1113,unify_it:1114,unify_nest:1115,unset_debug_mod:49,unset_default_devic:887,unset_default_dtyp:909,unset_default_float_dtyp:910,unset_default_int_dtyp:911,unset_framework:71,unset_with_grad:1027,unstack:[145,314,432,550,697,1009],used_mem_on_dev:888,used_mem_on_nod:1116,util:[93,208,384,493,609,795],valid_dtyp:912,value_is_nan:1010,variabl:[323,439,558,706,1028],variable_data:[707,1029],vector_norm:1045,vector_to_skew_symmetric_matrix:[157,334,448,568,720,1046],verbos:1229,vision:58,where:[315,698,1011,1185],why:1231,with_grad:1030,wrapper:72,write:1228,zero:[146,317,433,552,700,1013,1201],zero_pad:[316,551,699,1012],zeros_lik:[147,318,434,553,701,1014]}})